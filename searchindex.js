Search.setIndex({"docnames": ["cite", "code", "index", "installation", "knowledgebase", "publications", "tutorials", "tutorials/1__BrownDwarf_Data_Exploration", "tutorials/2__Predict_BrownDwarf_Parameters", "tutorials/3__Data_Processing", "tutorials/4__Train_CNN_Model"], "filenames": ["cite.rst", "code.rst", "index.rst", "installation.rst", "knowledgebase.rst", "publications.rst", "tutorials.rst", "tutorials/1__BrownDwarf_Data_Exploration.ipynb", "tutorials/2__Predict_BrownDwarf_Parameters.ipynb", "tutorials/3__Data_Processing.ipynb", "tutorials/4__Train_CNN_Model.ipynb"], "titles": ["Cite:", "The Modules", "TelescopeML", "Installation", "KnowledgeBase", "Publications:", "Tutorials", "1. Exploring the Brown Dwarf Synthetic Dataset", "2. Predict Brown Dwarf Parameters Using Trained ML Models", "3. Process Brown Dwarf Atmospheric Parameters", "4. Train ConvNN Model: Regression Method"], "terms": {"under": 0, "construct": 0, "pleas": [0, 7], "follow": [0, 2, 3, 7, 8, 9, 10], "paper": 0, "you": [0, 3, 7, 8, 9, 10], "ar": [0, 1, 2, 3, 7, 8, 9, 10], "us": [0, 1, 2, 3, 6, 7, 9], "telescopeml": [0, 3, 7, 8, 9, 10], "packag": [0, 1, 2, 7, 8, 9, 10], "ani": [0, 1, 7], "its": [0, 1, 10], "concept": 0, "modul": [0, 2, 8], "function": [0, 2, 7, 8, 9, 10], "your": [0, 1, 7, 10], "work": 0, "Will": 0, "updat": [0, 1], "after": 0, "publish": 0, "first": [0, 1, 3, 7, 8], "case": [0, 3, 7, 9, 10], "studi": 0, "class": [1, 8], "dataprocessor": [1, 10], "flux_valu": [1, 9, 10], "ndarrai": 1, "none": [1, 8, 9, 10], "wavelength_nam": [1, 7, 8, 9, 10], "list": [1, 8], "str": [1, 7], "wavelength_valu": [1, 7, 8, 9, 10], "output_valu": [1, 9, 10], "output_nam": [1, 7, 8, 9, 10], "spectral_resolut": [1, 9, 10], "int": [1, 8], "trained_ml_model": [1, 3, 8, 9, 10], "sklearn": 1, "base": [1, 8], "baseestim": 1, "trained_ml_model_nam": [1, 8, 9, 10], "ml_method": [1, 8], "regress": [1, 8], "object": [1, 8], "perform": [1, 2, 6, 8], "variou": [1, 2], "task": [1, 2, 8], "process": [1, 2], "dataset": [1, 2], "includ": [1, 2, 3, 8], "prepar": [1, 2, 8], "input": [1, 2], "output": [1, 2, 7, 8], "split": [1, 2], "train": [1, 2, 7], "valid": [1, 2], "test": [1, 2, 3, 7, 8], "set": [1, 2], "scale": [1, 2], "normal": [1, 2, 9, 10], "data": [1, 2, 3, 7], "visual": [1, 2, 8, 9, 10], "conduct": [1, 2], "featur": [1, 2, 3], "engin": [1, 2, 10], "paramet": [1, 2], "np": [1, 8, 9, 10], "flux": [1, 8, 9, 10], "arrai": [1, 8], "name": [1, 3, 10], "wavelength": [1, 7, 8, 9, 10], "micron": 1, "variabl": [1, 7], "e": [1, 7, 8, 9, 10], "g": [1, 7, 8, 9, 10], "temperatur": [1, 8, 9, 10], "graviti": [1, 8, 9, 10], "carbon_to_oxygen": 1, "metal": [1, 8, 9, 10], "option": 1, "resolut": [1, 7, 8, 9, 10], "synthet": [1, 2, 6], "spectra": [1, 6], "gener": [1, 7, 8, 9, 10], "ml": [1, 2, 7], "model": [1, 2, 7], "from": [1, 2, 3, 7], "machin": [1, 2, 3, 8, 9, 10], "learn": [1, 2, 8, 9, 10], "method": [1, 2, 7], "classif": 1, "normalize_x_column_wis": 1, "output_ind": [1, 8, 9, 10], "trained_normalizer_x_colwis": 1, "x_train": [1, 9, 10], "x_val": [1, 9, 10], "x_test": [1, 9, 10], "print_model": 1, "fals": [1, 8, 10], "column": [1, 7, 8], "specifi": 1, "rang": [1, 7, 8, 9, 10], "0": [1, 7, 8, 9, 10], "1": [1, 6], "matrix": 1, "bool": 1, "whether": 1, "print": [1, 8], "return": [1, 8], "self": 1, "x_train_normalized_columnwis": 1, "x_val_normalized_columnwis": 1, "x_test_normalized_columnwis": 1, "normalize_x_columnwis": 1, "minmaxscal": 1, "normalize_x_row_wis": 1, "trained_normalizer_x_rowwis": 1, "observ": [1, 2, 10], "instanc": [1, 8, 9, 10], "row": [1, 7, 8], "transform": [1, 9, 10], "valu": [1, 8, 9, 10], "within": 1, "x_train_normalized_rowwis": 1, "x_val_normalized_rowwis": 1, "x_test_normalized_rowwis": 1, "normalize_y_column_wis": 1, "trained_normalizer_y_colwis": 1, "y_train": 1, "y_val": 1, "y_test": 1, "target": [1, 8, 9, 10], "y": 1, "wise": 1, "scaler": [1, 9, 10], "y_train_normalized_columnwis": 1, "y_val_normalized_columnwis": 1, "y_test_normalized_columnwis": 1, "plot_boxplot_scaled_featur": 1, "scaled_featur": 1, "titl": [1, 8, 9, 10], "xticks_list": [1, 9, 10], "fig_siz": [1, 9, 10], "14": [1, 8, 9, 10], "3": [1, 6], "make": [1, 7, 9, 10], "boxplot": [1, 2, 8], "median": [1, 8], "middl": [1, 8], "quartil": [1, 8], "mark": 1, "inter": 1, "box": [1, 8], "50": [1, 7, 8], "score": 1, "fall": 1, "upper": [1, 8], "75": [1, 8], "below": [1, 2], "lower": [1, 8], "25": [1, 7, 8, 9, 10], "plot_histogram_scaled_featur": 1, "plot": [1, 2, 7, 8, 9], "histogram": [1, 2, 8, 10], "split_train_test": 1, "test_siz": [1, 9, 10], "load": [1, 2, 6], "float": [1, 7, 8, 9, 10], "proport": 1, "default": [1, 3], "x": 1, "refer": [1, 3, 7, 8, 9, 10], "link": [1, 3, 7, 8], "model_select": 1, "train_test_split": 1, "split_train_validation_test": [1, 9, 10], "val_siz": [1, 9, 10], "random_state_": [1, 9, 10], "42": [1, 9, 10], "remain": 1, "evalu": [1, 2], "standardize_x_column_wis": [1, 9, 10], "trained_standardscaler_x_colwis": 1, "standard": [1, 2, 8], "remov": 1, "mean": [1, 8], "unit": [1, 7, 8, 9, 10], "varianc": 1, "each": [1, 2, 7, 8], "have": [1, 3, 7], "deviat": [1, 8], "x_train_standardized_columnwis": [1, 10], "x_val_standardized_columnwis": [1, 10], "x_test_standardized_columnwis": [1, 9, 10], "standardize_x_row_wis": [1, 9, 10], "trained_standardscaler_x_rowwis": [1, 9], "standardize_y_column_wis": [1, 9, 10], "trained_standardscaler_y_colwis": [1, 8, 9], "distribut": [1, 3, 8], "y_train_standardized_columnwis": [1, 9, 10], "y_val_standardized_columnwis": [1, 10], "y_test_standardized_columnwis": [1, 10], "trainregressorcnn": 1, "x1_train": [1, 10], "x1_val": [1, 10], "x1_test": [1, 10], "x2_train": [1, 10], "x2_val": [1, 10], "x2_test": [1, 10], "y1_train": [1, 10], "y1_val": [1, 10], "y1_test": [1, 10], "y2_train": [1, 10], "y2_val": [1, 10], "y2_test": [1, 10], "y3_train": [1, 10], "y3_val": [1, 10], "y3_test": [1, 10], "y4_train": [1, 10], "y4_val": [1, 10], "y4_test": [1, 10], "convolut": [1, 2, 9, 10], "neural": [1, 2, 9, 10], "network": [1, 2, 9, 10], "approach": 1, "standardsc": [1, 10], "col": 1, "mix": 1, "max": [1, 8], "all": [1, 3, 7, 10], "2": [1, 6], "4": [1, 6], "build_model": [1, 10], "config": [1, 10], "build": [1, 2, 6], "cnn": [1, 2, 9], "given": [1, 8], "hyperparamet": [1, 2], "dict": 1, "A": [1, 8], "dictionari": 1, "contain": 1, "kei": 1, "conv__num_block": 1, "number": [1, 8, 10], "block": 1, "conv__num_layers_per_block": 1, "layer": [1, 8, 10], "conv__num_filt": 1, "filter": [1, 7], "conv__kernel_s": [1, 10], "size": [1, 8], "kernel": 1, "conv__maxpooling1d": [1, 10], "maxpooling1d": 1, "fc1__num_block": 1, "fulli": 1, "connect": [1, 8, 10], "fc1": 1, "part": 1, "fc1_num_layers_per_block": 1, "fc1__unit": [1, 10], "fc1__dropout": [1, 10], "dropout": 1, "rate": 1, "fc2__num_block": 1, "second": 1, "fc2": 1, "fc2_num_layers_per_block": 1, "fc2__unit": [1, 10], "fc2__dropout": [1, 10], "learning_r": 1, "exampl": [1, 2, 8], "6": [1, 7, 8], "fc__numberlay": 1, "09889223768186726": 1, "128": [1, 8, 10], "0024609140719442646": 1, "64": [1, 8], "9946842008422193e": 1, "05": [1, 8, 10], "pre": 1, "tf": [1, 10], "kera": [1, 10], "type": [1, 8, 10], "fit_cnn_model": [1, 10], "batch_siz": [1, 10], "32": [1, 8, 10], "budget": [1, 10], "fit": [1, 2], "histori": [1, 2, 8], "loss": [1, 2], "observeparameterpredictor": [1, 8], "object_nam": [1, 8], "training_dataset_df": [1, 8], "wl_synthet": [1, 7, 8, 10], "bd_literature_d": [1, 8], "trained_x_colwise_minmax": [1, 8], "trained_y_colwis": [1, 8], "trained_x_rowwis": [1, 8], "f_lambda_ob": [1, 8], "f_lambda_obs_err": [1, 8], "error": [1, 2, 7, 8, 9, 10], "bar": [1, 8], "wl_ob": 1, "9": [1, 3, 7, 8, 9, 10], "hd3651b_bd_literature_info": [1, 8], "bd_name": [1, 8], "hd3651b": [1, 8], "bd_teff": [1, 8], "818": [1, 8], "bd_logg": [1, 8], "94": [1, 8], "bd_met": [1, 8], "22": [1, 8, 9, 10], "bd_distance_pc": [1, 8], "11": [1, 7, 8, 9, 10], "134": [1, 8], "bd_radius_rjup": [1, 8], "81": [1, 8], "bd_radius_rjup_tun": [1, 8], "flam_to_fnu": 1, "flam_valu": 1, "flam_error": [1, 8], "convert": [1, 8], "f_lambda": [1, 8], "f_nu": [1, 8], "along": [1, 8], "propag": 1, "param": [1, 8, 10], "fnu_valu": 1, "densiti": [1, 8], "fnu_error": 1, "fnu_to_fnu_ab": 1, "__plot__": 1, "processobservationaldataset": [1, 8], "attribut": 1, "correspond": [1, 10], "literatur": 1, "inform": 1, "fnu_ob": [1, 8], "fnu_obs_err": [1, 8], "fnu_obs_toa": [1, 8], "fnu_obs_toa_err": [1, 8], "process_observational_dataset": [1, 8], "__print_results__": [1, 8, 10], "extract": 1, "predict": [1, 2, 10], "result": [1, 2, 8], "versu": 1, "true": [1, 7, 8, 9, 10], "flux_interpol": 1, "interpolated_wl": 1, "__plot_spectra_errorbar__": 1, "__use_spectres__": 1, "interpol": 1, "either": 1, "spectr": 1, "pchip": 1, "fnu_obs_toa_intd": 1, "fnu_obs_toa_intd_df": 1, "load_observational_spectra": [1, 8], "obs_data_df": [1, 8], "__plot_observational_spectra_errorbar__": [1, 8], "__replace_zeros_negatives_with_mean__": [1, 8], "predict_from_random_spectra": [1, 8], "random_spectra_num": [1, 8], "10": [1, 7, 8, 9, 10], "__plot_randomly_generated_spectra__": [1, 8], "__plot_histogram__": [1, 8], "__plot_boxplot_hist__": [1, 8], "__plot_pred_vs_obs_errorbar__": [1, 8], "__plot_pred_vs_obs_errorbar_stat_bokeh__": [1, 8], "__plot_pred_vs_obs_errorbar_stat_matplotlib__": [1, 8], "__calculate_confidence_intervals_std_df__": [1, 8], "__reference_data__": [1, 7, 8, 9, 10], "__save_plots__": [1, 7, 8, 9, 10], "random": [1, 8], "calculate_confidence_intervals_std_df": 1, "dataset_df": 1, "__plot_calculate_confidence_intervals_std_df__": 1, "calcul": [1, 2], "confid": [1, 2], "interv": [1, 2], "other": [1, 7], "statist": [1, 2, 9, 10], "datafram": [1, 8, 9, 10], "chi_square_test": [1, 8], "x_ob": [1, 8], "y_ob": [1, 8], "yerr_ob": [1, 8], "x_pre": [1, 8], "y_pre": [1, 8], "yerr_pr": [1, 8], "radiu": [1, 6], "__plot_results__": [1, 8], "chi": [1, 2], "squar": [1, 2], "similar": [1, 2], "between": [1, 2, 3], "two": [1, 2], "coordin": 1, "associ": 1, "comparison": 1, "point": 1, "If": [1, 3], "p": [1, 8], "rais": 1, "valueerror": 1, "length": 1, "equal": 1, "filter_datafram": 1, "training_dataset": [1, 3, 7, 8, 9, 10], "predicted_targets_d": 1, "filter_dataset_rang": 1, "filter_param": 1, "filer": 1, "find_closest_chi_squar": 1, "df": 1, "chi_square_statistic_list": 1, "find": 1, "closest": 1, "degre": 1, "freedom": 1, "closest_chi_squar": 1, "closest_p_valu": 1, "find_nearest_top_bottom": 1, "lst": 1, "nearest": 1, "interpolate_df": 1, "print_results_": 1, "plot_ml_model_loss_bokeh": [1, 10], "trained_ml_model_histori": [1, 8, 10], "individu": 1, "plot_ml_model_loss_plt": [1, 8], "plot_boxplot": [1, 9, 10], "xlabel": [1, 9, 10], "mu": [1, 7, 8, 9, 10], "m": [1, 7, 8, 9, 10], "ylabel": [1, 9, 10], "saved_file_nam": [1, 9, 10], "plot_boxplot_hist": 1, "x_label": 1, "xy_loc": 1, "plot_chi_square_p_valu": 1, "chi_square_list": [1, 8], "p_value_list": [1, 8], "line": [1, 8], "same": [1, 8], "twin": 1, "axi": [1, 8, 9, 10], "displai": [1, 3, 8], "plot_filtered_spectra": [1, 7], "filter_bound": [1, 7], "feature_to_plot": [1, 7], "title_label": [1, 7], "singl": 1, "multipl": 1, "ax": [1, 8], "plot_pred_vs_obs_errorbar": 1, "y_obs_error": 1, "x_pred": 1, "being": 1, "i": [1, 2, 3, 7, 8, 9, 10], "plot_pred_vs_obs_errorbar_stat_bokeh": 1, "stat_df": 1, "confidence_level": 1, "y_obs_err": 1, "level": 1, "bd_object_class": 1, "plot_pred_vs_obs_errorbar_stat_matplotlib": 1, "plot_regression_report": [1, 10], "trained_dataprocessor": [1, 10], "xtrain": [1, 10], "xtest": [1, 10], "ytrain": [1, 10], "ytest": [1, 10], "target_i": [1, 10], "xy_top": [1, 10], "xy_bottom": [1, 10], "report": [1, 2, 8, 10], "processor": 1, "index": [1, 8], "analyz": 1, "annot": 1, "top": 1, "55": [1, 8], "85": [1, 8, 10], "bottom": 1, "8": [1, 7, 8, 9, 10], "plot_scatter_x_i": 1, "plot_titl": 1, "scatter": [1, 2, 10], "label": [1, 8], "y_label": 1, "plot_width": 1, "800": [1, 7], "plot_height": 1, "400": [1, 7], "plot_spectra_errorbar": 1, "f\ud835\udf08": 1, "erg": 1, "": [1, 2, 3, 7, 8], "cm2": 1, "hz": 1, "data_typ": 1, "x_y_yerr": 1, "plot_tricontour_chi2_radiu": [1, 8], "tuned_ml_r_param_df": [1, 8], "literature_info": [1, 8], "list_": [1, 8], "c_o_ratio": [1, 7, 8, 9, 10], "__save_plot__": [1, 8], "plot_with_errorbar": 1, "err_ob": 1, "err_pr": 1, "creat": [1, 7, 9, 10], "bokeh": 1, "custom": 1, "posit": 1, "print_results_fun": 1, "print_titl": 1, "pretti": 1, "format": [1, 8, 9, 10], "pprint": 1, "librari": [1, 3, 7], "an": [1, 7, 8, 9, 10], "befor": [1, 3, 7], "replace_zeros_with_mean": 1, "dataframe_col": 1, "replac": [1, 3, 8], "zero": [1, 8], "non": [1, 8, 10], "neighbor": [1, 8], "panda": 1, "seri": [1, 2], "repres": [1, 8], "python": [2, 3, 7, 8, 9, 10], "compris": 2, "equip": 2, "special": 2, "capabl": 2, "captur": 2, "atmospher": 2, "extrasolar": 2, "planet": 2, "brown": [2, 6, 10], "dwarf": [2, 6, 10], "The": [2, 7, 8], "execut": [2, 7], "outlin": 2, "datamast": [2, 8, 9, 10], "deeptrain": 2, "util": [2, 7, 8, 9, 10], "differ": 2, "tensorflow": 2, "tune": [2, 6, 10], "well": 2, "predictor": [2, 8, 9, 10], "implement": 2, "deploi": [2, 9, 10], "uncertainti": [2, 8], "statvisanalyz": [2, 7, 8, 9, 10], "provid": [2, 7, 9, 10], "explor": 2, "simpli": [2, 7], "tutori": [2, 3, 7], "stellar": 2, "exoplanetari": 2, "analysi": [2, 8], "requir": 3, "let": [3, 7], "start": 3, "folder": 3, "telescopeml_project": [3, 7, 8, 9, 10], "while": [3, 7], "insid": 3, "thi": [3, 7, 8, 9, 10], "parent": 3, "download": [3, 7, 8, 9, 10], "reference_data": [3, 7, 8, 9, 10], "which": [3, 8], "sub": 3, "observational_dataset": 3, "figur": [3, 7, 8], "check": [3, 6], "shell": 3, "termin": 3, "echo": 3, "command": 3, "path": [3, 7, 8, 9, 10], "typic": 3, "someth": 3, "like": [3, 9, 10], "bin": 3, "bash": 3, "zsh": 3, "sh": 3, "export": 3, "telescopeml_reference_data": [3, 7, 8, 9, 10], "path_to_your_reference_data": 3, "zshrc": 3, "sourc": [3, 7, 8, 9, 10], "bash_profil": 3, "sell": 3, "profil": 3, "actual": [3, 10], "ha": [3, 7, 8, 9, 10], "been": 3, "defin": [3, 7, 8], "properli": 3, "In": [3, 7, 8, 9, 10], "choic": 3, "bashrc": 3, "depend": 3, "specif": 3, "how": 3, "want": 3, "common": 3, "practic": 3, "modern": 3, "system": 3, "need": [3, 7, 8, 9, 10], "anaconda": 3, "proce": 3, "next": 3, "access": 3, "latest": [3, 7], "modifi": 3, "code": [3, 7], "contribut": 3, "we": [3, 7, 8, 9, 10], "suggest": 3, "clone": [3, 7], "github": [3, 7], "best": 3, "practis": 3, "recommend": [3, 7, 10], "repositori": 3, "repo": 3, "conda": 3, "git": [3, 7], "http": [3, 7], "com": [3, 7], "ehsangharibnezhad": [3, 7], "cd": 3, "env": [3, 10], "f": [3, 8], "yml": 3, "activ": 3, "new": [3, 9, 10], "via": [3, 10], "setup": 3, "py": [3, 10], "python3": [3, 10], "develop": 3, "now": [3, 7], "should": [3, 7], "version": [3, 7], "alongsid": 3, "go": [3, 7], "doc": 3, "run": 3, "notebook": [3, 7, 8, 9, 10], "jupyt": 3, "lab": 3, "atmosphr": 6, "hd": 6, "3651": 6, "b": 6, "preper": 6, "full": [7, 8, 9, 10], "here": [7, 8, 9, 10], "step": [7, 8, 9, 10], "them": [7, 9, 10], "through": [7, 8], "sure": 7, "instal": 7, "successfulli": 7, "discuss": 7, "note": [7, 8, 9, 10], "locat": 7, "so": 7, "instruct": 7, "section": 7, "nutshel": 7, "alreadi": 7, "directori": [7, 8, 9, 10], "confirm": 7, "o": [7, 8, 9, 10], "getenv": [7, 8, 9, 10], "encount": 7, "hard": 7, "__reference_data_path__": [7, 8, 9, 10], "lastli": 7, "abl": 7, "import": [7, 8, 9, 10], "without": 7, "issu": 7, "happi": 7, "ing": 7, "No": [7, 8, 9, 10], "bottleneck": [7, 8, 9, 10], "avail": [7, 8, 9, 10], "comput": [7, 8, 9, 10], "low": [7, 8, 9, 10], "spectrum": [7, 8, 9, 10], "r": [7, 8, 9, 10], "200": [7, 8, 9, 10], "atmopshr": [7, 8, 9, 10], "grid": [7, 8, 9, 10], "sonora": [7, 8, 9, 10], "bobcat": [7, 8, 9, 10], "spectral": [7, 8, 9, 10], "nbsphinx": [7, 8, 9, 10], "math": [7, 8, 9, 10], "sim": [7, 8, 9, 10], "open": [7, 8, 9, 10], "radi": [7, 8, 9, 10], "transfer": [7, 8, 9, 10], "picaso": [7, 8, 9, 10], "wa": [7, 8, 9, 10], "emploi": [7, 8, 9, 10], "encompass": [7, 8, 9, 10], "30": [7, 8, 9, 10], "888": [7, 8, 9, 10], "104": [7, 8, 9, 10], "897": [7, 8, 9, 10], "906": [7, 8, 9, 10], "512": [7, 8, 9, 10], "\u03bcm": [7, 8, 9, 10], "log": [7, 8, 9, 10], "t": [7, 8, 9, 10], "eff": [7, 8, 9, 10], "c": [7, 8, 9, 10], "h": [7, 8, 9, 10], "insert": [7, 8, 9, 10], "get": [7, 8, 9, 10], "read": [7, 8, 9, 10], "insert_directory_of_reference_data": [7, 8, 9, 10], "39": [7, 8, 9, 10], "user": [7, 8, 9, 10], "egharibn": [7, 8, 9, 10], "research": [7, 8, 9, 10], "project": [7, 8, 9, 10], "train_bd": [7, 8, 9, 10], "pd": [7, 8, 9, 10], "read_csv": [7, 8, 9, 10], "join": [7, 8, 9, 10], "browndwarf_r100_v4_newwl_v3": [7, 8, 9, 10], "csv": [7, 8, 9, 10], "bz2": [7, 8, 9, 10], "compress": [7, 8, 9, 10], "487": [7, 8, 9, 10], "462": [7, 8, 9, 10], "438": [7, 8, 9, 10], "413": [7, 8, 9, 10], "389": [7, 8, 9, 10], "981": [7, 8, 9, 10], "971": [7, 8, 9, 10], "962": [7, 8, 9, 10], "952": [7, 8, 9, 10], "943": [7, 8, 9, 10], "933": [7, 8, 9, 10], "924": [7, 8, 9, 10], "915": [7, 8, 9, 10], "5": [7, 8], "00": [7, 8, 10], "1100": [7, 8, 9, 10], "103045e": [7, 8, 9, 10], "08": [7, 8, 9, 10], "181658e": [7, 8, 9, 10], "07": [7, 8, 9, 10], "307868e": [7, 8, 9, 10], "269229e": [7, 8, 9, 10], "159179e": [7, 8, 9, 10], "925110e": [7, 8, 9, 10], "257751e": [7, 8, 9, 10], "640859e": [7, 8, 9, 10], "7": [7, 8, 9, 10], "612550e": [7, 8, 9, 10], "901364e": [7, 8, 9, 10], "247359e": [7, 8, 9, 10], "112384e": [7, 8, 9, 10], "127995e": [7, 8, 9, 10], "897355e": [7, 8, 9, 10], "087795e": [7, 8, 9, 10], "791689e": [7, 8, 9, 10], "30883": [7, 8], "1000": [7, 8, 10], "533414e": [7, 8], "244438e": [7, 8], "703017e": [7, 8], "09": [7, 8], "262130e": [7, 8], "671165e": [7, 8], "026652e": [7, 8], "064408e": [7, 8], "919290e": [7, 8], "685050e": [7, 8], "772466e": [7, 8], "726968e": [7, 8], "341722e": [7, 8], "365819e": [7, 8], "811601e": [7, 8], "752807e": [7, 8], "206752e": [7, 8], "30884": [7, 8], "942763e": [7, 8], "536744e": [7, 8], "501408e": [7, 8], "445445e": [7, 8], "168689e": [7, 8], "477159e": [7, 8], "353813e": [7, 8], "401064e": [7, 8], "029425e": [7, 8], "482797e": [7, 8], "647158e": [7, 8], "722947e": [7, 8], "825720e": [7, 8], "921753e": [7, 8], "112957e": [7, 8], "211086e": [7, 8], "30885": [7, 8], "758895e": [7, 8], "988295e": [7, 8], "968653e": [7, 8], "417744e": [7, 8], "260679e": [7, 8], "059680e": [7, 8], "546743e": [7, 8], "698977e": [7, 8], "577032e": [7, 8], "813035e": [7, 8], "915084e": [7, 8], "497190e": [7, 8], "512469e": [7, 8], "734859e": [7, 8], "823897e": [7, 8], "218672e": [7, 8], "30886": [7, 8], "150169e": [7, 8], "503614e": [7, 8], "672564e": [7, 8], "218379e": [7, 8], "085002e": [7, 8], "942492e": [7, 8], "332727e": [7, 8], "481450e": [7, 8], "346700e": [7, 8], "538485e": [7, 8], "608156e": [7, 8], "223594e": [7, 8], "254078e": [7, 8], "561500e": [7, 8], "370389e": [7, 8], "616465e": [7, 8], "30887": [7, 8], "665630e": [7, 8], "117952e": [7, 8], "434730e": [7, 8], "055994e": [7, 8], "418247e": [7, 8], "020869e": [7, 8], "533098e": [7, 8], "647372e": [7, 8], "385020e": [7, 8], "517044e": [7, 8], "524311e": [7, 8], "096679e": [7, 8], "209663e": [7, 8], "837326e": [7, 8], "534210e": [7, 8], "612844e": [7, 8], "30888": [7, 8], "108": [7, 8, 9, 10], "head": [7, 8, 9, 10], "item": [7, 8, 9, 10], "to_list": [7, 8, 9, 10], "366": [7, 8, 9, 10], "342": [7, 8, 9, 10], "319": [7, 8, 9, 10], "296": [7, 8, 9, 10], "t_": 7, "rm": 7, "1800k": 7, "paremet": 7, "constnat": 7, "bound": 7, "1800": 7, "call": 7, "io_util": [8, 9, 10], "load_or_dump_trained_model_cnn": [8, 10], "seed": 8, "100": 8, "bokehj": [8, 9, 10], "carbon": [8, 9, 10], "oxygen": [8, 9, 10], "ratio": [8, 9, 10], "few": [8, 9, 10], "wl": [8, 10], "511960": [8, 10], "486966": [8, 10], "462220": [8, 10], "437720": [8, 10], "413464": [8, 10], "99": 8, "933378": 8, "924091": 8, "101": 8, "914896": 8, "102": 8, "905792": 8, "103": 8, "896780": 8, "appli": 8, "trained_cnn_model": 8, "trained_cnn_histori": 8, "tuned_bohb_batch32_v3_1000epoch_out10": [8, 10], "load_or_dump": [8, 10], "34": [8, 10], "model_1": [8, 10], "__________________________________________________________________________________________________": [8, 10], "shape": [8, 10], "input_3": [8, 10], "inputlay": [8, 10], "conv__b1_l1": [8, 10], "conv1d": [8, 10], "160": [8, 10], "conv__b1_l2": [8, 10], "16512": [8, 10], "conv__b1_l3": [8, 10], "288": [8, 10], "147744": [8, 10], "conv__b1__maxpooling1d": [8, 10], "ma": [8, 10], "xpooling1d": [8, 10], "conv__b2_l1": [8, 10], "147584": [8, 10], "conv__b2_l2": [8, 10], "conv__b2_l3": [8, 10], "590336": [8, 10], "conv__b2__maxpooling1d": [8, 10], "flatten_1": [8, 10], "flatten": [8, 10], "5632": [8, 10], "fc1__b1_l1": [8, 10], "dens": [8, 10], "256": [8, 10], "1442048": [8, 10], "fc1__b1_l2": [8, 10], "1024": [8, 10], "263168": [8, 10], "fc1__b1_l3": [8, 10], "2304": [8, 10], "2361600": [8, 10], "fc1__b1_l3__dropout": [8, 10], "dropo": [8, 10], "ut": [8, 10], "input_4": [8, 10], "concatenated_lay": [8, 10], "concat": [8, 10], "2306": [8, 10], "enat": [8, 10], "fc2__b1_l1": [8, 10], "295296": [8, 10], "fc2__b1_l2": [8, 10], "66048": [8, 10], "fc2__b1_l3": [8, 10], "1152": [8, 10], "590976": [8, 10], "fc2__b1_l4": [8, 10], "2048": [8, 10], "2361344": [8, 10], "fc2__b1_l4__dropout": [8, 10], "output__grav": [8, 10], "2049": [8, 10], "output__c_o_ratio": [8, 10], "output__metal": [8, 10], "output__temperatur": [8, 10], "total": [8, 10], "8438756": [8, 10], "19": [8, 9, 10], "mb": [8, 10], "trainabl": [8, 10], "byte": [8, 10], "train_cnn_model": [8, 10], "trained_model_histori": [8, 10], "standardscal": 8, "were": 8, "trained_standardscaler_x_colwise_minmax": [8, 9, 10], "load_sav": 8, "loadsav": 8, "load_or_dump_trained_object": 8, "trained_object": 8, "major": 8, "instanti": 8, "obsparameterpredictor": 8, "neg": 8, "flam": 8, "take": 8, "averag": 8, "feature_names_synthet": 8, "feature_names_ob": 8, "These": 8, "taken": 8, "zhang": 8, "et": 8, "al": 8, "2021": 8, "uniform": 8, "forward": 8, "ultracool": 8, "methodologi": 8, "benchmark": 8, "12": [8, 9, 10], "what": 8, "\ud835\uded82": 8, "r_": 8, "jup": 8, "13": [8, 9, 10], "def": 8, "tune_radiu": 8, "rmin": 8, "rmax": 8, "dr": 8, "radius_list": 8, "brown_dwarf_literature_info": 8, "__plot_stat_results__": 8, "r_list": 8, "random_pred_mean_list": 8, "els": 8, "linspac": 8, "num": 8, "ross458c_bd_literature_info": 8, "chi_squar": 8, "p_valu": 8, "confidence_intervals_std_df": 8, "std_valu": 8, "append": 8, "float64": 8, "dic_random_pred_mean": 8, "pass": 8, "2f": 8, "r_jup": 8, "to_csv": 8, "round": 8, "hd3651b_tuned_ml_r_param_df": 8, "40": 8, "233": 8, "95": 8, "45": 8, "149": 8, "79": 8, "125": 8, "62": 8, "60": 8, "325": 8, "78": 8, "65": 8, "491": 8, "70": 8, "132": 8, "82": 8, "47": 8, "57": 8, "80": 8, "1272": 8, "90": [8, 10], "109": 8, "71": 8, "116": 8, "17": [8, 9, 10], "248": 8, "29": [8, 10], "188": 8, "15": [8, 9, 10], "1147": 8, "20": [8, 9, 10], "162": 8, "480000e": 8, "832331": 8, "939": 8, "179952": 8, "844077": 8, "496821": 8, "000000e": 8, "811266": 8, "922": 8, "739583": 8, "849303": 8, "498157": 8, "800000e": 8, "03": 8, "880020": 8, "819": 8, "549459": 8, "668540": 8, "505631": 8, "440000e": 8, "02": 8, "846250": 8, "842": 8, "642721": 8, "969105": 8, "490685": 8, "804486": 8, "813": 8, "877848": 8, "656236": 8, "506692": 8, "832886": 8, "838": 8, "454285": 8, "504140": 8, "517309": 8, "550000e": 8, "058064": 8, "820": 8, "930705": 8, "996487": 8, "499381": 8, "895970": 8, "826": 8, "132629": 8, "830504": 8, "501059": 8, "990000e": 8, "01": 8, "918961": 8, "786": 8, "070780": 8, "676969": 8, "506588": 8, "771404": 8, "725": 8, "695394": 8, "673388": 8, "511144": 8, "070000e": 8, "783756": 8, "757": 8, "061584": 8, "668208": 8, "510398": 8, "770000e": 8, "964418": 8, "772": 8, "035360": 8, "971809": 8, "494072": 8, "910000e": 8, "841524": 8, "767": 8, "811584": 8, "993379": 8, "497459": 8, "180000e": 8, "860020": 8, "753": 8, "598653": 8, "538698": 8, "516551": 8, "420000e": 8, "807830": 8, "735": 8, "574585": 8, "692117": 8, "510108": 8, "845038": 8, "733": 8, "996704": 8, "838648": 8, "506454": 8, "16": [8, 9, 10], "750000e": 8, "04": 8, "899932": 8, "782": 8, "529521": 8, "834756": 8, "504589": 8, "count": 8, "null": 8, "entri": 8, "std": 8, "measur": 8, "dispers": 8, "minimum": 8, "min": 8, "smallest": 8, "half": 8, "25th": 8, "percentil": 8, "50th": 8, "third": 8, "75th": 8, "maximum": 8, "largest": 8, "000000": 8, "800000": 8, "314": 8, "824118": 8, "209757": 8, "862009": 8, "802": 8, "228315": 8, "776845": 8, "504300": 8, "252488": 8, "361": 8, "030674": 8, "384260": 8, "071119": 8, "61": 8, "077289": 8, "155512": 8, "007582": 8, "400000": 8, "570000": 8, "600000": 8, "170000": 8, "300000": 8, "000175": 8, "780000": 8, "177000": 8, "200000": 8, "550000": 8, "r_tune": 8, "later": 8, "compar": 8, "v": 8, "real": 8, "f_": 8, "lambda": 8, "nu": 8, "toa": 8, "revis": 8, "18": [8, 9, 10], "instinti": 8, "f_lambda_error": 8, "650857": 8, "606238e": 8, "358173e": 8, "653073": 8, "771977e": 8, "360256e": 8, "655278": 8, "300979e": 8, "132892e": 8, "657472": 8, "569511e": 8, "837585e": 8, "659659": 8, "786160e": 8, "497690e": 8, "21": [8, 9, 10], "dtype": 8, "origin": 8, "ob": 8, "more": [8, 9, 10], "descript": 8, "frequenc": 8, "ab": 8, "23": [8, 10], "216085e": 8, "27": [8, 10], "158216e": 8, "28": [8, 10], "992636e": 8, "528256e": 8, "520930e": 8, "780520e": 8, "034968e": 8, "962643e": 8, "045711e": 8, "487205e": 8, "293166e": 8, "842222e": 8, "704967e": 8, "091501e": 8, "521074e": 8, "679766e": 8, "495628e": 8, "625408e": 8, "256230e": 8, "488411e": 8, "661837": 8, "798661e": 8, "475434e": 8, "628032e": 8, "616868e": 8, "078939e": 8, "484905e": 8, "_": [8, 9, 10], "randomli": 8, "gain": 8, "insight": [8, 10], "about": [8, 10], "drawn": 8, "vertic": 8, "black": 8, "goe": 8, "white": 8, "indic": 8, "24": [8, 10], "7809257876873017": 8, "870557603836059": 8, "5044792065024376": 8, "785": 8, "3640881347657": 8, "logg": 8, "c_o": 8, "met": 8, "870558": 8, "780926": 8, "504479": 8, "364088": 8, "125511": 8, "245625": 8, "011732": 8, "31": [8, 10], "458470": 8, "541343": 8, "464361": 8, "520945": 8, "688": 8, "303528": 8, "779088": 8, "513868": 8, "517756": 8, "335754": 8, "879957": 8, "915469": 8, "498695": 8, "788": 8, "979462": 8, "954525": 8, "997715": 8, "494482": 8, "805": 8, "942841": 8, "165425": 8, "478036": 8, "487412": 8, "852": 8, "542969": 8, "lt": 8, "432x288": 8, "gt": 8, "27e": 8, "training_features_label": 9, "thei": 9, "string": 9, "training_features_wl": 9, "drop": [9, 10], "toreduc": [9, 10], "skew": [9, 10], "symmetr": [9, 10], "loc": [9, 10], "log10": [9, 10], "041393": [9, 10], "buildregressorcnn": 9, "u": [9, 10], "divid": [9, 10], "three": [9, 10], "data_processor": [9, 10], "to_numpi": [9, 10], "minmax": [9, 10], "x_train_standardized_rowwis": [9, 10], "main": [9, 10], "scaled_input_flux": [9, 10], "scaled_output_paramet": [9, 10], "x_train_min": [9, 10], "x_train_max": [9, 10], "x_val_min": [9, 10], "x_val_max": [9, 10], "x_test_min": [9, 10], "x_test_max": [9, 10], "df_minmax_train": [9, 10], "df_minmax_v": [9, 10], "df_minmax_test": [9, 10], "renam": [9, 10], "inplac": [9, 10], "265340e": [9, 10], "445259e": [9, 10], "080712e": [9, 10], "397132e": [9, 10], "734403e": [9, 10], "632182e": [9, 10], "06": [9, 10], "414951e": [9, 10], "373262e": [9, 10], "722576e": [9, 10], "859888e": [9, 10], "scaled_input_min_max_flux": [9, 10], "x_val_standardized_rowwis": 10, "x_test_standardized_rowwis": 10, "1st": 10, "2nd": 10, "3rd": 10, "4th": 10, "conv__numberblock": 10, "conv__numberlay": 10, "conv__filt": 10, "fc1__numberlay": 10, "0013358917126831819": 10, "fc2__numberblock": 10, "fc2__numberlay": 10, "0018989744374361271": 10, "lr": 10, "00018890368162236508": 10, "input_1": 10, "input_2": 10, "26": 10, "epoch": 10, "0709": 10, "output__gravity_loss": 10, "8436": 10, "output__c_o_ratio_loss": 10, "4558": 10, "output__metallicity_loss": 10, "4111": 10, "output__temperature_loss": 10, "3604": 10, "output__gravity_ma": 10, "2371": 10, "output__c_o_ratio_ma": 10, "8332": 10, "output__metallicity_ma": 10, "7632": 10, "output__temperature_ma": 10, "6080": 10, "val_loss": 10, "7365": 10, "val_output__gravity_loss": 10, "3041": 10, "val_output__c_o_ratio_loss": 10, "2354": 10, "val_output__metallicity_loss": 10, "1756": 10, "val_output__temperature_loss": 10, "0214": 10, "val_output__gravity_ma": 10, "6611": 10, "val_output__c_o_ratio_ma": 10, "5466": 10, "val_output__metallicity_ma": 10, "4765": 10, "val_output__temperature_ma": 10, "1522": 10, "5539": 10, "2413": 10, "1425": 10, "1498": 10, "0202": 10, "5749": 10, "4192": 10, "4384": 10, "1561": 10, "4836": 10, "1971": 10, "0843": 10, "1858": 10, "0164": 10, "5207": 10, "3192": 10, "4981": 10, "1421": 10, "architectur": 10, "importnat": 10, "becaus": 10, "design": 10, "structur": 10, "complex": 10, "plot_model": 10, "to_fil": 10, "png": 10, "show_shap": 10, "show_dtyp": 10, "show_layer_nam": 10, "rankdir": 10, "tb": 10, "expand_nest": 10, "dpi": 10, "layer_rang": 10, "final": 10, "veri": 10, "batch": 10, "high": 10, "For": 10, "reason": 10, "add": 10, "_test": 10, "end": 10, "trained_model": 10, "tuned_bohb_batch32_v3_1000epoch_out10_test": 10, "dump": 10, "usr": 10, "local": 10, "anaconda3": 10, "dl2": 10, "lib": 10, "site": 10, "src": 10, "3079": 10, "userwarn": 10, "hdf5": 10, "file": 10, "consid": 10, "legaci": 10, "instead": 10, "nativ": 10, "my_model": 10, "saving_api": 10, "save_model": 10, "loaded_model": 10, "33": 10, "against": 10, "residu": 10, "35": 10, "131": 10, "30m": 10, "27m": 10}, "objects": {"TelescopeML": [[1, 0, 0, "-", "DataMaster"], [1, 0, 0, "-", "DeepTrainer"], [1, 0, 0, "-", "Predictor"], [1, 0, 0, "-", "StatVisAnalyzer"]], "TelescopeML.DataMaster": [[1, 1, 1, "", "DataProcessor"]], "TelescopeML.DataMaster.DataProcessor": [[1, 2, 1, "", "normalize_X_column_wise"], [1, 2, 1, "", "normalize_X_row_wise"], [1, 2, 1, "", "normalize_y_column_wise"], [1, 2, 1, "", "plot_boxplot_scaled_features"], [1, 2, 1, "", "plot_histogram_scaled_features"], [1, 2, 1, "", "split_train_test"], [1, 2, 1, "", "split_train_validation_test"], [1, 2, 1, "", "standardize_X_column_wise"], [1, 2, 1, "", "standardize_X_row_wise"], [1, 2, 1, "", "standardize_y_column_wise"]], "TelescopeML.DeepTrainer": [[1, 1, 1, "", "TrainRegressorCNN"]], "TelescopeML.DeepTrainer.TrainRegressorCNN": [[1, 2, 1, "", "build_model"], [1, 2, 1, "", "fit_cnn_model"]], "TelescopeML.Predictor": [[1, 1, 1, "", "ObserveParameterPredictor"]], "TelescopeML.Predictor.ObserveParameterPredictor": [[1, 2, 1, "", "Flam_to_Fnu"], [1, 2, 1, "", "Fnu_to_Fnu_abs"], [1, 2, 1, "", "ProcessObservationalDataset"], [1, 2, 1, "", "Process_Observational_Dataset"], [1, 2, 1, "", "flux_interpolated"], [1, 2, 1, "", "load_observational_spectra"], [1, 2, 1, "", "predict_from_random_spectra"]], "TelescopeML.StatVisAnalyzer": [[1, 3, 1, "", "calculate_confidence_intervals_std_df"], [1, 3, 1, "", "chi_square_test"], [1, 3, 1, "", "filter_dataframe"], [1, 3, 1, "", "filter_dataset_range"], [1, 3, 1, "", "find_closest_chi_square"], [1, 3, 1, "", "find_nearest_top_bottom"], [1, 3, 1, "", "interpolate_df"], [1, 3, 1, "", "plot_ML_model_loss_bokeh"], [1, 3, 1, "", "plot_ML_model_loss_plt"], [1, 3, 1, "", "plot_boxplot"], [1, 3, 1, "", "plot_boxplot_hist"], [1, 3, 1, "", "plot_chi_square_p_value"], [1, 3, 1, "", "plot_filtered_spectra"], [1, 3, 1, "", "plot_pred_vs_obs_errorbar"], [1, 3, 1, "", "plot_pred_vs_obs_errorbar_stat_bokeh"], [1, 3, 1, "", "plot_pred_vs_obs_errorbar_stat_matplotlib"], [1, 3, 1, "", "plot_regression_report"], [1, 3, 1, "", "plot_scatter_x_y"], [1, 3, 1, "", "plot_spectra_errorbar"], [1, 3, 1, "", "plot_tricontour_chi2_radius"], [1, 3, 1, "", "plot_with_errorbars"], [1, 3, 1, "", "print_results_fun"], [1, 3, 1, "", "replace_zeros_with_mean"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"cite": 0, "The": 1, "modul": [1, 9, 10], "telescopeml": [1, 2], "datamast": 1, "descript": 1, "deeptrain": [1, 10], "predictor": 1, "statvisanalyz": 1, "instal": 3, "step": 3, "1": [3, 7, 8, 9, 10], "creat": 3, "your": 3, "directori": 3, "structur": 3, "2": [3, 7, 8, 9, 10], "set": [3, 9, 10], "input": [3, 9, 10], "file": 3, "environ": 3, "variabl": [3, 9, 10], "For": 3, "mac": 3, "o": 3, "linux": 3, "3": [3, 7, 8, 9, 10], "packag": 3, "knowledgebas": 4, "public": 5, "tutori": 6, "explor": [6, 7], "dataset": [6, 7, 8, 9, 10], "predict": [6, 8], "atmospher": [6, 7, 8, 9, 10], "paramet": [6, 7, 8, 9, 10], "data": [6, 8, 9, 10], "process": [6, 8, 9, 10], "train": [6, 8, 9, 10], "regress": [6, 10], "cnn": [6, 8, 10], "model": [6, 8, 9, 10], "brown": [7, 8, 9], "dwarf": [7, 8, 9], "synthet": [7, 8, 9, 10], "load": [7, 8, 9, 10], "spectra": [7, 8, 9, 10], "check": [7, 8, 9, 10], "few": 7, "instanc": 7, "4": [7, 8, 9, 10], "visual": 7, "differ": 7, "effect": 7, "temperatur": 7, "graviti": 7, "carbon": 7, "oxygen": 7, "ratio": 7, "metal": 7, "us": [8, 10], "ml": [8, 9, 10], "prosess": 8, "scaler": 8, "atmosphr": 8, "hd": 8, "3651": 8, "b": 8, "tune": 8, "radiu": 8, "start": 8, "from": [8, 9, 10], "literatur": 8, "summari": [8, 10], "kei": 8, "statist": 8, "provid": 8, "describ": 8, "observ": 8, "telescop": 8, "deploi": 8, "prepar": [9, 10], "output": [9, 10], "x": [9, 10], "y": [9, 10], "instinti": [9, 10], "dataprocessor": 9, "class": [9, 10], "deepbuild": [9, 10], "split": [9, 10], "valid": [9, 10], "test": [9, 10], "standard": [9, 10], "row": [9, 10], "wise": [9, 10], "column": [9, 10], "5": [9, 10], "featur": [9, 10], "engeen": [9, 10], "take": [9, 10], "min": [9, 10], "max": [9, 10], "each": [9, 10], "bd": [9, 10], "6": [9, 10], "scale": [9, 10], "columnwis": [9, 10], "convnn": 10, "method": 10, "preper": 10, "build": 10, "buildregressorcnn": 10, "trainregressorcnn": 10, "defin": 10, "hyperparamet": 10, "archetictur": 10, "outcom": 10, "perform": 10, "save": 10, "doubl": 10, "histori": 10, "through": 10, "loss": 10, "metric": 10, "plot": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Cite:": [[0, "cite"]], "The Modules": [[1, "the-modules"]], "TelescopeML.DataMaster Module": [[1, "module-TelescopeML.DataMaster"]], "Description": [[1, "description"], [1, "id2"]], "TelescopeML.DeepTrainer Module": [[1, "module-TelescopeML.DeepTrainer"]], "TelescopeML.Predictor Module": [[1, "module-TelescopeML.Predictor"]], "TelescopeML.StatVisAnalyzer Module": [[1, "module-TelescopeML.StatVisAnalyzer"]], "TelescopeML": [[2, "telescopeml"]], "Installation": [[3, "installation"]], "Step 1: Create your directory structure": [[3, "step-1-create-your-directory-structure"]], "Step 2: Set input file environment variables": [[3, "step-2-set-input-file-environment-variables"]], "For Mac OS": [[3, "for-mac-os"]], "For Linux": [[3, "for-linux"]], "Step 3: Install the Package": [[3, "step-3-install-the-package"]], "KnowledgeBase": [[4, "knowledgebase"]], "Publications:": [[5, "publications"]], "Tutorials": [[6, "tutorials"]], "Exploring the Datasets": [[6, "exploring-the-datasets"]], "Predict Atmospheric Parameters": [[6, "predict-atmospheric-parameters"]], "Data Processing": [[6, "data-processing"]], "Train a Regression CNNs Model": [[6, "train-a-regression-cnns-model"]], "1. Exploring the Brown Dwarf Synthetic Dataset": [[7, "1.-Exploring-the-Brown-Dwarf-Synthetic-Dataset"]], "1.1 Load the Synthetic spectra": [[7, "1.1-Load-the-Synthetic-spectra"]], "Load the dataset and check few instances": [[7, "Load-the-dataset-and-check-few-instances"]], "1.2 Check atmospheric parameters": [[7, "1.2-Check-atmospheric-parameters"]], "1.3 Check the synthetic spectra": [[7, "1.3-Check-the-synthetic-spectra"]], "1.4 Visualize the Brown Dwarf spectra for different parameters": [[7, "1.4-Visualize-the-Brown-Dwarf-spectra-for-different-parameters"]], "1.4.1 Effective Temperature": [[7, "1.4.1-Effective-Temperature"]], "1.4.2 Gravity": [[7, "1.4.2-Gravity"]], "1.4.3 Carbon-to-Oxygen ratio": [[7, "1.4.3-Carbon-to-Oxygen-ratio"]], "1.4.4 Metallicity": [[7, "1.4.4-Metallicity"]], "2. Predict Brown Dwarf Parameters Using Trained ML Models": [[8, "2.-Predict-Brown-Dwarf-Parameters-Using-Trained-ML-Models"]], "2.1 Load the Brown Dwarf spectra and Trained CNNs models": [[8, "2.1-Load-the-Brown-Dwarf-spectra-and-Trained-CNNs-models"]], "2.1.1 Load the Synthetic spectra - training dataset": [[8, "2.1.1-Load-the-Synthetic-spectra---training-dataset"]], "2.1.2 Check atmospheric parameters": [[8, "2.1.2-Check-atmospheric-parameters"], [9, "2.1.2-Check-atmospheric-parameters"]], "2.1.3 Load the trained CNN model": [[8, "2.1.3-Load-the-trained-CNN-model"]], "2.1.4 Load the trained data prosessing Scalers": [[8, "2.1.4-Load-the-trained-data-prosessing-Scalers"]], "2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B Using the Tuned Radius": [[8, "2.2-Predict-Brown-Dwarf-Atmosphric-Parameters-of-HD-3651-B-Using-the-Tuned-Radius"]], "2.2.1 Tune the Radius Starting from the Literature Radius": [[8, "2.2.1-Tune-the-Radius-Starting-from-the-Literature-Radius"]], "Summary of Key Statistics Provided by .describe()": [[8, "Summary-of-Key-Statistics-Provided-by-.describe()"]], "2.2.1 Load the data and process": [[8, "2.2.1-Load-the-data-and-process"]], "2.2.2 Process the observational Telescope data": [[8, "2.2.2-Process-the-observational-Telescope-data"]], "2.2.3 Deploy the Trained ML Models for Prediction:": [[8, "2.2.3-Deploy-the-Trained-ML-Models-for-Prediction:"]], "3. Process Brown Dwarf Atmospheric Parameters": [[9, "3.-Process-Brown-Dwarf-Atmospheric-Parameters"]], "2.1 Load the Synthetic spectra - training dataset": [[9, "2.1-Load-the-Synthetic-spectra---training-dataset"]], "2.1.3 Prepare Inputs and outputs for ML models (X,y)": [[9, "2.1.3-Prepare-Inputs-and-outputs-for-ML-models-(X,y)"]], "2.2 Processing the Data": [[9, "2.2-Processing-the-Data"]], "2.2.1 Instintiate DataProcessor class from DeepBuilder module": [[9, "2.2.1-Instintiate-DataProcessor-class-from-DeepBuilder-module"]], "2.2.2 Split the dataset into train, validate and test sets": [[9, "2.2.2-Split-the-dataset-into-train,-validate-and-test-sets"]], "2.2.3 Standardize X Variables Row-wise": [[9, "2.2.3-Standardize-X-Variables-Row-wise"]], "2.2.4 Standardize y Variables Column-wise": [[9, "2.2.4-Standardize-y-Variables-Column-wise"]], "2.2.5 Feature engeenering: Take Min and Max of each row (BD spectra)": [[9, "2.2.5-Feature-engeenering:-Take-Min-and-Max-of-each-row-(BD-spectra)"]], "2.2.6 Scale Min Max features - ColumnWise": [[9, "2.2.6-Scale-Min-Max-features---ColumnWise"]], "4. Train ConvNN Model: Regression Method": [[10, "4.-Train-ConvNN-Model:-Regression-Method"]], "3.1 Data Preperation": [[10, "3.1-Data-Preperation"]], "3.1.1 Load the Synthetic spectra - training dataset": [[10, "3.1.1-Load-the-Synthetic-spectra---training-dataset"]], "3.1.2 Check atmospheric parameters": [[10, "3.1.2-Check-atmospheric-parameters"]], "3.1.3 Prepare Inputs and outputs for ML models (X,y)": [[10, "3.1.3-Prepare-Inputs-and-outputs-for-ML-models-(X,y)"]], "3.2 Build the CNN model and Processing the Data": [[10, "3.2-Build-the-CNN-model-and-Processing-the-Data"]], "3.2.1 Instintiate BuildRegressorCNN class from DeepBuilder module": [[10, "3.2.1-Instintiate-BuildRegressorCNN-class-from-DeepBuilder-module"]], "3.2.2 Split the dataset into train, validate and test sets": [[10, "3.2.2-Split-the-dataset-into-train,-validate-and-test-sets"]], "3.2.3 Standardize X Variables Row-wise": [[10, "3.2.3-Standardize-X-Variables-Row-wise"]], "3.2.4 Standardize y Variables Column-wise": [[10, "3.2.4-Standardize-y-Variables-Column-wise"]], "3.2.5 Feature engeenering: Take Min and Max of each row (BD spectra)": [[10, "3.2.5-Feature-engeenering:-Take-Min-and-Max-of-each-row-(BD-spectra)"]], "3.2.6 Scale Min Max features - ColumnWise": [[10, "3.2.6-Scale-Min-Max-features---ColumnWise"]], "3.3 Train CNN model": [[10, "3.3-Train-CNN-model"]], "3.3.1 Instintiate TrainRegressorCNN class from DeepTrainer Module": [[10, "3.3.1-Instintiate-TrainRegressorCNN-class-from-DeepTrainer-Module"]], "3.3.2 Define the Hyperparameters": [[10, "3.3.2-Define-the-Hyperparameters"]], "3.3.3 Build a CNN model": [[10, "3.3.3-Build-a-CNN-model"]], "3.3.4 Train the CNN model using the datasets": [[10, "3.3.4-Train-the-CNN-model-using-the-datasets"]], "3.3.5 Check the Trained CNN Archeticture and Summary": [[10, "3.3.5-Check-the-Trained-CNN-Archeticture-and-Summary"]], "3.3.6 Trained Model Outcomes": [[10, "3.3.6-Trained-Model-Outcomes"]], "3.4 Check the performance of the Trained Model": [[10, "3.4-Check-the-performance-of-the-Trained-Model"]], "3.4.1 Load the Saved Trained CNN Models": [[10, "3.4.1-Load-the-Saved-Trained-CNN-Models"]], "3.4.2 Double-check the Trained CNN Archeticture and Summary": [[10, "3.4.2-Double-check-the-Trained-CNN-Archeticture-and-Summary"]], "3.4.3 Check the training history through Loss metric": [[10, "3.4.3-Check-the-training-history-through-Loss-metric"]], "3.4.4 Plot the Performance of the trained CNN models - Regression metrics": [[10, "3.4.4-Plot-the-Performance-of-the-trained-CNN-models---Regression-metrics"]]}, "indexentries": {"dataprocessor (class in telescopeml.datamaster)": [[1, "TelescopeML.DataMaster.DataProcessor"]], "flam_to_fnu() (telescopeml.predictor.observeparameterpredictor method)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor.Flam_to_Fnu"]], "fnu_to_fnu_abs() (telescopeml.predictor.observeparameterpredictor method)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor.Fnu_to_Fnu_abs"]], "observeparameterpredictor (class in telescopeml.predictor)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor"]], "processobservationaldataset() (telescopeml.predictor.observeparameterpredictor method)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor.ProcessObservationalDataset"]], "process_observational_dataset() (telescopeml.predictor.observeparameterpredictor method)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor.Process_Observational_Dataset"]], "telescopeml.datamaster": [[1, "module-TelescopeML.DataMaster"]], "telescopeml.deeptrainer": [[1, "module-TelescopeML.DeepTrainer"]], "telescopeml.predictor": [[1, "module-TelescopeML.Predictor"]], "telescopeml.statvisanalyzer": [[1, "module-TelescopeML.StatVisAnalyzer"]], "trainregressorcnn (class in telescopeml.deeptrainer)": [[1, "TelescopeML.DeepTrainer.TrainRegressorCNN"]], "build_model() (telescopeml.deeptrainer.trainregressorcnn method)": [[1, "TelescopeML.DeepTrainer.TrainRegressorCNN.build_model"]], "calculate_confidence_intervals_std_df() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.calculate_confidence_intervals_std_df"]], "chi_square_test() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.chi_square_test"]], "filter_dataframe() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.filter_dataframe"]], "filter_dataset_range() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.filter_dataset_range"]], "find_closest_chi_square() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.find_closest_chi_square"]], "find_nearest_top_bottom() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.find_nearest_top_bottom"]], "fit_cnn_model() (telescopeml.deeptrainer.trainregressorcnn method)": [[1, "TelescopeML.DeepTrainer.TrainRegressorCNN.fit_cnn_model"]], "flux_interpolated() (telescopeml.predictor.observeparameterpredictor method)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor.flux_interpolated"]], "interpolate_df() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.interpolate_df"]], "load_observational_spectra() (telescopeml.predictor.observeparameterpredictor method)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor.load_observational_spectra"]], "module": [[1, "module-TelescopeML.DataMaster"], [1, "module-TelescopeML.DeepTrainer"], [1, "module-TelescopeML.Predictor"], [1, "module-TelescopeML.StatVisAnalyzer"]], "normalize_x_column_wise() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.normalize_X_column_wise"]], "normalize_x_row_wise() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.normalize_X_row_wise"]], "normalize_y_column_wise() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.normalize_y_column_wise"]], "plot_ml_model_loss_bokeh() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_ML_model_loss_bokeh"]], "plot_ml_model_loss_plt() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_ML_model_loss_plt"]], "plot_boxplot() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_boxplot"]], "plot_boxplot_hist() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_boxplot_hist"]], "plot_boxplot_scaled_features() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.plot_boxplot_scaled_features"]], "plot_chi_square_p_value() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_chi_square_p_value"]], "plot_filtered_spectra() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_filtered_spectra"]], "plot_histogram_scaled_features() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.plot_histogram_scaled_features"]], "plot_pred_vs_obs_errorbar() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_pred_vs_obs_errorbar"]], "plot_pred_vs_obs_errorbar_stat_bokeh() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_pred_vs_obs_errorbar_stat_bokeh"]], "plot_pred_vs_obs_errorbar_stat_matplotlib() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_pred_vs_obs_errorbar_stat_matplotlib"]], "plot_regression_report() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_regression_report"]], "plot_scatter_x_y() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_scatter_x_y"]], "plot_spectra_errorbar() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_spectra_errorbar"]], "plot_tricontour_chi2_radius() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_tricontour_chi2_radius"]], "plot_with_errorbars() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.plot_with_errorbars"]], "predict_from_random_spectra() (telescopeml.predictor.observeparameterpredictor method)": [[1, "TelescopeML.Predictor.ObserveParameterPredictor.predict_from_random_spectra"]], "print_results_fun() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.print_results_fun"]], "replace_zeros_with_mean() (in module telescopeml.statvisanalyzer)": [[1, "TelescopeML.StatVisAnalyzer.replace_zeros_with_mean"]], "split_train_test() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.split_train_test"]], "split_train_validation_test() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.split_train_validation_test"]], "standardize_x_column_wise() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.standardize_X_column_wise"]], "standardize_x_row_wise() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.standardize_X_row_wise"]], "standardize_y_column_wise() (telescopeml.datamaster.dataprocessor method)": [[1, "TelescopeML.DataMaster.DataProcessor.standardize_y_column_wise"]]}})