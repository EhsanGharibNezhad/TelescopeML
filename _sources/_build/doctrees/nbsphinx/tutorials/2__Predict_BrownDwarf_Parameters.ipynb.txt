{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:31.966698Z",
     "iopub.status.busy": "2023-11-28T23:49:31.965971Z",
     "iopub.status.idle": "2023-11-28T23:49:37.201691Z",
     "shell.execute_reply": "2023-11-28T23:49:37.202095Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:37.207502Z",
     "iopub.status.busy": "2023-11-28T23:49:37.206862Z",
     "iopub.status.idle": "2023-11-28T23:49:37.209131Z",
     "shell.execute_reply": "2023-11-28T23:49:37.209485Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:37.213464Z",
     "iopub.status.busy": "2023-11-28T23:49:37.212878Z",
     "iopub.status.idle": "2023-11-28T23:49:40.039135Z",
     "shell.execute_reply": "2023-11-28T23:49:40.039527Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.047520Z",
     "iopub.status.busy": "2023-11-28T23:49:40.046625Z",
     "iopub.status.idle": "2023-11-28T23:49:40.049850Z",
     "shell.execute_reply": "2023-11-28T23:49:40.050165Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.056927Z",
     "iopub.status.busy": "2023-11-28T23:49:40.056004Z",
     "iopub.status.idle": "2023-11-28T23:49:40.059455Z",
     "shell.execute_reply": "2023-11-28T23:49:40.059772Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.063446Z",
     "iopub.status.busy": "2023-11-28T23:49:40.062988Z",
     "iopub.status.idle": "2023-11-28T23:49:40.437096Z",
     "shell.execute_reply": "2023-11-28T23:49:40.437506Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.441934Z",
     "iopub.status.busy": "2023-11-28T23:49:40.441359Z",
     "iopub.status.idle": "2023-11-28T23:49:40.444958Z",
     "shell.execute_reply": "2023-11-28T23:49:40.445358Z"
    }
   },
   "outputs": [],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.449353Z",
     "iopub.status.busy": "2023-11-28T23:49:40.448738Z",
     "iopub.status.idle": "2023-11-28T23:49:40.450683Z",
     "shell.execute_reply": "2023-11-28T23:49:40.451159Z"
    }
   },
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.455025Z",
     "iopub.status.busy": "2023-11-28T23:49:40.454239Z",
     "iopub.status.idle": "2023-11-28T23:49:40.456096Z",
     "shell.execute_reply": "2023-11-28T23:49:40.456482Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.460948Z",
     "iopub.status.busy": "2023-11-28T23:49:40.460405Z",
     "iopub.status.idle": "2023-11-28T23:49:40.516635Z",
     "shell.execute_reply": "2023-11-28T23:49:40.516975Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"adf8cd19-3839-4b77-93a6-e2d8cdd407a8\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"6e1a67da-71ee-444a-bfdb-75d55d11f10d\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1039\"},\"major_label_policy\":{\"id\":\"1040\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1042\"},\"major_label_policy\":{\"id\":\"1043\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1066\"},\"selection_policy\":{\"id\":\"1067\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1046\"},\"selection_policy\":{\"id\":\"1047\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1040\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1039\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"ticker\":null},\"id\":\"1042\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1043\",\"type\":\"AllLabels\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"6e1a67da-71ee-444a-bfdb-75d55d11f10d\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"adf8cd19-3839-4b77-93a6-e2d8cdd407a8\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.538480Z",
     "iopub.status.busy": "2023-11-28T23:49:40.537945Z",
     "iopub.status.idle": "2023-11-28T23:49:40.732861Z",
     "shell.execute_reply": "2023-11-28T23:49:40.733208Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.737261Z",
     "iopub.status.busy": "2023-11-28T23:49:40.736724Z",
     "iopub.status.idle": "2023-11-28T23:49:40.740338Z",
     "shell.execute_reply": "2023-11-28T23:49:40.740686Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.753347Z",
     "iopub.status.busy": "2023-11-28T23:49:40.752707Z",
     "iopub.status.idle": "2023-11-28T23:49:40.756744Z",
     "shell.execute_reply": "2023-11-28T23:49:40.756296Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:40.768946Z",
     "iopub.status.busy": "2023-11-28T23:49:40.763214Z",
     "iopub.status.idle": "2023-11-28T23:49:53.109824Z",
     "shell.execute_reply": "2023-11-28T23:49:53.110181Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.3212429463863373,\n",
      "    'gravity': 5.009675439198812,\n",
      "    'metallicity': -0.3211179678017894,\n",
      "    'temperature': 824.7165730794271}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    5.009675   1.321243  -0.321118  824.716573\n",
      "std     0.142189   0.252321   0.105910   36.143138\n",
      "min     4.759708   0.945927  -0.435892  757.462524\n",
      "25%     4.899772   1.194597  -0.405236  799.387756\n",
      "50%     4.989466   1.271877  -0.362808  823.043213\n",
      "75%     5.079433   1.418428  -0.267018  843.393799\n",
      "max     5.356031   2.065413  -0.025082  911.541931\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"fe1e3c0b-0d8a-470a-ad52-964b7081b696\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"c2b26bfe-53e3-411d-8109-1306462bd5c3\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jANCmSoOOz4Hh71utXQ+PtDEb3t0ZEE+X0Jse3vtRz4M0Jm0GmRBPgjGEl2ea1A+Zd7TLhNbTz4v9WffPt9LPsGJguM5jlM+wOSfYBpyWj5RS9twG7piPgoVIXA0hGo+ihUqo+TBbj4gC1dwIV5yPtGkV+rcNHg+oBz8arYffD5NBFtTnqx+PgudBNtNlYE+4xUXroakgz5rAcnGp0+DPjLwaqjcz3g+oNmTzKhbZz4hsCbZPBVRPn8GVaKuplI+zO/NMX8NTT7tfLiFiC1DPjJ7Em14aUU+eeQAPrpUUD5+8wKrDfZhPuzOxu3aAXE+qmrIpB59ej7//htryuKCPq7uUNejT4k+N2sOWvyjjz6vdUt156iTPogH+XM1oZQ+aL93gYsBkj56gTAf5R2MPnff9CKqt4Q+DrA+EbIcdz4X08XlFhdQPlisBBwp8Sg+UyAiNKciKz5cR0jQwnxJPqIYxefDIUI+HC3YYSGGRz5zXdjrL0BFPjFMffrbyUE+j2Dv/cxsQD6I+FNOQIhVPqIjIj+welo+2N/SG5yBXT7ft34uoM9qPhNRHu2l83E+NKStvw9Dfj4LdAEEuJSFPnwG++eWrYw+8clCCWpMjj7cejuzgpqFPvR9l9mdqGw+EnKsfSW9YD6AwcHoKqZkPjRv2f0vWl8+ew6qNy1yWj5eENt3k7FUPhXiDivPe2A+HJ3oeI0AXz5EMIyuOCNbPhmO//CNNVc+8/FKegmIUD5l2B3tYnAyPnL2ZDSwC1I+SYOT8E5YTT7XT8NV2jVPPrkYMZH1A0o+EsYoYPz8VT59EuiN9MtcPj6xmAgbBEs+e7a/dz2aUj6aMr6e3YtXPoft7gpoCGY+cFdHy+ycbj76Uv8+/RpyPjUH8Yl7Nnk+cwqzCFPMfT5Le4C1Y3d9PtdPYlHpzXk+Amj1Dkh/cj5KCpwGn2poPsgogt0P02Q+KWUrtsKoUD7HxCpVmyUzPluH+20Cez8+6J+wjDFNTD4qW+3+2phDPln+be7lXEo+sk9kZKueRz7zHA2QmElEPi7z9iTPrlA+t8E8rM0wVj7oxRBUUD1RPtL55KpmlGQ+PlLsqhA/bD5d2fyd6u9mPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1371\"},\"selection_policy\":{\"id\":\"1372\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nhtyq+y2Pz6YaY7ZTbRLPqpA5Q04kzM+ZNUceb3oSj5PmTNgrRBEPrGHpYO2eE0+8+pTFRlDTj7HQKkwx0dFPoXN5gWmTFE+2HKjPFS/Wz4S9MzrUQJhPmYQLiU7oWo+Jj05G8uQcD5nMHuJ7dpyPqLMKMncCHg+C1EmFZ6zfD6NXq9IKtV+PtWT4EH8/IE+H51TmBFAgz6vR3EK3YuDPp6KbXGYuHk+c4gKPatyZj7fhdvoYz9SPvaq4vneJlA+VZUOaGONUj4Yyr5/mKlEPhji5plKDkM+pgc8NwMpUD5XEry3Cl5iPtpO3WJJeXA++Glg8f9Zez4BEI6NY9GCPkkpJUK7n4g+yOYSvQWmjz42XzFopaiTPpzijApd65Q+9hFHhZHxkT5ib3ulvNWLPsGpPFlBqoQ+M3Qv0ldvdj61OeLPUp9RPu/sVmesAyI+FhvKeXocMT4LExsZBhYkPscrmQlSZUA+iBR311CtPz53Gmx1cLA1Pg6oEnoWRTU+15E1NRkRNj7qOENPlJhTPhB9yXd8J1g+zCzyGMzQYD7RshPMqFRpPmlzGjZHpHE+mKhyYpxEfz4PTLnWb1CFPgCOK6VSiYw+ZHBoF/JMjj6z0Qd4ngKGPo4hYiOBA28+MWYRowb2YD7M0wN0xK5jPsvd7WokHmA+8qFLHMW+Wj7iFi9GtkJYPkiUI7VFll0+gfGF8f+jYj6JzTVwF2NaPgNJC/t9wFk+SU8xNsQZUz76zsSBcm5BPkAs4Ps+8EA+eblKFBwYWz5rbYIiSodKPhZqzuNhxFA+0IbiuuWIVj5DQPpZkfZTPtlJU1A57VE+DfjN6gkiVD4N24lX68tXPhVYXKVEo2Y+iMm6eLi3bD7ysCqL9hN1PhXH8PtY/3k+RxKG/AUffT5B06jFET58PufMTX/NRnk+SZa7/35ecj405NxsOJ5pPmU70vCuFGY+uZjbvG0HTT6AjtOZgTlAPkySvB7KfkM+8t+Lu0DvRz4tz/2JDnpIPtoBOULOuEQ+hUTBG8VlPz64riaeVXJEPhO3JcM7N0U+Y2+ciDHhUD5GUrGsLN5ePvprjxUWjmE+us14A1sXaT7keRejDO9jPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1379\"},\"selection_policy\":{\"id\":\"1380\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"auDZ6iOaMz6L1G12HKUxPqdQOuprszs+tvMRbbduRj5Zz4OhAlhFPpd9WPZqfUg+nKGATjJ6Sj428jW9+WtKPvRRGmOvqlM+B4FA9mxpWj4iDHA2NKBiPiIi7PR3aWs+JEdYlngqcD5nqrHRJ0RyPr9laBX4tXc+uZz9e9ksfD7H9bo+Cgp/PqTq6pFzBoI+ShagDHRSgz4MbyvsjsmDPq/A0nXikHk+3lgg/ktjZz7C1Q4BZ+tSPlu6AOWJBFU+oaN1mZ/LUD5kvXHRwQRFPtwJZD7qHUg+A2cnrrtSUT5UnY4d4VFjPoJgXAiEqXA+bnMofXI4ej7PytaWf4SCPu4nIHKW+4g+uC8G4uDVjz7i3bj6O8OTPlWwId8i65Q+9ZhAOJa6kT6NKXW6jbmLPg+Ya35Cz4Q+VPrjrkxHdz7ER/ibFXpOPscfpUUvkyw+j/UJyjdCOj4r7Ke0doZBPtCtmIJMHkg+ftQmRNmBSj4N2y1FcAQ+Pvci9ZEIFEA++z9D++ZLOj6peWNrxuRTPi1QGelgYlk++5MLZwIFWz79ygQBcFVlPpEw3GjJInI+oqaarB6Gfj5OLSXDBc6FPn7EpnBfJow+0EQln2xBjj5+RlF1gP2FPvvBENuMDG0+zjfdEy/qWz7rrmnb3Q1nPrQcTAPiR2A+C3+6UuYFWz40ox/zRtdWPvReSUTNa18+HM4w6XeJYT4Bq7p/2DVYPgxrYP4kj1c+LVKr0G2WUz5PUs2d3IpDPuJSrxYoqkY+M2yXCBIpVj4WQwH+LmNOPoKq8GG0wFA+0kw1cDvtWj5c1PGxGF5WPgay/JwB7VA+YVM7E5a4UD7AJabpqhVYPlYUCOZaumg+UqvouJ5lbD6/ycHUu/lzPtithXcVtns+c7vjxz1yfj7T/l+KVSB+PnxKJ6HVv3o+VwD7ORTMcj5tDeHbTndrPvoqpkmgOGU+JK+3qOQUVD63Y19VDlpIPq9D5TWIC0E+EpQAjmnOSz4QAKHef7pKPgIf+mh2vkQ+wUoDjJ2xTD58bpt/0l5LPkFsTW7cN0Y+zbZsVm03UT5XKGd/v6VQPlB/l+fVvWE+MFRziQo8Xz40OJaYvp5yPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1353\"},\"selection_policy\":{\"id\":\"1354\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1324\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+CVizlOyOD5SKyF022NFPqXL2woh9jU+2QlaUedDQz6miejNC8VDPmAFZ/SzQUo+G3vjVGfmST5JiKA++J5KPnuZsqvjU1A+z4VMyezbWz6c6Xj84Y1jPuaQFwSQGGo+6Yv+qPALcD5duJcBxx9yPit8rBonCng+FRAh3GlKez6Xun9IJSV/Pj00CvwL5YE+a1I0cH27gz64xGZuHFSDPla0Fljd/Xg+qMaovQetZz4AF7e6h5NPPi2RjgalLFI+CP0xYqP0Rz4Y86Eyja83PgvFEUKczEQ+HXMLhtBhUD5oPj1CV/BhPrsrSVNI83A+Z7uviERzej7ErY+jgJmCPuZv5r3VdIk+Zmz6b/0OkD4qA9m+P7KTPqgfubLf+pQ+AoP1RY8xkj4Pm5X89cmLPiZfF2x/xoQ+X4T/CwCDdj4ZK6xXv7FSPonvWb3NW0E+Oaa+PNdHST67bJ7QknA5PnFISD9VYUY+oQi6NszzNT5p9ujq2jwvPuAFaUbNUUI+6HBe5XECQT4iBhoswWtWPv982pqgxFg+lcLUHQnZXD5jXL+E3sRmPttM3InBA3I+n+yYo6EXfz4vbxrdxeuFPjODNemy3ow+Wi9ovQ37jT6BzY50tySGPgvmaoFPAW0+ntbsg+61Xz55ndi4Y29hPgzp6ddmbVo+szkeHM78Wz4fMXG/wfpXPrqnCzRTJV4+98FXjfx9YT5rGYPsrsBVPqACFaZ/jVY+QpcmX00/Vj6hgL98HuQ8Psumi/1yMUY+hqMTtPa8Uj7NIpoLx6BNPq98DI48Vk8+uGOjzLB8Wj4j5PUdWc5cPj8zG8sdEVI+AHaU+Am3TD7f07rVbJpaPqVNX1oGgGo+MnSFySNbcD6QdLDYQtRzPjyUjU6vS3o+6oF7Hr00fj4Y8mWXcSJ9PhP/DMUH5ng+EdoWWDfXcT52Wz29iytqPtyMKW2IemY+um6iWc+UUD6dRGKuqftGPnFA8FVzZkY+dFG10oG/Qz5nEHyceWZDPtDpsioPiUA+hLQC3rNZSz6VJ2QzUqNBPoe454VfPVI+FMriSoOITz5HzG82UKFIPrjPhHY8A0k+kin+cc72WT4Xyn3WYvBnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1357\"},\"selection_policy\":{\"id\":\"1358\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"4X2Ds3ztQT5Ea9aR8NJDPtbi7dQfEj0+tm94KI79RD7BIArqlP49Pg8j/j/BMlA+9KeigqkLST7xfm1v4DNLPg159sxhFFQ+0hDW8lgKWT6fQJXuEkdiPp+XSYZijmg+4ohwisiqbz6834RMk3xyPmfxB3Q6pXg+A/2bunJEfD6OX2wftKN+PvPkZbIrEoI+KWO8hXoDgz441sAHVFyDPqlyhTSs53g+4WzziDf5Zj4FFQhPIPlSPjwQzD6jblI+SnGB++xSUT6brftMhbM9PgV8N6PU+z0+DmGXDPZXUT6vy1Y+UXZiPiDoJV2hCXE+U22YNBeWej7YL1BC89mCPtJYEbfWLIk+14Zq+WPVjz5pJv+zcouTPpKI7IBXsJQ+gOde45wbkj683HmObrSLPuDjw3+gYIQ+dZ76tQK4dj4Lohq8oapOPjHcA2r7bi0+SXreI2fXQD7Dl0ncqNs/Pvw3DTqyYUU+kEUppNQyTT5f8ZtbaNVNPtMTdBrNi0M+ESQn2WTGQT4mSpyb1gdXPmAWQDE3wlc+pJ4sNUtPXT6y+rNJtqNoPsfoBSJp9HE+MuvwyIZGfj5qXsVVpc2FPkTpLo3F0os+R95PPJzPjj4WGludwDGGPnPbPcjxt20+onbNSQUYYD6wu5y0a1RgPnpUe7sx4F4+QxfOpdxmWT6Z0WchwhxWPoAUFh1lRF0+rBC65S4mXz4xiSiHYf9ZPqU19NLYyls+4Z4Jar9fUD69VXivcj9BPnrresdx50g+0gTBCjXCRD4h+LXbKIdSPlDnoyoSOVE+byjTEJOnVj6q8IE8mQxRPsFSBD+d800+nkUTPJbKUz5f9uAE69ZXPm1jGTI93GU+ufobox9CbT7QVjbu3EZzPp7EyYJs2nk+P2YqUiS5fT71xlZquYx8PjHidpnsXHk+mIYSf+Obcj5PFADDkKRqPtV25sAFzmY+yZ4I+D9gSD5kUQxpraRHPmy86Di7jEI+PZ+I41/1Sj4dXnXo5g1BPn9WNalX10k+PZhqyx3FRz4ss8ehuhZKPmuq2nh81FE+f3ChUt0yTT7TIeYmyolgPhCe9yWMbmA+fabRUDFyYz70OtSGZK1tPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1349\"},\"selection_policy\":{\"id\":\"1350\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"JqAOG4tCPD7WFArryzdJPovzy0ymeTs+fnnlxfzSRT5DMhcYgzBDPlXChybmf0w+8MDfZgc0Rj5jroO9oN1HPgYQ3Fv9aVQ+baIphhERWz5gIs8Zuc1iPlvjW05Zxms+DXG5MsGBcD6m/JOwgkRzPnb663xAXHY+IOlPI9YqfD5L+9J5gGV/PqSYeGWdSYI+Ti66rd1wgz75NxSfhCqEPuEMwa3nm3g+QcfmKfxnZj6KV4cK0xNSPrdHeCu961I+SKkHCqVTSz4Hz9z/1vVGPg0qpURFUEY+6UvpPNkgUT5NYPt/Yt5hPjNM2qMrfHA+1PZjsXEiej5pLds+bc6CPnm95G9+34g+jpcZ9BnDjz5dR5t2tIWTPnF2p9qovZQ+Hs4WEZ2nkT4yTxf1+YSLPlnWkPloqIQ+2yfCbke4dz4dyBTNJoxRPhqe8UICOBU+rs2w57+lPT5kglSq0H47Ps9mEZY4BzQ+FbsYaldsQj6CkFqgKiY+Pgadq70apT0+rnPT3FCfOz58rBcMH8lUPrOSuOVLVFg+vYI/y0quXT6QwocEJdVmPjgPHRxBanE+OMbbSFMpfT7Q9YdV0OeEPnJN9arvPYw+OEnXsmKxjj4QpVlmRI6FPvfgQwwtH24+IKO/kUr/Yz7cPgOAc7VjPgZ2g+8Bb14+JFdB5cS4Wj7po2GVkMNXPnHvjpTdEmA+HVGQzhdBYz4xOLu4CI9ZPkr1rUU0EFI+lwpmI79pTz6z9gvfXBhDPkMF4NS90ks+xfx+JCCGVT6aLMby4z5NPob0z3gynFY+i7H4kGtaWj4MZ1Ry5dhaPs6s/9ekXE0+CZBH0ZhXUT62OBf7Iw9YPlfpIG8WhGc+N1hyyVbhaj7QUtTDNM1xPrkkGPOW23g+N3WLRW5Hfj4AqttbhLt8PrNZODxGO3k+q8ALSyFrcz6lCaGWj9RpPoPfRqPfaGU+hrDrFCu9Tz73soZjzb1HPibY863YSjo+JU45SyMqQT6PyLKunhpEPi3BH34yFEE+0X1W5f71QD6FOyurT/xAPvFoM9JXVEI+ey1TCGKaUT5/1lUpTgxUPkxz57qkaV8+3P/cXaMlYD6tklOvgQ9lPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1383\"},\"selection_policy\":{\"id\":\"1384\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8yJtMqbPRT46u74rlftBPjPP1ZHLx0E+v9b8iEzSQz50uIcfkOFGPgl8nzIxdko+7O5W6nnqRz4tvd4yR85LPplzw3cwbFE+m7TK+e4zWj4QoZg7ccthPif3mCcPzGk+OhuUSQ18cD75osgUHPhyPnBKFwkoMHg+30DkxyHUez6FvgL7NHF+Pgaazs/B5YE+F7wuUbyTgz4I+PONeAWEPkrSGzPanXg+XxdM5vMiZj4f4vLzQW9PPuBwbyttgVM+NchKFGIkUD6++4KggS5BPmcwLexXM0g+FXzMScJjUj435ChWfBZiPnur/I7QaXA+e13Lroncej6oweac2FaCPkBS099BC4k+lKZVJpu4jz4JPPXOFa6TPk9ajlylx5Q+ou2MFHnWkT4DwwIMGuGLPt2LdLi9hYQ+1+WG7NAldz4DzRc6/2lPPpGI3dwMFS8+No1RuHFzMz5hIRJCTEgzPlGmKGU3MTc+u09fbEdNST7Yk7NC6ywwPpVjIDYNKj0+dI/1CE1ZQz7zyYGW2D1YPnDxUoO5flg+DUTgWuAuWj5RSRto945pPrdfgYJ873E+gwxlBoVufj6l9jWTexyFPqmufYq+tow+z9/EZ7FGjj54J3oLr7GFPhB65JhkDm4+t79gEbYDYj7fHqYI4iZgPkJ3zFvxtVw+7ZKLGgLZVj4ln6waqIRbPjD18nIdvWA+BL/1cmEtYD7eVEq33UVZPiE+NHifClg+Dejq6isHTz7tdDXAR5A4PuCnXfUhi1E+eRMU9lHHSD5mLEUFIKNWPsYAuWcth1A+dPLo1UpPXz7i+07tD7dVPrSB0JD+zkY+01girK75Tj5iuIfZF1VYPsxdbopkm2k+Lpn/889HbT64MUSKP6V0Pm+i/jnwIHs+sm6CSENGfz67lvEGMgh9Pm9amUzsGXk+4SlW1kDVcj5eruSX3B1rPlmlEKoQnmY+kw3/KuZtTj7NAqEgNOZCPg7+AAajZUM+fgNQS5yfRz4zwlxf2J09PrrAS/nPFEI+ZKPivt6hNz4bvJ/WOzY5PkbwBzdmY0g+2SMzqbaRST5lRZYCH+JaPke3vGoxTVU+cGqFZmXCaD4S6rF0sT5sPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1351\"},\"selection_policy\":{\"id\":\"1352\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"G6pfABZsOT63jEoC8M0xPvj99i4ByzU+mzweGK1aQz7OkOYDEw9HPgGaDcVZSlA+v7X2+rFlTD4yXBsSpm9KPq4fjooSdlM+Pzzc6wt9WT5ErklMOc1hPuK4AZw/Q2g+PFx5Gy8UcD6+kHfG7UNzPsPo9UTF5nc+Eo5Adqq5ez7PW1sWpD5/PpzY2u7RDoI+xWpx70qlgz4QBtyxqn2DPnv2Zsln0ng+6B5NdwjIZT4KTh7b8FRRPkua2AYLyFI+8i8N0gOrUT4OgcAIKGVOPjPx0rM1+UI+IiRHgfhkUT4Ql8a+r5NiPm0axJ2x0XA+dfud8zYhez4pFHnKe9CCPgVY/btYBok+hWcJGV/Ajz7aoQkDBZ2TPpArOkLC2pQ+S0HE3aD0kT66uhXEC/OLPn1/UOVrOIQ+aCdNqnjpdj4FUXeXjttLPoGrBRFVHCY+REialg9qOD4Vvbhmp2RDPqUgCvbHDDU+NRBPFlUPQD63X8tZkL8yPs2mtXBrRDk+c5h6at0NLD7/tz3vK2JWPt7KhRSFpls+OGAdSzyxXz7dFt7EFp9pPmSP9wHIfnE+m6ELTMStfj4NzOZKro+GPiMMSRMLhYw+FtIyTHAXjj5V84hkvBaGPlGzJuSRYGw+pJqoxvMBYD6L9yobe3pjPiZfjVE72V8+mwJJBSkTWj54rTf21+9WPuNXnLFFGGE+g2AfYYJ3YT7TfZENErBVPlIahmNxu1U+0mUgLo0XUT4Cu6LkpApGPt5RveLWpkA+pe1zxfJsWT6heM+adolJPltkD9I4dlQ+EQFiktSCXD6iyJgbzotSPmz4H4kvx08+vKZ60ZszUD7zXfNgw4xZPlXgV82svmk+Q10/eMcfbz6jQxbVuH1zPlbqV5VfiHk+BVacQJdkfj4SXwnVBb18PmkqZBQneno+Mu+VNN03cz6LL1U5fKdrPtGNDS3S0mU+anxfUKIkVD65/Csz1x5FPkQXMH1rlD8+SiwhzX6wSj5w42Yh2ztBPjLYWIjov0c+HBqrxelDUD7k3XI8BGlOPq7jUyqGvlU+CPW3AMpAWz51KF90K7xWPs2RpLDmiFU+zCVBGgutXz6xDewpAUh2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1355\"},\"selection_policy\":{\"id\":\"1356\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1325\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zeBL8qGwQT45TCc8nXs3Pq9pet79KUE+mUhixMLYRj5S1K8KrMlEPoGjnmgbvUg+p/JuMMYsSz5UVyUQP+VKPh0ChBF5mVY+C3rWDMezWj53qVbpBttiPjJvm5mLyms+LeUOu99TcD5toqhwg+5zPgP6rT6agnc+lHVJXjSrfD4wNXh1Lcx+PgkbxmtotoE+xJLH5Tacgz7e98L/HQGEPuDlksIm23g+sWkhG4U2Zz5Devdb1gZRPtcPCD2fqVA+ceQQMSC/UD5pXOnBsHpGPl6Ns0JR+EM+DXzvuJSLUD7v8Ut68bhiPkIkxGa+HHE+Svl5PTGcej6DSC62m66CPhgc3QM1Gok+YxdxWb6qjz4DmQsWd9aTPgUD4B7xypQ+jjkKqczykT4npbOS/ymMPt5j84Bmf4Q+woEgVmwtdz6nX2q3lO9NPuHDIgxl2jA+dh+4qe6UPT6oAxIRwyo3PsDke4qKVkg+QHJriH18Uz5woz4COFYuPou/TNFxlEI+526KjHB2QD5SQC6Qwy5UPkisF8prOFs+U7u6bAhfXT7Z5q4sMNRpPpKkdaikhHE+GmXw0OwNfz7Bpq9CX+eFPjw0mkt4F4w+FFHNb6/6jT5g0TtZXWiGPh8rOON3Wm0+nFatzhC6Xj7mjNSqxUBmPhbwWsUha1w+ul53NYBeWz66i9CZ1bdYPq1ISFkbGF8+KsrVTeNNYj7Le7MepyJbPpN6GZCmSV0+tHbPeL2BUj5Gn8XB1gBAPqVc2EkP4kU+3bsAF0pOUT6Kt5Y5JX5TPq+e3B1FiVU+8309eyQ5XD6vWT/V7XhSPqKBmS8Ra0Y+onGI9jUtVz4D8fu/Oq5XPjxOBciIF2c+b/QCSbLTbD4QprirwMFxPqi6RAfBVHg++dBLb3TSfT47lyu2Rl9+PiGq6RkQwXk+9gE7Svwrcz4KFBAm4ZdqPuk7zJSRH2M+FLmxEHFSVj4us9ZJ1QJAPrYzJCPZj0E+LCf+NfK2TT46PUfJAXA/PitHrxnt5UI+yJwAMknPUT4IDZdwnWBRPkcT7JY9t1M+ew7ZzpnFUT43qihhWDRYPuWOOV24I1w+dWZKWkglYj5g9ZJdKWRmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1359\"},\"selection_policy\":{\"id\":\"1360\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zMtvLQLAOT4+K/PQUFJFPkmDKL7sEkU+0CDoDrS+Sj4NaERse95APtG2HKax7ko+UWwAvNVATD7DRsofANdHPpAbEqIOt1Y+89OESAzKWT6nT2Zu2eZhPlafHpsocGk+9vD7HMmpcD5VVwN3N4ZxPqXEj6lpHXc+Wm23SBXjez4zKYK6fGB/PodW74I/JoI+hyLiWfSWgz5fyWUy+paDPsfJ8YL/Q3g++yLDOhnLZj4nrvFL1wNQPp3TVrZKVFM+4oA0P9XQST7kxnr0LclDPutpdxFJ3kc+Mx8xjRD9Tj5vK1w7ecphPuHYoibvjXA+nhG601O2ej44ZZnu4fiCPnGuhsUUHYk+NN3aZE+Sjz7erBQY/YyTPoWdbZ6hw5Q+DyRWZuKUkT7KFamonbKLPsDTT428dYQ+3N4A2LPqdz4XlCxLgK9RPlJHbajT5SA+b99+Y0ehET5PuUWvmGUtPp/LuoSgD0U+VSv2kPQtNz4DpkA8yX0qPrX9gMEJczU+5yELm3lpRT5bj5OQZu5XPpwHV3WJbV0+e66lChFSXT4xyYGvhuJkPujp3aIsJHE+NoOYpDfEfT5uujgcYiaGPu+I2LTcJ4w+tBUVWFdxjj7dDOAinU+GPiySLPdqaWs+945N4R9XYz6F2mOXM+ZiPicOmhD0KVw+GxeWosZTWD7ttgGUyshWPm4rkN34Al8+XON6byQNYD5nwh+izJBZPszbY9vbXVA+OIxbkc/YUT7r2baeUtI1PjrYEqXXXkw+w2u2T2hPTT5KDmSXOXhTPvyNC1cpnEg+Kv+WALosVz5CqGlzWGRWPsbOCiOoxks+/Zi7u2WxUj4PLtlNc0xaPud7HTcpk2o+VGpTdkPlbT45ocazUih1PtOdCpdByXk+CrCiwVOJfT4NYtACrEd9PmOEZeX/0Xk+4W45mrkocz4/Lme5oOlqPiAG1pzy02M+D1yrA6O1Tj5Nm9mLxZtNPi2f3oKBdTU+C8Jy1laxTD556Nw63QYxPjlhy1Hg2ko+5xTNsDJVST4TIrC8iWFGPk7jJV6o8Ek+X1MmHC6IUD4K4Y2YE41IPrUa6rXKIFY+VkXwRCuUUD5k2r8gtvdsPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1361\"},\"selection_policy\":{\"id\":\"1362\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"K5htlD/+Nj5TcqxI2JA7PhtuQIZy3EI+ALRuPxb3RD5dH4zfY9VGPsaEfUDGilA+5LkUS1lUTj5R7rgxrOZHPsoZwRoj7lQ+GMsRxwjAVz7F3XZv40hiPsQnLUw13Gk+meDB+N8wcD5VDfJ4+UVzPttEP6MEOXc+iFFvhfdnez4JnABM7J5+Pq8oPSWmEoI+EKdGHbllgz68svnhYmiDPrzqkQzQpng+rnOCNS90Zj58fGTDUlRQPjcvNOq8cVM+E5rVapBjTj69fQObZoo9PoMfsKFoXUA+RgutvRgdUj6DLqxGa89iPq3TjwpFVXA+M3X/SYruej6Ks7ekcXqCPjxp4s2R5og+cYxDmTHRjz5C9t+CocqTPls9DLtw/pQ+uRTlTrr4kT6SB4gx7eyLPs9yiD7CXoQ+7ts2Koh9dz48q0BSf89OPuQsHoxNYiI+mYHjfkIyND58GPbzFeY5Phiit1d9fkE+TcPQ68HqQT49fuUYkLUzPoLFvBpxiDk+wQUfQdokND69837PtJ9VPs2viUUDGVs+FjxD8pqvWD4wrY/b1IlmPmNAruCXYHE+pNG3PXxLfz6Gu4LkpxyFPvoMWiJfU4w+AK9fI+7FjT6QhCey5XiGPrshWhJRmG0+s+qm5ZTuXD70oL2Y83ZjPk/kG6k/8Vo+9hDUMWPkWj7ReHzfjEZVPu4S3lMJBl8+Pxr+JAhrYD6yvAE51jNVPoj42qbLCVI+h1CxQm2OUD51zgBe65NLPg4OS3Fmj04+KoYyNa8QUj4aimkWSTZRPq7u1+125Fk+XtO8gOYiYD68pgyJXNhNPnbMI6w8VTg+kcT7qjJ6UD5shecVC/BXPn939cimSmk+nqo3Plxxaz6fqVjzSmd0PhpHLWHaZ3o+jwfvplVbfT6PKDogcLN9PlWK2EnlY3k+1JeZTJs9cz7RUEKIQwBtPnBq3fuTMmY+smFThxhNUz5BhCRSQbNHPlZzPxF0+jo+82WdwtQKUT4OShog3tRDPsxNma8+W0M+zGBKaK1FSz6rARfGKLNLPvNJwZhum1k+LJbf5uhgVT6nhMfD9RFTPu8rttrgomI+2DF7HIX5Xj5IaPJvs3BwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1347\"},\"selection_policy\":{\"id\":\"1348\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"66+CiDmgNj56yy5mKjZCPorgH5VF6TQ+X9jdjQ1NQz7SpeTPP2RBPpxzk0bAmEs+DHMlBRbTTT6dWLqisTtJPjfwX9TxYU8+dyBT4OYOWT4t8q0jNjZiPthZOH2Kvmk+ElAEElA2cD75RLiBChtzPqK+9PssIXg+92USDqTGez7FehEp2od+PntzcEeCv4E+/d1Ldfecgz5ryhfapOWDPumHAwjs9Hg+qcDoHCCpZj6SXQmfy+pNPllDGJ9WgVQ+kSwlonsxST4Ov+Z0wudFPgN1Z2mjBEk+8qx3jWuWUD5zA0Do5CtiPsNvykhL23A+7mRlBVhFez5Nfbv15/iCPlFeBPks34g+TPxtRcHQjz426ys9i4uTPpPUfE4HxpQ+k5yDXGzrkT5mORTQOvKLPmReS4z0xoQ+35nvP9M8dz7c/Yc0XDxPPhiLE56DFRk+zaJoBjdbMD4ct+MYMoo7PvX+OZ6DdkA+fHz3Hn78ST7JLOVo5WQ7PuNRXVSdjy4+xRYjVI06Qz7PO+i7ubtZPs1/yLKia1w+5llMHNbbXz6Yup+GYe5mPkmZGKVgtm8+gTO5q8hwfz67u3NK2j6GPh6kMowHZIw+mF/7vHBOjj6tucqEpGuFPs6XfGWV22o+Ei6ZD9WlYD492xV5LXhgPkQZ0ZDyx1k+no72NFc8Vz4ON5WwiHdZPlzl/TAR11o+FxmQ62aOYj6YHsX0JAlaPktuYK8tJlY+appq4NC0Uz4ZRXZCmk8+Po3t1XzYWj8+JfAqBW9lSz5D5yRd1yZNPnsxKI4TmEU+pBoygDhSWz7Ufq54hiVJPtqwVJjUME0+Grq36pEdUj73Yehmnm9WPm2zXW6l4Gs+y5d4+a0RbT4VmBHObsFzPqnFhVhDPno+AAcA5Js6fT6ssYlY49d8PsO99MXIynk+4md+wcQ9cz5Zoib/Y45rPv7+hbw7gGM+VUJAk+piTT5CQt3IBmxDPqDfB6wgwUY+GrDSQKupTD7hn5C7GJVMPshEWppWsEA+wiZ017KkOT52/gsIPkpAPjVRgHNldks+m0NFDVGhWT6ePZg+0k9TPiZK1BHohFo+CrowUnm2YT5egPKtg81iPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1363\"},\"selection_policy\":{\"id\":\"1364\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Nz26kEVZQD5HIfRPnSBFPuZqHflKSDk+8dx5GoIjRj4DqdPR1cdFPuqv/2cJnE4+fs28rE/vRz7hylI2/19HPo6FZ3vY+1Q+/JojAPgpWz4NBaf/8RNjPs45oZoryWk+ygq+QkuNbz5gQrPh0YlyPocyJF7fgXc+bG3CRXINfD4Y54QIaqZ+PogjhYKO9IE+mgQ/u6dzgz6t2mq4RACEPoc7edaGTHg+sWxbSVA4Zz74JcGryslRPle0Y9AcSFI+N8Jt0z9rUD4m3YR5JutCPgJm7AFK3kU+0CNag78WUj78Eii7TFliPhJwFI/NJ3E+3/RvKj1wez6wwmoDO5+CPjK3tYbsZYk+w1eSyXCajz45ZeSkFpWTPsa6eHP6/5Q+XnC/lagBkj48PClTC4yLPvx5Fh/5j4Q+DVbBreQGdz41vOi7sB9QPtaLfcUSECc+7iLN9x1yOz5JE+ZFrww4PioK+SgsM0g+iZtQ9j3OOT6PV4o+hX8zPspdKEEL7zg+JK1uy4g6OD71H0R4ZvhbPpFMCyXiiFw+WGhM0IbpXD5SbPJWMKJoPt1htS7SsnA+YcjPP40Qfz7lPBfjvtOFPsbMWHgHdow+E87GwGW+jj5nbOoz6oqFPiyY1LloxGw+fJIFIY43YT4Gb+dKK/FkPn/iE/3FQlw+uzjWG8PQXT5x80yjeGxZPhc1+eUu0l0+MdvcVHpnYD5c2iHqOSxaPgMAxlC/zVU+PrXhkGYnUj79iv/xgYRDPq650kgWzEc+PIT7s8arQD4gCotizWpXPjHYrP+dF1U+fQmCNPhAUj6h5RVZ+CFVPiDhuerjvEA+YJTLD5enSz4+Wcn035NVPoILa1gZwGU+ygPpqj3HbD5RekjR2AB1Pl0tv/dQsHk+qB1RUkYMfj7TgT1GkIN9Pgu8gKxMcHg+zY/ZfdOYcj7dYCKE+0tqPlBGRTVSDGU+AscuNnMcUj5bMQHjOVhGPjfGByJlAkQ+eaY+L8a1UT4Ks9cqB1lNPmtEG1NnwEQ+W1RW2UaZVD7Cfc6SUW9NPgnpX6jBx0w+/SgXNVJ0Uj4ywUtplcxaPrcIDbn5C1g+ZmAPd3iVZT671KdFVr5gPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1373\"},\"selection_policy\":{\"id\":\"1374\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jVWYYui5Pj5u0KSjAKM+PvnhYpHryj0+8wDD1p3rTD6P3d6oCoBFPummStgVx00+JhcQTXaJTj6/Sqdq5SNIPvwzq4kZfFQ+xgjql92aWz6fWJPp2z5jPpMQ79F1QGo+YuNpywgycD71qiPfCypyPq3wJ/KbFXg+dgXDK5W3ez595403QaB/PqH5Ivp57YE+84dl98Nfgz5W+UYan96DPhXHD3ibOng+iZIQU7G6Zj6ZuhukoPVQPloWVTV4uVI+5rLPmJ4YUD6N//GROi5BPq/GnloWfEA+KD8OXudFUj4KLH8CU3ZiPkijJzb11nA+UHsfVaw/ez5MbDaSoxGDPrMdacxYCIk+gLv4F6p2jz6njOSPc7mTPsgaOskonZQ+pSHlYxv7kT7cnMNKJgeMPhNf6Cp2i4Q+u+ZVnLsAdz5gFuDPg1dQPh3lMDs1tBY+i38Vd7LwNT5j+ZZpn/Y8PmcvBJnjvTk+q41NF4HeQD4iEa0Jjw89Pj06WgZtL0A+qw/S/7J0Qj6DKnku5/xaPkM/KxFrclw+f71n66gZWz6vqy6LO89lPgjHLaRqYnA+04m6mV3/fj6G6Ipi3a6FPt+mr4SPoIw+Dosi7tS0jj7QeL9Fqa2FPv0xSdmX2G0+9xu2ge9QYT7gGwvswSBkPix6XCXp01s+1kKmDEFOWj5f9tT55HFYPowu15hSul4+EtrRuH9IXT63rwMrROZXPh7cNruXvlc+jpha8OdYVj6fQpxiqP1FPl4iHDBFe0E+RQzShEohTD7Wm2z442ZgPhynNZf0ikk+AurGXnqJYT6ImEAtHJ5SPivnm1uW1E0+PaIvQqkxUz59Lkd66c1XPsJzggzfWGU+LCKgC8lybj5ON1I92m9zPr2rQb5VgXg+zVG3ihglfj7NJDJYnV19PsKdPAQTz3o+Op/vshDJcz4VZpTW0otpPvPwAQmQfGc+GJD9rtnWUT6X04xr+BlEPomYG8jn6kk+YeLvLU2kSj41UtRtt7FDPhIhC3oNIUU+PVg9dY6PTD6ZZlVce9RAPt26M5H/UVc+uWRALSu5Xj5bxUo/rqZUPrqhHOodK18+NmGIHtJSbj7h3O/C5khWPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1369\"},\"selection_policy\":{\"id\":\"1370\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"7yxkAa8/Pz4kqRlkRW1EPoSRpTQgyT4+bhBHwyp8RT7MiYQqI9NAPuf0tr9iw0M+vEzXTHN6Rz6iYn9LmydKPpG5n+qOxFQ+CTGE3UqYWT6BySiQ8yNiPs6O24Eg4Wk+/JOVFv3AcD7OCRBePdJyPgNwRaDrBng+XzOJMP3/ez50NPB5B3x/PmrUz2s1EYI+NGiVYgO2gz5PacJ7ppmDPqA6xRKU8ng+8+brWKKzZz6tobNSokxSPihShfie9VM+VbiBu2xjTj4QSLDzIOBBPgKdfnqU20I+udyMa6lrUT61czmNXWJiPuwvnQKUF3E+8kbKR4Ymez6z/UoxIqaCPrGJIxP8EIk+hzIYamPzjz5H3VQllbiTPuHktN1E1ZQ+Dg2oLF4Ckj68wgr81+iLPn3dT8N+mYQ+E/TaOcj0dj5MUOycI+FQPoiTJ70vnSw+g9xmUe3qMD4+VR4cDEgzPlhlZKDSq0I+NWujbRUURT6jiuqG9yAxPh8y/iXc4jk+tKhTQh1ERz7/CPK+xbZZPpmC8OOCfVs+M4BgXeH6XT4384f+F3BqPke0OyxVC3E+ELdjtZTlfj60cECtAKWFPmef4Tanx4w+k0XFzDMLjz5tuW4fwXqFPhQKCOpS+W0+34jr95UXXz5hm5N4EqRkPswrR/M9lV0+02qCEt55Uz4lxaih3FNWPtEFiQOVhl4+8AuZYAo3YD6PKKtIziVaPqFTZBaA6VM+BqQHIHNYVT4CmPJUXZFTPvmkwYeXbEU+E5CyxRwaTz5dB2pK7HpUPgjNtNqRplk+K4xMN5HRVT7zM1Rk2b1RPpi4TwmtyUw+JHdFByIuVj4mWUvTF5FVPtLSG0kxJ2g+lcEQC2tSbj7xVlOx0+lzPgi5Pq025Xk+W3M44pIzfj7+pv5UqMl9PkIDa0WG0Hk+G7cLAhjWcz5+Bnyh4MNsPjARlZGYP2U+LNWO3RtMUz7IXbAUDqM+Pkfyujjnvzg+6P33t+L1Tz6oT4NxuyJDPouY0SFlGUs+zDYJTcfsQz6vIteVSfVGPptYQ2gWi0I+PDhT8OHSUj5pRe3QdqJZPpBkIhgWpFg+Ki2/PrcrZT4PDjNx3P5pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1381\"},\"selection_policy\":{\"id\":\"1382\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"M2EewazbMj7ffEn8KFI9Pjvx+CiYASw+JvDcwFcJQj439FdAZ1ZHPjT84LvbMlA+DI2ZtbB8TT51fGQuJu9JPuXKtslSzFM+J35UHW5wWj4baNzf6zJhPi2rCroB02k+iQ4qaO/Zbz6zn6nnLONyPtzECyzF1Xg+YPAHmWBDez4e6aEof/l+PmFrUHdCwoE+CPG1/kaogz6uIvGtsOWDPnW3tGQiIXk+xFJMmCrcZT6tp+PEf85PPsVW/9sz41Q+I690NdqGTT7Ru+APvypFPnXVrqupuEI+hKmNKQR7UT7EHxpOB+phPi46d3EwZ3A+teGjCWXJej4ZgJIKAeeCPnUzd0f9UYk+cSHNJ5+0jz42IZcmT8aTPjqVjxWw2JQ+7/jZcbsMkj7rBLcB5caLPvKxyKXk74Q+FGAUYRbrdj5ppLP9YstPPkCU50mqayQ+hXeMZbLNLj7yAA4XFqgoPqAVfCBkbEY+GlYLYiVNTD5D156M9e45Pm0ce4uVuD4+kMqt9CdALz7kgTSxGJ9XPufx3pLma1g+RqCflhZHXT4VnYbkrVpmPsYXODoB1nE+CN08PyuCfj55sB956cKFPmxxviWX9Is+6TndstCjjT4ErmzS5mKGPuFV71/9Rmw+EltchXXTYT44tZogFqhiPvJ79s0Ro1w+GNZaj8wiWj7BPWWDoQdVPk48U7sSNWA+O0EXvRj5YD7QcU7bgg9ZPupDeDsEaVE+ImeZsTA/Vz5hV1qKER0/PqRWaBK0rlA+J+xtWUyZST4S6dhRnEtSPkcJl6MFW1Q+vyzfuT20Vz5Get9vlolRPqt7T8UqFUQ+H2z20EK/UD7snqRkHXJWPqLTzCqnlGo+oITnXZk5cD62wCovVCB0PkaYoO2mLnk+pj/YJO9Tfj4bwtJ8yZt9PiTVfoCdvHk+NeIEiHqOcj6bUPLVrmdtPmAghWspWWY+Kd0JKrlmTj4BwHj3ySU6Pq4fhp4cBD4+Q13fvlcOSj7yBMi63M1EPkg1mLhM20c+AinyFDdFPz6SGNhf0gNDPvUw5IkZ+E8+ylmSN5XSUD4iG/yrCIlQPo84dBA0GWQ+nTw/IqN+Yj6bFtav8JpjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1331\"},\"selection_policy\":{\"id\":\"1332\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1390\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QkjTW9w4QT4D8Dlh/wpHPrnqbr0d0jw+2odR/p0FQz7IIwUARn1EPjdM40wPF04+Y+37/gLaTj6+LJ6KVpdLPlJ74owCOlU+82L5d7tkWD6Y3dVUd2RiPnx7v8ZyvWk+/Iyy7/2BcD5MgTZ4N5tyPj85XwmShXc+y9sS4QJhez5t+Rv3Nd5+Ppr6hxcdDoI+nzw069FAgz72wbBxKrKDPlJhcOGhRXk+smobfnY6Zz719Ip0zRRQPuNxjoJqBlQ+pvdR1VqkTz7Kq4CFeutCPnisNLxaJEI+S57lVXR6Tz70y5XJRqliPs+nK2ukjXA+3ZmVF5Tnej5+i/uMeOGCPnWb/Vn5i4k+hIFg2ouqjz5c4/US4aiTPsutkXcfP5U+5o9AAXjbkT7IVzi8Ph6MPlQm7KblGIU+UbFAAaq2dj7XAmQp3mpOPm0YGs6pux0+GhySQyhjID4rFl8/9tRAPsaj0hWNdz0+f98fmTNvMT5AdY3ggDskPueYHzwDgSw+7M8lP8VMQz5xF2xFn01WPtL24/ZCJ1s+TKjyvBJsXT493NAHjcVoPjDNH5cfd3E+lGYRou+bfT7fdX1N9peFPgGL+4UKYow+tMsLc9DejT7oSzyfmEmGPgZDrZ+I0W4+lAHbaudsYj5wnah1XeRhPtkf312xNF8+Pd6uwyhLVj7gbczNUGhYPg/scKFueVk+FLEDLprlYT6MhNmqL1RYPkdFDQNanFA+N5AvcWb5UT43XExZuG9KPtvJc8nCRUQ+cJfd8pOpUj5aIMfm9yFTPpfjMQQykVM+mwZ3TlXmVT6cZ+mGxIhQPrBiP0zWQEk+T+eGA14jUj6R2DsGs0VWPl2PpERJGGo+IuTot9sJbz4T7uyhHWZ1Prrcgjgi9Hs+xHgb+4+zfT7xdr9MJc99Pib4jrLDNHk+BR+AbUlncj5dAZFITZpqPtSG6v7XvWQ+8oj3J13FTT6O8KKyl/RJPss9FZveG0E+QjqWwNItRT7RT/JEBMNPPliLyhrsFUU+W5lQD8nwPT5Q7b30JYZJPlhY8/4+N0k+X1I5SYO/QD7lpUihWYdSPuQL7tnNt1Y+hu3jhMegYD6qKvB+McBiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1365\"},\"selection_policy\":{\"id\":\"1366\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"ticker\":null},\"id\":\"1327\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"g+Q7alc4OT4poDqI5rhIPpsyP6gDekM+nmbGcSaMSD4zh5TgOCZAPoHDER5ha0U+hUY/74R1TD686Bul3SpMPocynbekblM+rgQdGiHCWT7OLjMP6IlkPttnFxU9Smk+3gPqdD+rbz6UeclCfNdyPoXrD273Ang+JF3gfnisez5aJnOMRMp/Pq++oDxf0oE+v7UXbqU6gz74VtzO5q2DPus49tfN23g+jKRXXKpYZj44JrLEuWBRPrTXz2lz5lI+GP6geOccUj55Ry58201GPrcM433p0kA+6XEQ9zBCUD5TXSDoVN1hPnZDyV9OmXA+TjBuyiSyej7xIMaWMsqCPhxfZkcEWIk+iK43qqDOjz6S7tmCeX6TPqG/h2ZsvJQ+OyPKVXDIkT5yju3YNf6LPv18gbZoqIQ+DENQtbfRdj4ZEcGJn3dSPtxeSdLXdzI+YMy241svND5jkusdW2MoPjvbyO5y10I+n6gu66AWOT5m/+E2FOUzPgi49YpzkkU+2TZHUJ0wPz5nA8GiZO9TPvF9Wx+GVFs+Q4/o+pZgXj7x++YZp+pnPraKUqFtFHI+lg5yq0xkfz401mZVPHyGPg4O0Du/uIs+0UBUh4KrjT4NaN5AjDGGPowOlfFS324+xOEPC49YXj7VdiKCeyNgPrY0LG8UWl4+lhdf9Ru+Vz5aFf+Lte1WPj+SXutVmmA+0d8mpJM2YT4lK2OCJ3NZPg5k7KBDUlY+0cRoE1QEUj65dVf/8XRTPtrHh6aEuFE+NHGK5tyQTT59SFEbj7RPPkusBjMPBFA+63KE/XIrWj5wcNYKbT9aPrgoPqsuWUk+XysXSc81VD4eqKTc6opaPpTdYiELb2g+ealKXfHhbT6b6/0UyJN0PltM2DloEHs+IRlDMUlafz6zTOXZbLF9Phn2n0Bpa3k+hqxNnNC9cz7yNiDZaE9sPomSXz/X42Y+XVn1DmlCTz5mvv4gxg5DPlTz2yh3zUc+Ix/8sDneRj6Xv41ClzJLPteYrGGu30M+S2SYyZEaSz4WYYLoSJNFPpCeOo8cAzM+/ltmm6I9UT6RlR3Eph9cPq7J4qC1RmM+w3jRGZEPaD7XnMsHxsRtPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1385\"},\"selection_policy\":{\"id\":\"1386\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"KrkX8OCqPz5PKVlD1LxBPtwgsdQxfTo+V7gAcNXSQj578AHlERtDPkEkSfXAW08+AAG2ApW1Qz6b2aTyWYtGPpBa2ntSM1c+PDYka1I3Wj7rBg7kNDhkPnRKS5Rkt2o+ulfK24ilcD5ArK5+KCtzPmNxoHMNUng+NcSFmLuRfD7iryzQzrl+PnoTp7ehEYI+YE+jxebNgz7mkT6/0IKDPp9wAiwcdHg++LI47un3ZT7l47OB8ehQPj0iFcQqIVM+QtSEbZFJUD4gxavEgbNDPkgWfqyzcEE+Td3mD7RbTj63ILCKpTNiPjJIrSz6nnA+OubF+8HPej5xF9VbUq+CPq91ZzfBKok+fvRUcpRjjz4SXZa/HJmTPgLGWhhyuJQ+dMzTPCTVkT6EzjkTK7qLPge6C+D9yYQ+9O3ehcDqdj6rDAIqKHFPPuJCRD6MXDQ+AnudKp1NIj4387Q0abUtPn+QHigx/D0+1s8lVQGqNj7qKW+vfl8yPoF+VVD9iT8+forqYJoySj6tvAhyr7RWPjNUduj/f1w+xky+cDTyWj6TEKvA8WNpPlx9t3OUXnE+VZUT7u66fT66cjGI+veEPvgC2iV0cYw+19L15HPhjj7yAmUhf6OGPkKC6XEspW0+CjCM6mKwYD4XDT3LTL5iPiWmUkC2c1k+ypsVmMi9Wj4Vi9sQUO5ZPnLknpC+7F0+RXEKaiBpXj4n/3+1311YPtV97GKkoVc+oOJXH9muUj7s1PGEkdI9PgmkuaCHzUk+8F+iBIKmVD7Hg7la+jNJPvmqey25Q1Y+b1mbP2XvWj5hOhpS+gdSPg/9knI6IE0+w81cJMsXUT41XMrqWrJYPna1X0G4NWo+IlwzkmbMaz5XgzqooflyPvmrJU6/0nk+YN4m4fzHfT4pDPsKt6h8PsuAXJjGK3k+Z3JEAC/Kcz4TaniQDZ9oPtdthCHqp2M++GDWEqp6VT5ezDl2iLdHPkCKP2sUFTs+iMFq8SzsQz6+qRcH7h9CPv94RYLGCUU++vEMwdq0SD7N4MALcm5FPgQrHS8iIkY+t3qixmclUj5EG3W0UvtaPuYHhH4EfVo+QkdcBnX+Zj5w03tXL7twPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1343\"},\"selection_policy\":{\"id\":\"1344\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Wv0aTJltOz4ZN1eG0DBGPvOuRzgSXDw+EOQWDxn3QT55Z4tYA5dAPk8RHQmucFA+3TAW0cd7Rz5gGyonwCBPPplwkqAWG1Q+MR6crRULWT4gedLoomVhPjcwznwwM2s+d5iaUCVDbz4l+c54AxNzPqUYIwbjq3c+eLZQaZ2SfD6OPTysIVB+PlFPm5qKJoI+dn8RRLX1gz4S2WHcpeWDPoevWDbi3ng+Q5OTx+C5Zj6/uzvhBIlOPrkVju4K21A+9jzK9YGzUT40XAJoKUREPvEReiXQgEQ+ODzwBHSBSz422So9X1xhPm7upHbYo3E+qBxY/Hr2ej6w2p6aDhSDPtEIZ6pT9Yg+piiBvtujjz4hqBt60nCTPl3m5BLA4ZQ+rc1JribKkT7tJaZJ4T6LPihfsFtPyYQ+8PJd6Jqqdj7Bha+gCWlRPq6di9YqIiE+iTqQYUC8LT5DS0celIpFPstWYt/JIkc+9XThxTHoRD5ciksorkAnPo+wF8Z6mDU+nLTxsjeYOz5gdzW+QUFTPnKpCqadW1s+rLUGe7FnXj4Y4KnD7mBpPsVPeDPzCnE+U2cywtBPfz5K1zeCtPKFPlMS8iiFeow+ip4feUgHjj5Ci8596NyFPgSxPV9/S3A+9Xwz3jkHYj5DInVSyCBiPs4taI2TymI+X+SnbFMTWT6Qf84xjABZPqOnB40PKWA+LZylk754YT5lmN/Rg2FWPr6etGbVx1Y+TJz47wLwUT4iHNqGFsQ9PgZDD1HTCkQ+nvQdJS2SUz4Wp0oNJxtXPizuFVWtSlI+edoohZ0hVD4l5z2mUCFXPtcw79eQT1Y+/Afc3QXyUz4X2jTC61hYPluufmlIMmc+JJj8N3LVbT7dn5H8mPJzPsV2RTbByno+C+fYKYTKfj5InC1Q07V8Pi0R7BnH5Hg+k2yWeT0CdD4XZqZ48lprPqzRgEqPM2Q+U3U5mgKGUj519DRa1dc/PmQ8a9M/ikk+4p2xbxUgRD4nDIr7xmJFPo9avXtKuEc+BXbVTfOuTz6wlQIWb4E8Pi9T1nUyNkw+6cXQRWRmVD5XVOFpq6hBPhhInTnBrF8+byWuhj/AZT6QlYZaTK9gPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1339\"},\"selection_policy\":{\"id\":\"1340\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"1vdtixptRT7B2ypEd3RBPveZbGuHJzM+qJN/8e2URD5/Uw/Sxy0+Pjjayk2WMkg+07XB9a3pTz4pt1hXRKdLPtF2bw+POVI+WQuBz0aBWz6hJ7D0MQ1jPgJq69+kKWo+fy0376srcD4cuU1wSLRyPuw73wYwsXc+vgSrb5NZez7qkFrRvh9/Pk1AtaZfJYI+rnObSK2Kgz7rIty5y7GDPq6H5QsRdng+Wx2M2APIZj6avRCHZQhNPqTLsM/rZlI+3Tgx7Z84Sz7MYD6tKARFPvR8Cpgdi0Q+0lMyphu6Tz7bAhQdkbliPtKooX0DiHA+J4YlQ0Z2ej5qZ4HgTx+DPuOHc7HI24g+ihQn64mNjz4FIhWDlZCTPsKnL/LztpQ+fFmBSqjjkT5z+h6FIZ2LPrFTpqKpeYQ+fqez/37Edj4NCucFEeJPPp4pKobeuy8+ONpAYEy4MD56/dItPlk9Pm++zlWLwzk+nI8QaY+hRz4Z0Fln558yPoNZ9lE9K0w+/KMUi0jHOj4hX/Ytm3tWPhmFaw9HO14+7pQm2eD8WD5GcvEz1tBoPg+a6TQl3nA+MPOGvMAGfz6qFgDcex2GPjl8WBDnkow+tsEN2PvnjT646g8m40yFPmErlBmq5Ww+6QjeLb5iXz6w68KH+Q1iPr4TYAAslWA+GGR8MMyAXD4KHuoMWcVWPqs1AkzVc1s+IdIu8+OQYj7lZPuBGLBYPp9GB0XXuVQ+rpbx7hdkUz4hausEHOI/Phk/wPZdDkU+GZG+iO+bVT6ST728Mt5RPh4amco5iFQ+Imlq5wDvWD5LRAM993hXPqWjEtfPE0o+M2RCaH+vUD58+nI6y99VPlttmrYeFmo+ZSILAYndaz7eMwYDZJh0PlIiP+7Mpno+7cph0fTkfT75+bkS9Il9PkAO0oA3Lnk+NoE8IIPacj7irZ0bWHZrPg1ysxXZDmM+K2AEOo8MWz4dQuNRzjJLPlWupwW9KDU+5ZDlw7bIRD4ml7cIWE5KPtZMc0PK/j0+RB/dZMVQQT6gI7IuWJpFPg8Pvz2N30c+Sn2+lH1HUD5Dr10HnZxSPkWNR6B/3V4+rerF41FIYz6u+6NstxZkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1345\"},\"selection_policy\":{\"id\":\"1346\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FfZFFMgfQj7+HhIoF4VGPslXTYkhQzc+HWWfligDRT537bRcpApHPg5AZcht2Ek+bc0LLBU6Sz6S0d/UePBEPn+ynSQ131M+qfv2ZlRdWj72TTP0sCliPvm6u1fTYWk++Lv8aYZAcD6HCwxca9JyPmDR0P6U2Hc+lO31MgHYez4n/Wk88ip/PlDPTuNA5IE+cTKVrV+Ugz5L32NBaLODPgsK9nNk53k+FsJYk0ZaZz4IkK5cRLRNPmrkFTsz7FI+7ccpAQFZTz7qhtgbQeBEPrJig/5Z1Ec+EkktETztSj4VbAw7OiViPujDw+iuh28+LXRZ39Elej7YCmJrKPuCPsCIDYtQ34g+lxKDRHysjz7TCcMZMK6TPoaABFDT+pQ+t14WfACZkT5KOWyq9KyLPpCCH3QfZ4Q+4jt219Y3dz7afqJ2hRhNPoCMt5WHniM+6Hm2SwFoOj7pw9/w7ppCPuQkCaFU9jM+Hf1NESdcQz6/3H4Y7sFBPvPCPGkynT4+QlBM5PNuNj5o+EFIFEFXPvtT+WQLQV0+pkrT7XPLWz5GRPV+b4FnPqvAYJDWVnI+reRv7RG9fz5ioDF2BRCGPv66DVs6aIw+8L3TMtEMjj7cZ5ghXv+FPkgDm7wsjG8+SvWgDvZnYz54DkxcuG9hPjfkYG4j0Vs+5Z9baa/WWD4VjHJBdINVPg65eEf6NWE+glDYc5EXZD5L8T8ms/1XPnTYHl8h81I+MfCmbmF2Uj64pffs8UtHPlF4eZuMrDo+1zyCdGZ1VT5/XDHqJNBVPrz0ebwkAFU+To9cRUvgWD4bHnv7K59TPup4I8DF4kI+4VcdI/s5VD5yLapDRe1VPonDUu0/xWY+PpufDQPXbD56WGywXb1zPpVq3ytua3k+H2cl5HfdfT5vInxTHG18Pn15h00b5Xg+Yq+wDPfkcj4b9gTZtaprPi0PYBaBUmY+3g1Y8/ZzTT7ZjbIrxDY6Pj9GzFjGU0k+Gqu8/C3mSD6kjtejXghFPiWAQW+BT0c+MI3eweVSOz7s9lyZEBNIPuvUD/OznEs+d+nPx/hFUj6ijlbZdTxaPqPx6BEye00+SiYA7VL+XT54iYb01/hxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1377\"},\"selection_policy\":{\"id\":\"1378\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1324\"},\"major_label_policy\":{\"id\":\"1325\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wp9foWnMOj5pyxaLnQYyPo3TVlZUqz0+rRJy2xpZTD5eh+jfYBlKPlVbXS+ujUs+hdsa6r8JRz4GoMBJgMFHPsFBIp8yG1Q+s5s0cNoUWj4HdftvHtFiPuxWFp1w+mo+//xBFdZdcD768aJ0/kRzPn/lidfb/Xc+bH7NC3NhfD4ShxnnP8B/PmGTd1tZ+YE+e2qTf06Rgz5ms+nqD86DPpT9qRafpXg+u9C+AQT4Zj6X7BnDLGtSPsVPgd8Tx1E+vE8FAxi4TD6RJxN0de9DPgVW5gTQPkA+3soYvRDjUD5t09u9nVljPh/Yg8rY2XA+8ZhDMGUmez4p8kaxDV+CPqG6tqCNDIk+RltqZD0AkD64h8bzc8KTPoxBmpHGuJQ+tPrVWrvOkT5Llt6jlg6MPvTbvHhBsIQ+3f2l2kladj6iOFAqBt1MPiwDM6lSxhw+MqZsQ1BWOz6Olm/MAjAuPnOmW4qZITw+MJm3zTMERj5xAL8D4I4wPmHCurHCwz8+REbAQ+P4SD58Pd2YvVhaPl3B+oFdQVs+wnjYPMh9Xj4CGelkV4pnPqVy4l2aHHE+WgTNzwnifj5KHMkaG5eFPp49Vec//4w+CDw+nRsvjj5Yxdqo0zqGPt5mLJxL6ms+wHFxasQjYD642oGjwKBePhiGw05ruls+5rpLTPREWD5CJx3b74xUPvtuQWBcVl4+TFMJ7onFYD4Q9nQ3vJ9YPiQ5VI5wjFM+xWYus78WVj53IKqJUf1FPr/pcXgFF04+1Qrq+unEUD5ZCsNXfLlZPqmUTFChPFQ+unmcatdVXT6/4HsmS0NTPo2fG4Yf70o+waz6hPteUj5GNh1s6fRXPtEwwGBFc2c+NITGu1bEbD7PSas+6ptzPv9L4DFtt3o+XBEbgNX2fT5ZS2ZeQKl9PqY2AQKWuHk+6DiRUO0Rcz4ifPlRHihsPjFMkMfndWY+3VAB3k80Sj7XzXgWwy9GPlDXTRqS+kY+Mm4kmJaiSj5F1JIGEOJBPnGaUXXZIk0+6WCBJgaZTD5kA3x0DIlJPuJIOFjX6kU+zO/y+38eSz7nM4mBpSxWPuYYjPyjIFg+7Ujg84vMcT5CNcyb7ZlnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1367\"},\"selection_policy\":{\"id\":\"1368\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MnHn4R5APj7zq33JJt9BPqB26Xx8qTo+vNZJuq/uRT55a6BVOP1DPkHfInSOhkU+Wu7r16U5Rz7uj2is+VFKPlKKWI8VB1M+EtGFLYRSWT7587el4dFgPjGVQ2dQo2o+wJTacI4Obz6vQoCzRxZyPhHSLcWc0Xc+S0PTWhl8fD5URlfJnzx/PtzNPeXhx4E+txI1vVlBgz6EOx9n2+WDPuCCQEpxy3k+uz4mahN6Zz7PMVlENidQPhkfPJHBSlQ+xECH9XlgST7pnXFI2Q1GPobhzf4Ec0Y+i6phQIuWUD52le56jE9hPr3bax0cAHE+lt3CJ5rfeT5SKO5yTzWCPlH2q7o1IYk+Pa4SAaz2jz6SMpAdB8eTPryHKOhXz5Q+WZ3QHH/akT50zlrDvM2LPojqLXCywYQ+9wgWkdzxdj6SyKMaPvhQPg4bfJz+Qh8+7PVbcWj8GD4vzR22rbsrPpqDB4qbnko+IsJt8qA3Qz4NXhPIbwwwPl9+zGOZ5To+CM5TF1LMQT45kgxLGRxcPrh3D7fR7lk+kGWMVI8LXz6MvNE2ZrdnPl7l0GtLsXI+ywtTdVGRfz5DkcVbHKaFPom/E4Z7gIw+5AZ30e4+jj7okMT2SDqGPt6cnQ8owmo+sl/cM1KzYj7dR2MOz+BhPhZ5VVkXmV4+KTUg0gGuWD4RGtBKDQxUPtVK9zaRDV0+Asw2zNYTYj5srEObBIVaPiixefwyYlU+CVhwck9KUz6wtOdYhew9Pivg3OQKdUw+RnJFNa2hUD4J7G0gQe9RPmleIgWH41A+Hsvqz/OdWj5nTsMiUAxWPkG7tIQ/JE4+3OY9UQm0UD5LkWHoAddXPgFeV1CoBmo+MnIx6a9sbj4/wHWizBZzPhe6TYOZBXo+shBx28DBfT7HTGXy74R9Ps0G3m4lE3g+eKBJ8HAOcz7Ao0PcsuRqPiiVNc8ZPWM+iWk0zIdTUD7edryFqvlKPiP0TFx+tS4+GIBX08BzSD4W4xDBvmNJPgimNsJxh0o+w9DFGrJZST6lwZ+eWUNDPpUzVaXG6E0+zGa3wWasTj7t3ORxArhWPrTyFSLtrmY+vWWTeXYpaz6p6skf+dloPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1335\"},\"selection_policy\":{\"id\":\"1336\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1327\"},\"major_label_policy\":{\"id\":\"1328\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"UiMxCKRkQD6rjq4Hw/5EPihKlFTWpDY+ppIm4+95Oz5Py7IJaydAPoe5x1r0rEs+wpj70vtcSD6XH+EerFVKPnhJualDIVQ+ukhWf5iNWj4B49E/AJBjPkA1AFY15Gg+tIHi9I7ybz4USMxBR2dyPuAWra7lj3c+ok1gvSviez7uqY8vOvx+PlE0bn9ctYE+0JEJtm9pgz7Qn74vJeqDPjvGOXB/wHk+P1Mv8vUPZj7WtGhGUnBOPgjuy+Kxh1E+E0C+bGbQUT6SALPissZBPrXYUS7cikk+uBVxEULUUD5XH6BKp4FiPpzdDmetdXA+Y+XXZ9hPej7YxfgG0DaCPhksMIViB4k+opHP+i4LkD5fpX4NT56TPn1+CpTgxJQ+Z4YGYBzKkT7cA0MqjvCLPjiOhHpRhYQ+3/4dtOWLdz6tFMwbrpNOPsc0gAvM0hk+XgI0RMhMMD7qdhgjo4tEPm4ucLKgGkQ+gEgqhi09QD6BQ/wVDxhAPhL0zWnJQjs+w4immqMFQj5K5utS1NJWPmY9kAambFs+7Ll7ZqroWj7/bjY3yDhqPvqk1ERzd3E+sZM4DMxhfz51/ZWyapiFPjovOdADJow+P9rKNLY8jj62N6qZa0iFPgPNHlRLmm0+F1HQoyYdYz6bd66la59iPgZOUULrc18+uZ6z7jW5XD5g/KkLX11WPr1dUZsZ2F0+yXYl3oqpYT6ZVXwnC01YPvEGw56i01I+onyLe7i6Uj6kSO+3cAQ1PlR7p8NZszA+ZFUZN64vTT5edzCXnyJSPmZ4AxMMH1A+/UAE3RYxYD5+hmr6N+pTPu/Cx26UpkU+LQcq7tw+Uj4vNcOekD1cPqTysE0PoGY+Wi9heH+obT4Ge3YFqjFzPsC8Jgvwr3s+1BkNExxnfz4aX+Ewbh9+Pi/fK96/W3k+4YAvxT+Xcz46suV8gmxpPo+VFEbnF2c+3ka8NjAZUD5gBKZHKDFLPglaQWIaREU+cWSu1XgeQj6UMhiVNl1BPlBgckFOdkU+/fGer+TxPz7GakyDxYhBPrJO55+twUg+sr13lnsOUD7mu2/rRqJXPgOmcKXiPmE+mElQuGBfaT6HzsdHkwlkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1341\"},\"selection_policy\":{\"id\":\"1342\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ab/hlNdZPD5hZVtABUI8PmjxOkebZj0+7U4LWDt/RT7R6LuhXwFGPudKlg+fWUs+hi6QPFjXRj72lNj3qaJIPk09t+j1D1U+0lDS/T37Wj6tuS/+doNiPpKakVj2sWk+pwRoOxGnbz44fdWeQ1xyPnzX7FQlZHc+RuT8QSJefD762ODaQkR/PqD9W9tGBII+Ov3aUqpMgz5QepJk/aODPk4IdQ3Oqng+VdrWwC5vZj4wq1LToW5RPgiW5XIVKFA+0m3YrHVnUT4B2Je2Rrw5Pribh+DLXUI+gZ6I6hBeUT50BqwJ/O5hPm7GktGh83A+5prm6wzwej6INOtPceCBPievYuit5og+EAPuCQmvjz72fCfBuYeTPur4kqjbw5Q+nHM2e1blkT6+1dVHXNaLPqPJG0P7mIQ+IsDKjl0Tdz4Us4GurMJMPmuQXVI9Qxw+0bjj+xVjQj6NR1szqbc8PhlnSwZ5QDk+tY59Eqp7KD4M27PGxqgyPjHkge/8zDY+KxrBp0btOj79pV3LQI5XPtf2xuYE7Fo+eNZx7Z2fWD4pd9pcep9kPosMOer12nE+3+tHBUj5fj6kXyuif5CFPrZnPU18Now+pOp2WUVkjj5DpXbH8DiGPpqmtYcFQGs+x3uHK+92YD61zJkCExtjPtFD+n9FPV8+nIbRV2GeWj6xGR39qOZVPqpglDVOI2E+Y9642S8pXT6Bq/xBTNVYPuu7k+wGyU8+TUIETliqTD7LB/4LPTs1Polv/oCAqkI+lPPqdfHbVT42eYhYqBBRPggLhp8VIVc+RfYjMwV+Wz6PrlChQJtMPj+WQVZ+jEY+W/TUJ9RPUz6xcDbbij5aPrHKb/R+o2U+MBYqhVAcbD4L4UGw8vdyPkV7U5a2fXk+opoWZaFFfj7ZBmc70mt8PliB11iNzHk+ZJDNVwROcz62WL6Npg5sPi92Tiv8nGU+nqI2t8rGUT6KDZJXF6U9PtuR9VNRdUg+JporcB2FSz4u9WbehllFPi1nvhuw+1I+wVGX+f9EQT6xd++JOGpGPlHLogeVI1Q+TXQYjtSrVj77IEV6Tr9ZPtDcC/fKWWY+8TKphUlVWj5tEwHqvoFhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1337\"},\"selection_policy\":{\"id\":\"1338\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gQHj9XTBQj6oJMwaA9JAPh5JBGDeXDs+eYHAWa+tRj576TnaMNtCPvCnt0Kx70w++kI4k7bSTD48ctRkaGlKPrekX5ubhVI+MZRnc2NHWj6hQFQ6PoBjPgwqEekLmGo+GwbJwx4TcD6RUJUz/HZyPhYpHcN5vnc+gUDEk0K2ez6eEHzGrCR/PovXkb7MC4I+nhVtoMCtgz7/D3p3DMuDPn0rkcdJ2ng+gv4Rds+qZj6QjQ2DuZRQPgexJBoaLVQ+JMOTyQ73Sj51T0mF5vk+Pm1YmNAZtkk+rKhBgf0PUD48ONIR2MlhPlp6MvjbXHE+OFmTKHSyej5zd+2mCLqCPktWLBFsDIk+3g9aAbmrjz4rs4glTJ6TPoZ9RV8c1JQ+tFl/9b/okT7YHKuVJNaLPiNDc4ZhqIQ+NEnbvxePdz4CX0jS5vhRPsIc44GVuCY+jbtMrqChMj6ukBBFoJJBPpCe44egUz4+tArmHtGTTz7b4juKUNVAPth9sdspED4+yekgSMXpPz42XRR/3ElXPhFLm6QTuFs+OzBjSzU8Xj6BD5WZ+L1mPtNHaoejNnI+zWzzcfROfz5XKIPdR4uFPh9MC+TdyIw+qnAROkeHjj52M5AwfoSGPmoyXu2Td2w+Ws0HFWudYD6G9p1nBtdlPlDhktuPNV4+4X/8gYPaVj5qBUp84HlSPp/j0vO+018+evyZ3GvzXz5ovnGqVP9WPspL9iwYMVM+54EaaInvUz57Fws2iMU3PgtWV5c5MEQ+IiISEtbzTT6EpxJS/x1XPvkoIcIqm1M+DXuR5dUPWD6kZkf+YJxUPvyLhyIAR1M+DHdIUJIUVz7QviELffZYPs/hZw/PtGU+0ydNPXOEaz7/CWeBRYZyPgrcGb0v9nk+r0qmDeEIfj5mmz2RmdF8PjOG5GtxKno+BnpoXBt7cz4+6mZLg05sPnzgH0FJjmc+9IQubAi8Tj5VllA0CqNGPkw5Dc5QR0E+KUfvbgfmRT6GgcJ7cGtFPpbxlLNvAVA+ZjBh72W5Pz7jVLOKKJlIPnc3LdezsUY+4riUKLTeQj4PoncMclFIPta1cm2zqlg+9TxTR5jkWj4jeWXYzKpsPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1389\"},\"selection_policy\":{\"id\":\"1390\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"WroC7TIfPj7Hqr9TQvZFPk/jMm7HeTE+M9XweDP4OT61vkaaWbZLPpqieOEu/ks+5AgM/yq+TD7ykEVQRC1IPreThieK4lM+OenV5XEqWz4lPWXe6BBhPnfxUM9SrGo+ArexU2wzbz56GhSfZiJyPr/tnwwL13c+C4jWeNXtfD6SZDZrrJJ+PtKZdCRI9YE+tfy5Odp+gz75iSDkjbSDPtIr+3bTRnk+JwS9ZJJKZj7Ont0hhbpQPm+TBRxzMVI+DX7+mkapUT4PVY9jPWFFPmQUFRTO5UI+2xxOTVZgUT7ESe/D/dhiPj9eOPDSjHA+kQj263Btez7ncJAz2aeCPmVSeOmnmIk+CkQ2y1W7jz6jJZi+xJSTPjXny2O60ZQ+nSIekLbNkT5e95JwN5KLPv2R8n0yDYU+1ex7gyB+dz7iegcEFpBQPl40NsCOxiQ+SZFZAkXnNj49UFLEjWpHPpyQLdk7EUQ+A/fb5ggJPD4lIZ04Um0xPsSIk8bXR0M+tlKgp2vRQj44mwkpQsZcPi45bTsfrFo+0leDyLRRXj7uT2v/m95lPtwrHzPoQXI+zTNo2OKnfz5KcwTkW2uFPhTeTYO6dow+SmFv1Wp3jj5kzQdMbPqFPsdaTn3dvm8+paw3/W6uXz7/77xMkm1kPtPR9m1bR18+I/3hGYiyWj6zrvlvIjBZPnGijtiTJl8+PfYnhcHtYT7nPSWwNpRYPpdzHkHvm1Y+7hdaVukxVj5jgXEua+hCPhdmwlmreVA+qNzNfkakUT5Pq3KDMBlTPh/XbXe8A1E+nM7hq/KuYj6lRul4slZXPkFSTdDG60g+xZ5fNsebTD7/Fga/hvlUPgSNXLIR82Y+WBzMEysNcD4yChV0Iwd0PukfUfYxfnk+pjVlsdsqfj6kJA1IWk19PuhCZzJss3o+6HSkEkmzcj7UGnWWhJ1qPu2L7mVwa2M+MyRs8feFTz6bML2HqHc+PsCtxMjzOkU+7m/kE6ySTD4MolFJGHxNPiv6fBllJj0+6+LaCkv0Sj4Asa9qcNRRPnAwNc3340o+Zg4VpWXQVT4oYorIHi5RPlae5rx0olk+2gP6c2NvWz7O4CZ4kIZrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1387\"},\"selection_policy\":{\"id\":\"1388\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1328\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"t8zv8oSiOz4wkQNGXWNDPq5CZqY8NEA+5dkkQkc7Sj6JJdfYOsVGPv9NsKoQ3U4+U6AbDJJgSz7kCHCp9s5OPl8eGhDJv1M++Hvxp5/uWT7biqiCWaZiPimKDfbK4Gg+N/o4cesCcD5wx53Kfs9yPoCFoA8G9Xc+F+/fEm0BfD4DD5r12tx+Pso5Kvfo0IE+CmD4BZNWgz5EPdZeYByEPifhGAtrZnk+iDMKAEqFZz5xpSrzlY5QPmDok/0u7lI+VlDAGSpSSz4ZFsNKOXBBPl8S7H6mzEI+n9mFtZhgTj69VIJeYuBiPhTb9F1kPnE+6eUDvrX1eT4DW73hEVWCPl7iBeeN+4g+LhZz99xkjz70SmFSZKmTPvxPiDuospQ+xw+oJRLLkT7RrlTmyeKLPuzvx5WINIU+EIpdws8udz7CSn1DFtZQPszZHqWjxx4+bUL5DJQEIj7FbF7JsTI1Pm9+FIU2DSY+7xdIKbvWQD6JvJAAVnYmPrWsceWmRjE+i0X1BnrnOz5WDTdQD4BdPgRbNE2h41s+t7dYtLzaWz6uVCTsiGJoPjkliUg/CHI+hAJg26Lbfj5TPcjjjkWGPrgA1gTrgow+oleO0ZIYjj4CmW6Jr9eFPptR+7k6xG4+sXw6CEylYD5M/nzQW0liPpPhSb6qj1g+9XcB+X6pVj5WKCZYkshMPn1Cqab5cGA+R1+ELHmlYD7BA1pa+hRXPsL1GQk/OlU+edomrOLcUD5CA+RBUq9IPr3zZsdA6Ec+XbgGNhS0Wz731SqMLJpVPk0Dhci2q0k+ifPD4aCmWT7tqnag8SFVPpC4ne5gekk+QxR7WwDGUz6sTJNjuRtZPn90kbxtmWo+DdZz51v2aj5cAJX1sTp0PgEHsyFg8nk+UiApwk7Nfj4M+SCdUA99Pi6JyYAY7ng+3MaGI5q2cj7TELVbaiVrPl2HT8sjqGQ+TCwgQcDSUj5jtcNoXlJGPvSAmMbdCEk+w5YgYrZTQz7fG9gNk8hAPi3D7Yo/XUw+C825QRo2Rz4+zO2iuqc8PpUTJriUOlE+4xPXLTDKTz6D6zqftshZPm4jm5EiHmA+g42ef7NYVT5UlfhoQOx1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1333\"},\"selection_policy\":{\"id\":\"1334\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ikFINGY1Qj6eMmeSXlY9PtSjcKF+9To+kASXCfPtRj6Y9In9nVpIPgfx2ywlekg+BkYD/U63Tj67L0CejcVLPkYiS4lzZlI+5A7AVfMhWD5nFeqJZDZiPsmXsyFHIms+ON3wvkW3bz6zMQkYa25yPhslsx93CHg+IkzZ9TB2fD4G130sGC9/PvICJmdoH4I+pbHcpAitgz7BMtnZGa2DPufTLIbPTng+lwxJRz85Zz7nwNsRQR9QPgHtVrIqYFI+RAYVhXIjTT543HiakQ5BPtcGYpdAJEU+O1fDS0+kUT4xXpV9aFphPvP2RovFS3E+GW1lPLF4ej6wbp/WxpSCPq1rAjA2GYk+W0cFb7DAjz6VbohnFq+TPoVTmbF7kpQ+z5+PXNLFkT7MR1vXeKuMPnRhP11no4Q+uxBF9feddj5zBqXPQqRRPomB63qwTzQ+qH2J8SrOND7bBXRw+EVJPukxmrhFpkg+AI7D1aphQT6YLv59UStDPsSDl4NzzEs+U+pAF3KYQT7Ja4I9VjRXPnIjX26+xFg+Fe/Jsc+OXz5LC6NX0ZVmPiE6Pv9s/nA+HH0HNVhbfz7NNaAuEnOFPra48103F4w+ebAvK7WDjj5zpnYWOTWGPoDsyO0xQm4+KrIxvf9eYT7/ESsTLwlhPjXI5agHvl0+Bpu4fO7tWz7aGywWrW5ZPjauM/yQPF4+YY1jbk+fYD7cSpWPDMZXPmEW7zd3r1Y+yhebS5+eUT5+nHISKaZAPksPqTr7sUs+ZV077RKEXj49WDML32tTPpQEXAOfIFE+DnhedInCUj4X/uccHZ5SPv9d5NFWU1A+eAkhzx7fUj4kAGEhVlhbPunx/c/iZGc+bfa8sg1zaj64i00XGI90PikAqRLl9Xo+neFx03pefj4jMb2C4QF9PmBZeMjXV3k+eTCUffnPcz5OxDZM+CZsPj/krDiypWQ+p1+GnFkPUz6zHi14e3tIPtBBZ17ww0I+GTvzKEFmST7eBoP1mw9EPsVDf9uTmEU+GRyzPn0tRz6xmjIuE+9IPkFQC2Y1TlE+NcDbgYWdUz4q88d40e9SPk40/DbWNGI+QXWJCxVFZz5U46kEZypwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1375\"},\"selection_policy\":{\"id\":\"1376\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"c2b26bfe-53e3-411d-8109-1306462bd5c3\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"fe1e3c0b-0d8a-470a-ad52-964b7081b696\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"0b5e5e24-d9c5-49f9-bd20-9d41f04e2882\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"da3b2f2f-9d43-407f-a3e6-75699fc55fab\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1767\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1799\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1767\"},\"major_label_policy\":{\"id\":\"1768\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1774\"},\"selection_policy\":{\"id\":\"1775\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{\"ticker\":null},\"id\":\"1770\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"Selection\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.01, C/O= 1.32, [M/H]= -0.32, T= 824.72\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1768\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1771\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1775\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1770\"},\"major_label_policy\":{\"id\":\"1771\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tAkmPtTZUT6DeMp7aQBVPnXs9BNjmFM+ZwEdJXFmTD7Av27yw9ZFPqp2LoYNxzo+im8a9aClND7YMOasEMooPu8YMzaY3zk+J+2m93PXLD57AfwWPAMxPmOaWEr5NTM+EHAIqsbmQT57/EpL0iNAPs6Rz6Uj/l0+C1OxVlAZZz5Pc324uaRxPpwIFODmKHY+kxViET2UeT7zGMoRCYF4PhB4sD+hYXQ+hMvMSFjTaz7ySERvOMhlPrqYFA9lamA+D3m4Gjq+Uz5jhNZre7ZKPtLS//JTY0M+YfPS2Ao3UD6tu8cIxYRWPtNx7E1NlVA+lxqyg0dlQj7NSHv9pfNFPnxZS410wkg+bfIGkPcUTD5aFqnrhQJQPp7wchQ5FVQ+7ISDymK4XD7/ZZMDkABZPqM494sMSl8+hGDRVq9qVD4qioGTXr9cPobVeDAKn1k+KTbMrDsLZD5fj0oN87FePgWgUw61YWk+VYW0IxpEgj7TeTQtli2MPh/GIAAWXoo+oc9YIN9Zgz5cpyHuNY17PmZfw4dKJXA+ZS6QxLy6ZD5BFTqlojhcPgep2b5QiFQ+/bicvwlVUT4iWwztTpNGPlSAWufXCzk+UakWZBVUJT72vhzLbDUlPrha7lhe9yE+JoZNHgW8JT4WCgmmbnsbPlffe0i3Dh8+PnE31u0xRT477P1ZquV4PuJsWx4l3IU+XUI7gX6gjD4nINdJfwCTPuMiJinrWZg+pFr0dOp4mD5ZGEdxM4GTPpTzDZOI9pA+kmSt087PiT6+7SW1B8iBPu7aeBAVmHQ+L986+/UiZT611MgOr2JRPpKJ6PpZ6E4+UG8Kq+qbUj7z4SdmzzNXPk64WCNuQlo+GJ7d4nMYVD58AOPeUxBkPggvUyl9rHU+GEvDu5K0gT7uvyPyP8KBPuAS0NEWhIA+B3eya7C0fT43Os/1krt5Pugomjk8GnU+Zd/BVC2wcD5KDlpr2GdrPsbmnPPKpGY+qWe7wTW9YT4UM59/t1lbPjAW1h3zV1Q+w252MJ95TD40SWCeibFIPjIdS/R2cEc+8F/Kl5WJOj7Elt6D8O9DPiraATZMBUI+QWCWoJ+wOz7PdZOoCBgwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1798\"},\"selection_policy\":{\"id\":\"1799\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"da3b2f2f-9d43-407f-a3e6-75699fc55fab\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"0b5e5e24-d9c5-49f9-bd20-9d41f04e2882\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 114.72, p-value = 2.02e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"0866d132-3af4-4a07-9724-ac39819b237f\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"0d658273-79c6-4667-8358-f541b7eef483\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=114.72, p-value=2.02e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"NImIRMXpWD40j2qd+G1dPu/8FkyKeFs+LtfuFpnEUz45PoFnITxOPlxcNC6uc0I+ZgIZRrpIPD6cADPta+QwPlx/4AMqxEE+7qthvWy6Mz6HJTumBDo3PoNnt2cFMDo+owYtmOmYSD7+UdzLLUFGPkFPvFM9y2Q+h50+l7MEcD7IsSRck4t4PpJlV+rI3H4+eRjWmA7QgT7nEuErugyBPv7hdP2bQ3w+YYN5Mas7cz4uKCTJUhFuPhxxCKHayWY+GAeVh0tLWz7diR4mem5SPh5h5xYdkEo+6LCTlP87Vj4Mwj0i0ixfPp+G9gwPEFc+n8DGiNaQST7LGCF9hXJOPlhregIzI1E+ehyTiC1yUz5omeJhyy5WPg+qb2Toxls+LuJMkTnuYz6CmrY750lhPkn3YfaJoGU+yo29gB03XD5eC04i4PBjPvUCymcWwWE+s1pk/maraz4YdAoLpDtlPtY3n13UoXE+2v8tGTmGiT5ul2Mda7WTPlMtCgBuXZI+0dXzmESrij78t4tpSd2CPgWNyK1cCHY+kfWlrS0ubD5YheVhI0JjPuq/TWWD9ls+b8OfYSreVz470DkAwi5PPkOEtRE6IEE+OX2xVOQNLT6s5cb0bsUsPgxIJQm9Myg+ekbMQF5ILT52IhcSI4MiPu6tuIR6FiU+wO08d1r/TD75iHf4tBmBPm6jt570EY4+e84OEGXJkz7lu3POhGCaPvKYkHBkA6E+TP7FhvotoT42Xn84anSbPurG23vnlJc+lN0Nr57OkT6S5JXhoWOIPmTKajOhCnw+HjYZWDGvbD4uFJPGxJxXPnvcT7I23lQ+3J9E3/ohWT6PxQicYoVfPhQFSo8jxWE+sq1H+vAkWz5kfgA+hIlrPj4JLrWLM34+pi1VtI3/iD4qu+lM5zCJPngRI395fYc+vbZmP5sghT7sqKVe+kGCPpNHfDPA1n0+QMKj6p2Cdz7hmGu6c0NzPqYqb3F3ym8+omstvibOaD4T2D0e1wdjPqlvuebKM1w+oDQza+WcUz75U49cMvBQPg6D2PszE1A+fn58rf4GQj5L5a0brFlLPtt6pfTzokg+ozptfN7aQj6GXODHYt01Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"VP0S8NdNXj509D6ZAvthPpP4GuBq/GA+notvUBhMWT542Pu6kb9TPiCzr7vFwkg+E0x1rDhsQz6wjjxkkL43Piaa5DGPEEg+5jh+5Pe/Oz7rAn0Iil5APk8jSFAUiEI+7NeUdtvWUD7icL57mFhOPgW1ycEQJWs+pxvz0ZaNdD7ankMoaON+Pv2TvEtLNIM+3zCUC8Uchj7/VWJgUziFPpheNe4g0IE+MRqTWMO0eD5RR0B7Co9zPjILZKZ4Gm0+39VDnsIjYj7HIOCeYvFYPgIieYWrUVI+rDbw5SA6Xj6krJG9wDFkPrfPNudieV0+j2t2cN+DUD4sXM0DCs1TPla/IMXdUlY+fFZqqbhEWT4cjdxAbcRcPu4nMgZHOmI+XMWQHp3faT7Si2agp1tnPnUvsAkIU20+bZnRQGHbYz7oqRDI3BlrPlEoFXA7E2g+i/2X7lLGcj4e1r0umN1sPghA8JKl83Y+gk6+LP+9jj44msw10PaWPvsfkyHJb5U+V7o9mRT0jz7QO1GqRBGHPmlP7z+vsns+RFY7Qf4vcj6aOjZUaetoPsWQa96bRGI+qV05NrFcXj6Ic27dgeBTPrNLidJPrkY+zyVl8QXpMz44Ik0S+jI0Pk4M3siEdzE+t69oG74LNT6g1lC5GrMqPpxyAQXrni0+TCkGKmTmUj7ZJiVmo2KFPs+rShFanZI+sZ8LxAQnmD4flw/VyJKfPjyYYqjj9aM+ONcKYorioz7ugO5xXE2fPjqiEBj29Zs+aD82JK+JlT6m2IRe0RSOPtmds4UI44E+9f8dNR7ccj627K6cOAxgPhfVoqeVDF0+vRbkrpJDYT7qzbHq04dkPk7bIATjc2c+jVlZpW4JYj5ipA9cB0xxPs18GqU4O4I+LJ82cMXgjT6+7XazLOqNPkyjJDoVwos+v35xOgIJiT4O2ratr92FPhOOTpSKCII+WodthBmQfD59nvbzU2d3PnMM0IKuWHM+8vtu7UdDbj4V+a+46llnPmwQaivoZmE+pIGbIByuWD7tAAq3HX9VPoxEqC7DPlQ+5Hn3P1NeRz48/VH2yRpRPo2l294RFk8+N/ePZWkbSD7WhuVII688Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2044\"},\"selection_policy\":{\"id\":\"2045\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1993\"},\"major_label_policy\":{\"id\":\"1994\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{\"ticker\":null},\"id\":\"1996\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"2045\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"1997\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2067\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"2000\"},\"selection_policy\":{\"id\":\"2001\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"Selection\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1996\"},\"major_label_policy\":{\"id\":\"1997\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2025\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2001\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RMNNms6bWz4HHvpz/1hgPgt3JgawuF4+ZjGvs1iIVj7KO1430W5RPr4H8vQ5m0U+o+bA50rIQD6mx7coflE0PsGM4ppc6kQ+avLvUDK9Nz6vlZpbjPs7PhHXIwQXoD8+PVurQlAjTT5wYc0j40xKPiMCwwon+Gc+l9yYNCVJcj5RKDTCfbd7PmMjdOBXUYE+rCQ10mn2gz5ztCHGhiKDPpfP7+zu8X8+yU4GRTf4dT60Lenv2UtxPic+tqMp8mk+a1kOYmjJXz5SVX9i7q9VPpHS7BC6mU8+yvNBPRA7Wj7VRljnFORhPiurFvq4RFo+38vZtEpMTT5J9C5hJoNRPleVzWMIu1M+e7n+GHNbVj5Ck19RnHlZPnv+NJzdDmA+xdPuV+vmZj4qkw5ux1JkPl8TCQDJeWk+KTCYAHj7YD6jWi91XoVnPqOV7+so6mQ+chXlNgNOcD4bJeQcngxpPu+7R/i8SnQ+Lif2IhwijD7TGJipHVaVPqemzpCb5pM+FMgYmaxPjT7mee4JR/eEPjfu2/aF3Xg+higHjIojcD753w1bxhZmPl04icjuH2A+jJDsy20dWz7TrcVu8btRPvtnH/JE50M+NvLeDfw3MT6HSljG2EoxPlSwcE1jkS0+emnnnfbXMT6L/LPlHpsmPkUQ3cSyWik+FlDSsgizUD7pV04vLD6DPsM+UzAq05A+FjcN6jT4lT6CqcHRpvmcPpeYeQykfKI+wmpodEKIoj6S7zZV42CdPpI09sluxZk+fg6i6Saskz6cXg2gOTyLPgsDaR9Z6H8+gk2VcNuZcD7Ndvj/mtpbPslY+Sxm9Vg+q2aGHpDUXT5ZGFucQiViPjFwtUmDnGQ+ZjB9IuebXz6U4w97yRBvPrbA2D9/qoA+aeZFkilwiz50VDAAio2LPmLao1zHn4k+vhrsvM4Uhz59QS4G1Q+EPu5YBlf1eYA+zaSIt1sJej6vGzHXY1V1PuPQwx31nnE+yjPOVbeIaz6U6Hbr4DBlPkDIxp7NgF8+IlvnxYAlVj5zqswJqDdTPs1jQJX7KFI+Mfy59qiyRD7i7ygEoMdOPjSQwOmC3Es+7Zj+8CN7RT6u8WIIQ0Y5Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2024\"},\"selection_policy\":{\"id\":\"2025\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1993\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.01, C/O= 1.32, [M/H]= -0.32, T= 824.72, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"1+6//tpjVD4i1wuvFPNXPko6G/AnBFY+lE9HJ+xBTj5wGlPjy3ZGPgAkAy8oUTo+fERqgD5sMz7c+VtOTkkmPlVIKVWm9jg++tJEBef+KT7p0Uqw4n0uPlhnhasPEDE+UhM7q1j6QD42NIMpa+4+PhyTWWdD7l4+gsDRZGBtaD7IfP8qJDlzPqgwgEn0h3g+Mgf6YhBpfD6SAyzE+Bl7PvTSQedXFnY+LO3hcjtIbT4ed6mKgXlmPrVUiu14fWE+HNepblnBUz5d8xPvzO9JPjFN+UoUHEI+mm65XH0OTz7P1v1+03FXPopbOtLxrlE+S6KHIIpNQz762xg7OMRGPjKx0geCkkk+PLCghSYfTT5WG6frgahQPjEvASjkflQ+uA3KAHzjXT5UPoL2iGRYPvHNdJl+Vl4+UdOOOFORUj6ipIOr6N1bPsnQp0XZ5lg+UAIflk1hYz4U3nuDc6hdPrxkKnx2Vmo+6Vzc3HklhT4mmiH6LfqQPoFFu7tQk48+9lGJmTk8hj6p7fgSBq1+PipBoHiBR3E+mudR5BBOZT5GJ0odUwRdPrKzAy0axVQ+9jqyyENrUj5vQqzxuP1HPsls3wgg7jg+TiqmFmkFJD5aoxdKDwQjPlI4pcJfZR4+xGBdvBuJIj5lDnw6I0kXPvQRSD5c2xs+QH2dwKucRT6/m7+EtQJ7PjDR0Bw8EIg+kizHTq4fkD5ryFGjZASWPhQMsKKzFJ0+3Siv4s3RnT4u7G5WBTqYPm6d3E1P6JM+0I5ISZhajT7hX66TBJ2DPlaSwV3VjXU+/WYIGn4aZT6MDABbrn5QPqcLVkr4AUw+Ere6jvw/UT6L9YCgQoRXPi4UpKojAVo+Gv/64P6mUz4p1F7IyJ1lPmcfdAet8ng+cLzz3G3nhD5QPbCaSzqFPoR/BdW/6IM+Tld8jD7ZgT6u98qb7XV+PpcMPzARnXg+YNI7XFpFcz5m9aBZYZRvPqCEoyj//2k+HGtz2+w5ZD727gI1oc9ePtJgOb3SqVY+RubGAQG5Tj560LLRPjpKPv2lwC79Jkk+y7hYxYoXOz4YucmjbJhFPlgTChSgOUM+/g38joflPD5dMgkzqCQwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"2cvtGuFpYT59UG6QdLhkPubZGA6ctmM+Aru6U7vvXT5c6hJ9PKJXPnx9YtLfDU4+CKtMj3baRz5ekkEqVX49Plh1MAtmWU0+rL2ej3g9QT414YevE1xEPmUjYS4PGEc+lNEN7SOmVD5ilGxZSJFSPlyd7DCWPHA+7djINppbeD7tabSs6xqCPnIuKJy1XoY+v0Xtcku4iT4dZy0qEbiIPh3mTvnC5oQ+/Kab0FBMfT7Zn30a81p3PswT8SxtM3E+3W25qrvoZT72sHRN9mdePvgrcOuvi1Y+JJgT5nB3Yj5CojEPQA9oPmZ9+RBAbWE+uvqVpIWlUz6VetGkMKRXPhXSscPPrFo+2Bot71InXj6XBYxbWyVhPl5laSRJ3mU+rqB4rxjcbj4qB9xgSnNsPuPfq1kp5HE+qvboZEauaD56cU5K5I1wPuJCCzXlYG0+vKm6ol/rdj6WLQU8gaJxPoBFerI+ans+uviHNF+PkT6Alw5ZDbKZPo6qv8OOA5g+GR9UzI8xkj74fGAKC5iKPqLNizrFOYA+P13lpQygdT5PrHYnY6ttPuGWkHpQ3WU+EXOT58vnYT5uOrVkBnlXPpIZz995V0s+Rc9qkENtOD5hw6TnqRM5PkBix1wL+DU+kiKgXV9rOj7y+BQX1sgwPsgLS7XbYzI+jOFVhbuXVj7y4Tyc/fqIPu4UPlI2npU+mkFThbvQmz5MxRiAdPehPiQrm0fubqY+FkF5950npj57ef+p4EOhPrbLD0aOop8+lNWfrgGrmD6rLjZWt22RPuA5iHBuIYU+hmcm1Hemdj6HcHjSQ5tjPt/VYxro9GE+Igsp15E0ZT7stXXoY4hoPkvWGL50OGw+2bD/sWfIZT6AeeAW5UF0Prhx9/un24Q+MQjMo3L8kD7MNdgyZPCQPkA1QuTOVo8+Lt5b7V5QjD4jB3c+s+SIPpAr7RVipYQ+nbtqia5mgD6rvJEBl+B6PnbfNafqPXY+PH4U6MBrcT6tWWw88flqPtcXKkDkK2Q+IUPrCoHuXD6p7L+qMFJZPpx0IJN4vlc+/JvHiozZSz5WE0SyaftTPoiGu9+yP1I+2yp/GoSDTD6AWN7u7jNBPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2066\"},\"selection_policy\":{\"id\":\"2067\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1994\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"0d658273-79c6-4667-8358-f541b7eef483\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"0866d132-3af4-4a07-9724-ac39819b237f\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:53.116847Z",
     "iopub.status.busy": "2023-11-28T23:49:53.116224Z",
     "iopub.status.idle": "2023-11-28T23:49:53.122295Z",
     "shell.execute_reply": "2023-11-28T23:49:53.122662Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 114.72, p-value = 2.02e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(114.72, '2.02e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:53.134134Z",
     "iopub.status.busy": "2023-11-28T23:49:53.133166Z",
     "iopub.status.idle": "2023-11-28T23:49:53.135446Z",
     "shell.execute_reply": "2023-11-28T23:49:53.135893Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:53.140456Z",
     "iopub.status.busy": "2023-11-28T23:49:53.139739Z",
     "iopub.status.idle": "2023-11-28T23:49:53.142078Z",
     "shell.execute_reply": "2023-11-28T23:49:53.142427Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:49:53.147050Z",
     "iopub.status.busy": "2023-11-28T23:49:53.146269Z",
     "iopub.status.idle": "2023-11-28T23:50:02.107167Z",
     "shell.execute_reply": "2023-11-28T23:50:02.107529Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.129121Z",
     "iopub.status.busy": "2023-11-28T23:50:02.128396Z",
     "iopub.status.idle": "2023-11-28T23:50:02.131041Z",
     "shell.execute_reply": "2023-11-28T23:50:02.131583Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>789.904286</td>\n",
       "      <td>0.182471</td>\n",
       "      <td>4.989271</td>\n",
       "      <td>817.002877</td>\n",
       "      <td>1.362151</td>\n",
       "      <td>-0.361414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>1005.034432</td>\n",
       "      <td>0.316625</td>\n",
       "      <td>0.129139</td>\n",
       "      <td>26.852098</td>\n",
       "      <td>0.202345</td>\n",
       "      <td>0.035041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>91.570000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.827739</td>\n",
       "      <td>786.053304</td>\n",
       "      <td>1.092981</td>\n",
       "      <td>-0.399798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>118.305000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.898753</td>\n",
       "      <td>799.589193</td>\n",
       "      <td>1.237321</td>\n",
       "      <td>-0.387966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>501.850000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.979255</td>\n",
       "      <td>800.539815</td>\n",
       "      <td>1.277522</td>\n",
       "      <td>-0.366384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>886.635000</td>\n",
       "      <td>0.247150</td>\n",
       "      <td>5.069529</td>\n",
       "      <td>838.510284</td>\n",
       "      <td>1.517168</td>\n",
       "      <td>-0.343038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>2926.030000</td>\n",
       "      <td>0.783000</td>\n",
       "      <td>5.181337</td>\n",
       "      <td>856.228068</td>\n",
       "      <td>1.655579</td>\n",
       "      <td>-0.301709</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius   chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000     7.000000  7.000000  7.000000     7.000000   7.000000   \n",
       "mean   0.810000   789.904286  0.182471  4.989271   817.002877   1.362151   \n",
       "std    0.144016  1005.034432  0.316625  0.129139    26.852098   0.202345   \n",
       "min    0.610000    91.570000  0.000000  4.827739   786.053304   1.092981   \n",
       "25%    0.710000   118.305000  0.000000  4.898753   799.589193   1.237321   \n",
       "50%    0.810000   501.850000  0.000000  4.979255   800.539815   1.277522   \n",
       "75%    0.910000   886.635000  0.247150  5.069529   838.510284   1.517168   \n",
       "max    1.010000  2926.030000  0.783000  5.181337   856.228068   1.655579   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.361414  \n",
       "std       0.035041  \n",
       "min      -0.399798  \n",
       "25%      -0.387966  \n",
       "50%      -0.366384  \n",
       "75%      -0.343038  \n",
       "max      -0.301709  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.141001Z",
     "iopub.status.busy": "2023-11-28T23:50:02.140323Z",
     "iopub.status.idle": "2023-11-28T23:50:02.143945Z",
     "shell.execute_reply": "2023-11-28T23:50:02.144402Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>501.85</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>4.942475</td>\n",
       "      <td>800.489278</td>\n",
       "      <td>1.092981</td>\n",
       "      <td>-0.366384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>133.19</td>\n",
       "      <td>0.0243</td>\n",
       "      <td>4.827739</td>\n",
       "      <td>800.539815</td>\n",
       "      <td>1.227412</td>\n",
       "      <td>-0.390857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>2926.03</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5.181337</td>\n",
       "      <td>786.053304</td>\n",
       "      <td>1.500980</td>\n",
       "      <td>-0.399798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>91.57</td>\n",
       "      <td>0.7830</td>\n",
       "      <td>5.025451</td>\n",
       "      <td>856.228068</td>\n",
       "      <td>1.533356</td>\n",
       "      <td>-0.332980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>103.42</td>\n",
       "      <td>0.4700</td>\n",
       "      <td>5.113607</td>\n",
       "      <td>798.689107</td>\n",
       "      <td>1.655579</td>\n",
       "      <td>-0.385074</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square  p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000      501.85   0.0000  4.942475   800.489278   1.092981   \n",
       "1  0.676667      133.19   0.0243  4.827739   800.539815   1.227412   \n",
       "2  0.743333     2926.03   0.0000  5.181337   786.053304   1.500980   \n",
       "3  0.810000       91.57   0.7830  5.025451   856.228068   1.533356   \n",
       "4  0.876667      103.42   0.4700  5.113607   798.689107   1.655579   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.366384  \n",
       "1    -0.390857  \n",
       "2    -0.399798  \n",
       "3    -0.332980  \n",
       "4    -0.385074  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.191723Z",
     "iopub.status.busy": "2023-11-28T23:50:02.185408Z",
     "iopub.status.idle": "2023-11-28T23:50:02.195379Z",
     "shell.execute_reply": "2023-11-28T23:50:02.195737Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"6ea1e9f3-423f-4abf-80e4-bf61dcae832c\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"2aa13301-1a77-4de7-abc3-1f991c052c81\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2295\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"2293\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2300\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"Selection\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"7FG4HoXr6T8OdNpApw3sPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]},\"y\":{\"__ndarray__\":\"FK5H4XrkVkB7FK5H4dpZQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]}},\"selected\":{\"id\":\"2299\"},\"selection_policy\":{\"id\":\"2300\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2292\"},\"major_label_policy\":{\"id\":\"2293\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2292\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2296\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2295\"},\"major_label_policy\":{\"id\":\"2296\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"2aa13301-1a77-4de7-abc3-1f991c052c81\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"6ea1e9f3-423f-4abf-80e4-bf61dcae832c\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.199899Z",
     "iopub.status.busy": "2023-11-28T23:50:02.199287Z",
     "iopub.status.idle": "2023-11-28T23:50:02.201168Z",
     "shell.execute_reply": "2023-11-28T23:50:02.201549Z"
    }
   },
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.205360Z",
     "iopub.status.busy": "2023-11-28T23:50:02.204853Z",
     "iopub.status.idle": "2023-11-28T23:50:02.206901Z",
     "shell.execute_reply": "2023-11-28T23:50:02.207696Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.211342Z",
     "iopub.status.busy": "2023-11-28T23:50:02.210854Z",
     "iopub.status.idle": "2023-11-28T23:50:02.285062Z",
     "shell.execute_reply": "2023-11-28T23:50:02.285457Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"5736d8f6-bba3-4f52-9b7c-6179b472d323\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ed7d58a2-bdf2-43f0-a80c-83f2075b7352\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2652\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"2514\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2506\"},\"major_label_policy\":{\"id\":\"2507\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{\"ticker\":null},\"id\":\"2509\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"Selection\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2506\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2510\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2507\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2651\"},\"selection_policy\":{\"id\":\"2652\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2509\"},\"major_label_policy\":{\"id\":\"2510\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2513\"},\"selection_policy\":{\"id\":\"2514\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ed7d58a2-bdf2-43f0-a80c-83f2075b7352\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"5736d8f6-bba3-4f52-9b7c-6179b472d323\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.305479Z",
     "iopub.status.busy": "2023-11-28T23:50:02.301630Z",
     "iopub.status.idle": "2023-11-28T23:50:02.350877Z",
     "shell.execute_reply": "2023-11-28T23:50:02.351272Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.364129Z",
     "iopub.status.busy": "2023-11-28T23:50:02.363497Z",
     "iopub.status.idle": "2023-11-28T23:50:02.366060Z",
     "shell.execute_reply": "2023-11-28T23:50:02.366422Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:02.371647Z",
     "iopub.status.busy": "2023-11-28T23:50:02.369823Z",
     "iopub.status.idle": "2023-11-28T23:50:15.660679Z",
     "shell.execute_reply": "2023-11-28T23:50:15.661013Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.1591452976067862,\n",
      "    'gravity': 4.675989103317261,\n",
      "    'metallicity': 0.848669292529424,\n",
      "    'temperature': 942.1705444335937}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.675989   1.159145   0.848669   942.170544\n",
      "std     0.177554   0.172656   0.117402    48.524770\n",
      "min     4.350416   0.910573   0.669131   843.447021\n",
      "25%     4.578822   1.032218   0.751150   914.016418\n",
      "50%     4.653834   1.113782   0.838695   933.533661\n",
      "75%     4.787075   1.285005   0.921327   985.139435\n",
      "max     5.192810   1.530400   1.114044  1041.430054\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"eb4ad1f5-4ff5-4646-a630-b6075e795a20\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"37e2867d-c297-403e-a577-dbd34d70e5be\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+1Xk7sIzPz4Eb2F9hU89Pj4fKd1byEA+gJRYnGbQQj5+Xl3sirRAPnhyydPn40k+dphbHdt5SD4z1oWloIpLPpyE/USkllA+XzvJujXiUz4x7MKK5LFZPnsxB6SAKWE+USiVRuDgZT5CHAqLFk1wPqu5/C6g13M+8Hx8oT/idz6C5CyamD58PjiwJqzROYA+Tq08D/6ugT7p038+dBiBPl6zto4ZKnQ+1h9sAkrIYj7zHYHMCDhRPvF4zg+w1VM+EzoNo6qIUT5GXZUVllZFPishhVGOukE+VPaLY6AEST6ejbev8wZbPuNCwyxNrmg+8IQn1X63dD5R/c49ZCqAPm81rzV4m4Y+w+SaIP3LjT4Pjbrmso+SPg3mwACoMpM+BBm5Wbmjjz4mpT4l/v2IPow1T0sCk4A+NI9RPF/ecz7y9mHli1dRPs5X1XW3LDI+Vl9qcbxGXD6wOeVTCCpNPlqige+3mkQ+vAo8gWxEUT5hW2uxPTVWPieVnu+EPj0+yZsDdqQKRj66vFInnPZWPmNFi/SeKls+kF21Pos8Zj5qssUai3FsPoXHjn8/sHU+nefTosU/gT4L9JoBXfWHPt6RHVIP148+INC+qz+3kT57Mw8Plt+GPoPdW+bQS24+GcO5U1+ZXD5/a/RP2HdkPqW7AXuMAmA+jireab8rXT5hjjgMrsdSPvqRMT4c6mE+KkGcWDtfYD7O53Vyu8ZaPvfEmY7uBGQ+0XymfsU1YD4BGp49JLBZPiLV+DUSG2A+jiwMR80UdT6Y35QdNJJ1Pq1GOU2Fo3Y+FsRsYTCncT5ajh4kUwJ1PpVKwwn4NmQ+kkwEyRCVZz5PCMK1FjNvPvW5zhIinHI+O7m+1tBXfD6y3Q45G3yEPsvQbx29hIk+O3pIye9tjD6GI0g14YmLPjfakW5Su4U+1nx+OV65gT72EEpCwex3Ps/mqy4c6HI+7vPDIUaGWj5kCl/cJpVfPsETDJaZS1I+Oi1HJ3RoRz7PZwsmU7tUPrYwXwtFO1o+TQHCxHetUz7yrkFHLmxYPnKarEHHbmI+PgucfP3taD7qCGW25t9qPkJN941B/mo+uE0i/Bb9hz61A50HKv2KPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3080\"},\"selection_policy\":{\"id\":\"3081\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"VQfB/Qr0QT7/RqoV32E8PneI4xnl0EA+KTjrpQt7RT7HeuozjGI9PlseFHNrSEk+U87/J91qST5EAg5818FIPrMlTDbzHFA+bpJ1DBi5Uz6HjmPCCL9aPiuCyK1cKGE+zuUdqeeQZj5/Wsr82YlvPjJLvqAHhXM+FYyYo8Kedz4lhHlZB3F8Pj+vOJd2S4A+E31ASQj7gT4KSv+MyxaBPiut2NC+OHQ+fEpzSffMYz5NtedtZIVTPk7/mTwWHlA+sdjhhYFeTD7c+Km4PuREPghkmBIVF0M+LwzcIidwSj5OJFmyoFRbPjQuSwqGHGg+LPY392g8dT43x8C6z7yAPiJCKwVlnYY+PC1l2wSFjT72SGG2P0WSPiF0A7EJdJM+kwDMy94PkD59z17JefGIPry9sSSXAoE+6Zq+NDVtcz7+9KsS1hpNPjg61P/nsy0++bGhrOR2QD7gix6QyJRKPpjkcEeD+U0+BdOHyBJKUD4gRc1Mc1VSPrYZ56ocjzo+p8tRQ1G5RT5o3MIdRz1XPq9bem8T6VU+oBmHMls9Zj6AK7ODXENuPvmNJ84K0HY+Db7JwqM2gT5fxoR3LumHPgbtyOCJK5A+eiQd7kZTkT77uZYJV1yGPr+CGm+Stm8+LUsk8g8KXT4bD1NEA9RkPn/p+3UVn2A+RhS4VpCFXj6WF51vcXtSPuukzpX7+GE+HzioiHspZD5QR9+w6IxaPpbNTMzfpmM+w4wKW5mBWj7nFFkvNXhgPrqF5/Nkolc+uDqOMaLIcD7O3Nfe8zR4PvpVF6yq0oc+IpF9CDEkbz61Z7HPFo1wPtTf1R1Sz2U+LCFPzF/ubT4oGU5VMENvPkvInP9JbnU+ADuCk/73ez5vmyxnE7GDPg9EEiNIyIk+RK+NnQUHiz6bozwtri6LPhsdEyWYgIY+OOCSLj7/gT4pQIYw6KB3PspQGtOJv3M+Sw5gDA0BWj4MPEFcHWRfPlJWwhurhFE+6LW+mnRaRj44t1/gyWxWPgagziLSLFs+R33v/X2jVD7GS3vQ6c1XPu4/DKVoOVk+dhNpLScEcD5jeVdj3pdtPoVig92U12o+H4J1pY/tij6Ij5YGIyCQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3064\"},\"selection_policy\":{\"id\":\"3065\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dOzsZg6wPz6uq4DWcphAPgS7Y30s8zg+GSnnq5TPQj57Hr+QZjhCPlU2/Tk8/0s+zBsLvQgASz7a+Am4wdlIPhlET+BrkFA+EORDeDUqUz4bGiOz6SlZPvQXI8e+/WE+0F8hC0ezZj4kM/6QsSxwPpO8X2TNjHM+TDWvF+99eD4GiH3ES6d8PvUefTq/IoA+ETk2/Hwggj6Y02vWTxuBPlaGCF0P33M+U+LCzUNuYj5/bN8+xRtSPkr2Oj/SZVI+bL2UqVMITD7XZPJRhuFEPohu+H3SikU+126YHszsSj6t6dUAMn1bPszXmXjDCmg+JH1JxB3edD7LFY3Vx9WAPjJqQyNBuoY+EhjVLWrWjT4aBMwZFTySPqo9qrT8i5M+BSN2GDftjz7xRDj/mimJPtok10qDR4E+wrvUJkISdD5YlmPdWG1QPhuSFrYSf0Q+haMLJVgZVj70bt+xiS9MPuoxwJZFmVY+uCg+3i6GTD6tWuMo14hOPjqlQMmI1iQ+95dLDN51TD5lsYxzy8VVPsJGuRLASF8+8ZdtBY9kZT7q8mzjjiVsPvxviPndXXY+G47M7V5pgD4LxJCOtGuHPprcex/P948+8Tr3uBG3kT6D0Dml6+OGPuj6avtSFXA+MSzd+Qz1WD7TbxO+iGxjPg6hdNtSL1c+84uRFrvbWD6hJiQypzNZPuhnMPmRBmE+Ummd4ekpYz6lrRdbvPJaPiT9MbGlsGI+BOc/RuUlXD4X41Ft9kpfPvownFnIf1Y+dVS/vrwGcT7c6fV5S8d3Pq1DkRUrUIA+uS+ZGrsIcj5khVQLN6BwPkAIMKyN01M+PPV+7Rc1aT64NSdl4k5wPuVtpTbrNnY+Ons0xkGSfT4/VAgT986EPojHVSZ1KIk+yqC8egY+jD5XpdcAqX+LPu/gBhk214Y+u/ClNUT4gT4W61vdcWF3Pp2N7NNT5nM+Lv5tCSuXWj4DyaxLZj9iPvzY5q1cG1k+1cUb5E34SD6J8cEPzCdQPvMFKlPPg1A+McwyRVDGUT7Kb3W8bKhXPphDEflThmE+GL95QPw6aT7GZNXjI31uPnn26jK3kmo+wInN0Ze1iz4RI7APPPyWPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3070\"},\"selection_policy\":{\"id\":\"3071\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3027\"},\"major_label_policy\":{\"id\":\"3028\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Pie5cA0KQj5E5jOkHis/PoWRSqrBGj8+nC9YpMiMRT4VLtEdK5s7PkRRKSunD0c+nuFBLfucSj4F8TNQN6RLPgT3JCaijVA+A3ezsb5FVD5/U6dVzHpaPv2NHsXu7mE+DlKOuu2+ZT4qOBwVm75uPj6UNplvnXM+yImnS7K/dz5nClxRwyl8PjGB0V+Yc4A+ty5HbGYagj6BnO888u6APkroizN92nM+PD9EdtSNYT7mUZPNXWtSPlQJe492qlE+4k5uXBr+Tj4/Mt3nB2RBPqnOIUdTujg+seoSHpTuSD5QO/sZw/JZPtViLJG2JWk+gRrTY9c6dD57WJeyGGiAPk12AUdooIY+veGDEl7sjT5STmfBYnKSPpQCsXoZXJM+IisqMAoxkD7cDvdVwGOJPgNmpN4tw4A+D7rMkAqjcz76wyvpAIVQPhxw0agu8TM+4jR3lGLBUj4p5lAzDcpEPgAyF4Saf1I+GKTrsgEzUD72e4uZXsVKPiOuSf8Wr0A+IRel8AprUT4zDf0gzuFWPjO4DFgsKF0+DXPyJSAvZj6BbxIIKCFvPn8dBwG6f3U+3xWkMbregD6IZ2gopsSHPkbQRx5TRJA+fUeDWwzukD7LN0LpXR6HPgQUtJ3Idm8+lZ+o6ZT0WT7v4bypJr5kPng/FRS4amA+dqGoxEqJYD4XwZmT7qRaPufWKvMEzmE+rB2UvgFsYT4/nabuflRgPioTy7ue+mE+WkR9V8woWz58aBkLTFJdPtU99Ujn2V8+MOQzdDULdz5ZaxqIA19jPhTx2I4QxnI+1M86j0J8cT4fDGamGNpwPgT/ZcA45VE+RVqkO1WQaj6g6b+NEe1wPpyFiSOX8HQ+RKovE2xYfD7VTHBKO72DPqyGmtvEmIk+GAwYBgCMiz4nUBLGrg6MPsV0Ltdox4U+PY42rdudgT4FxjTJ7aN3PmTYjAgpOXM+zoxfI/SFXz7zl3wYQ1VhPm2NL91CKFY+JIKRViSXSj4FsADMIJtdPhV7ZzgV/Vs+q36NgXcrSj6SKBLPixVZPmGkUiVX1lk+t3KxYT9XYD643VbXeC1rProj+nHFk2g+EkwfxtvciD4RBLp37BSYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3068\"},\"selection_policy\":{\"id\":\"3069\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rEVFLfYjPD6wxQI7taY6Pq93fh5Hdjw+HlZMhdWIQz4RJayK2/o9Pvy9F7kJBUk+53est8t5ST4riimBFmNKPvtkh1w3oFA+709lS36bVD4DEDnOqRlaPs7f40lHv2E+QR06Y2L0Zj4ik0AWINBvPpO6H4+Cv3M+thAOYX4AeD4z7xZVY0t8Pp0tAX7QUYA+4JVnfdT4gT6uMrFrAlCBPgTpzh4M+XM+aKwarSq7Yj57e0IDV19SPqvuNUF29FA+MeDgkeKLSz5Kj3tA8XRCPsyVCj+oY0o+D43SxMDdTj6hu3woBEBaPkTdz2F7amg+LNrBbdHxdD43yisU+VuAPqWk2XE0pYY+0hOiV2JxjT7WTPtBh4iSPisq1C7JXZM+HhxPVKsHkD6fNVMVF2iJPisbLqVjUIA+Qqp8F/D4cz76/SpepFZQPkQ5Ib+19yc+yQhzmYCvUz4zRjPq77NSPpaxafSvNUE+1GAp5T08Tz6ZqRoSEhlSPgrR2S1bUkA+NekQl++BTj5tu/UAYepZPjv5yuWtq1s+rX/v3o8eZz70w9nakmNtPorAa5LAmXU+Ze+kou+lgT6Dx+P4BgeIPk4Qt+3xBI8+Jjy7gtzzkD7kWsAqvXuGPmifFz2jSXA+3phKSAXxVD7I2WjT1odhPrwg+fANjFk+yG+qmRAxXT7A3rWUJ0lWPrNIR3K9PGI+ZfvPfNfMYD5UPWTuMFtcPlnjOvsA92Q+K9gkZXm9XT4Ab8W2QrFgPgGQA6G/yV0+rz6wvsh0eD7FSV9yMpFnPp9/v9r0pnU+nPY/TMkpcD5Vd+0iPVRwPjUlC1XuR1s+Qgys0kz7ZT4d5VxS0e1wPpjcE87HO3Y+S/ngbNRMfT7UrdDKpXeEPibmiiQW/4k+WdDduUIbiz7724+10eeKPqbgVtgn2YY+JQrC9EXcgT7DIAe6mtF2PpVNsfWmrnI+UjGDGhmWXT7xJTH+u4ZaPjdaijqGDFU+N5efWDrFQz5JYJEBqgNRPtGQoLtKHFg+6pZk0J9uTj7IM0wsQ1haPsNZ4IJIAmM+zPCaCzAoZj6zafRUiD1wPs7YQZ5/N3I+KkQo2Hc9iT7m5GivVn6RPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3062\"},\"selection_policy\":{\"id\":\"3063\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FIq9zberQT54tjLJLsFAPm9SIdRrNUI+hNqO3h/RRj4g6Xuwuks2Psw85kphpUc+8BS6qRKfST7MRhGz9ipMPrwL7eUk800+3yyKhz0nVD4LpkHHpvFbPupjMHDkn2E+M76NwnzCZj507w+dQVxvPl/ZRZOrUXM+bk/8aOe/dz75PHnOIzN8PlAAet4LTYA+VDtHo777gT51DWj96VCBPnvBeT5vyXM+ctL1bQVzYj63eDMO6YFQPiYsQq1Ud1Q+rEtsxyZ5UT5ysX8HwQBCPp0hyyZ+/0I+hAzDBHpOSj4PpbOwiJRaPif9gHceN2g+5KxgcE2LdT7wFHcmpUiAPihv3i/Vf4Y+4HnVwBAVjj69lGP6qFWSPlIAgYwfJ5M+Mx/hencBkD5MLGVq0NKIPrx/ZRiFy4A+Qd2t4S2kcz75j0k8j7hPPuwUBl+7qjE+GjgANTIaYj42vSbMC79PPr1ZAnBMEFM+xOG/g9E9RD4VVaQboXBEPsuqCSK3/EY+N6Z3KdpHRj5KzB0Ts1lVPvMDo46D3ls+gmm8i1tkYz4Os9cfdXFuPmB9aa9Bo3Q+UKaPcrvkgD7reXBrqNmHPj4OzP4fcI8+fpKwuq+MkT4DszYmJdiGPpyPioRWW24+iT9CkcMRWT6/DsOs7SxlPkv5rS5sclw+RBM/GAiQXj4X8jh6xZdSPtXnuWQnG14+b9xVycwkYT57cl+bOHRWPkUIA6bDh2E+Ll7MchxwWD5jx5BcwZtaPhyjKI7nxWE+Eeei+9KWcj6Ua349Exd2Prtshfw7ypI+iBRfLvi2bz6biddshgByPhRs/T9iJF0+tJDnsRLdZj72tkzfESFtPgxd6SBZAHY+vm1T0XVrfj4wyWm2+uCDPgqLF2U2cYg+o5sWkdajij4tjVe9GKGLPt6SfSvtk4c+JmLCuaPHgT4sUNgX3s92PnzUai8xanM+o3iZ6TXaWT61DbfNh95gPjtyE3i7jlY+TdMSAMjsSD5s1mTBWgNRPuIyWrhnwlQ+DzKzbrEHUT5QcU6R95tMPteITXOdf1Q+nOTPHonjZT7s6O5hpd9tPoDL1HAmgHc+GKnLlHdzkz4ZdDPEPquhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3084\"},\"selection_policy\":{\"id\":\"3085\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3093\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"JKTv1F1cQD4IbdFMUn4/PvOPmQtnGjs+fSaWPsIwRj6s6Pi9xnM6PjUTU34ZLkY+lvaRrlP2SD7JfC+O5yhIPqtUuOTq/08+UXotmkz0Uz5oCJeZX7lbPkImtgV9PmE+7900xEB+Zj773au8qBxvPidBsx/yzXI+tqcwOWXrdz6o/4kYFMZ8PsO9/7tjVIA+OW0LxoItgj5seg2/fPqAPjoW8eH+RHQ+ueQyjpEWYj53X3Y07lBSPkWD2Y9NmFM+yCnDBlYqSz5Zj47i4RFDPq3rUhhVQEE+EPCFAxjwRz76wHEpccFaPtlSY2NyL2k+86JV+26OdD6LFeqmRkCAPpA/jCikTYY+MYGEYDb1jT6RRTeeKIWSPp6RyhIlf5M+GOZ1jd9zjz7sq1uNhMuIPjQMXm/kb4A+De8V56cacz6t7dYNIedQPmCRcjAISTI+y0mkKYn8WD65O0NoHhZFPq3sBSBn4Fg+qQliVMiOTD5siwgP3ec7PlFHUqXzQUM+Y+D8JX3wSD5+VfyFhjhZPlnJbLOoc14+xh+4MMTgZT5RiVhaYC9sPouubLwW53Y+10oWXgBjgT7foDl/7/KIPqjApVBM+Y4+Dc5akImRkT6zgPB6Ln2HPjhXE1dCcnA+dsPU1G9EVz5xbAE2yw9iPuLyvr2zPVk+1rtsgMXdXz5Ezzw9si9QPgvJ+3Kcd2E+/9+OQs4LYD7dFFHrEIFcPhoawRkOPWU+F+OmCnicWj6Gsf/XVoZVPuNxntGZc10+LCQy0Hzggj7luev+jyiEPo9m9fpHQXs+NQMjmvPzcj6pvFE+asVwPtH3vqHRUmU+TLIdghvAaT7AYaaaROhwPoZbuUzkL3Q+SBCVuuk2fz6v0Jj0HiSEPr74ADgLxIk+7D0JZwKKiz49r9f+i2SLPpdL5NfLWoY+Ff4L89digj6nHH8i8DN3PuVH8Sj503Q+kvScXe3xWD6YQL/UCgJbPi47s3wtrFM+wvMYPlcCVD6dE9oKxllUPui6ezEJMVg+4312auZsRj4i1c0ShGlKPpPEXp7vGV8+QIZ7NizXYz6bSRXzCV1sPmK2bf8Dh24+zUPcxV/6hj7/2QdR10uNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3078\"},\"selection_policy\":{\"id\":\"3079\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"pmG4Bo/GPj5fD1c18YM5PjVRC/cbvj4+04Ic9erCQz4TOTTwBMw+Pq2C7Ui2o0c+2uaLgfQ5SD4BwlySTthIPo06ADMOIE8+bfulvZWQUz7MaYB3+t9bPjPxuzFn8mE+tUYn4y1rZj4BX3oPquBvPjco8YJkxXM+6nKpKP5ieD6gjuaqXJt8PqDHVtS8M4A+32ZQyr7xgT7PmtPQEDSBPuEtnGw453M+LS3JgB95Yj6FxeL9tJxRPkd7/DMNQ1I+b+r8+/34ST7drfxLI3NGPmDTW/R4a0I+OZ4MRZ9vSj7HlssIzY9aPiCNJsF1wmk+QbcUmj0zdT6Pwh96DpaAPjKI7KckcYY+kgmIPzLcjT4sU86pjk2SPh3+LJhhfZM+GJO96H6LkD4KcfbQEa6IPuFN2z8SEYE+rqlw8E5Scz4XEUIE4G1OPlEoKk/uozE+0T6Spm8EVj7x+5etLgw5Pu5gwm4CB0A+ADd3gF24Wj7fqqz1Y91IPv3oa7Ou/EE+ZQCJrbXAUD5ov5LVhVRWPi3E7ZRqhl4+T1o36TIvZD7O7vZcaFVuPv5MtMIlNXY+2VavoPs5gT73uMt3z7aHPs23tvkE6Y4+cgbcDSylkT6c/RB8p1WHPjDZ7fiqHnE+H7hcYsMpXz5BG1ClvuBgPm6l4YkERGA+M19cutwSWj619yDVbqNVPhKwQ+hHlGM+vE3b2q53YT4RiMV1vylXPgVycfpC+mI+DVqsAnU+WD6dJEWYDBNbPrf/Dlm1jVw+ET+E7T8seD6qfLSSkXd3PkpiOvY3s5Y+gmkuBqCmbj6ZYvyB7ndxPkjd3BnuZ14+It2OjzNTZz4d2oRWGBRuPlik/v47THU+iPIwDPsUfD7MSGSCaUOEPtsUIts/+Ic+1QaH4W7Biz7OAS5etUCMPtNgbLVmqIU+LhF6jtgHgT4LXpCNp2F2PnQaeM49mXQ+BMCkynhgYD6eJ1sGOtJgPmzfz/U9yVg+EBbwGY1VUj7pLapMrbBRPiJ5McCO4F0+lCRLB1PpUT43bmaqv/pXPpJDCylY9lM+lE8NrK9NZj6C9pim8YBqPqJr2l6HeWg+rNPLExWjhT6wELfM8mmUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3082\"},\"selection_policy\":{\"id\":\"3083\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dpNPnueOQD7Kk2f14ThCPnVTQUE8sj4+4dFju28ERD4ltQTPT0E8PraQF0PMNkw+kFUWXQU5Sz5qN9Fd+NFJPm88ZtbohVA+1JU/N1iRVD4AR/XR839bPoAAhmG0UWI+zXlT6TA0ZT574v3xDbNvPgz0G+SoTXM+I1os6nxMeD5BbxMG/Fd8PuUac0xsaIA+T2xfZAIngj4/HCxLP3qBPvz37zHgi3M+OtWGeZiCYj5Kes33SwNTPnWP9vsdX1E+D23/SSEnUz4j0vDXMnE+PuMcQpIyiUY+yWFCtYLiTD5uyikWiFRbPm7hKT+2H2k+qIONxSIydT6TSmm3/62APm68coJJaoY+AyXuB1c5jj6HxKisZmySPmKYlAdGGZM+QtuHMJHojz4Y34JyeVSJPicHeKriI4E+V8egSE59cz7AidYlKd1QPlfFX1841hk+xPfXyxpvTD7YsDXOWbhVPi4stV3mX1A+ni0e/fQORj67IhVaRNRMPp8G6oNb7kA+FYhgUrhISj6M5WVOpR9cPny/d1cPtVk+6RE2Sv76Yz4BFMatoShtPrI7Xbyo9nY+C7dojuVGgT5dMAisjSSIPrvLMrSRTo8+wlcIUoArkT43ubv+cW6HPqqgZJMnl2s+zyEOmTU/Wz4qU1s3k2tjPh/sZz0A+2E+Gi0UW5A9YD5Or/b0JmZVPuGUShuTX14+RvS6T6mtYT7DN48hSAZYPjOQONV3wWQ+zvDmLbxnXz5DqGG8R15hPs33h7FS7l8+7/R8I4K0cj5saaLpRe13Pm1TcRQsIHU+RiSMGiQ5cD57H9rB/oNwPjZaJpDyIWA+lLdssxRkaD5Y7dj7MoRsPoziJuIFyXU+P3Q3vx+HeT5YvpCeXZuCPuGyunzaUok+5qkIG29aiz4DCFklWdaKPrYZ2lNq44Y+MeGWKVuygT5WbmhdulV4PikiNk+K4HQ+uvLi2BRbWT5gGpnc+LpePjcfW0M98FY+skZspx1UUT7fz0TWURlZPkICyFW/zlg+9EZG9ks8RT4bgPnQW8RVPq7fLZud510+D9h1WHInYD6UsQCyklxxPujAKLAboXA+iau/bmVqhj42NizSa26TPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3044\"},\"selection_policy\":{\"id\":\"3045\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Ibly49k9OT6Ue6EUaLw8PmGzDQZUtUA+DaHNQBA9Rj5o5OvYaX85PgnHvDkiBEg+In/ZqK2NSD4xhftBrelJPpM9U7S+MFE+vW5Hax+qUz794IV78+JaPvGd9jzY1GE+xPM1esflZj4hOnoRNkVvPjd1J1T4hXM+3pfpf0P9dz5hhZGzz6J8PhgwW3KeFIA+XdLQyWspgj7yqPdfHgKBPg80nyWjPnQ+rhieHp8sYj6Pf/pXDfdRPju4MEJwTVA+H+zriCl8Tj5sLrdoj3pDPv6+HFoJJEM+VQn6IdF5Sz5UqJ8vo5hZPtXDyiDjhGg+waOUSjIxdT7OSw+20tmAPoQ315O7qoY+55Mx2/GqjT7SZ/w3/FySPpKyoM+2iZM+ioDLT8oqkD7BaZ74Sj6JPjtDpVsswoA+qTEncIIadD6q89EFpLxPPhmMBPBC3DM+6+nNlsOtWT5cYs1ivRJRPoke3o6nmVo+7tgzJoIWTj55Zk0rTWVRPkwyvnt77EU+aOuVw069Tj7YUDGRxi5ZPjXN7SmybFo+OKtW4UltZD7x1omWIWVuPtgMGX7NXnU+rWKz+XL5gD4MFDBjORSIPjeNyDDFP48+Jo7me2D/kD4b5fPm59uHPgn7IWgh3XA+o5WMuGHfWj5EOiv6xMhfPvi8BgUKxF0+diMdiw/4Wz7WKPxRVt9QPjjLGl6xMWI+5n8o8EwJZD4VPPX7F79XPsTM5FtpvWg+e76TXWH5Vj6w2jp0wiNgPmdGo8JWVVM+s8OzIw+Ugj7lN4UUE+l4Ph15swdjOYI+06yb2B5ucj7p3VCrwel0Pnw5kS0RqF4+4eL9NrCKZT7BTdXoFLZxPnYO0O0Cf3U+DF9gHkaLfT57s8bXAPqDPqJCMP7nu4g+O9sxpc0giz6ozbu1g62KPoDYFCiKJIY+2MOIrEbngT4xIQvBn9p5PuG1V+rQznU++zwgHmJXWD5HBZB3nSxbPtDW6cxYrVU+ArrAuqJHRz5tOg+FNXtVPkdzPQH3ElY+2MdVw3f3ST6d4mODHXdYPpx31Bz4Llo+eN3FOmNFZD4+z2OAOixnPn5KDiXnGnE+WiOAulGqgD6zHIk3ajyVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3046\"},\"selection_policy\":{\"id\":\"3047\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wGPZJJ6QQD7ojx62VhE8Prdu7b29lD0+B5yCzal9Qz7uF7XdUgQ7PhlAaG8zKk4+I+W4ABN7Sz6KgCYwxAJKPstH22AlqFA+mf0oA4rvUz7RfgHmBodcPgsP+rYqjmE+stnb/rwDZj6ImwjRBvluPpu2XagqenM+LtXFc6dLeD5q6Bxbdqd8Pmtc7KRrMIA+MV2wnkPmgT6VcchkH3iBPnw4t4w5C3Q+mdOQCU8AYz5Ts3iAw9tSPn6/dsi7zlM+iMFzn+nRST5Jmj4XPPFBPu0cavktLUM+z2qicmFCTD5Ya1Ax7HNZPmqdd+i1qmg+zZOuYRaQdD5gyyTTeFaAPsuLRh6RWIY+BBYAw8ijjT7iNPnwNFSSPjFZvec1epM+tdKHMUfwjz66nXINYNSIPibHzWkK3IA+MSbo/TYKcz6wBJ5IZMJRPmgQms0zrjY+bXuDyNuVUj4Gtga93T5XPmyb+VL1+lM+9dPnGdSbWj7IoZMlIh9PPiXSG4C6fUM++ZAZxLPWUD77gWhNuyVXPgTN4SWF+Vk+IS1Vz36nZD6hIKmNClNuPtT179xqhHc+SREdIippgT61BMqsuQSIPjp6vnxdr48+xrVt2jHNkT5OUIBZSHqGPjLEtlNoq3A+h8bFA6GlVj7JKinJJZBiPtpw5zuTQWA+9f2/xHYPWj6Uww/rukhJPrG9WyAroF0+AymoSwu0YD6riVkWFVFaPkYlNEPVLmM+/zMKgRWPWD5B+YQop8lgPnKDrCaw3GE+bTRySLbhgz7E+ZlMMDSAPgrtH9PuSaM+G7+ILowVbz5KumX5e35xPmdkyHI4Olo+MMgGcFBkaT6FdJJozDduPuMkuMoseHI+jlTj6Ay1eT6tNDzFHw+EPuwoE07oIYo+pbV0peRfij5ywg7VAGKLPqglam2sCYY+qRdlfC1Hgj7BEvlebPl3Pt/8fWKMxHM+nsCwLPZ8Uz7YKNVsngpbPktUije/Elo+VpGk+cF9Tz4s9mEb9exWPngpIZ0YiVQ+XnRjTKKqWz5uUax1XB1bPgBPusjIlGE+rkQdzpqHZD7jFSEY/EJuPoaqHyehA3A+4aDT2Pq4hD5YMN4wNdWXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3066\"},\"selection_policy\":{\"id\":\"3067\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"r3+bZyQ2QT41xVXVzAg+PlIvC2nF4Tw+iOVN/VpIRD7QHFOkjvA7PgNB6jQmkEg+hmNiWMaQRz6tUv6gvzVLPtONUU2oh08+ZproGt7oUz7xaqz5bSpaPgHhlwbHFWE+SD5xeqLFZj61esNnURJvPg0Bft3jjHM+AB7gF9QReD7CCEtqWEh8PkQCPp8SRYA+Mmq+YRf3gT4AbBUZ6iiBPrM3WsZud3Q+Sxf4DkOLYj44r1V2EgZTPtnTj2jlRVI+JOINRVEJTD6s0OYjyjpHPrXZZLA+WEU+FG3gaCaeRz5LwwvZa+xZPnd4MEIW12c+Xe9QQ6AbdT5FtOrtZC2APlR61XAcBoc+vhJO6F7NjT4QTY9cALOSPi2BYTAxyZM+ftGPoou3jz72MwhpdYyIPjk3bR9o64A+S6YW3F7dcz7qmV6yID9QPqkTkjY85zs+oJ5wGL7aXT4KMWDSSuE+PpkqzSrnzEo+6DmERLxWSz77RThfxHtGPuhQ27TWHUQ+Fmh5z4Q8UT7TqGfyOvVaPk3WRMakf1s+tTtCpTl5Yj6MVrPtQXBtPrei73aDFnY+ndqnOBAmgT6t29/D2NqIPmsrvAovmY8+eU+a4hR0kT5SHZksUbuGPtxDecorYnA+rlKTGmcGXD4LMCu52ihiPtjLZrHo32A+BtylF57CWT7FW/+5XWNOPgdfCAiVxGI+FthQGzhSYD5pJmGSFMJZPsHYzpvdmWE+PP93B4HbXT5kM0lMYAldPkMbe9gcmmI+DA5KqdWfcT48M4pZlbZwPjjTF0l4Y5o+46xz8Tjmcz5QxepKU1RwPk2sWtvR0GI+LbV781K1Yz5IdNDVYcxtPq8mu7qjqXU+Mj7dWIplfD5tIXIccOaDPrA2bJZ31ok+Y9xaxFi7iz700fH2xC6LPvLT1VDWmIU+rMSpduBKgj51on8vpWN3PvV5C8LFJXM+ekejQ4wEXj7Djbo6m9VcPqsh9epFZFc+jA4aQNFjSz40wwSOP8BTPjrfpCeBEVo+yvn4bIK7TT48XjQoQW1ZPlCl37sBD2E+REYemRtCZD7DaNgeVT1tPr/Ld4Scw2g+ERdZnGtFhD7KiG58gh+ZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3050\"},\"selection_policy\":{\"id\":\"3051\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tPvcQVuRPz5cUEyskGA8PsATPON3GEE+nD2iduCgRD6ZoAbyRGw/PvV7sTF3F0o+IIZfQVLKSD5zoc/C5GhLPu5TflAf61A+gz7np1H9Uz4g+9EDG9pZPkLSmTaNRmE+BYgNDgI4Zz7AaWXmJf9vPmqX2XDltXM+QGS2txigdz6SYDXiRkB8PjXGof4DOoA+iT2Y3B4Cgj7dnWFVUwuBPo7/z4f7ZnQ+wNJa/a17Yj4SwRWI60VRPnJjOK7kx1E+5zXaDqzVUD6BByTHPstFPjlhX2f8wEA+Iq3VbDCeST689EzJAp5YPj928YJPJWg+xs6b/DkcdT6Ss/xnIW+APpj2eTazkYY+0zORnCf6jT6LI80k/zmSPgz4QyA/aZM+sFb7hCsUkD6czA/R18uIPuMNeAMjQoE+c9rceGfFcz6pMvU3ZklOPsqQEviK9SU+lABv/OV4Wj7Vu4j6gZRRPpFNHJVB4lI+KMHG9cCnUz6BOHZ62vJKPuOKf22w5jM+P5PAACRhRz6EEoOT5KBXPtOEjRhhUF0+ReXW5uacZD7ojuiUX49wPhWTUUmT3XY+fsFzNbsGgT7YUdFty8mHPj1KbVVuso8+jcqpQLi6kT7Uw/IaXPOHPtQQJYNEam8+Iqe2WKPVWT5RJ/n2HUlkPqDdoIMppWE+R62L7ZAmWz7wqZMK2JZPPp+sVXMhdGE+FwjdBomQYj7GhS8/JnpYPkTCOklFlmE+CeR1CNQMWj7ALM8oDQhbPn/K2H0IE2I+Bq9mNN6/ij727xcddp52PhroK72lpXc+oguUKdwBcj6ZfW05UwZ0PghLNhd9xl4+w4qYORucaT5VmwFrMGBwPsqdFKITkHM+iYmU0+EFfD4PTJmYaQODPsEHwJLIP4k+8kn/GkvUiz5DBcEo4MCKPvRTNthlS4Y+fFvXRQO1gT7c7F6PCIx3Pt/arhkPgXI+GsVMZBTNWz7BBCUmr7VdPoc4JGLNxFU+ZYY6XY0YUT5Wwx9UmvRTPpVvOJGhd1s+06MGzNZHUj4vqQp91wlWPgQg+fljKlQ+dw6j81XfYT6xNBYcJGNnPrEoPMIcJmg+uxstmDCnhT7yCtIIXZSUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3086\"},\"selection_policy\":{\"id\":\"3087\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"L+zglP3EPz79EuXOlIQ7PlpJBd5jmkE++pPZkct4RD6VxKOnHuA8Ptmjl/W5pUc+lsDDUi7vSz40b9eMAXJLPhcVTcao8lA+wK5fQVXtVD7O9eYpGs5aPplnNgiCRWE+xE+uJbr2Zj6NYlLSIShvPmo/UOwNdHM+eoUF/3XSdz4JWa6puB18PvsFR3DsPoA+BXUC7g8rgj4uC9ramESBPl3EALt+g3Q+ccO+vhwyYz42sDT7vwpTPp0fs6g0OVI+THPDy3tpUD4SrSwrMcg+PkB/StrhXUU+Vh4OmQ36Sz5HqEYBFkJZPoDPaYR9tWg+v5K+cI0hdT4D0FBT65CAPtuTWYlp3IY+XY+hxfb5jT5yVLN7Z3OSPsYbZtbze5M+y/xQa2krkD7cOE/ZSWuJPm4ZpVSRm4A+tCgsJ9HCcz4GUaupRpBQPraa9c0kMkU+74OE4wrVUj42EvHtZy9UPinounAYvlE+TKvNYIFyWD4VdT44fY9HPgE3YO43bzs+4/MmiJrTRj6SzjO81ihcPowxN6GmbF0+oh5DEDcgZD5v6AV9keVtPs/TjmJPs3U+Q/etuE31gD4mzSapGl+IPqzA6ohu7I8+ej1JMm3AkT4GbDt2Z6uHPrjGGSEeBXE+SDz++rHkWT4Fy/KN38diPmAVuTEujGA+92yQuCNiXj7Vo17q14pTPrkoV8h1fF0+QkGnJHFyYT6/fEilKDhfPkHejozLmGM+fqoGKbu5Xz40fwdYOMlWPqgkqgJeu14+9doLeN+1dj4EVNN6OapqPoDR07q+znI+a2wqtObucz7zIxEIFVxwPogJ079yb2A+O2LmSM9vaD4nTHW1iDFuPtBP608SUnU+1p/h04eGfD6wCqzRdGCCPhXbkDVp04g+i+ItOnlZiz5E371eyDyLPqg9GEA5roY+/78n6v99gT64fPG2EI54Pn9BUSLapHU+8QvzhAIcVj5iTq34ag9hPsDSTunY61U+7Kn166KHSj6xYR5lh61RPpgKTrK9ZlU+/qwifmLbRD6YZFSXAKhSPq3Nyv2+hls+rcu/Yr7GYT7GfxecWxRrPuXtIUw6VW8+WudRIK5niD78fTLbh5GGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3088\"},\"selection_policy\":{\"id\":\"3089\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YScvzJzMPj6NG1DYnXk8Pneiu0uxUEE+xag2cbvDRD51M6D7/FE9PqqlP9UWWkY+NitPIFWdST51dQZKystMPoAJnDt6RFA+Lacv0F0XVD45iw4iNq5aPhWQkHMluGE+B1xQQacTZz7L8mLt3C5wPpIHr/u3iHM+6hfHr7btdz56RRQYH1N8PqLyioTlS4A+11iA0wSvgT4sE481AO6APrefYc7BS3Q+AwP/NMCgYj4l7Ry6FDtSPj4AuJoKrlM+AQLgkPjiTT4N8Zb9SghEPq9xo+gkakI+iKUuLWR3ST4zbJux/PJZPm7sGBgw22g+vY9vQawRdT7oqzyPUb6APptGPfg+mIY+P9zffv/cjT4vlxxvEmqSPrI7nSW0FJM+nRkhxVbFjz40+3GiA1eJPlWMfPge9IA+cEEPKtjScz6Fb5ZrSeJOPq6DKNOLbjc+M1epVJbgYj752mtZYVhVPn2y9BD3h1M+TRVC26rUVz6Rnjisa21MPqVlmPs4ok0+FpA3kE0RUD4xYdSSgTBZPmuciv/Zqlo+EF2tyq0AZD7sG9HeeuZwPr02/CEkh3U+Ec3uHjMPgT6NNvaDJyGIPpKLf5d96Y8+bt5z2BSrkT5ERlHwnN+GPiMLQ8LVlXA+iyJ1wNVmYD40cX/geyhgPvIgOVF9iGA+UQbb95iGYD7CZRDgOK1RPiqrC8hiT2E+hUnonrfPXT6kMfYLlDddPuAl15CGzWQ+301Bg3QvYD7nTBAeg/FgPmh85dieQVg+myTUOh58aj4YI8OpHMJ2PlVqzlash4k+eUTYfEt3dz5Orzy+2bNxPrT1QOMGNmA+L0JTD3QTZz7RdZSIIbxsPjl5nMVWG3Q+Dg87uJDHfj4ew5jKLRSEPgXcR/tenYg+50N4DD32iz7/l1isA/yLPjuZaBphUoY+ZncPwxpCgT4+dKHZ4wl4Pj/B24ma1XQ+Gmc5IgVWWT7A5KYAx0ddPvJfjtU4T1Y+TIL609mOUj7nyfvWks1SPvTKzghdc1k+154MtntVUj6tv0cznHhWPqyf0E8HWFU+r2mHLndGYT7G2QdOvC9vPphcyTQOR3E+0rMDu+97iz7lr60FMGqMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3060\"},\"selection_policy\":{\"id\":\"3061\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"/HG20iwZPz6NYi/h3mo6PvEFdp5s9T8+iBqudF2TRT71AioANyY3PlGrKoJWbUg+bkflz4fFSj7qGKWZNelHPpjfk3dzhFA+BtbxBRZUUz7srLjK8yRbPu76TE+UDWE+9v83T0LEZj5HUvpDsmhvPguZzEPhiXM+4to4wFXkdz7t8COu0XB8PoerKF7JT4A+GHJnFwIvgj7+sIwWhRyBPnP1AbVmL3Q+2TgjCkqRYj7sJrrFA/9SPtK7eo+On1I+59zmf7i+ST52hN2rgUtDPpSSSv1hrEI+bniK/qzgST7wGjwrGidbPicJ7eSrFmg+8vb9dGtedT5Uzg97rW+APtZE3xsuo4Y+oO6UZo/LjT5UKNdh0V6SPk8o4jHPh5M+/KX3is1JkD65BHZxgAWJPp+nBo4Dm4A+3FxHoyvUcz480nFsrTdQPvcnnKQrTyA+wVuKmUCCYT7gvEmk3ktVPjSZDh8/5VI+XIn6OoBKSz6MDbnmQeJKPntPCXT2uUA+53BUnJlJRj4sNywBerpYPvCtvuBqi14+6afsvx4MYz5VVVpbDSBvPmP1UXR9pXQ+lj8wYIopgT4kuQyaUamHPqkgqKYqpY8+Rv2Y9Om9kT5Nb+gJ8x6HPrKaoOwNO24+R/K9cw7wUj5RoPfkx0lkPm8xsqUQDmM+LxeoHmPuXz5/gBvV9DZXPmbWq1ZyyGA+0EQUBQ80YT4/E2zhTFVZPjtxRCV3BGU+0NsurdjgXz6n+/sa5h5bPi7Tyiw3DVo+qZrOP4wydz4W7L00XbiCPnf+QAiUToA+Qk3YXgLNaT6oKK/h1ZNwPu8N9L0RV1c+bpQ/g5vWYT7RQH9wxAlvPr4JKJI0n3Q+00TbgL2Cez50Lnh1n6ODPsV5Reb7cYk+G5HBAGZaij7dOsZ/V8qLPv2cgCDKxYU+x2d/UVffgT4mrCfO7MB3PpJyqIizEHM+50uJxu3MWT44C9Q9lF9hPq3UqS09EVI+yVYB2D9VTD4n/3apHc9RPoySgJKm5Fc+qw3iroTRUT6a1xfpltJSPifM65ohXFY+82R0l2dFZj4jqgg88iRoPkS2/FMvpXA+tM7uXWMegj5bodnlyEWGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3090\"},\"selection_policy\":{\"id\":\"3091\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Vo2DjmC9Pj4kA0VnbaY/Pt+giAnMwz8+ooe+drh4RT7oeWuj+x03PvDCG3542ks+KzPZZW6CRz5ja9b2MK5JPnUpK6PyrE0+Wd/2iLlwVD5CrSXUaCBcPnpc9Hs7cmI+2DOX92A+Zz59rsVLy4xuPnnfV8mNTnM+z9NZ+qiFeD7KUgnZUSF8PuYwUQsqXoA+S5Gz6xzKgT4tceEo/B6BPnGufJnfL3Q+3X/PAN5GYj67ayGNqU1TPsidkTNCB1A+Zh1RkoHyUD4PYNMu1247PlLum5L7aUQ+4EcLm8XOSD7nYAnDZ8NZPmUbLJlNVGg+yFbk66SfdD4aOg8MwwyAPuBcIuaSlIY+Y5O6e7rUjT6ATGNWuzySPm88NvW3kZM+TOcXA64kkD6P6a+aHQ6JPvvThKGtKIE+j/PeYWwlcz6h0S9+d+VOPkICArGNXjU+I7/5YTK6Vz5iTcQwKLpRPqvcKigOGlQ+CCtnoBaiVD6cAiTE3a5OPt6Q0tea3Uk++DhNZvkvTD5DeFcV7qxXPmQMiIVJ1lk+LOlh3TOCZT7aW+ymdWxsPo6lJiGhfXY+YnBGo/CVgT5YHNBW2xOIPu90VUjIE48+cSziujykkT4oGplwmxCGPmBMn50T6G0+zghD8ObtWD7gBgzOTl5lPjvaxDMu1V8+F18+qhCAXD6OIqYlS55aPq2KCeMjoGE+GUwN+wQkXz7Ez13pouFYPjVkY/Ffw2c+26tYgABlWj6DG/DL/sBhPgiCRGoh7GU+VRXfVZe8bD4XW/+05Kt7Pi/3vIMUUpE+oc30tG/Ccj5S8zDpBU5tPt5kEBa84ls+uAaNvBIJaD7bP3Dbj5ltPgQbGmslO3M+n0xLGyxMfT7oPPOUgu2DPsY274e0EIk+6Ruk3OLVij485zGrWLKLPiNDKFpezYY+/M4s/eIegj6aDNGyuJF3Pinx50jH/nQ+RznKGWR/VT6fI1zDgjFgPmB8ylko0lk+N2TQ57oGSD7G69MsH3pUPi1O16I7Ilo+Ou6a5jEoTj6OVDE/f6lHPgJgtx3rqUs+EkRBsrOWYT7aX0slw8BkPjqDeaLC6HQ+OOtYxiWxiD4o3aLTaFuXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3040\"},\"selection_policy\":{\"id\":\"3041\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hkU5+nv9Pj5fWF+kQO46PilXbpmXTj0+DMYydP2lQz76v66sZxA8Psb2s/RbTUw+BNc14jG5RT49jNS0PzRJPqcAOU80ZVA+In+zQ2ciVD7EDBHSZ0haPjFDLRzrrmE+kxQmWeorZz4X9s1wUe9uPpH41qKJ0XI+dKBY/h63eD5w34UYF5h8Pq1cz/QpGYA+DjjdH/g2gj6O9RMVngyBPpx8amF9kXQ+h1XTY+DyYT4f89Xnp3pTPtb98PU/YVM+lMw929ajTD73CRA7YfJFPjUWeZ0vdUM+MEbgYuEYRz6O5Rj8YExZPjAw2omBiGg+IooVS6uhdT63bWhNXkKAPipMAlZxlIY+fnyyG/Zvjj6qhwgdtrKSPgpjlDqO0JM+biont68MkD5/9s73SVKJPtljSIY/k4A+QxjITmJncz5A2c7rQn9QPgwAGied2DE+twEcRe2hST4CVNXAnjVFPpOaovwqh0c+u1tvXj/TVD5SkHUtDuRGPvicVR1uNUM+bL4hxj8QUT4toiS7eKBVPqIfv/650Vw+0JC0iE5zZD7VzBaNZbtqPiCQrSPzc3c+XS/QkQUTgj4sQEcKvB6IPijiiTl3zI8+o5yI3J2TkT4LSU8+ytqGPn1IdhZ1f3E+CPFQWPWMXD4Y1Awb58JiPjruRSz5UV4+cUTYhsWSXT4XPcz9clpXPoxVMZgV5F4+o+zuLmXeYz7LIGx/umVePpkv4qwywWQ+cBIYQs0JYj5WLZDF+ktSPs6uQh0QtV4+p2URcA4+gT7qzCCVWOt6Pjh/vf1UDIM++rbI4DVNcD4xeqOjCp10Pt6vvX8HQ1c+bYEQtbrraj4ijav6oBZvPgDz1Vcy43M+yTiR6boFez68Yc3qJHmEPth1u1mLKok+6Gygq04Giz7fSyQbHk2MPuxwi5CRbYY+NVhbnyxKgj4WGY0NWUN4PsucgnK6mHI+RLgTmm/UWT7K1pkNKVpfPoJ0zF6NJlk+c9duT0K+Sj5eyZ1+/X5bPsltaK6eiVU+Kz+3FHrLTT6jmhC+4AZZPrzhpYPFiVQ+N1se7jUzYj69TaCql9xtPsKH3ervUG0+zERB6WN9hz7JsNAFR2GRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3092\"},\"selection_policy\":{\"id\":\"3093\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"L0snwYnRQD4XLQdIYKk8PpL3s3BwCEI+0okuLiATRj59SBi5CzFAPjq4SVZ9Ekc+1gUE8+vIST7J4ZXzhOxJPqZlDdfXrlA+I8SMq5SsVD4XPosk1rZaPlPg0eF94WA+S/isomjJZj7wcL9Q3ZtvPilSousm9nM+VboseynNdz5IOjS/CZx8PjfBAJrBiIA+SOpn+Nr4gT7m7zBSRwqBPgOpnG9FOnQ+1bFedrGgYj7eL6Ft87JSPl/W9BJLSlI+48oXEtdBTj5iR/r4ZKhBPgOyCbNy3EU+c3cdi3kmTD67PkJJVJBZPnjxRzjttWc+jyYUL+9hdT4yGVRdrgGAPnLJTzfGoYY+UZzBikvRjT5RHEV3dW6SPtlXDyU7fpM+iAjdrRTPjz5haeZGTTGJPt7Q4BEW+YA+bFwTSwp3cz6PPAaZw9JPPu+vhmP2wi0+lc7zGaB7WT5r30zngAxLPiVqVB0q/U4+3DiPIn+aVT5tQvTNE+FUPvZHS3asOj4+wXtCvhXsSD4PC4gZCR1VPnJVSTXNOlw+avWPYbnUYz7bpEsVxRRvPsFwA8XB8HY+2fXiGDUSgT4ADz6hUgiIPo7UgGEY1Y8+YSnxreVvkT6AkRTcKmmGPodbwKeRTXA+1Hn7Dl4MWT7+S4vhzjFhPiZvcftJc1k+AaCOUyZ6Xz7om6JKjxxVPnZ4h0DRHGI+/oXkEvmVYD4FBu7Mi79UPiB6l/BLHmQ+P2KQhbIeVj6FhdFIvpddPqduwNXdw1k+HSiaF+MXhT4G+cKqvpN2PriOinvMXIQ+OjuZiaE1dD4Rkr0FGH5sPmS2g9D3xVQ+THooTylKZD6MZMsvRIZqPjDw8RrxSnQ+wtHtSXpzfD6gjUCrsneEPnb8CFBZDYk+1dWR+bWDiz6HYO+5JJiMPhpdAPJbmYY+LgNZdqNqgj5DiTTQS0B4PrxGLnyc7nM+G+Qu+q3AVz4jNo/TZhdhPkf2FZpg/1M+b9bmnKD3QD7vzE1ANrpXPpbOYCHUMlc+7xnjCgfbUj57ZlS7g5RVPqXPMFSACGA+zxgln04eaT7+BGPV1IJuPmdV4sEBcW8+FCs9pYfyhj4UMIVLWwKTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3048\"},\"selection_policy\":{\"id\":\"3049\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wkJI3fx6Qj4i878wZR49Pl5doX6EAUA+sD5CEU3VQj5O6F7mXFU8Pj8jIvNeP0k+vX+XmeWxRz6fsMxT3VpLPq40paoGt08+j1WAQYiiUz73NcyBgnRaPkcYJ/E/fmE+dIHewig9Zj5JASWuFotvPpoGEOzMwnM+rFkdANBQeD6CqOlBkiV8PgHIFAmKB4A+m2yWb7QRgj771DvjbjSBPnwh5Xf+BXQ+1WS/XdRlYj7oHN8BKndTPp5uhmY82FQ+0SeYE0hQTT6P0Y23gAFEPsBnoeqC1kI+JUuCSRNySz6rwFQBmglbPoxN3ayJPGg+8DWkv6mFdT7pmUfdpX+APh3hwOiAcYY+PhQdMIUUjj7N0zRDZUGSPvLqeSKEnZM+HMdF6s5TkD52c46cCuaIPrP/rXqYs4A+7u5HPms0dD7l0P+Orl1RPutvO7akcjI+V4MYrFGbWj6BGeJvdRhJPoHh2AJfRzw+n3/yEYM0Uz4buj6Mv9REPolEZj/BQj4+2maYFRMXTT7LdAxF7/RUPj5/K5soDFk+ePCLE6OkZD6tHvyrgI1rPi9q6ZPRe3U+rVmLt+lfgT7FldMKm32IPozS7L1hio4+4a4qcs+JkT4ckP+SL6GHPnFL461pKG8+xisvx8u6XT6V018RJtdiPq5vfDnommA+8udzlHoAYT6gv+LFDDZRPnZPnUUt82E+g97/Jb2mXT62Cw3HrDFVPu7Zl4YPaWQ+E0D03QhsXz5vYPZC38JWPpekqjpIcGM+cdtUBWspez4ZTAARSnSGPvqgQ4M8KKE+LQFIsG2ecj7beBaqdHF3PtnLlXZlAVo+o+awqwgOaj6inHiH3YRwPvTy7hrgYXc+B2jiO2T3ez7rB1UAQkqEPigaz/7HfYs++YLmAVLkij4xtBNedMCKPjRiSWImdIY+nTB8fzNmgj4XL7z2ZL92PkEZ0scdenQ+zx2uBrdnXj73Xiby0ihhPrxnjKj45FU+OrQRHRoRSj74Lf4AauxZPs06hrvqZ1w+KEhUNhhFQT6p2r5qJoxVPq35GdtgZlw+wxdiw4pRbD4tFdnSqe1tPjbTY56wpWo+BtZeAgFChD6AH91jE2CaPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3072\"},\"selection_policy\":{\"id\":\"3073\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"mq6gH/XIPz4RKQRVe14/PlmtdS+rJjw+pjkZ0SOHRz4g65ZWmB5BPnfcJ/Hcu0c+PsNkLmS9SD6sT/SgO5ZKPpmVgimTOU8+0qvA32MBVD6TH1pJs3haPszaG2n1s2E+xrbCI6JZZz7bDu/16/JuPkoVojQZqHM+EvNLdRUheD65a5CHwnp8PhIIU6LeZ4A+mtkSNGi/gT66OatrZeqAPoV2jIQixXM+KfkcshjpYj5j6axfU4pRPjl0u26lolE+nOsaGIfwTj7Qiz38EWc/PnP8yH3UD0k+cDyfu7AoTD6oISk/9xhbPvM21jUW22c+pZof9qUpdT48MzNldBaAPsWEXfQDvIY+lzfdvkoTjj4mutPcbmWSPte7BFJfbZM+utdbcr1VkD7JEcwHw/iIPlV8ZcSVDoE+4AXNlg4bdD7RmGKRCtxGPuziHB5zdjM+MwGfNc11UD7S+bWRH75HPgLIeqP+GlI+vC2q+EpbVj4yw5lhIgZQPi58vDlLaUM+Y3ClkVCzTz7hpJfdbJtbPtoYRVBTAFg+YsQ3lK5nZT71loWn3WJvPjuBudyyQXY+L/iINFrxgD4fdVW0fD+IPscPu/W7ApA+IIehWTdWkT4oSDN3KGWHPotQuSaVfm8+j0oB9thyXT6bAuxVLQ5kPpywGM1dRVw+jgOE1mxgWT4qKHgwy/tVPgYn/tPDDmA+K7QoDkhLYj5rcgf7s2pbPgLcamKBV2M+EX/MEJL7Wj6Wf3P84MdZPh2DgQRyZ2E+8XXPs1oNiz66wb99zqV5Pue2VPndI2o+rTaK1P3+cj6FbnqUF2NtPlVc4WK1i1Y+/9MNEFc4YT76iBDUxutwPtuGBf1KpnU+j8AibfqJfT6v9Rv/a+WEPt/qhS2bbYo+GsGpoLReiz6LUayrOp2LPgVtvkYoJIc+W6NwI067gD70H4GdyEd4PrVvxxxcRnQ+yjm78fAZYD6Aq6z3JEJiPsysf3PsWVk+DHTC03mmRT7IRnFMGkVRPkGAm3Q1DFg+P4nvSWH/UD6Hph7yAUBSPjtHR6/D1Fk+E+/6AVyEZz6UEgG9ToRuPtE6ToFuH2s+HOikYTCtgj4u2/Ph90aVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3042\"},\"selection_policy\":{\"id\":\"3043\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FbRsSEP0QD42gt6+30g+Pn7E6pEPBkE+yktkGRCyRD6lwu8r2TRCPuACgF0UVkk+9R7wRpczSj6oHAlZR9xLPikQ6c00D1A+vofSqvZhUz7WzvhfdUNaPt138EvxDGE+ELyDpAS5Zj5dTHAYiIduPn037m2LN3M+guPMOHCzdz5BF7OK1Xx8PihxyYV2ZYA+zUq/WtPrgT6MALzJqQSBPlrPLQK/LHQ+8vjh7Q25Yj4l6OMk7+JRPh1JpapEAVM+87nynEy1Rj7JGA5AqwdDPkGHpY9wWUU+h9r/t7YjSz6UK97gqwtaPn/X96bQjWg+H6+C0f1vdT452vhuu3WAPu35nlffBIc+CFtA8ggYjj5j36yQMHySPscm0oteR5M+snkSJKwgkD5bWUUqQQWJPpWd7PSb34A+PvQkC+2wcz61N5K2WRpRPk64PtqgZyM+5BhoNKutYD4n3z/3sT5NPow5ghaLhVA+UB4JiDCEOz5Ayt/VAmFMPiZruKOjSUA+ytr7gcUhUz6TPG6xmwFXPsGVQ4YYYVk+8xAmzyXOYj6VV9InhRJvPmDXzy9ItXY+aAJzz1+KgT5SwW/WBxWIPnEwOjnRmo4+EsczD25FkT6EN4+GYwqHPq2VfZF8kG4+OCgBXqx+Xj4t5DuTmidlPhMwiJVamls+d4Wt4m45YT57fsDqEllVPgpB9SU3BF8+82SiG29vYT7cI82NpPVWPi3zs3GMuGA+K5UbPql0Wz5yFH0IbKldPoT1+lgP81g+V/Y47Jn8hT67Pd2B1OJ4Ph45MgRWs5k+AM07/vuQcT5zA5b12jV0PhcKtYDB+V4+MEzpzZrgYj4DBC4xN0FwPssLrST7SnY+IrvQeE0NfD4EokPNsZCEPm463WGUQIo+SBzfvx6aiz4c2kqm+huLPgF7g3L5c4U+8RHWREDbgT4sBrAP8Q56PolbSEvLknM+A5YUIF4BXD6gXMSc/EpcPq8JViPvq1A+GUVrNgoHUD6hNWdAr9tUPgwkEo6zmVk+MV9CievxVj5z5aHLd21NPmav0W5W9V0+PvdlzhHzaz6cAbs8FFFvPhBvuG8fUGc+w14GUe51iD7Y2xiG36yUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3034\"},\"selection_policy\":{\"id\":\"3035\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"l86o06C7PT7zAGoovXs6PlxnhITQGEI+bwzpXBB4Rj5xGpr0Tuk8PmmVZCVWp0k+VVbuOyPmST44f6E/zEdMPmfVZM8y6k8+wPv3c9GIUz4dkkt0LqdaPmckMe1E/WE+7wzyonV2Zj4/56x+0QdwPq9R6/g/mnM+sTxVaRKpdz4KQYBR1RR8PrEQOrnvRoA+qFDrwmDmgT6iK2RhhyeBPjEpVL4OV3Q+yBV6VK1vYj747mdbZ8BTPrpHsK3Vj1E+wg8fCIPHTT45ShvHJv88Pt8XL6oNw0E+NHvo6jnsST6lGJV4n6ZaPuP1pn6d3Gg+gCcQOqY3dT4WqWXo7m+APqjvlsmUFoY+bmF1h1+ijT5MY/M1NniSPjCF5QIRfpM+RM/w1F0ykD43vBKQipeJPu/hIIPVDYE+P7Dedd3tcz7/ArJurOROPk+F7h3InDI+bTzhzOXhWD5MVOTZ4mRJPkA4guzgMU0++9rINaeTTz78rXx88eRJPrFca+aaYkE+BAFCXJpxUD5XyKPhM7BXPpM5M1PXOWA+RzaWn6EDZT4FkflKemNwPiyaVyrqv3Y+vj+ywuBAgT7POSTVNlSIPkiFrjExlY8+lgH6piBukT7rLI26rYeGPiveGqtWVXA+kdFglCmKWD522zJJsmNjPq+Aocbm0mI+L4QIl3/gXT6D0oFRE41aPpFismgVlWA+by4a8trGYD7MqSNI4lpgPpsMifzX4WM+8BirxBw+XT7NM7b2orNZPoQGC9fanFo+YDNvY7R9dz67Qi15BoaAPpHminCzSaM+/eenBDMQcD5NtOB2OBJxPhHRUv1Ik14+w9cSmF3bZz4gLGX403ZwPl+os75JNnM+AY3uZNINfD7q+YEw5nqDPtdhN4HYYIk+0AnBJSkKiz5zJkIHLdSMPgYaPzkVBoY+bVSnUe5IgT6NbO0WixJ4PmLlVFnrC3Q+UnGIW1ekWz5jOvHCchlePlxs8QSm8E8+vLINccAFUT4+8wLk2XVfPjWSLqXsSFQ+yATRoqnSUj6ISd42Rt9VPsCluMZvyE0+a1fjibWaaz739XS8gCVsPpbGROb0zXE+q8EglX4ykT7T61TQKeGFPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3074\"},\"selection_policy\":{\"id\":\"3075\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"aHm9/N0XQj7N9dUzcH47PnMhEEd0pzw+nXRJz1EbRT4P3RS9JHc/PvK+gR22Kkc+WWJTvWNfSj4R0i3wchRKPga/j4SYOlA+U3HcygEzUz7Lk8aMpy9aPgZwGsPf6mE+qEwZU+fuZj4HYGn8xaduPhcM1KtgjHM+qbboBlzgdz46teGqND58PkZhovk+PoA+jMvN8lAUgj6vn/Fz2RGBPmFfWEtr5nQ+7YtSTf5ZYj7WSJrbGmxRPmj2Vnn1LVQ+UbPwGabQRz4s0R/6zbM8PlelHojlqEE+U/cCYIn6Sz4RfMaT8eJXPk3oxbC+/Wc+hBNuycO5dD5YPNVWXY2APqwxYUScb4Y+PuUjnvMijj7dgWQkNmaSPh/GSzvfhZM++XXbEUAHkD6CuHV3n9+IPvzb3DeN+YA+M002v7sRdD7GxSJ91I5QPm2ajbXzkDk+N2G82hRHYz7cj1FhUChRPoPTkD0CBlQ+rcv4lBy2VT6lOIiXcxxSPl+5+sWiE0g+X/5nMsJbRz4d00QCXMpZPi4Bg8T3tFc+GIRY4ABmYz7FnSrN2bJuPv9W1ROcp3U+lV5owBwZgT5P6JlXeJKHPmmIWLzU8Y8+Hj21Z7WUkT7tZdzS46eGPjYi+g6FsXA+y0O/8cZqWT5NxTJCM49iPogNep90xWE+pD9k3QowXT6esKtw69ZUPnPSLhWxUWA+xw7+cKsXYj64Ho1kp1pePqMc+gWld2Q+BFMPvMlUWz4HHQePvwJePmjw3fydJWE+z+yWDRFTfj5ku4XFzSBwPvARI9NIiJk+i+5mZX/pcj59Q9TCDzBzPsPCK6MmA1o+c7qlzT47bD6uOqgWVs5tPhB49ZydsnQ+r9zwgf/qeT4rlD9p90uDPmmmbdrq3Yk+RwJtHNGeiz6udMz+iMOKPkZFR/qKwoY+Lv4j7UaZgT55xH6cWb93PlFx1vIMoXQ+GnlMIlVsVz6wdDi5+0VhPk8zZBG0DVQ+pMI9TQ+rSj6xXO833t1SPqKmj7/dm1o+DqsKNrFLVj44aIdnLAVWPquBWhh+CV0+roLil5O+bD4GrdLmZ/tpPj1zBkTLrWk+btm1ujRHhz5CA4WBZy2XPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3052\"},\"selection_policy\":{\"id\":\"3053\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3030\"},\"major_label_policy\":{\"id\":\"3031\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jTZDfst+QD7ZGrzr5R1APvLzdhmgeT8+xUl/1q4GRT7U3hUvt6g+Pn/xuUT3a0c+yAfD3iSvSj7JyukvXrNLPgooauRBiFA+HlDWZuQxVD6bpvdiw9xaPm0JgzHS2WE+uNfHbjdBZz7aew656WJvPiy7gsLJvnM+XW04Oc+qdz7ay/USvZR8Pqr/UEsoZoA+VGMwLewsgj7VfJH9hjeBPkpPEoTtLHQ+oBSAuR+KYj6iiLe5MlpSPvl4Ahb/xVE+3V757nkJSz4G2Zf+1GBGPsI4Ob3Xi0U+5RvCVDCrTD6QNjhb4X9ZPoWubFdrEWg+ZC4Qa226dT7O5SI7qkaAPsgKTH6Tt4Y+SxUFQYHPjT4RlYTX/XOSPiBBF5ZnDJM+6LrB7gazjz4skNUnbu6IPgSotrUEloA+LbNQt7Djcz72pMoxqC5OPkgH7+6BOyA+cuMbfm7FMz5wYh+CghBHPlcVbTAnTU8+F3Pxk/e6Uj5nHySs25VNPjUk20qht0U+BlCUanO9Sz6RPugVArhbPk08xHXopFw++1dhosMNYz40DHm4UPhrPhr7WomKYnY+JFvYyVwWgT6NgRcp4GOHPvX8l+qACpA+Rgt+8h6EkT6ftL7ywjCHPu4HLU11O3A+C+XDMXawWj6cLFcCS5tjPtVfETXxpF8+QraB5Jl1Wz719Wm6TddRPt6l6WPzQGI+DnLSuh8nYD5EKg8wAadbPur97DBO5mM+ueWsCwE/Vz6/cESH0IFePnADpYh7Ylg+yLtZo0oShj4T8ia1M4ptPv51IItEzXU+ulYizdFxdT5T9qCLfKtsPpFOznIDRmM+ODTTFGrYYz6RSKGS0LNxPthqepUaWnQ+8u/+l/c/ez5WR4oRqneEPnSDwXG0t4g+H4AKlririz5uVeMnZfWLPikkTFn15oY+DYblzD6Ggj7Re4dzsxd4Pqb76M50f3M+bSgHS2HCYD6/8lff7nFgPtuB3bCZ+1Y+f3n1avDUUT6vbYi1QJ9aPnrpFWK/ylg+1EkXJiPXUj4dAher/plSPsXV7m6FFlw+D5vmQXDsYD7lC2csiIBoPh7bwJ3CYWw+gv5Oi3h8gz4sOwTi+YKJPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3076\"},\"selection_policy\":{\"id\":\"3077\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Dp8DYomgPj6TreudcO83PoicsTADC0A+5KX+r8TZRD4k1wuIL8BAPrgaMlSf6Ek+hnfjIlnVRz5JqEdhKmBOPlUfn/Zl6lA+u/OzCEt2VD49lR6GzcZbPvsRMFbhrGE+5XiMVuRqZj6yRYhQtOVvPtBVK1zmtnM+3LvdJZDRdz6o42keLMZ8PslwiEjUP4A+JeehoEPXgT4plS2rWE+BPgDvak9nMHQ+/ruQ1xJfYj7nmzCv9ilSPgToMG5pV1I+j2zOlWLcTD60BX/wtQlJPscW3iOatEI+xuDCEf0iSz6dfoZyJUtZPi9GkuDbhWk+EsDI4MNxdT7ujCgrOV6APjYj+39droY+YWlO7xEJjj71G4AYO3GSPiRmxpU4RJM+BkuReQ5LkD6eTl6GsCuJPuNe5G8mFIE+TYuMfiHjcj7f9KOliOpNPnXp8nNWCjU+DMT5lhOTVj6509i9KMlIPmfrnYYhQVE+BJpgj07AUT4zaTbG5hBKPq46L0SjPzs+LOj1BOCkSD4J4Qgujc1bPjj8Pfy2fWA+AuMI972OYz4g9W9m5gZuPp7iSQjjynQ+Z8RR/O5Ngj7I9hcOQvCHPmKLNxyPSZA+j6qOA88okT41XTnOZgyHPrAbAH09C3E+26T7mUJ+WT5vbidG8AxkPi5fvIfwtmE+HrkTtQJhWD6FSvXl7ppUPoTT7QKqj2E+EcXQEKzrYj5a9bmctW5fPmgZ4dgkNGY+CopWSs5WXj4BSzY/rUBaPiG6wJYBbFQ+H4oxGzKNeT6wdOMgU2+HPr/phMRaeX8+An8CeF6Qcz5lxGv1FuV2Pgj8HCPkuWE+THJ7G5OTYz45Nw30qSptPldaYTCqaXU+oqfHd+ByfD7yYdvrcgmFPn2ZXpl2lYk+91K+GrD1ij4oFpDuCBqMPpXgfgc39IU+xlW4OiHugT6J9Q0dDVV4Pln3lzg+JnM+V5J4ub4vWD7mpcA1HDVfPv/SyIJQrVU+Qv1f89lNSD6QpJ0nE1JSPsfVnpBGKVo+4PtcaUw4Qz4Aq7kIUDJdPrlpdOtq2mM+ZG3GLrHoaD7Hzb6296JsPihIiwZTbm0+alGUDh8wiT40pvRmHUuJPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3058\"},\"selection_policy\":{\"id\":\"3059\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"3031\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3027\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RWeWscO9QD4IBj5Ga4U+PhZIu645nT8+jAfbuXb6RD5XUN0SjXg6PqL9/s7L60k+2XsFDfJmRz48HgUOy5JNPlEm8Ht/0FA+XIM4WTQYUz6TxEwXxWJaPrXhnHNBsmE+gbZqcNu0Zj74kWQuLiVvPl2OHvdeAHQ+K63x9FbAdz4Iz4dNHjB8Pp0jY6nFLoA+GaSnTukZgj64uaa9o1aBPsmBGVEziXM+FmeHb8yXYj5xKIxH5DZSPhzE2f9eoE4+23eL9x4FTj6VKsPC6uVBPo/CRtoYDEY+mnrjnE9vSj5zKxUD7GlZPrafLzb5kGc+BgsFK6OLdT7ag9dDZV+APsFVWdsSp4Y+A8aHkrk4jj6nlGULcnCSPg27wd9vL5M+R5Gu8zYbkD6dGcKyCt2IPjQuAqyopoA+TGxTNy7vcz7V7Rgo1KNQPsty+1zCnyQ+rXyzsVmaTz7DhJb0tEpZPkozwPhTiVY+m2YxDD4iQT4Wfo5O23o8PthLf36qsDY+7Q26uKLjSz4RF+o4HWxXPrkutozGQFo+2WQfnsMLZD5vh9LImqlvPotagfx3+HU+93TMoNAJgT7nlKLfN2+HPqk82MCqEI8+C9ryoed+kT5Iz5bbRcOGPqnrv00rbHA+qMb/F7qkXj4m+3D9EgNjPoerrZ+tdlw+vAH03Z/MXD6sSh/gjCtWPiGFMbYT8F8++O85BNUnZD46Z7CmvUJgPjXL8QLDhWM+w+ONpcVRXD4InTEMOxBVPp2HYq06tF0+THLAebukiT6SAfSylrV7PsLYy8LhrHo+Q/6AJ7dacD5+PGyOAiBqPhWdREmogV8+csnFZpKKZD49xhHPwOxuPop7cs0tN3E+XdetgBODfj57kmbY+jGEPvMBchgWxYk+wXRY1/yNij68GgGriueLPglLnX3PRIU+50OSUZCkgT6g3T87pLR5Pp61rWsx8XQ+4H1uXO/9Uz4PTjRx8m1iPvoeqWoetFI+65CmuefPUj5QVt8/B5ZXPqRPSI6WmFE+fOBLHo6WUj4fbnmeE+9YPjc6Ra2Hh2A+yG0pzzx1Zj5FIJZKpUxwPiCOaA/jQmo+XAZn/CyJhj6DcrHR6uyQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3054\"},\"selection_policy\":{\"id\":\"3055\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"3030\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3028\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"NOY9NGvzPz59z+MoDOw9PoPQEVAq2j8+sdF+4jFDRD7s8ulQvk88Pv/epttKyks+5XyMZFy9ST7SGJiJUWJNPnKClKWwIVA+ZdXPYNedUz7t+O97krxbPp5ua0msV2E+VHjrEnzFZj5laPFCpoduPgoN1BnMwnM+i8UftU7+dz484njq47R8PmIvTSVCaoA+g4KyyAULgj6XeP9UcjSBPvCuJy5pJHQ+LOWUig5QYz5d4OFlNpxRPmWZ0+VDmFI+hkWW9vq0Rz4iETIsib9DPmEcpn7Kr0M+gU1w5/DwSz6YI255UMVZPsSIEDP2WGg+YdSTUP1PdD75goV52cyAPjDuNmxhS4Y+5NQ+RrPIjT5eZWVXwoOSPoalrYGHapM+bA7ncGLcjz6NhYVyrNKIPg3T5jgB7oA+DL4FuYgPdD5HvVE9W1dRPpwRKBWH9js+9Jg2XfHxSj4dvhNUXIpSPjqS32JgFVs+2DxXeMh/Vz6MEV5mgcFGPq1Jlz6ZbkM+M1F2+fvQUD6TOlxrzbZYPp/len2klVc+JvsxL9KbZD7CDlwEKRBwPhCkD9878nY+7VUYKZ4Ngj5YfgnFcXyHPlBLltXAt48+KWX6h4fkkT63taCIxkGHPo3uGT83wW8+uHo7ijVDWz4CFA9Vk15iPrNiVaXbl1w+fyVGBVbUWD67O1rpBMBXPjssmuQ9vWM+BpQR+aqiYD4SITfvRBNdPj8hBFZlImI+Ds1vEoDmWz4HW9oNSuhePnkbODod2WI+59amPnDifD4h8vplDK5pPq/ImS5JznA+y0+muy0sdT62WJjmm0pxPvy3kExTmlc+D2F8/pncaD7Jz5vuQQBwPgOu1Eyb0XU+EZnNX/Axej5jntOa3TKEPs2YRET/MYg+0hnI/BBliz5AcXl6tvmLPjuwGBy9SIY+fEK7ToVtgT79zfVOSd54Ps9SWxT3THU+OqyHSSIkWj4COAHHJs1bPnQFYnxv7lc+vDY53RUlTD4widdjBCNVPtuHwJ81XVU+s8rHwxYjUT7qeRqAorBaPn0q+wwUaFY+3jPqZ57GZT5mtOkd3q5vPkqjKA/6DWo+A3rw+0gOhz4HpA31hfmNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3036\"},\"selection_policy\":{\"id\":\"3037\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5NLGiJQ0Pj4dUZ4Dz88+PgUM6PsWrkA+1olWP+CFRD7Q4vqaj7U7PhBmakN1s0Y+CrFlJcK5Rz7MX17LyOxKPkYNhQzhVVA+Zo5f8w78Uz43sFTBRY9aPkyaD/gEW2I+13wj26OwZT5QKfp3kv1vPmI+AOzzCnM+U5nyMzkFeD5UQl8+jW18PmbwbiVdHIA+pN7UbLcBgj4XoNBS7O6APgRN3ee1E3Q+PEqUW9JgYj71lE3KuApSPq7MsnhZOlE+QiLkCvLEUD6ibzYdH0BFPt32bkfbC0I+MFfCliMcTD4Ao5CGj4ZbPi679lcHnGg+eiraTpLJdD6krqa6xGCAPpzlbNTDzIY+SspmYUfujT7wAjeUbHGSPqOzrb/iVpM+4M0ace/ajz6GtGjrO8iIPnzLxhBnvIA+vcS2iavGcz7HX2mDjgBPPrHOFOjFVz4+OsEIQZj4UD7BW8lTxrVSPlHeGejsxlE+45wtSKmHTD6ZVl+f3xJIPuTyDtrjODA+VUz3FOuYQT7GqbZVVOxcPptbO9YXwmA+uabq1EdpZD7ac5koHBFwPnWNf0UVXXc+foWKe9ZIgT5JaonvnWqIPipA2+xFg48+6OcPp+HSkT77nIXWRmeHPmYpwNi7lHA+JtMUtWdUWD5gVcEmYJtiPj5LY2MHcV8+5LrdfrXoVz5NHevO9BxYPuFV/qgdJGE+3pBtmlLSXz4p00Io8I5cPvoPXXjayGU+J741CCWMXT5bsV9l4epgPiduHePWumU+LYMQhwkghD7GQ4EoV1xvPjDG0Apy/JI+PF3d7Owfcz7NVGFGYNFyPhGZzE5dbF4+ZO3J8gOYZz5+aMyHyMxtPr/NWRy0JHM+RZjXhuv3fT5232zzD/eDPhLw2wO8uoo+CaIYr7lzjD7uZIKHhVqMPieTEYsvaIU+QbWIrb+xgT5li8u7DrN2Ps50n8gP83Q+kkobQDGJWT4efsq8FVVZPjckacP5Y1E+BR1rUW9OTj6M/mcipvNYPosj41WzEVI+XYz6Nxs4Qz7HoJg1XK9MPqhGEPDzzls+Ppep3hkLaD6UE7mVs/tkPhZ6AfuGxWQ+XK+gTIt9hz6Rbr2nJMGPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3056\"},\"selection_policy\":{\"id\":\"3057\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IkB7Qqd6QT5uTv15yj45Pi1nYWHWQUA+d02tk5yoRz65WgHj+544PjVeqiCaC0k+hEggnWmkSD7VkbJz8J9HPpFUPRJDSk8+/ILecGIiVD4r7QBJz7daPkNS4OVS82E+3mku/sl5Zz4+A0B03mtuPgF2kqBz2nM+OWKpV5syeD4giOOaTGt8PvGLlh4tZYA+9WNEY1nbgT4MFqDypwKBPlQKK/bkcXQ+2wMssfKaYT6EC7HcKD1SPn0qPvTrjFE+D6DUnh6NUD5o3QKO+TY/PkVfA+aXS0A+Ize9d7CdSD6ESvoLOp5YPh6sCbztfmk+gbef2iKBdT7gNI5sDhmAPvuCBjDQcIY+teULv/Ufjj7cC5h6D76SPqpeCeyx3pM+qIDJQp5JkD6QcVjYT+2IPud+ZkJBeYA+yEHaAOdocz4MuA48eQJOPsbkhIaGnz0+vQaRNqBdVD5hNnfy6w9TPj42Wg3RB1A+1R2i6skjUj4LWTL6wghKPgmYY1j7lz0+AP/sI2VvRj6BHlrboF9XPopNTzmlFVs+xBYGv+KIZT7rbXKiY5xtPufgiLBSJHY+66yXuO1JgT74DTA0EnyIPl3hZY+Nco8+kjwPVwpMkT56usHVOBmHPqPHTLu1YW8+4gLQL1fRVz4jA7q0AxdjPrXV+fOQ914+ACDAQ3zvYD6F3t8ZpHdVPn/+iGV/8GE+dldwy5hKYT6o/Mk9gztcPqeyC3D0YGI+lFPVOP5FXD4mjkzMaC9ePgXvs6viTFk+648/FJFldD5C7zBgTf16Pj6pF2M+3YQ+EgzTpCMYdz7xESj71QVuPjJc//V6x1k+de8pzBdCZT4ul2vz+lJwPhgJ36Y1AHU+0Lhu0YdsfT5Iy+GfZJWCPkDb0Y8f/Yk+5sQctf/1iz444QPN6KeKPmN68GJRt4Y+MfzAud9Bgj68vfJ1YlZ5PkiDQ/Kzr3Q+Oma9wVfLWz4TrgKe8lBePibcDQkhplU+9dGLQPDfRD6u+X+AzKZZPlj6blKuR1w+9CoXN5pOVT7oPcz1VZJcPpJRAP9qk1Q+LFEtQqhEYj6Vy1dWdY1tPitOBiIXIW8+/f4pf5aKij4Jcy/G0vmGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3038\"},\"selection_policy\":{\"id\":\"3039\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"37e2867d-c297-403e-a577-dbd34d70e5be\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"eb4ad1f5-4ff5-4646-a630-b6075e795a20\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"28dccc66-44d8-4e44-b82a-d50752bcb27d\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"7ba61cda-e4d6-4b29-8db4-3f06d6216616\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3470\"},\"major_label_policy\":{\"id\":\"3471\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3477\"},\"selection_policy\":{\"id\":\"3478\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3471\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3473\"},\"major_label_policy\":{\"id\":\"3474\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3502\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"Selection\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"pspbI/M4Rj5QUBbo5+FHPna6S786I0M+mbi6lUhGOj7manZ0J3Y1PlZexloRcSk+yrkumda0Iz6dcRTShZgXPqLZiDtq4CU+CrJmJPr7GD6CZl/4t5wdPlZg/Jo/aSI+oIkCcMUIMD4oO4K39XksPpHmdPeJSlE+Ps0gsxmTWT6Zy9wzr2tpPsI1TbzU+HI+AO2tK+9iez5JaLDr39N7PtSN9EYAUnc+JqMMrHMJbj5qdv3zGKFmPjwe5YC0Hl0+OC2TExFYUj6mFOX0vgdHPlRRpSzLPT4+R1ep3LnHRz4UT2Rkv6lNPhZZv1+4uUI+ELC7CDt4ND6213X9NBg2Pugs6RHqIDg+66kQ2G5POD6iaLAgG+A2PiDPhooGyjg+3dB7L5EIQT7wPuYqq+42PlrBRLdTAD4+h/4uxv84MT4U5rsPTRI7Pqob2jzyTjg+Hif2Vs3eRD7U/yPxpxZAPhbQIy1Ti04+hYj7h3ascD6gqw79z8t/PhzjvcgF1X4+F3+HPiEVdj4G8jnRDgJwPgE4aTJXtmE+Ry3wugq4Vj57anYXX65MPq5X6wcygEI+XkIOhobIOz7VSTP1XnsvPm1rsYVmxCA+1kq083eQCT5MtuFh3eoIPlzzTCXUaAM+trXHHg2mBD6mkhzMMa8BPstYwK8WjAc+yjIpHKqBKz59cggV1wpjPhMr6PL+53M+CXNyJgMngD6/wc6xm4uIPoDPnPIuLZE+iAXjaPEjkj6ab9NBwE2JPiQvFKiyhIU+CgyE9qMsfT4juuvoNhlwPkUKjIBtxFs+8QWoh8LfRT5Ja2voHh4tPkrNWCALJi0+hIAwaeaFMj4/GGHA6s06PtacLUqMxUA+8BUAVrPLPT6GiblCIuZSPqAlM28ts2Q+ePgEl16Zdj6SxZDJEAR4PpRS7vaiXXY+/m3YaADHcz4JWyPkgFNwPrTOl3JokWg+T/R4xsBwYj7mPWmbNlFbPpSserCe9lQ+B6sB2Ms/Tz6BOiO6+JZIPhwF4fqOTUI+eqt68nyXOD5m2UBwb8c3PgedMJdEBDY+DfFnOzaiKD7RJfWJ1/E2PhoEKCPN0DQ+UBQjN00vLz4che+GqsUgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3501\"},\"selection_policy\":{\"id\":\"3502\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"3473\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3474\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.68, C/O= 1.16, [M/H]= 0.85, T= 942.17\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3478\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3470\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"7ba61cda-e4d6-4b29-8db4-3f06d6216616\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"28dccc66-44d8-4e44-b82a-d50752bcb27d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 120.06, p-value = 1.20e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"7986717f-f04a-473f-a808-0517505abce3\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"0511ea4e-1437-460e-bd3f-d8dc30bd984d\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"Selection\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{\"ticker\":null},\"id\":\"3817\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3866\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"8QcXFWcCKT5JZVWXeSsbPmj0BYCzfvA9SIDw8ZxDMT5YibSpFfoyPsbpciqPQ/I9/s8lVNzrOj5mWfiPTw5FPpxOm+JfISY+iZzpDrUzJz7Gi5duQ0goPqiGPFUPXyk+++50sxx4Kj6U6Frib5MrPucCqxENsSw+csiVM/nQLT58livBOPMuPgQ+k1ToCzA+/Ko6FJdmOz7ycG2MJ7cYPosnL+QqZzQ+xCYGTJNZJz75YfaMAnItPhKcIaXZyzE+dvDzBzfNEz66V1z3azoSPt9VEh2phxY+erqdOEveGj5SL9YwZj4fPnZcVUsH1CE+F+GB8KwNJD6PRxncLkwmPj8WutrI9Sw+maXCPhoHMT78cRa/W6QAPmBA0dMGsRc+FsL7nwqZIz4X2etH1GorPkgVqSTtjTE+8OL1P0GgLT7O2+wr9JslPuyUz6wbCxs+BuFIpkvyCz5yOjxKLzTJPSimgT5bwww+oqDx3YEYHD6RudMsNfckPuReYdLZ8Ss+r7oBqtRZMT7+hlG6SPEyPnXuBpB82fg9JrRAdJh8+j2yUf6lZSP8PZxCblmFXPg9dPps5tqM9D2Qwg9VT7TwPfBliOiXpek9bl+k6nPQ4T3Myv3oBtLTPcYFNRl28a49Kn64PXprMT4NGJDQeHAlPha8iPvzTgI+6MhsLBobKj4zV98ascowPhRGJ420HSU+JsfouCJKKz609VGCIOwuPlTDLvXWMDE+kHPT7yOyMj5A17RhB58uPk7ojlxdtSU+dsvWy8boLz42brmvDoMGPrb8ydbVRvs9WhgP13/wBD7NLs9kJrkiPgtC5KTDOC0+tT34u+hduj2MTUPN1PIgPo2hjHW/YiM+2vL7IwWcJD7WjgQ0utcDPigp9TbdHS8+zE3uaPQjNT4x4Sbm210tPhKc3YSuqzc+RaI3CGJL4z0gBDfw7rcVPrLGYYmDLTE+3rUvcBhQCT48mB+4W20YPqrk5x2OxSo+vMFwurFYMT6SfQKjKU41PkkyFAfRrjM+Ay9MtiwUNT6quWXTCKsrPmvtfjAxqTc+fD0aWB5rMT5k2tmoKOc8PhYBSsMLs0A+F+AxznD5Mj7eUgZKNBA1Pta+j7MEhDw+nX8kkuKzPz7IzJd+P8M+PqZIUXE6Jz0+gaTJ1Xk4RD7xBO2Uf51DPlw0eZD93jU+c0M62ZcaPz71r1ftwcdEPgx4N1ZXI0U+3zBKuXL/Oz4skFngR59EPocVc94XBjw+8k2RmbH8Pz6XwNtgjxFDPrj3BYX3hEM+tkCiFMMnQj73KJXJ2FtAPlU3m0Z8ckI+4SC5n+LJRT4+mXZqJn5EPqJsWDnckUo+dxTxhknFST4jOWJ06XRFPmhvmW/UBj4+zS78WY6uOz7DcNqtHXJEPvCh85/9HEg+tJPAItNGUD5U2VP4echJPgJ8Ts3GBU8+zf8vaFbbTj7c41fEWZZMPh/x4sewg1E+Tau4jvUnSD7P3XR77mFKPh48ZV20IUs+lEb0CZYdTD5QVvbtXx1QPn7hVLLJD04+S6JgYsP6Tj7jvRJcp7lRPk56gxy0hlM+/ws6vcKUUj6uShPTG6NRPuJ4cy3zTlg+Fmw4ly0uVz59r843G7NXPq++eZYGols+2iT/TlZ8XD7S/HGo5KFgPlV20fPzqFw+J/xEZWOuYj5cjCmb/5RiPonoyuQpv2M++XG53IKHZT78AonKCc1lPlwxK4GYKGg+DWRLudoOaT6IYLGgPMNsPoc4B75BBG8+NMHwn0VncD7fGyZNGvtxPjYDHiK0MXI+3QErlPvBcz67x+za4ux0PkZC0+PtW3U+/UNx+mwqdz6Sq/ljjRt4PgJ0KHBk13g+mWpOvZlwej4/linUNG57PlXOHLwoV3w+sjdZMiISfT6bxEAKBTB/PvN7zmR52H8+kHuf0d1XgD6ZYFQYBsCAPk4xibDJQoE+eqNMI07BgT5aawU3iSOCPpAuCxXc3YI+WcxmzonRgj6NqgBMoxmDPmlEwSF6v4E+QV00T59DgT7vcvSEH4t+PvWK5qlqDXo+4bsbh70Bdj4oqZimmZdxPnbDBGGVXWs+cBpeCmsXaT6jM3A1gH9kPpNtUlXrZ18+zC9oxNcWWz7LxysqrxZZPga5+sHa31A+pLGi+hQzVT6wsgPgrLBPPgN1pUZgxlI+hLmG3X2VUz4j3qUhv3tWPgb8514OT1g+MyfbsBBxUT5TsUIQ+SlRPnggjqNAFVQ+8z7KpM5QTT7nuaCtCZ5NPh3/mlohmk0+Ap4O6cSmQz66NlRW8bRGPjbBT1X2uEQ+ehioTZFiQT6u/Asa24hHPrTJQCmOM1I++EBQPEBVTj5WATkk/UdJPmhYBdIMYVA+3Fl1TmdlUD4zJZNoxKRUPhX2pPZvhFk+Vx+ILk5TWj5Ah7pqJLVfPu7djM+1GWM+O+2AJDq9ZT6WoqqdIt5oPiSsWi6hO20+xhvo/riScD5VGC7ExC9zPgSvCQDvZXU+O/nq0a2+dz7Kdchas0d5Podry3bAMXw+aJyk2dOWfz51xydzvCmBPkdPvmkGIIQ+xxFXfbNqgz74WRTY5I6FPmf8DKuDNYc+FGfaTkNCiT7PgyV4w0CLPjdOd6tBH4w+bm5yYRoijj5ApPINv3ePPhvzocx8/pA+AstdG2mpkT6IUrz/n26SPv2tLojgC5M+XOBg0G/Rkz6WD2N0x+CTPiHRar4HZ5Q+BJXef1Gokz6HTDEC4AOUPnSS043TJJM+pB1Gpbi7kT5b6Crs4dWQPg6pDQOcRY8+9hO+NZpljT6XRv1PCneNPteg9JYp/4o+ZLykiWpAiT4d7svqC3CHPvSExZOfUIY+M7LF7SFZgz4F3oKhBEKBPrj2yDX3uH8+WbMWIYaUfz50uCOBYOl7PoggbZcjfHk+3fqQ5/5BdD6HpCgyFtFvPot9HhH5KWk+vu9R+iYtYD5r1NoNI/NRPqbkhY2fdEs+rs51BWTnPz5IU7GFBP07PozoJXqstzM+mEBCvq4dQj6oTktiHegMPoxgul7IXig+XHTKAFPUND4IftzL3Is9PkjkhWzq22E+FGVDeuXwaz5iZZF9LeFFPr7/PRVryjQ+FIAukjRtSD6As9Ucg0lTPvYYggKKzFM+pszOr4NQVD5qbnTtcNVUPsp0DdFRW1U+D5Mm4CbnMT7rPhHBD9dhPiTVm0ZGdmE+En6/kXDCYD5XY9GHb4JePq51qaZ1MFA+MKSCVKMJHD46DzrrMagzPhSYQo4W2yY+OhcLMu6wVz50LTaz805YPjHda8y9f1g+8hWyEEV5Rj7Ul5ybqb9RPlQkoMF+oDA+at5T+484UD6SjhnBU9csPsZY44BlhTo+nJUTqqpbQz5h/ttLMNRPPltyc65uE1s+0FJQU8EQWz6Ijnddv+RaPsrytS3sbls+UQB4pyfzXD6jCatzZkJiPo7IllkXHGM+jjoP2d8rWT6Qu7j91i5dPsnCwiVELWA+yQoLII/jZj5KFQhKOBhhPqryR3d9H2E+IeIXssr3YD53X5ZYv9BoPshFbx5ptWc+dunnQKkPaz6DSMWEYlhpPiS4icL9Umg+5crrtIb7bj71rmL5/YZyPn8x2kxQqG8+f6TXqgeWcT4Uo21RUedyPnj4rtvRvXM+ftOAEltqcz7g0lXpyfB0PpQZbjtJ53o+FzJREmBJfT5+6+Yx8bh9PsuOwTSj0X4+sFFfgG87gT7xch0X4sGBPkliTNlp5oQ+nrWbGTV9hD7QFwfVFeeFPnmdZIipToc+GTjb1MdciD4Yo5P2iW+KPgyToQBPFIo+RjKKAz++iz4e+fYzf5qOPgCJshuCS48+7zDLXJDpjz4xtSlCIaGQPpMX4pBB5JA+PkYR2BuhkT5wRGbXy8ySPtHxsET6XZM+d9Ig1XZhkj6PIWapCnCSPsmnJ+i3tJA+EYB6hyGXkD5PD7cc5RSQPgVuFAXKq4s+EaFgG7L9hj4s5MYYMNKFPnwB8hZ9DoE+PD8//v3lej6k20uYZGd5Ptji82xe83E+Ht6+Vjpjbz7O6ZTWuShyPt5A9Dyek2k+PrrTpGO2aD4UigoSQtJVPnvi5LxzHmE+D6cnR+qcYT6EuHuFHp1bPhh+aEEjvmI++6tl5d/qYD5k00XOoI9oPnZHvVBBgmM+Phy1WvUmZj4P3B+SeO5qPjOgcpUrXmU+vRgEPTsnaT7OfTBwJcJqPlPyNl1T0WM+2qpm5aJsaD4K4Ykfog1kPmCqmQoH3ls+I3lgs8clYD7I0fQqzCNWPoTXqlh+VFc+wFELNq4bYT7Ni1kLKxplPq96g2vkj2g+qYU6VA5EZT6S8up1P1ZiPgFQAKn7dGA+h9fsdnqoYT7Mnbv+k+xePm5jScRMNFA+tp24V3sMMj6ALfVTQ6ZgPiaQTMk0dVw+ikxBESzTWz5Px6NdLstmPqL4mapWamg+fcQLyj2YZj4yL/1maidpPmrSCIPrG2U+ihWLSnuJZT6ESaBjX/VnPmSkfAP83WM+JBcYqRUUYz5dneJfzzBnPv3psX/OSGQ+vpN8Sua5Zj7eKT6aRX1bPkw7ExKa2Fg+x34123d8YD4UgpnDN21iPopRDXSyA2Q+iWGxiK2bYj44fQeTrANhPi7tFjUbhmY+8DPdxFttZT7hIsbHBHRmPjwh4KcYu24+HPnqzgtkbz71rksKsh1lPngBp6cwO2Y+kAa8oeImYj5KViViQGdlPrgAPOII8F4+W6SHbUt9az7uWfYS0DVAPibfqQDo1lk+LzSEB8nEYz7nDmdYTXJsPrTZRZMa9lI+yY1SQohYYD5PB6aM4BxmPpa95mx+Ams+GMMmyqXBYz5rnkop4pBlPoAMrSiHUV0+CjA1KVxqYj4w0XIszmMnPiKIzF4cWWU+wHrOJhrZXD7KxuRttPNqPsYxZmTmo20+0gAt14hdZz7+z0BP/opaPlCCG2Hnw2s+GG5ddw5khj6Or3JW+VR8PpIEaVACUng+ZANmEUKuhT4Cf/FMjmuAPvTWRl2w5HY+5S7rsAXeXj7QX8b4Hp5ePpYSC9kffGo+VKrbtvLbcj5WZefMcypKPvc3g8cir3U+0K3MiW21hD532ShIhVGOPuSkU+2RzpM+ri35QZLXmD505R1IabB3PsLv9nceOoU+56nmxDyOaj4trF2QXKtyPofWy5Wt32Y+ADYtLnahYj5foD7p5VJiPnTfA40aHG4+bhzUjNXmbz68hqOGSiN6PjGk6v216X8+Yse1dHnfdz4jrYTuMJWIPvJeIPIWk3g+lDjvH9lafz7LyMWUTwR2PpQmwpBB73Y+CApTGeAEdT5YmafsHaCDPgbqlLMMw3M+Vtvfc7cfej5HUpjGnrFxPiYdBo1DDl4+3kNcysz0YD6KYHPVzORiPtZVc44G8Fs+yjfQW15xXz58MC7iA8xrPmSk1p1TllE+bzrFa4CjYD6ZWqyrU+pxPvZMoKEvV2s+buMZD/e/Vj74nHDOv1ltPsT1vAoQY28+gnGUF+P0dD52CO/DPctuPoRymNJNf3Q+e1FW9c18az4bAtpFrs5nPnvoK7sIEXM+2spfQRgueT7IjAxREdZxPhKnZaJhmXE+yqr/fLa2dz6WBP1z6bh0PpvxdzseJ3M+p0xxhvMndj5QfV4uTENxPs+IvEE4WHM+a0Rq77Y9dT6bjqBqsjV2PlivRTU9gXs+TI94IOmqfz6i0ooy03F6Pi4SHBGcf30+S4oRdnMXdD6qIoDjMe15Pn+wGZex034+Niff/yrjfj6Om5y+fTKAPnavTMLJS4M+iB6dCpf+gT5FrN4IghSBPu4ogXxgHIQ+W3IFeMJQgz65cM/2xlmEPgqCvrKliYU+jMIzjUOghD6sawihWduGPtYttp/H3IU+QPC4gUM9hz6CaEs+q9aGPlfiTlWqxIY+wPIqfL24iD6gY0l+h+WIPtM4GvyZjog+e6qSxseUjD5jG3y1ioWLPpl8nf5l74k+M4hWrL+bjz6M96OlBhiNPpMj8vGGJo0++mNkLx2ljT5mMZ5FefeKPtUV6EzC34w+hR040iIgjT4qVXnQG/6NPlP2ZMzuw44+PZ/NJEsWjz7oY3vxITuNPhp+8ddbOYw+jA5wCOc/jj453PHCHg2PPtaYXOt1+Y4+oLJJ1DjNjj7rIiYIj6aKPq8JsqovDI8+z5dA8ShCiz48rOcyeR6MPsP/2TKN0o4+NZR5HIpejD5srwfQZpeMPvcXQ/7koos+GHNk3NNEiT7hNBHv/6uLPh76jVjHpIk+bxsy4GpvhT5Ef2vwD/6HPtBn0Y7zJ4g+tW/PnKF1gz5XDsMXGH2IPmk1jvAVCIU+U7WRNPaFhT426Q/tl7mEPo4KOD2vrYQ+6y/CY8MYhD6v1F+wmxGFPi8lb57/t4I+tEk+/QkkgT5gCfn9rdSDPnw6cKJzboA+apfnzXwQgT6ERUkGss58PpLsOK2SIHw+X75q+/8jfj5p+HrPEr95Pq8o10ZkC3s+HyM8pHi3ej5qh2MNuZd5PpBmy1TlXHo+zAiAjozMdz6z4Hh9bPV8Pm4A04Yz7Ho+CrxughiyeT429/nxHGh7Pv7pMnFU7Xc+xtAaoavJeD6Jv4/5EtN6Pq5gkOq1jno+0SQjcmSUdz6gv6qX4qxyPk0LHBWrm28+ps4zj8jKcD4iNwcGgfRtPkZzMlUQiF4+udfZeuntXD6dZfnWdXVVPuamggWG60s+2t4I3HsiYj6I5hupUzFUPtzeQ/qZ42o+dvRc3/r6az5Sd4Nu7YFiPg7uPZzVpF0+D7ImFBifaT4AemNq9BdWPgALKUrxFGw+O8Xcw4J5Vj5ZLnwOqnRxPlYH35MFhmo+DIC0U/aRZz5k5NUYJuFYPneUcbGpAmc+A1zkhRJiZD6KcSwoL7xqPoILnra66mU+GCr+eu8OVj5uzR2vmTJVPq4Qt/GtNmI+ED1waO1JXT4mKDyuMiZcPlKKOWwlVlM+y+/xC2dFYT4GakM8+Gn9PWA/F/0ScFk+qaNQPtBnVj7UCoakEmVSPrwSCS35MFI+DNVlY6j8UT5cdBKLIMhRPugYNBdF+1I+3KwnTyvsQT4PN+wieX9GPsjWEL/XFks++4ZMn0ayTz5BQdWe4ihSPupqMXUcWVc+QIf5G2u5Wz7Yu/3Y4BFRPjLkiiSQLjY+/IqUyjKdYT7zupl5haVXPvxNoitc5WM+HMqxnTPBOD6/5S5KkfVkPkfP+UEQV2Q+fFDBkOcOZD4sPpiZUGljPpNnMZWoOmM+31KxkeOvYj6O1Li1lGViPixfzRDk8GE+ohpbABg6Yj6CRRewCvhhPpZPGlhHGGI+h4UrHTPkYT4IL2kc+M9hPnNBKzCD62A++Mhv/pQuYD6qolRbMehbPjADFO5lb1c+ejn+DMjyUj5gs4L/EK8uPpyFVNyDeDs+gFg0bxUCVj6O2+CXLathPnE8Q5L5iVY++t754dFTPz797bcOPa4vPnnRaNRUYNM9wNzJL8A+Uz7feqHwZORXPjmANC8itj8+BOa63uM4Mj6ys5KkFdlbPn/FkCjv12Y+Nwa/Nw2rTT7RRnib0OdUPj6Z/t55klw+ev3/kawhYj5mEJhpFlhgPjXzKQ5hlVo+9VMO3Zh1VD4sHl7ZqaFMPtxU1T2R+lk+oihHNNXWYj4UVpQ+43hBPuGMeKNQ71E+mtltE/hjUD6G/6sgu65NPkhAE48Ck0o+poimzcZ0Rz50ad44CFREPhadFi7HMEE+hO3sdAgWPD5WDotuAvZgPkK//nHe0G0+3FC1BEtSdD4lUQbxAGBJPsAAjm7mnVU+QJ1CvcOSXj55kQx8S8djPv69iyOwSGg+IsGyQI/NbD72fRycuoVsPkPkOaSpiXU+8H97S3k9ez7SMtEDZT5xPg3I2JP2dlY+LJUasyfjdz7WZfvOavxuPm3CjJJe3T4+L9H5Zc2XVT6xIpnlbsFhPk0LjXAq32Y+CGYAXYbuZT7t/d2bJP1kPuJTrRQPy2c+AlCxWRSbaj4j+cTNyZ1/Pt/mfIsyA3k+GRFZYdyFfz4XYY17HhZ/PvKppcc0GX8+6658JiSQfD7+eXQM/fR9PtIgxosaTmg+4hHHL6nHcz6ovlFNL3h5Ptoqpt5v23c+otQ65IPydj4/NBQHbcZuPjrVTPKqhWg+ftw1YEMQZz4RzgnH5ipqPiiJcBnUR20+8nQgd0XWeD5iYk4t4TBzPjjHzjWMbYE+lhIXIAS4iD5ymJtezCeOPhFtsRYS7JQ+ZyM3BeGnmT6gFsBf/hukPsyEyw9DbHQ+v1FcQQERfj4q9zWrbN6DPszxg7Sb14w+mVC4CXIKkD4I5kkwa1+NPiKlbD3kdoo+1kZ895j4hj62QoQ6KSGEPjYZ0rpmOIY+zzxZXStRiD7YeAHxd2uKPkZzjlN4AmQ+Enjb6BQrLD4UyB/3Re6OPlaQjEVYTZg+n7YDmwaVoD5gFarQr8aZPuCqlaDdXZI+8KWQGmPZlD76J8g3u1aXPrITqobn1Zk+5PKttelWnD4KLHKTw9mePloxEek6r6A+A9fx6I8Rkz6Knuvr63asPvwdxY/ZtK8+JPx1Eu/irz6o/793kgiwPhcSqPVb7rA+VvjHyxs00T7QwHUbSTbePg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"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AAAAABbU/D8AAACAIt78PwAAAEAs6Pw/AQAAQDPy/D////8/N/z8PwAAAKA4Bv0/AAAAIDcQ/T8AAADgMhr9PwAAAOArJP0//////yEu/T8AAACAFTj9P/7//z8GQv0/AQAAQPRL/T8AAACA31X9P/7////HX/0//v//361p/T8AAAAAkXP9PwAAAIBxff0/AAAAQE+H/T////9fKpH9PwEAAOACm/0/AAAAoNik/T8AAADgq679PwAAAGB8uP0/AAAAYErC/T////+/Fcz9PwAAAIDe1f0/AAAAoKTf/T8BAAAgaOn9PwEAACAp8/0/AAAAoOf8/T8AAACAowb+P////99cEP4/AAAAwBMa/j/+////xyP+PwAAAOB5Lf4/AQAAICk3/j8AAAAA1kD+PwAAAECASv4/////HyhU/j////9/zV3+PwEAAIBwZ/4/AAAAABFx/j8BAAAgr3r+PwEAAMBKhP4/AQAAAOSN/j8AAADAepf+P/7//z8Pof4/AAAAQKGq/j8AAADgMLT+PwAAAEC+vf4/AAAAIEnH/j8BAADA0dD+PwEAAOBX2v4/AQAA4Nvj/j8AAABgXe3+P////5/c9v4/AAAAoFkA/z/+//8/1An/P////59ME/8/////n8Ic/z////9/Nib/P/////+nL/8/AAAAQBc5/z8AAABAhEL/PwAAAADvS/8/AAAAoFdV/z8CAADgvV7/P/////8haP8/////v4Nx/z8AAACA43r/PwAAAOBAhP8/AAAAIJyN/z////8/9Zb/PwAAACBMoP8/AQAA4KCp/z8BAABg87L/P////79DvP8/AQAAAJLF/z8BAAAg3s7/P////x8o2P8/AAAA4G/h/z8AAACgter/PwAAACD58/8/////fzr9/z8AAADgPAMAQAAAAIDbBwBAAAAAIHkMAEABAACgFREAQAAAAACxFQBAAAAAgEsaAEAAAADg5B4AQAAAACB9IwBAAAAAgBQoAEAAAADAqiwAQAAAAOA/MQBAAQAAINQ1AEAAAABAZzoAQAEAAGD5PgBAAAAAgIpDAED///9/GkgAQAAAAKCpTABAAAAAoDdRAEAAAACgxFUAQAAAAKBQWgBA////n9teAEAAAACAZWMAQAAAAIDuZwBAAAAAYHZsAEABAABA/XAAQP///x+DdQBAAAAAAAh6AED////f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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3821\"},\"selection_policy\":{\"id\":\"3822\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3846\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3817\"},\"major_label_policy\":{\"id\":\"3818\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Dyc/d4o7WD5ZmF6Adv1ZPr9dwO5W0VQ+DgveOz+zTD4Pemls94NHPjNN3hpaHDw+LXBGdpH4NT5vpbVppooqPhBQ5ik6Fzg+BjMvFm38Kz6XoAm3bYowPrYAAi8ZeDQ+5Atkn4yeQT7t8DzLvVI/PusOYUQnymI+njhQfhPqaz7+bD/i39x7PrzL8LXRy4Q+w9gxLi0Hjj5lGjtDmo6OPuVTyMLqoYk+JbuxsI6bgD5SzKrF1ix5PhHIXntPH3A+/0DLvoGeZD7ei55hyitaPn7OExLAKlE+d2xK+wjlWj5jnA9+0XtgPmX6SfyDulQ+79v92NOiRj6FS2o/YmBIPrTSgvDsp0o+VI2uE92cSj6SvLTJr+xIPh8HvumwEUs+uum8IqiZUj7AIuylzyRJPiO/RZcvk1A+VTEp25ctQz5c9DqCjvZNPgZMY9ThBEs+SRUXTFJdVz7BAFuyqO1RPituS8cxBGE+5jjJLgR/gj6U8YBMDmyRPs9StfYC5pA+e4scWCBHiD6DRg00L66BPvTC6b5BxXM+Kq+u5UZ/aT5rxD+xZCJgPv3Nb4tnvlQ+238csNzSTj4RxHU3sWdBPhVeG3dRhTI+D7XzELY2HD4tJUpVELQbPhVTqh7blBU+vbGekCHyFj5Ght3FJsYTPnmgNKJy1ho+K0Os0LfcPj7bsU6FVWN1PpN0mRaYR4Y+9AqSKE//kT4C1YGDlyebPmpnsgAz3aI+GqDJfxPOoz5MNx/KZmmbPvwMdf+ampc+5alZahkbkD4WFf5cy96BPkTW/scvAm8+u75TNECAWD7dPmq7aldAPtq5c/a4m0A+7dOGsk8NRT4k2MWOoRROPhTJAfsT8VI+JlUZpGvlUD5XMHgh+TBlPra9xox/ynY+NjG3Q067iD6AXxs1xTWKPrryKpzcXIg+a2UN7V+MhT6CxY14UNWBPoq1xsbi53o+xGXAy4s+dD7FlGmoGQpuPsXLU+zfG2c+Ao4rTAc5YT4yJMDc+C9bPsJF1VPxRlQ+P9hnzshYSz62KV7YbXJKPs5BHwOtakg+Tq+0lU2HOz4i5e/6GEpJPiAPti+z90Y+ijz5tXg7QT4vCTyRbJ8yPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3845\"},\"selection_policy\":{\"id\":\"3846\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=120.06, p-value=1.20e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3818\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"Isp4ym5yVT7Pale+DfRWPgtsZ1b1UFI+8Ff/BCH1SD4H/+VkfVZEPoBcsM3IEzg+tt17UhGgMj6uCYNKKV4mPnDqqAlYfzQ+/QrQPTWGJz6QXY2d6sMrPljrcXG0PDE+IixOxL3qPT5cciJH4JA6PqDdY9OuOmA+kGLttSn2Zz4yQVlLDUd4PtWuyqNlW4I+XeulLfLXij4v5JtBmlSLPkiTdpjVzoY+HqaGU38hfT5eI3r+/811PscYMzJxB2w+Y527RyOSYT6FKcaREf9VPtgdh9kLo0w+GA7Cd3VwVj4Ouy8jHfxbPuteVRxsnlE+GN5BPwUvQz6YzWn/colEPktyTWOiYUY+X12jVHVcRj44AxWXg9dEPvk7cdArZkY+d2LVhw/JTj4avGL9eWdEPm4SygYhx0o+ypJc5+GMPj5PNPq7uklIPgBFR69p1EU++iGMVKLKUj5k3Kp8eRRNPgFe3pyxIFw+KrziQ9MAgD6mtnwXZguPPqjeQAlVJo4+/iRUfP1YhT5UVbPQHMl+PtFeivJM3HA+pfYo1/h1ZT6q+GaRqPZaPtRStugfOlE++2OWkTy6ST6I7O60BOU8Pho3uIxEPC4+iClNYX28Fj7vp81ugwMWPmbfzxiWAxE+gW1y9RH5ET5r59RTQl0PPiS6ga5yXhU+28KqAzMROT4Kp3AhI+5xPpMjX3wG/II+UF5ko58zjz4gSkfuGfeXPuRAHP4W7qA+MvdBrxUAoj7Lst3OkhmZPumEMVIQApU+/MqOGHgxjD7scYwxF5x+Pii6+YrCoWk+hJzq3hayUz7WnY2xbac5Pux8EybQ6zk+FLlicaucQD53k5xATGdIPj8Abi59oE4+NT6htClYSz60PIGziuFhPt1WqgTLy3M+XHySC2LuhT7ERnrCFWSHPjDWQGPfzIU+1cbVKyo+gz4si/XAB6F/PsndVFREmnc+c3pZUAeqcT47jn+mew9qPmHuxyvl7mM+ushDoXSgXT795p4Bj01XPtknvJ7JVVE+t4DC+LcNRz511/A/F1NGPkstAxQ6sEQ+CvV+NHHnNj4I07qZzvFFPuR6PcIwz0M+44G8w091PT7ddNA0cFovPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"/IMFJKYEWz7jxWVC3wZdPnNPGYe4UVc+Fl9eua44UD4X9exzcbFKPvMeBrR1EkA+pAIRmhFROT4wQeiII7cuPrC1I0ocrzs+iC1Hd1I5MD5mkkwf5jIzPhQWkux9szc+twGhXLpHRD6/t6unTQpCPjZAXrWfWWU+rA6zRv3dbz7KmCV5snJ/PqPoFsg9PIc+FONeFzSbkD5OKG0iTeSQPoIUGu3/dIw+OyOgt12mgj5GdduMrYt8Pr4DpF3mOnI+m+TaNeCqZz437nYxg1hePhAOZDf6A1Q+1srSfpxZXz4/W4dqlPliPt+VPtyb1lc+xtm5cqIWSj5yyWp/UTdMPh0zuH037k4+Sb250kTdTj7sdVT82wFNPkXSCgM2vU8+OSKPgcjOVT5miXVOJeJNPg91JqvOwlM+RRmkwr4URz402j0ksdFRPoapv/ysGlA+mAiiQwLwWz5Qk2CmFFFVPlatJ8AK+GM+orWvGTX9hD7Vh0ONaVKTPko2ymjbuJI++PHkM0M1iz5c4sD/z/eDPhcnSYs2rnY+r2c09JSIbT6BDMwZdcliPiZJKS6vQlg+3k1RZ771UT7eEXQU4FxEPp2g2qeA7DU+SyBNYHfYID41UeOdTrIgPsTGhCQgJho++fXKKzHrGz7WmNBhrN0XPmfD80o5JyA+veHWTh5UQj6svCzph9h4PpPF07Apk4k+wOZxf85klD7kX7wYFViePvCNSANPzKQ+AklRUBGcpT7Nu2DFOrmdPg+VuKwlM5o+TO5ryHYdkj428TUhi2+EPjD5gYJOMXI+8uC8iWlOXT7Prg2eHttDPj613dmJQUQ+xu6q8/N9ST5pjndu++BRPgmSzF7pkVY+MgvibcIeVD76I2+PZ4BoPo8k4xQ0yXk+EObbezqIiz48eLyndAeNPkQPFdXZ7Io+AQRFrpXahz5uxaAQHdqDPkuNODmBNX4+FVEnRxDTdj6ozSnVWwJxPimp36zaSGo+pze1R9ShYz5nYeG3YhJfPqtj7ggZOFc+xy8NpNmjTz73e8twxJFOPlFWO/IfJUw+yTR1+5QTQD489yRcY6JMPlyjLp01IEo+IjgUikm8Qz7w1w8IoZE1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3865\"},\"selection_policy\":{\"id\":\"3866\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3814\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"ZAS4Y83FUD7GCtDVhdtRPm6uwPq7PEw+IxisHFytQj7IcVc03wI+Pqp5cM8VTzE+lbVYn6IFKj5URJyEXroePmiHRQx47yw+hOHLfoIJID4dsKnpMNgiPnXsU36YoCc+aFQNf6P8ND7Ojcv7PJUyPmr5Kt2K3Vc+zOYYbx9UYT4ovEKD5kJyPgKGVwEsh3w+Ow/t/PJ/hT6gdWStiOqFPqt9yk93EYI+xyLFYuZGdj74ocEdHSZwPqSXCvCG9GQ+jAvUzUfpWD7eSce/ZvtNPkKTcTSwE0M+DYLoHQjtTT5u7fdHuZ9TPi/9O8sTzUg+iFtmzOXHOj5IUYnEEjA8Ph/vXz24aj4+4DCyHB90Pj4UAadpU/s7PujCnFIPID0+WTDFj0cFRD49Zsr84eY4Pox6WcjSFUA+cBHuUKFzMT5DOSayoIc9PhaWzhlaPjo+CGrAg1M8Rj5hDrNwUrVBPhLvg73+N1I+om4VhtGjdz4Ubc6AI6uIPtWnJoONB4g+/BlFjDlugD7M7Zbgrxt3PkjVaGh09Gc+Eg+kNhJgXT5IvZMOpw9SPtNwblbSpkY+IDoxygItQT6A3Ppp1vcyPiuTu8h80CI+/nvFifwWCz5lIARPs+4IPsAuwx/9sgI+TsZIW59BAz7NWfcprKEBPoWqhN5bYgg+CXN0TZCvLj4v1SqAd0FoPjQCUHDz6Ho+h/RTeKoohz7YMRxv/ZySPvSi/TGLXps+/OrIPK7xnT5eIJ32dDiVPmFHHBruppA+iNzT5TVzhT6Eg+fe+f91PmYxj1cMnGA+Jx11xKJDRz4O6dMn4LcrPnisdG6rWys+64NKh6hSMj4394ADEcE9PumKZnI7c0I+mIbVdT6GQD7fkbhEBadYPg7YSbByim0+OoBL9Fk7gT7lRFG+D6mCPkoFUy4XgIE+Eryt1oa/fj69JCbymdp4Ph5SENlGD3I+2Vnkn0uraj5WutZ2MWJjPqH7v+lZNV0+oRNgZmmKVT7S6GJE4shQPmSNlpvpy0g+BKg3Tt2yPz6U1U/UXNA+Pu0ij6g63Tw+5yuDHbtJLj6mRzbN6FRAPkO23o3xBD0+ZXY8wqsONT4Xoo+ZQHclPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"uknGikexXz72knaVsw9hPkdkIOBPhFs+/P6HLZFcUz6dnVOfPwNQPl4QJjPPdEM+kIXgnFHuPj5alI7IDtwyPjbu1CZc20A+RELJ1qv3Mz4gaT75wqg3PjIL2h7mHz0+lG1Bf8e+SD4GKldNHwhGPiGhLBqJpWk+OMXDxgNAcz7qDp6gbLuCPnfUNWsNVIs+JlG7rzNHkz6V34jsVZmTPhAV4xovmZA+5uQAMKoThj5W+8k2yBmBPlBEuH5bxHU+OHysll/IbD5muayx8KxiPlvT7gmoy1g+9EvQ88ZpYz4PQiNYxidnPjL29RJ+Dl0+GorIy7ThTz4z90eOXVRRPuzWKuE+DVM+HAGCTNX/Uj5N/Erv2u1RPmXWFhWtyVM+SDuXfawwWz4xibkmF+tSPgDBXsp1G1k+8lnbDV+hTT4LZrFVppRWPoCm701LdVQ+x/omaz3OYT5SelwsqABbPs3k1C9k7Gg+e7qHmh8siT6erJrYioKWPrRR1ys/yJU+ff75kQMQkD4gFs93hs6HPkQbn0lJkHs+ZqsFWEIncj4yqjXb9TxnPpBjqOtlKV4+y+IDS1s8Vj7iGe45d1NJPpTy2Ilkojs+EFaC7vZwJT4UHYmBY3glPmWHudYb6CA+KoDMubkhIj6mX792d7sePth1k6rbvSQ+aSZPvdMwRz4e+YdK76V+PgzoCnW2Go8+pBv6FElqmD4WvPPLGNmhPlr9ZWggC6g+tsou4U+jqD4dp9BOLM2gPpfSzeRHjp4+hmXJ4Zd8lT5qaIjKmb2IPpE9N5wptHY+cXc2g1evYj52g99s3cBJPpZIShGHYEo+8jK0kKV4UD5WmuVNXaRWPrRM0DyKqFw+AOdHDbiHWT6+F5Sgbw5uPmWPaMHFz34+GXGRSaEdkD4OvfJVPeGQPirgAgqiOY8+zezDbvy4iz6meAj4Uz2HPnuMPlo/4IE+nJ6Ox3Enez6aN/7sAFl0PrqZx+MSnW8+NBIn5dmsZz7Jr466h8tiPtJE39ntJ1w+Pu7ZehFsUz5RNEqjVr5SPhN5+1heM1E+VORTzt70Qz5PwVSUpB9RPh7DfJjtbE8+4j3UipvvRz5SQbDVOIM6Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3887\"},\"selection_policy\":{\"id\":\"3888\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3888\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3815\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.68, C/O= 1.16, [M/H]= 0.85, T= 942.17, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3822\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3814\"},\"major_label_policy\":{\"id\":\"3815\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"0511ea4e-1437-460e-bd3f-d8dc30bd984d\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"7986717f-f04a-473f-a808-0517505abce3\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:15.666986Z",
     "iopub.status.busy": "2023-11-28T23:50:15.666137Z",
     "iopub.status.idle": "2023-11-28T23:50:15.672522Z",
     "shell.execute_reply": "2023-11-28T23:50:15.673032Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 120.06, p-value = 1.20e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(120.06, '1.20e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:15.681882Z",
     "iopub.status.busy": "2023-11-28T23:50:15.681325Z",
     "iopub.status.idle": "2023-11-28T23:50:15.683504Z",
     "shell.execute_reply": "2023-11-28T23:50:15.683840Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:15.688083Z",
     "iopub.status.busy": "2023-11-28T23:50:15.687327Z",
     "iopub.status.idle": "2023-11-28T23:50:15.690348Z",
     "shell.execute_reply": "2023-11-28T23:50:15.690677Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:15.694869Z",
     "iopub.status.busy": "2023-11-28T23:50:15.694157Z",
     "iopub.status.idle": "2023-11-28T23:50:27.200102Z",
     "shell.execute_reply": "2023-11-28T23:50:27.200500Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.208887Z",
     "iopub.status.busy": "2023-11-28T23:50:27.208303Z",
     "iopub.status.idle": "2023-11-28T23:50:27.225581Z",
     "shell.execute_reply": "2023-11-28T23:50:27.225982Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.00000</td>\n",
       "      <td>8.000000e+00</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>230.18000</td>\n",
       "      <td>1.613559e-03</td>\n",
       "      <td>4.628622</td>\n",
       "      <td>951.684845</td>\n",
       "      <td>1.205798</td>\n",
       "      <td>0.822486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>70.22007</td>\n",
       "      <td>4.560412e-03</td>\n",
       "      <td>0.049239</td>\n",
       "      <td>18.463104</td>\n",
       "      <td>0.079165</td>\n",
       "      <td>0.067120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>137.60000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.573460</td>\n",
       "      <td>930.943136</td>\n",
       "      <td>1.122589</td>\n",
       "      <td>0.737513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>199.04000</td>\n",
       "      <td>3.147250e-13</td>\n",
       "      <td>4.591735</td>\n",
       "      <td>938.450984</td>\n",
       "      <td>1.144643</td>\n",
       "      <td>0.769705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>224.58500</td>\n",
       "      <td>8.106400e-10</td>\n",
       "      <td>4.624999</td>\n",
       "      <td>952.325226</td>\n",
       "      <td>1.178700</td>\n",
       "      <td>0.822886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>244.32000</td>\n",
       "      <td>2.119868e-06</td>\n",
       "      <td>4.652405</td>\n",
       "      <td>956.491613</td>\n",
       "      <td>1.284011</td>\n",
       "      <td>0.866138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>376.71000</td>\n",
       "      <td>1.290000e-02</td>\n",
       "      <td>4.719962</td>\n",
       "      <td>988.494629</td>\n",
       "      <td>1.318356</td>\n",
       "      <td>0.922762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000     8.00000  8.000000e+00  8.000000     8.000000   8.000000   \n",
       "mean   0.680000   230.18000  1.613559e-03  4.628622   951.684845   1.205798   \n",
       "std    0.139971    70.22007  4.560412e-03  0.049239    18.463104   0.079165   \n",
       "min    0.480000   137.60000  0.000000e+00  4.573460   930.943136   1.122589   \n",
       "25%    0.580000   199.04000  3.147250e-13  4.591735   938.450984   1.144643   \n",
       "50%    0.680000   224.58500  8.106400e-10  4.624999   952.325226   1.178700   \n",
       "75%    0.780000   244.32000  2.119868e-06  4.652405   956.491613   1.284011   \n",
       "max    0.880000   376.71000  1.290000e-02  4.719962   988.494629   1.318356   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.822486  \n",
       "std       0.067120  \n",
       "min       0.737513  \n",
       "25%       0.769705  \n",
       "50%       0.822886  \n",
       "75%       0.866138  \n",
       "max       0.922762  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.235921Z",
     "iopub.status.busy": "2023-11-28T23:50:27.235274Z",
     "iopub.status.idle": "2023-11-28T23:50:27.237592Z",
     "shell.execute_reply": "2023-11-28T23:50:27.237998Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>176.75</td>\n",
       "      <td>8.460000e-06</td>\n",
       "      <td>4.598065</td>\n",
       "      <td>940.399801</td>\n",
       "      <td>1.150898</td>\n",
       "      <td>0.757916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>206.47</td>\n",
       "      <td>6.490000e-09</td>\n",
       "      <td>4.652270</td>\n",
       "      <td>932.604533</td>\n",
       "      <td>1.125877</td>\n",
       "      <td>0.861128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>211.76</td>\n",
       "      <td>1.620000e-09</td>\n",
       "      <td>4.593231</td>\n",
       "      <td>951.647563</td>\n",
       "      <td>1.122589</td>\n",
       "      <td>0.737513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>137.60</td>\n",
       "      <td>1.290000e-02</td>\n",
       "      <td>4.573460</td>\n",
       "      <td>954.790120</td>\n",
       "      <td>1.160824</td>\n",
       "      <td>0.860083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>253.47</td>\n",
       "      <td>1.090000e-14</td>\n",
       "      <td>4.719962</td>\n",
       "      <td>930.943136</td>\n",
       "      <td>1.288871</td>\n",
       "      <td>0.922762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000      176.75  8.460000e-06  4.598065   940.399801   1.150898   \n",
       "1  0.537143      206.47  6.490000e-09  4.652270   932.604533   1.125877   \n",
       "2  0.594286      211.76  1.620000e-09  4.593231   951.647563   1.122589   \n",
       "3  0.651429      137.60  1.290000e-02  4.573460   954.790120   1.160824   \n",
       "4  0.708571      253.47  1.090000e-14  4.719962   930.943136   1.288871   \n",
       "\n",
       "   metallicity  \n",
       "0     0.757916  \n",
       "1     0.861128  \n",
       "2     0.737513  \n",
       "3     0.860083  \n",
       "4     0.922762  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.307121Z",
     "iopub.status.busy": "2023-11-28T23:50:27.285342Z",
     "iopub.status.idle": "2023-11-28T23:50:27.310341Z",
     "shell.execute_reply": "2023-11-28T23:50:27.310729Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f5c32b34-a9db-43b7-b6fb-f39eed37515a\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"cf703efe-4824-4d66-a680-3ba7102ace4e\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4231\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"4235\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4234\"},\"major_label_policy\":{\"id\":\"4235\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4239\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4234\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4232\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[0]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[0]}},\"selected\":{\"id\":\"4238\"},\"selection_policy\":{\"id\":\"4239\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4231\"},\"major_label_policy\":{\"id\":\"4232\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"cf703efe-4824-4d66-a680-3ba7102ace4e\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"f5c32b34-a9db-43b7-b6fb-f39eed37515a\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.314920Z",
     "iopub.status.busy": "2023-11-28T23:50:27.313997Z",
     "iopub.status.idle": "2023-11-28T23:50:27.316493Z",
     "shell.execute_reply": "2023-11-28T23:50:27.316953Z"
    }
   },
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.321125Z",
     "iopub.status.busy": "2023-11-28T23:50:27.320490Z",
     "iopub.status.idle": "2023-11-28T23:50:27.322423Z",
     "shell.execute_reply": "2023-11-28T23:50:27.322823Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.326439Z",
     "iopub.status.busy": "2023-11-28T23:50:27.325821Z",
     "iopub.status.idle": "2023-11-28T23:50:27.413354Z",
     "shell.execute_reply": "2023-11-28T23:50:27.413752Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"864fc3b5-900b-47e0-9add-737d14f7139d\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ab9f30eb-4fa1-4292-9bd6-9862188084e7\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4571\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4826\"},\"selection_policy\":{\"id\":\"4827\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"4567\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4563\"},\"major_label_policy\":{\"id\":\"4564\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4570\"},\"selection_policy\":{\"id\":\"4571\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4566\"},\"major_label_policy\":{\"id\":\"4567\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"4564\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4827\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4563\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{\"ticker\":null},\"id\":\"4566\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ab9f30eb-4fa1-4292-9bd6-9862188084e7\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"864fc3b5-900b-47e0-9add-737d14f7139d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.439270Z",
     "iopub.status.busy": "2023-11-28T23:50:27.438563Z",
     "iopub.status.idle": "2023-11-28T23:50:27.478980Z",
     "shell.execute_reply": "2023-11-28T23:50:27.479412Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.493624Z",
     "iopub.status.busy": "2023-11-28T23:50:27.492984Z",
     "iopub.status.idle": "2023-11-28T23:50:27.495480Z",
     "shell.execute_reply": "2023-11-28T23:50:27.495874Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:27.513486Z",
     "iopub.status.busy": "2023-11-28T23:50:27.503069Z",
     "iopub.status.idle": "2023-11-28T23:50:32.594868Z",
     "shell.execute_reply": "2023-11-28T23:50:32.595250Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.675933063030243,\n",
      "    'gravity': 5.284514379501343,\n",
      "    'metallicity': -0.39553276896476747,\n",
      "    'temperature': 871.2694396972656}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.284514   1.675933  -0.395533  871.269440\n",
      "std     0.150252   0.275945   0.050569   31.538698\n",
      "min     5.080435   1.297106  -0.441131  823.163025\n",
      "25%     5.164792   1.558895  -0.430963  856.243912\n",
      "50%     5.256156   1.662246  -0.413720  870.582458\n",
      "75%     5.418846   1.806253  -0.376063  885.517624\n",
      "max     5.510390   2.232019  -0.282492  925.250793\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"60612341-6aa4-4206-8b38-cb11e28e2391\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"a86b2f1f-d4f4-4c74-856e-469cafe65e44\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5224\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5220\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"5223\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5221\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"msBxl4AFOz60+n2XuDRAPljyHRFcQko+7HIlJ8SZST6UDKZ9wz1DPq91bEWdWE4+L2ScnW8qTD6n9RoZTq5JPgV5UCIpn1Y+Ety2i6zOXD6DqpqLbMFjPqDGvHfUWmk+fLLy6DC0bT5N3I+CWHd0PtJHvHKpA3g+rBQdhfY8fj45grBGF6WAPqYeVC0iX4I+afKvwasyhT5CYoT+t6mEPpj05Qk2e3s+5v/VjdD2Zz6RtGMkAiVTPhNuVmVDaFk+VXumnAKiWD54XFRbJ+JRPqSnBOL8904+8ffO5l8RWj4IFqeaw29lPnWxd9V5O3M+2ZAmBejXfT4UfvCDzmiEPpdB1RlxvIs+VBCGIcd/kT5dpq6zzjqVPk+qvav73ZY+IcbCTLhikz7mT2IHtMyPPpMunfmzboY+0ubeODoifj7rhZbDaDFYPhQ0CYyrGzQ+O0FgoJlKQj7yeZDn2HdAPuD1EDhJmzY+RHfHPj9GJD77kH7W5rQfPtQNb8fqpjU+2g5Ho50FTj5VCwyTZTlTPp9E3YpH7VY+GZrisuxGYD4rXD0LllltPgIYaZ+C/XQ+B1J4LcosgD5ONt6r5j+FPvotRNKc94w+/PH7i7gekD4J0vK4j9mGPkOpTt41anE+L/Q+5QJOZD7+H8gJxxVkPk2j389JJV8+gGsqFAuEZD43bQBNaqtfPgotLNtRC2M+EYnM+bbtWj70PCOd1F1fPgj5QRd9lVg+T3cx0M1PSD4oyXmROAVLPkcLVk3Cy00+X3ElYIIfWT5Y8RsCCz9VPi9+p7OMF18+K0fUSIpEVz7BsihkW5ZePupX27n1LlI+SUolcAT7Tj6DNdlcFnVZPk0ZdNIUVGc+9jA63B2kaz5VOXEHZh9yPj6Cu+eH3HY+hvs+l6xdej5kNXi14Sl5Pgq7VC95+HQ+lhPxc/hicj44H4hjKa5pPqvzWKnnkWI+wv8DvXi7Sz5+qTQosUxPPpsfyePq+UQ+Dzfw2JXzQD72PhzmskVDPob+CqvWQzs+ja67w0/YQT5vF7GcRghDPpHl8yWAdE8+iDAkiprmRz7qNNpCPBBYPoXF8SI5xFs+anDDNaPXYz51xmHx80ViPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5231\"},\"selection_policy\":{\"id\":\"5232\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tUXfIOYWRT5Ny3AFEvNEPsz7pqvct0U+/oNeQT4RST6YFv5YONM/Prp62RjK40o++3u37AIKRz5u0Nv4mvdPPjl8HiOOE1Y+IJRBioJKXz6WAHDg+a9lPkfCUM+n3mc+wOG1VHwcbT6GOQMWsW10PvKBHCWNlHk+zQqTjj59fj5yEmu/XviAPno0EX8zoII+9DcX6rFmhT7PNrFkKOmEPoBzfJ4uBHw+7Qx7pnctaD6jWRBk9gVSPtJHFa+Yxlk+N9PEnq1RVj7PKz8jlu5RPkqkwc9+kFA+nzTUNKamWT5PoJIT2htmPoo6uylbT3I++C5iIi3Ffj5OocFbnZGFPicjyhodR4w+RvO9kFAhkT6Adic0OhSVPlFK3Csi2pU+ELt2Ve0Wkz4IdjLwhA6PPta4hLyyq4Y+NrWAujmPez53Pg0M76JXPiMB+yqgmjQ+PZSxMzB7NT7q+Qdo/w00Pk5fgqJA60E+36NeuFdDOD5GZPilglAxPgIKCtJ+XjA+IAf0tkq5TT5yo0b6YIZPPpkeNk5Tz1U+V+wcEuETXT7AnEcjnfxsPv/Rb1GDd3Q+bVPlJQcUfz5AscamiBSFPlOn+mRJS4w+CVrNP32njj612UQLhC6GPkzOmjbZtG4+Db3suONxYz7ClH7UDoRkPpoZGHmYs2E+o6YI9eExYz7vADHw7JlaPvABUVzq92M+M/7Tr/i+WT5bendc3ZdbPhmSRTzdi1M+esKtTV5+UD4NADuxp9lGPsbY2BYJ+1c+4HPaM3h/Wj5UEyfPkpFGPo77607aTlU+jmYxn0wqVD7Kz6gz1+daPsnGKQDB1VM+pHvliIeWTD7tcnudPedZPqfx2cb4LF4+Hb1/jNxnbD4IfpB6lVdwPl7Ukj7fsXY+pyYUJpi2eT7xLO9UAiZ5PuKeExg0FXY+SXDp9NRacz4qmaVPxI5sPrGyy5U4HGE+jVE/1Eo8TT4TnRnRJg1SPvgwj3zRfUI+GmVGoqfRQT6BykAzLiVDPrP5dMzxAUY+8xpuZnO5TD7nbRbM1UNOPmoSKEDtUDw+R1XRobS4Uz7aq3NV0AxdPjphABgdClg+D0JjmFJrYT52yt6yovdkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5241\"},\"selection_policy\":{\"id\":\"5242\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5220\"},\"major_label_policy\":{\"id\":\"5221\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"x/MJS+OoOT6Te6ZwYBRDPpg2MkJehEQ+lh5oZFGBRT4EsX3zFtE4PjIItnS6Fkk+l7Q0oUiISz5zLECzKmxQPlekr2VHXFY+Q8icqFyGXz74qoUpA15mPszr2EDImWg+5LHWwJnwbT493RoY0KB0PmOu6BT6OXg+HQLL97M/fT7MctDNwvyBPk0aSRB2qYI+ivBibL9DhD4Nj/SSf5iEPqaC19tmO3s+lSh2snQxaD6Vx2IRwnNWPovlau2qHFc+gOH5EliNWD5rB438RSpQPkDHyQ6+3VA+iNpIvLpPWj6Cw5KCZl1lPoMmTKviL3Q+ASqO0K1sfj58s78x1rOEPkq1SrHICYw+8trU9rKXkT7pVhiG8ciUPn/3cDJIh5Y+j9FYM5hKkz4GB8NEELyOPouelZV2jIY+PFZhtbc7fD6/+hiHjQdVPqzWEfG9uDI+eC40BIcbOT5GQT7Hy+NFPi+6icyHwDI+jg1a0TCeJD6iP2YeWc0RPjsTlx1y2zM+IJ3YBdh3Tz5bkcz/DUpWPnqDhim7J1Q+GtVHZBh5Wz4O4/8ktvRoPqoC+dKCgnI+LPTPc0O4gD6VZhfuRUGEPoWFP02HX4w+CKXMTQpfkD4DfU9xgB+HPqWXQCwtPXI+3JPNoZ1PYz7TYjYpw1NjPnmFTJZlD10+lxOEsv9JYj6jAjwFFz1iPsS6ErK+nmI+RCE9XKr9XT6MLM1PW2pfPmKjQwewH1Q+mBPXGhNRUD7HQ0rzdtNWPtEPFixy00g+rk66W3iXVD7zXQ7jFz5RPn+TWcQR/V0+4+DXQTvZUj49MKlW43NePjORWtQhb1Q+XEK5wpRGSz6161Hs179ZPq9TTJD4pGI+fV55xw1dbD6LIC9sOr9xPrb3PCPF/HU+d8qcx7toej7GvMlhvVN6PhgvQ6YLsHU+m41m5Y8Pcz76mJ0pzBVsPnrs8LtVd2E+cOx77VN3UT43Dmu375FKPobJC/aGqEM+/P9fVgCjQz5w0Q0bB4pAPhKDEvHJX0M+ySUcs+QvSD58dkRnr91CPul7rwr9zUs+gwISPiKmSj7RJelBu8FXPtlSTrm4r1M+tiJsGV/uWD7hs2KNgGhjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5227\"},\"selection_policy\":{\"id\":\"5228\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QfyycOFnRz5sS2jaXgNDPjMZqMItZEY+kHmZOoSoST4kdzyXwxI8Pjlgs0fPL1A+kLS3geTUSz6PRKkL2E5OPlGCjjgvhFQ+OqlrV5UuYD6l5RzMTjBmPrVYNM2r4Wk+mAEYZqoObj5J6EsmLt50PlLvJe6Rq3g+qY/o3hLefD4stkHwYOKAPp2SPThyVoM+OH9ccDq6hD5eKuOjCvSEPp43+T0gVns+k7s8wId7Zz4ApUfBp8pSPmoyJG7SEVc+P16fmYcTWD6O7W8GrMJNPo5Ublk5DVE+8devczHmWT4uK6R8DHVlPoI+vwsi7HI+XUUnENelfj4bo0IyamWFPoxBXfcIjYs+bz6jDnulkT7TN+VCy0CVPrrxEDpqWpY+LSG/wsNFkz6MGERL2D6PPkXNM2oMMoc+YwPHp3uBez4gHamy7sJVPtBObiQZOTM+oIrWiLtPJz7/N+ktUotEPreVxAhNQTM+lp1HDzvLPD72Pq0og/8uPvF1USWgNDY+3Z1JBwSHTj59uW8vCbdUPm23uo18x1Q+A/GSB/dJXj6xKUafHj9tPgDmrN31GXM+byzIUlVQgD4MDrha/CqFPsxzRATpjow+OQgkfrH4jz7YgIPdvCeHPi+shk8oOnE+AvDMPc8rXz7eeLVOmHRkPvHGG9Ngt2E+83uNGHpPYj5PreLoGhJhPhQXUNsKp2A+VTiwZoUoXj7x73dQ/5pcPvMjoec8v1Q+UgC6gbfXUz4lyYkkImRHPpsxGs2pSEs+a5tiu+FLTz6FwhJbzqNHPrRoWHV1R1E+XompX38GVD5Bu36ZiCdhPmWXjo074VI+D9Chrs2TUT4aJWBQWQ5cPqgdbm6sPGI+TIwaz6JLbD7poPRdzkFxPv/z9GTra3Y+iKVwGcNjej6wNQgQ78Z5Pg3HwTpx2nY+KXIBKLLNcz7yx46Vw71pPi77mOkjZGA+UGWoaE8iUD4t1pB1pMVKPivQAGMmnTg+pd5JBPE5QT609wCh86k7Po1XgvGLXEU+DdyLaw3RSD4xkFYHERtQPm+u74HVXlA+bCRvv+O8Uz480+tQypxjPsbrfW3yk1A+acXyk7NfYz5gWpwJ/k1mPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5245\"},\"selection_policy\":{\"id\":\"5246\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wwcJkdwPRj7/IjZjYKdBPsiygEM8z0Y+RST9tXlDRj4hvPY7OUM4PueATAamVVE+7m0B1GcATz78w/d9s6JNPvBu/O6xuFY+ZIIn9aITYD6M4ea6XitjPvYV91Y2gWk+WSBo1AjxbT6x4bRX6nR0PlxwJDsojnk+C7kkhFyyfD6RE7PQbCWAPuKFSRIQk4I+WCOiF35ChT6QbXcfXuKFPvV9M+vFB3w+syw+vRMzaT4+ru++y+FUPudoDqCzulc+z5pqQCziWD7+emzvCJVPPhodiuYkFlE+MjaKtEBCWD6isrkQkzhlPvXxdsO+a3M+s/D0CNZOfj5TKRfM0k2EPkux8VkUwoo++zc907aTkT4wDLJQLCOVPp7M2dMQoZY+lNTnveqAkz4QvMu4PPKOPnlVhqhPzYY+XUrw2T6kfD7aoGN+w01WPjKnQCSq6TI+Fuj4eh+wNz4BTncHRk4+Ph5esIPU8j4+AQOZY6RfGz4jG+iwMrolPmfQF2PBqzg+5TcfytfMUD7165ebM85RPgYeRP7I31Y+rve45+51XD65E3WJkDtrPmoowH5ZZHI+1Rd0K9GDgD4y51kMdOmFPsWxrPE7K4w+EE0D4ukRkD6tUa67YD+GPp1OolzUMW8+rQmqjUZVZT6SVNZXlWZkPuh9G0gP8l4+pyqbqaGhYj6xJ4po1pxgPs0q2/GluGQ+WzEzCOAoXj51PpEFsXhgPsLJ5gXdqFo+6MsRqiz9Tj6HXRSimzhDPi4eKPcrDFE+acMyHh60VT4hBvd9OllUPqz5la+shFM+VNWxL7zrUD7xS6oPIexYPvHtLDyo/FA+9IShzkacUD73MXyFM1NZPqaZRgvHEWU+l82AsmpZaj5LA5OEr9RxPhOt1IzGUHY+BcJDo/HfeT5PpdDJ4ZN6PiFTO0bSP3Y+pucSqHR5cj410ktOVj5rPnpxTKXAomI+MR/SYb3OVD6u3KbzAnVNPrLyjsWUiUg+7iefxnSZQT4N7C40BHFBPpKVrm+Qw0U+dLSO0Lg6Qz5TSy1xQkBFPmEC4hsLZEY+dVhf6/CdRz5aDfLgGWZdPt9zY3NLTlk+5/HYAFQhZD47EAmOyoViPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5239\"},\"selection_policy\":{\"id\":\"5240\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IC58o+vMOT7yhcOm9LdDPvSZIMnjlUk+F3eG6MESRD68eJMt5ldDPlIKfBcN9FM+4iZNEoaCSz6VjAqVSMRNPi1mdcBxf1Y+jTex5brdXz7g55o5TJxkPolGc9gQwGk+a3W88JDibT5y1c3hpDZ0PlZJCUQOAXg+UzXPicq5fD6JV9leenOAPr8/ZUjWroI+9LDzCTjuhD6PWJG5aRWEPvjVsrDdg3s+EXjJQyezaD6XFhw63bpUPmxRXNO/flk+fPSChQyNVz4UKEmqqglMPj5QmH0MDk0+eb4mYqONWT6m6Y+sKN9lPuvjXu7TlXM+Li9xkyYdfz73BSc64DOEPrW9rQvQroo+ayfM6cPXkD4Gs1U945CVPg8U4I9kUZY+bWIK+Nwkkz5gcNagUGKOPjf3H1OhAYc+HhHDjfOxej7Z8AgLiydWPqkGcYKnqjY+3AIrSCrjOj49YZE7IsslPsPQnfVwcCc+Xte/VXJ9Fz4J9mnUoasZPlgLQUzGujI+Fs/UeTDCTj4IA0EUmjVVPg1dKbWcKVY++24N2SQOYT5sta89L3FrPlnQsd13snM+rY7eUBQ+gD7N0IzXKtSEPrHPMQC5Wow+qP80LKFWkD6lFV/02yOHPn3bq8cUg3I+OvHnFNcNYD6wkD7UvMFlPu+Uu09eRWI+lt5O/YO6ZD7lJ17ctZxfPsQiUViu62A+QFLqKCQNYD4K5MDyiwZdPkuUW/aD+1Y+lBOYfx42Sz7lpsn2/ORCPlCAWQyifFM+zwxQA3g2Rz4MOF/2BDlSPpE17BvTVVc+HO8OKV1dWD7yLI9pQT5bPqvcD6Nzc1M+TBV2PXOrTz53+IwvHVFaPkfJ+mqvi2M+bFGjoMDmaz5VLvMRljxyPpoSopH4H3Y+gUPIdL6Iej5aYEyOntB5PvwKrIxVLnY+/ICxbWmHcj4os4WEqbpqPuWw6PTOg2A+E997NPypSD5Bq9boSk9GPuvJo6YV8kc+DAFwGLwlQT72nBaD4NFBPgZdtNr33FA+TM3VyjJ3SD7ys3p+sm1PPvSQpYbvIFM+zjbo+og/TT79BH9r1oxcPuwapvpZmlc+UvatXI9GZD4rR9h0OvpnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5237\"},\"selection_policy\":{\"id\":\"5238\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9iaG2P4wPD66uZN4r2ZAPjCvaQLFSEU+qvws/x1qRD4UHGkRieRAPtdjnf+rVkw+yHB5VRgFTT4clj4AjEZQPluDknLnjlQ+V5BCvD4NYD594v8SBy5jPigRW9uuE2k+fdM5HLaWbT5UkrtzlYt0PiCTyjgCHHg+5EcBKsgvfT71fMJrr0WAPu3LcjiV6YI+6keDPIuZhD6bMdSFlnyEPnf3yIHTw3k+XU+bDKzOZz7i4Et6LxVXPssnmrH2OFY+eU3Z5TmuVz6TiBovKwBSPuKPOHlBfU8+blm4pe5FXD5hhKbwQtJmPhmUg21T1HI+BKu5/Q81fj79dqKoLUmFPga4ccdQqos+AvR+YS5BkT5bMfmn+vWUPqSrGNnDgpY+E7tg/p/9kj7CL5rcafmPPimtuxdpL4c+2T/JzM35ez4/Vfz8xF9YPtf6qgHtODE+mEVsDuS8LD6qW495EHo9PkjudQh8xUA+HdHGD5JwJj4ixelqhe8yPqh+POYsXDU+BZgzwrKySz64RMPk6f5RPsT6rX076k8+gRzg/LzNXj6K81vo8WxrPqn8sFOOF3Y+z3huoBdggD7DQHN0wN6FPkzQMhJypI0+hoTpIGFxjz5lgcjyG76GPqsBf69Js28+SocT1QNbYz6lrr1nWJFjPnEH7TDTWWA+7qP/ZY4GYj4Xzl/NYL9gPr8ZDtEEtGI+yEF12t6aWj4bDRKF9qRgPsaD0UUokFk+qrlaEFJIUD6TKCtDgntFPjxcIvvsnD4+L2gvefUMXz7dGeMiRHROPv1p8rbhtEw+bpJGDGM5VT7A/Cgwq89fPvxRBy1CJFM+HJ3tEIjcST7khvZ9cZddPpxyNIoab2M+7OR4Qc6eaT5bsm1ECEhyPjsIPri1Cnc+axGkU1tjez5+FCSHeQh5Pp4XEooB23U+juuaQPnjcj7cEzEIQt5qPo88kZkjSWE+eFqpSFe7UD4dg3TvzndHPlDvusWEDkU+CsmcJJBIRT73efbc5ppGPlHmsHCX9Tc+zIWntCS2QD56aNDyuDlKPpZ/arI9qFE+C8pM9MciTD68pqJgX0RVPvtOZ+Eqtlc+xIExDZ00aj5UHQEamHFnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5235\"},\"selection_policy\":{\"id\":\"5236\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ZTBLAbk3Rj783fTsLQpAPuRCjX+bLUk+7nKEbqP+TT6j4UqAlJdCPjP4+V7bZ1M+uWT1NHuNTD7DdG0QUn9LPu6U65w3ZVQ+E1ZonMplXz7TKIusX6ZlPkTCQeHicWg+WAXUCVWLbT4c8wpfLfJzPoEmIfTcM3k+ePLSWIVIfj5JpLaCB+yAPsnyBwzEg4I+xqrT9n0AhT7AiP5ZqPyEPhbFbUky93s+O681HLaTZz5Zon8o3idVPqLBXUIftVU+avn8udYyVj7LfjlIrStTPrr4w1nuSFE+a72CDj12WD5LOUBH0I5mPgtSZrnN3nI+9YIFdZjofT6vzyrGhPWEPqAoF6Kl04s+JpHtNfrtkD4wxHODcoyVPktX05mVRJY+tOdb5eZVkz7jLUx5FSePPoTd8RE7xYY+UOZD394DfD73lmHX3RNWPtw8XQ6MuTE+zDJfAM7sNz7gnLdqCmRJPrjG4TY7Mhw+aHkboYLoMT47G05yrzAoPsksHz7VBTU+dqwAYc9MTj6E1MfrG9dMPlrp/tm691Y+gHvWDAnvWT6gCSnzEq5qPmhpauEgT3Q+wexBiTMmfz5VZZrj2PuGPqvpWSZlTo0+/8Ki1d5DkD5UO57+106HPuB7HQA0t3A+am0Pqui+Yj5/f4D6G+dhPk+Da1W0RGE+MOkmdkWDYT4lsc7HgDliPrytWTiFz2E+IJMwyFrXXj7NYpENmmViPrWPXpL4O1Q+8JRDCVSZST6KBuTQRbVQPoL7DH30l00+L3RV6OpqVT7m/Ryq2HVAPpox9bQXP2A+PiauVXjMVj6LFPirE0hjPhvzXZDBIEw+pzvJ0xRrRj622WhEHRldPjMW+eMmi2M+cHwyyXz+aD5+xtRR9+ZxPpOgEPyqYHY+aXwgIKVoej4hUAKLCih6PmDw3Xtv4XQ+AAyKwtTBcj59xvikwnBpPorNWCRO+2I+40d0giH/ST63xI91W79KPoJ2diNCOkk+wUx1l62iSD4tU8erWJJEPn9Mo8EnGUI+WOj9dFUCQD5GwtSOSO1DPoEhX6zC8lg+KMvJeeW4Qz7OUh0tuU1VPsamU/pZbEk+SRF3wIGGYT6wfgUFyLFpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5243\"},\"selection_policy\":{\"id\":\"5244\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"u1C+W9HKMz4UtU0+UcFBPlgi4ELFXEY++5KuTeRaRT6DEn57UKk/Pq0XfEOUJlM+lcvm927qTD7DKQAKAE1UPnUtYDq5QVU+6W8MFRD1Xz6NVcD8a9BjPuMHbaZAM2k+XIAyOwx9bT5MHwpVBh91PqC+/9S89Hg+wlhjPd1hfT6WdU3fwZ6BPr7/n3xFoYI+M2KwfHBwhT4V7+p2x5KEPsAl/VeY5Xo+ImyKI/PqaD5r4SUKVOtXPt/NO6Ht5Vg+H9FHBBcgWD7ie95453ZQPsf/q01mt0w+BaSVQbA/Wj5u8riYQOBmPi5Y4iureXM+JVxeSRh/fT6aNCLZAV2EPvvdS1mQdYs+VuM/HBQlkT7HWLwfZG2VPkncL88CdZY+A47W0wkmkz4hvq2saaGPPm1dtqLzcoY+x7gOHLqwfD5u/ZI2mjNZPryT18rs1C8+i8Ls4fn8ET5hN34CwQE3PvU+8/y9kCo+EQsw0MKpHT628FtwFjsgPiPw1sA0UDc+9k4gR3n5TD62U7WAgmNXPlEnNF3g3VY+1NF/MYdUYT78IisqH4VsPqPE/WOK03Q+Vo/L3VStfz4igQJJJ8SFPtYhDyhOAI0+0+xvHvdBkD6Kg2dYlXyGPvyPZrVDyXA+80tXZ65gZD4XweMBw/ZkPtCda5wX2mA+vsG1SsvbYj4yr8zGhSNlPhsBvOD4TmQ+E9UqCiMCXz5VYYj74QFdPoW0xE4bfFc+o3nup8E/RD4vICASqeZUPnoOhjgXCFA+TZYJxbPYRz4iJJwYBMlUPsKpSCdEhVg+5tBhGSuJUT6UIZJp0DtfPljRfoVjg0w+DZ7S/1GzUT6zp2UelT9bPnMzM4gzwlw+q9KQd3bAaj7O1PQBaBByPu4LkSdcInc+GHXSbtkNej6toK7jPZl5PswgMUc2BXY+wgVANotxcT7Zh7jev1FsPkyojLj9wWM+wu6n3mjfTT4RXR996OlNPglHgFgOSEE+VDFlzITtPT7Z2KochMZAPve/LKqDsT4+Gi7/2gyYTz6gGTMsYf5RPuxYf6VR5kM+3Air97upSD437w0X5LpbPigI3D4Jn1o+bY+QlyUzZT6Sz7wsJElhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5229\"},\"selection_policy\":{\"id\":\"5230\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5246\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"4MvetSz9Qz5nkSeauLxDPnqG60BTd0Q+BeeZleoLSz4Je7weNSpBPmy+ShnlOUc+Uc4wzAZeSz753TMbvaVOPq2FaicqvFU+3C8tcXraXj4KRAW2/q9jPusE358iQmo+ElC0uCcUbj7bFLvTJVd0Pr3Slmuyn3g+i5PCIM2XfT5jF8HMt66APjkysZRIl4I+wEPtEV15hD4WH0x0X+2DPlYBWzihGXw+sBWWDOn0aT5B0nCZGGxWPgrEHc4y5lc+ukCeZ5jyVz7pazwP6o5QPkSJdxRDnVE+sSb6xEVsWz5baKCDNoNmPp26vmOR5HE+nW5V2U1ofT66vY0gWdOEPnMzzaa1Fow+OrQ6Zlz0kD7gCLzwhzyVPm85HU918ZY+tGxWI1Qwkz7Q6u0yLe2OPsEVfmjnI4c+zTkChBxhez4J3izQj7xWPqLuRjpNjjM+k2BwjuNeND7FNkSYYxA4Pgh3fXnqhCY+YekvN+emMz5UXfReQRcdPjBbuCsJFTY+fIX6chHYUD6j6BkmIVVSPp7bKcZzRFM+mkB/H6J2Xz43YsAwShVrPvWBQFZiGXQ+XCjMGrg7fz6r91Zmn1mGPiEu/yPd0Is+P3DgCLmZjz65sWbtywSGPhKGq7CJMHI+q8A3iGiCYz55Hv4bZXplPpkKCx5yVl4++O+U7G3VZD444VVdecxgPkTQdJmduWM+h8ZbW+eGYD5+c632OrlfPqOdoiDriFY+F+ZOnVQhSj4W2wDKnUFKPtCqJudobVQ+4rtIIMQqUz66eMc2aelNPtkEvsVg/1U+bxPewBMzWT69h4u62rlcPgORXetiBFU+ZSP+9hg3SD6Z6nkpP3VZPhMBjiEEH2Q+NNWNVAJfbD6wZ7Kw9d9xPuiby0D1iXY+lmux7WC/ej7TxaRAxE16PrUdG7xdVXU+hBrQyEzfcj6lnfYKxwFrPiHFk5eqamA+QcPcAMJkSD5BNe1jVP9MPqjwU3jcyUI+ycLLhbexQT6YfOJSoitFPslQPK1eQEw+KPNLH+CTPj76ODPwWEBEPsBuMRH5FVc+yrzFkSLMUD78hn0Kq8hQPrFLF3k0bVA+KaudX4kzYz6FZ26lsHxtPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5233\"},\"selection_policy\":{\"id\":\"5234\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5223\"},\"major_label_policy\":{\"id\":\"5224\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"a86b2f1f-d4f4-4c74-856e-469cafe65e44\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"60612341-6aa4-4206-8b38-cb11e28e2391\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"605edff6-6ef1-43ec-ad0f-b3554151babf\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ca64b656-a8ef-45e0-8dcd-ca5bb62a615c\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5426\"},\"major_label_policy\":{\"id\":\"5427\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"Selection\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LKlaykqHVj68LvbYrk5aPgTnkX9khFg+CsdJiqvVUT5MFULMtqBLPtssoRYHTEE+mFcLM+W/Oj5kfPLIyIkwPk6r9SQOGUE+pC2YsX+9Mz53dppgsRk3PrP8Rl6Qdzk+eonyUcp4Rz7iQiKkcCxFPgq9ZbQo5WI+qopzbsB+bD7A0BekkuB0PjF07ntbAHo+6jtgRdTzfT6KE/3skHF9Pg9mQ6Guenk+b00LIchxcj7nbmGF+T9tPi4xd/DgGWY+47k9oiW3Wz7sRw1IPidTPpCSmOE6j0w+Rhvp9vHxVj4ki1EeMztePuQN2UxsgFY+RgVPxJuDSD5Y3Dimq6FNPorkHooZalA+TtWINI0hUj61Ig+jx4ZUPq8BNkKng1k+zOFiNKjfYT6rivAbppZfPnj2uEjjWmM+wGOZbcpLWT6tbamielRhPqNZVa8Djl4+tCEP8x2KZz6zs4frRtthPhfgcOQy8Ww+eAqE0J51hD5Yg4o05xeQPiRJP5ZwbY8+z1gKvSybiD5PP1ofITKCPse5yqinw3Y+y9KUpYL0bT5JNgn1M3pkPqzx+FCf6V0+3Nu4+60vWD4vsOfQxrBPPn1yfml5pUE+lY/FeQPRLz4IEs8i/JUuPjoMOs/vKyo+wC3ts1FdMD4E4PL8JaUkPtvhHf0ipSY+oMlFzBGmTD5AwdJ6yW5/PiaWIasGG4s+8l1Dkqq0kT4fvQYoEhKXPu5JigJjgZw+OPCetJc1nD5NGerRVgaXPnPTHhVKQpQ+nn1GGQC2jz72n+Q/mziGPljGuSp6h3o+jaxA4apIbD7iupkeordXPpl20KPHsVU+hyjeKss4WT49T60J5NxfPjRcOuTfJGI+k8b5sP8IWz6alnNJ32NqPsLi0TlALnw++GRLC+bohT40qABM8vWFPiokjoDPc4Q+zP/vw5t9gj6QO0pNrjqAPi3XRM576Ho+2g2+MyhEdT7qwSRi81xxPp7zqjD2+2w+GsGuZOIMZz4S6+J+1eFhPqafzc+W2Vo+zKDwre1RUz5+hd71s01QPk8B9IJ9v04+aose+wb7QT4t+qrIrc1IPiykcSrcEkY+vgMLcHHmQD63Vk6XqDs0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5454\"},\"selection_policy\":{\"id\":\"5455\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"4ezWMhkO5T/kTulg/R/lP0cE4+DSMeU/9BjlmZdD5T8vaYzWUVXlP/n02JYBZ+U/aLCp86h45T+Tj90FSorlP3mSdM3km+U/Mq1NY3ut5T/rxyb5Eb/lP6Ti/46o0OU/c/G3PUHi5T9a9E4F3PPlP27fo/56BeY/xqaVQiAX5j95PgPqzSjmP4em7PSDOuY/B9MwfERM5j8PuK6YEV7mP59VZkrrb+Y/uatXkdGB5j+HokCfyJPmP/ZFQlvOpeY/R3L5D+m35j9PP6iLFMrmPyOhLedS3OY/8X9HVKju5j+j5xa6EgHnP0/MejGUE+c/9S1zuiwm5z+sAN9t3jjnP4s4nWSrS+c/euHOhZFe5z+R71LqknHnP+dWCKuxhOc/ZCMQr+uX5z82PSgoRavnP0ewcf27vuc/rHDLR1LS5z9nfjUHCObnP47NjlTf+ec/Cmr4FtYN6D8IPDCA8CHoP3JPV3csNug/SKRt/IlK6D+hLlIoC1/oP3zuBPuvc+g/8ddkjXqI6D/o9pLGaJ3oP3k/br98sug/jL0XX7TH6D9PWU3XE93oP6weMA+Z8ug/og3ABkQI6T9IGtzWFh7pP55EhH8RNOk/jZjZ5zFK6T8tCrsoemDpP3yZKELqduk/kzoBTYSN6T9CBYcXRKTpP9DVVuwvu+k/9s/TgEHS6T/k27sGfenpP4EFMGXgAOo/5kAPtW0Y6j8Rjln2JDDqP+z4LxAESOo/jnVxGw1g6j/gDz//PXjqPxCwVu2akOo/8G36sx+p6j+ASSpTzMHqP+0qpPyk2uo/CyqqfqXz6j/vOhvyzwzrP4NpGD4iJus/36mAe54/6z8B/FOqRFnrP9Nrs7ESc+s/VfmekQiN6z+emPViKKfrP65JtyVywes/VyQmqOHb6z/HEAAce/brP+caZmg8Eew/t0JYjSUs7D83iNaKNkfsP1H3AUhtYuw/MXiY9s197D+rItxkVJnsP772zJIAtew/gehJmdTQ7D/191J40OzsP+o8Kv7vCO0/kJ+NXDcl7T+5N79hokHtP3v5nSYzXu0/1uQpq+l67T+0BYTWw5ftPytQi8HDtO0/JNBgU+fR7T+hhQSMLu/tP6BwdmuZDO4/Cp3X2CUq7j/4/gbt1UfuP2iWBKipZe4/LXsS2JyD7j90le6us6HuPyjxuRPsv+4/R450Bkbe7j+8eD9uv/zuP4WwGktYG+8/uynltRI67z8v/OB86ljvPw4QzNHjd+8/LH3ogvqW7z+JQzaQLrbvPzpXlBKC1e8/KsQj8fL07z8K16NwPQrwP+7O2m0XGvA/RIts5/sp8D8LDFnd6jnwP0RRoE/kSfA/YB+duvJZ8D/usfShC2rwP2DNAYI5evA/0egOYmeK8D8mjdE6qprwP+317o/3qvA/JSNnYU+78D/PFDqvscvwP+rKZ3ke3PA/6glLPKDs8D/pSC7/If3wP8sQx7q4DfE/H5268lke8T90Ka4q+y7xP6s+V1uxP/E/VRhbCHJQ8T/+8V61MmHxP4tUGFsIcvE/F7fRAN6C8T+HokCfyJPxP/iNrz2zpPE/2T15WKi18T8tsp3vp8bxP4Emwoan1/E/uCOcFrzo8T/vIHam0PnxP5fiqrLvCvI/smg6Oxkc8j/M7snDQi3yP1g5tMh2PvI/Vkj5SbVP8j9UVz7L82DyP8Mq3sg8cvI/pMLYQpCD8j+GWtO845TyP9i2KLNBpvI/KxN+qZ+38j/wMy4cCMnyP7VU3o5w2vI/6znpfePr8j+T407pYP3yP8nIWdjTDvM/cXK/Q1Eg8z+L4H8r2THzP6VOQBNhQ/M/vrwA++hU8z9K7xtfe2bzP9UhN8MNePM/YVRSJ6CJ8z9eS8gHPZvzP+l942vPrPM/5nRZTGy+8z9VMCqpE9DzP1InoImw4fM/weJw5lfz8z8wnkFD/wT0P59ZEqCmFvQ/DhXj/E0o9D/ulA7W/zn0P11Q3zKnS/Q/PtAKDFld9D+si9toAG/0P40LB0KygPQ/bosyG2SS9D9OC170FaT0P73GLlG9tfQ/nUZaKm/H9D9+xoUDIdn0P19GsdzS6vQ/P8bctYT89D+uga0SLA71P44B2evdH/U//bypSIUx9T/ePNUhN0P1P034pX7eVPU/vLN224Vm9T8qb0c4LXj1P5kqGJXUifU/liGOdXGb9T8F3V7SGK31PwLU1LK1vvU//8pKk1LQ9T/9wcBz7+H1P4j029eB8/U/hetRuB4F9j8RHm0csRb2P5xQiIBDKPY/tr5IaMs59j/PLAlQU0v2P+mayTfbXPY/AwmKH2Nu9j+rsu+K4H/2P1NcVfZdkfY/iUFg5dCi9j/AJmvUQ7T2P/YLdsO2xfY/uiwmNh/X9j9/Tdaoh+j2P0Ruhhvw+fY/l8rbEU4L9z/pJjEIrBz3P8u+K4L/Lfc/rFYm/FI/9z8bKsb5m1D3P4v9ZffkYfc/+tAF9S1z9z/430p2bIT3P4QqNXuglfc/EHUfgNSm9z+cvwmFCLj3P7dFmQ0yyfc/XwfOGVHa9z8IyQImcOv3P7GKNzKP/Pc/6IcRwqMN+D+twJDVrR74P3L5D+m3L/g/xm00gLdA+D8Z4lgXt1H4P/uRIjKsYvg/3UHsTKFz+D9NLVvri4T4P0xUbw1slfg/SnuDL0ym+D/X3TzVIbf4P2RA9nr3x/g/f95UpMLY+D+afLPNjen4P0NWt3pO+vg/e2tgqwQL+T9BvK5fsBv5P3jRV5BmLPk/zF1LyAc9+T8h6j4AqU35PwOy17s/Xvk/dLUV+8tu+T/luFM6WH/5P1a8kXnkj/k/4zYawFug+T9wsaIG07D5P/4rK01Kwfk/qB3+mqzR+T/D0ytlGeL5P/wApDZx8vk/NC4cCMkC+j/7ljldFhP6P087/DVZI/o/pN++Dpwz+j+HvyZr1EP6P2ufjscMVPo/3Lqbpzpk+j/cEU4LXnT6P9xoAG+BhPo/+Db92Y+U+j+GyVTBqKT6PzHT9q+stPo/29yYnrDE+j8UIuAQqtT6P01nJ4Oj5Po/FOgTeZL0+j9qpKXydgT7P79gN2xbFPs/o1huaTUk+z8VjErqBDT7P4e/JmvUQ/s/iC6ob5lT+z8X2c73U2P7P6WD9X8Oc/s/wmnBi76C+z/fT42XbpL7P4tx/iYUovs/xM4UOq+x+z+MZ9DQP8H7P1QAjGfQ0Ps/qtTsgVbg+z8AqU2c3O/7P+W4UzpY//s/VwT/W8kO/D/KT6p9Oh78P8vW+iKhLfw/W5nwS/08/D/qW+Z0WUz8PwhagSGrW/w/JVgczvxq/D/RkVz+Q3r8PwwHQrKAifw/RnwnZr2Y/D8OLbKd76f8P2UZ4lgXt/w/vAUSFD/G/D+hLedSXNX8P4ZVvJF55Pw/+rg2VIzz/D9tHLEWnwL9P/32deCcEf0//5WVJqUg/T8drP9zmC/9PzvCacGLPv0/WtjTDn9N/T8GKuPfZ1z9P0G3lzRGa/0/fERMiSR6/T9FDaZh+Ij9Pw/W/znMl/0/Ztr+lZWm/T9MGqN1VLX9PzJaR1UTxP0/F5rrNNLS/T8aUdobfOH9P47MI38w8P0/H7+36c/+/T8hdqbQeQ3+P0Ck374OHP4/X9IYraMq/j9+AFKbODn+PytqMA3DR/4/Zw+0AkNW/j+itDf4wmT+P95Zu+1Cc/4/qDrkZriB/j8AV7JjI5D+P1hzgGCOnv4/Psvz4O6s/j8lI2dhT7v+P5q2f2Wlyf4/DkqYafvX/j8RGVbxRub+PxToE3mS9P4/pvJ2hNMC/z83/dmPFBH/P1dD4h5LH/8/donqrYEt/z8kC5jArTv/P9KMRdPZSf8/DkqYaftX/z9KB+v/HGb/PxUA4xk0dP8/3/jaM0uC/z+q8dJNYpD/PwMmcOtunv8/6pWyDHGs/z/RBfUtc7r/P0ax3NJqyP8/vFzEd2LW/z8xCKwcWuT/PzXvOEVH8v8/44i1+BQAAEAsms5OBgcAQHWr56T3DQBAhlrTvOMUAECWCb/UzxsAQG1Wfa62IgBARKM7iJ0pAEDjjcwjfzAAQIF4Xb9gNwBA5wDBHD0+AEBMiSR6GUUAQLIRiNf1SwBA3ze+9sxSAEALXvQVpFkAQP8h/fZ1YABAuoPYmUJnAECuR+F6FG4AQDBHj9/bdABA66hqgqh7AEA1RuuoaoIAQLdFmQ0yiQBAAOMZNPSPAEARHm0csZYAQCFZwARunQBAMZQT7SqkAEAJbTmX4qoAQOFFX0GasQBAf7xXrUy4AEAeM1AZ/74AQIRHG0esxQBA6lvmdFnMAEBQcLGiBtMAQH0iT5Ku2QBAcXK/Q1HgAEBlwi/18+YAQFoSoKaW7QBAFQDjGTT0AEDQ7SWN0foAQFN5O8JpAQFA1QRR9wEIAUAfLjnulA4BQGlXIeUnFQFAeR7cnbUbAUCK5ZZWQyIBQJusUQ/RKAFAcxHfiVkvAUASFD/G3DUBQLEWnwJgPAFAUBn/PuNCAUC2uTE9YUkBQB1aZDvfTwFASphp+1dWAUA/dEF9y1wBQGyyRj1EYwFAKCzxgLJpAUAcCMkCJnABQJ8fRgiPdgFAW5nwS/18AUClTkATYYMBQCdmvRjKiQFAcRsN4C2QAUCDbi9pjJYBQJTBUfLqnAFAbLJGPUSjAUBEozuInakBQOQxA5XxrwFAg8DKoUW2AUAiT5KumbwBQIl7LH3owgFAt0WZDTLJAUDkDwaee88BQNl3RfC/1QFAzt+EQgTcAUCK5ZZWQ+IBQEbrqGqC6AFAAvG6fsHuAUBNMnIW9vQBQNDVVuwv+wFAGhcOhGQBAkAr9pfdkwcCQD3VITfDDQJAFVJ+Uu0TAkDuztptFxoCQI7pCUs8IAJALgQ5KGEmAkCUvDrHgCwCQMISDyibMgJAKcsQx7o4AkAfv7fpzz4CQBSzXgzlRAJACacFL/pKAkDFOH8TClECQEloy7kUVwJAzJcXYB9dAkBQx2MGKmMCQJqUgm4vaQJArP9zmC9vAkC+amXCL3UCQNDVVuwvewJAqd4a2CqBAkBJhbGFIIcCQOkrSDMWjQJAUHCxogaTAkC3tBoS95gCQB75g4HnngJATdu/stKkAkBCW86luKoCQDjb3JiesAJA9Pi9TX+2AkCxFp8CYLwCQG40gLdAwgJA8u8zLhzIAkA9Sbpm8s0CQIeiQJ/I0wJA0vvG157ZAkDl8h/Sb98CQPfpeMxA5QJA0H6kiAzrAkCpE9BE2PACQEpGzsKe9gJA6njMQGX8AkBSSZ2AJgIDQLkZbsDnBwNAIeo+AKkNA0BPWOIBZRMDQH7GhQMhGQNAdNL7xtceA0CjQJ/IkyQDQGDq501FKgNAVfZdEfwvA0ASoKaWrTUDQM9J7xtfOwNAU5EKYwtBA0DY2CWqt0YDQFwgQfFjTANApwUv+gpSA0ArTUpBt1cDQHYyOEpeXQNAwhcmUwVjA0DUmuYdp2gDQB+A1CZObgNAMgOV8e9zA0BEhlW8kXkDQFcJFoczfwNAMCqpE9CEA0BDrWnecYoDQFUwKqkTkANAL1G9NbCVA0AIclDCTJsDQBv1EI3uoANA9BWkGYumA0AHmWTkLKwDQOC593DJsQNAutqK/WW3A0DMXUvIB70DQN/gC5OpwgNAuAGfH0bIA0DLhF/q580DQBZqTfOO0wNAKe0NvjDZA0B00vvG194DQIZVvJF55ANACp3X2CXqA0BWgsXhzO8DQNrJ4Ch59QNAl3Mprir7A0Abu0T11gAEQBHHuriNBgRAznADPj8MBED83qY/+xEEQCtNSkG3FwRAWrvtQnMdBEDBi76CNCMEQGK+vAD7KARAO1PovMYuBEBNSkG3lzQEQF9BmrFoOgRAqpog6j5ABEAuVtRgGkYEQOtztRX7SwRAGVbxRuZRBEBHOC140VcEQK98lufBXQRAiIVa07xjBECZ8Ev9vGkEQOS9amXCbwRAZ+22C811BEBd4V0u4nsEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5430\"},\"selection_policy\":{\"id\":\"5431\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.28, C/O= 1.68, [M/H]= -0.4, T= 871.27\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5424\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5423\"},\"major_label_policy\":{\"id\":\"5424\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5427\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{\"ticker\":null},\"id\":\"5426\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5423\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5455\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5431\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ca64b656-a8ef-45e0-8dcd-ca5bb62a615c\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"605edff6-6ef1-43ec-ad0f-b3554151babf\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 278.8, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"2b4d41fe-1dcb-438e-818e-26705a6bc14e\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"e66e9052-b531-414a-b4a3-e0e4ec6220a8\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"ticker\":null},\"id\":\"5848\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5877\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5845\"},\"major_label_policy\":{\"id\":\"5846\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"5897\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=278.8, p-value=0.00e+00]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9WstcpdSYj4qaqqToFllPomhD+RjzmM+a0oKf7rmXD7mzAnNL35WPsSqZX/sNUw+0YRIYyH5RT4wzayDmCg7Pm3+TJXj3Es+LnwnT7wlQD5CqHO6bflCPo2S9JjoEEU+xC7AUF9GUz7k8DO2k19RPuTQPYvbEm8+dcKGHbFgdz496AdGGTKBPuQQA/XEcIU+mvosDYPHiD6vK0VtfFuIPrTyLCXJFoU+94f4olmLfj4lycOi41R4Pn6BpDTxQXI+tmlIZCYqZz60GjVWfBFgPkdfaacC+1c+5vWs4Bs8Yz68dzCyXQ1pPoR1UwFuh2I+ax3c/FhOVD4qgTJkrnpYPrIDf2G/Hls+GUWHvUrjXT6qaZ7iydZgPjSlg1aA5mQ+LkbyJDw4bT7bsyIDFdVpPpxWBidbyG8+btc1n6vyZD6VZUMGyptsPhkpgIJoRGk+vsZJnNGBcz51PW2vFK5tPmy8eO5D4Xc+TJTeBhiukD49gv6uIxeaPgU3WgCRbZk+CYSHQ5Pskz6HLeU7rYyNPrLy1OV4hYI+ta0qkG6IeD4UFqk09stwPqR5X8MCjGg+wUA2gy3WYz4sC5FbB/BZPgdEY11oKE0+iylfS51EOj7M/YMJeno5Pm4bsmRq4TU+NNKiL3koOz6lhY8NXlYxPhsqt28CDzM+gneNeXipVz7ZDuz8vLGJPuzM9Q8iLpY+GYA3b2b/nD4Z2jGuRN2iPtZDZxO8SKc+JU6pcSb3pj5spYBvhIuiPgx5JqvnhaA+Fc7zF2nomT4Z1UoqfyiSPvb8mGq7sYU+CSz3e30ddz7cWxDL4GpjPm4/ENTO8WE+CiGzp97mZD4VI9ARzhdqPpfz656b9W0+fSJ8uoCFZj7RCCUVLsp1PtxR6J8J+oY+u4Nt3ADZkT5q2T8cmd6RPhhIpgdyoJA+JCbijbIWjj7b6SqYRHeKPiS01FT+9YU+bfFY4CdlgT5jQvvcTG98PtFJiAAawnc+Wc2ibKjpcj7VMOdeJG9tPoQSouUWI2Y+cGB1zqL0Xz5OX1L4ZyhbPg+GgjK6klk+yZ8/V8AbTj65EtN/67tUPhNJoz61gVI+YsPbmZdqTD5pK8UsRg1BPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5876\"},\"selection_policy\":{\"id\":\"5877\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5919\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5853\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5845\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.28, C/O= 1.68, [M/H]= -0.4, T= 871.27, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5846\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"0zMc18oBXz74jU9rHCpiPixeAnbb3WA+lpPAtq/4Vz7aer79/kJSPlLzecJ5hUY+fZEic3sfQT494V6Bzt00Pnb6Zyg3LUY+6RbnisUROT4OAxtk+Uo9PteEpcNADEA+VDe48JxBTj50ommRLW9LPi4AqMYX8Gg+cI5PhT/rcj4ZyKISXuB7PpGpufh1aYE+fRIPL5UHhD7tbiQpMaODPvgKCJW61oA+ntuAwCQeeD5xVhZjqf1yPo92HYFsFG0+Da63RT/hYT7IC3/cjHxYPsz/HL9R/lE+5oLrnUwOXT4KeWO6JMFjPsUEHzE12l0+klVjensqUD7wlfIoJntTPq6SylQnf1U+JAGiPlrLVz5ZFXZr4CNbPsKJf+MJ2WA+Wk7zimXYZz5FIAXVkJxkPrkANDpyKWk+WoAKKG0oYD79pFUEdJhmPpzT8KW372M+HhFtB5xvbj6UET77GBVnPu64v803OnM+tXAyPoFejD40IhrV3J6WPvtJPIbz/5U+0aJyjsnokD71JUr1vqmIPt9DGC3ocH4+VgTtwMWzcz7ZL3V9//pqPnQd8dr4hWM+OvWQY0E5YD6UEB3vFUBVPlphdA7i7UY+Nr0Q5+dKND7dKVUfmEEzPpZ8rRBKHjA+Xr4YxAZTND673ssMElkpPu/DNHeZRCw+/gmhvrr+Uj7DRR4lzGWFPvsdjZQcfZI+zDh7UnBImD7wGBSrsOGfPq5vxxa25KM+qg9cFKzhoz561Te6P3GgPjaxAvVKFJw+hjCHvKq1lT5jIpJMrCiOPtAkkpIgtYE+VD8GY1Smcj5UoVwmzOhePjy5+fvJv1s+67cjk2IxYD6etEkB3yNlPoBVnSMstWc+miznQkN1YT6a7pnUTstxPhgw049kjoM+er+SCGGKjj52Kgmlys+OPkzHiDVN4Iw+T2I82iMiij6PWV5pAdWGPkHsxZ363II+dbb9yynJfT5L0qS/RVl4PhXiILD0Y3Q+/Fy7/1YvcD64GMgGi/loPqAsONl6omI+U2jh99dlWj6m+7wsfw5WPn7LzNMC6FQ+g/JTIcDdRz7m4bhi7uJQPiex54VFz00+Nvz4zheRRj77lcDfh5I6Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"AL7MeEkkZT5cRgW8JIloPubkHFLsvmY+oACqo2LqYD7yHlWcYLlaPhuxKJ4v81A+JXhuU8fSSj6SXP1CsblAPjIBGQFIxlA+52zb2JXCQz79ztnCXk1HPkOgQ26QFUo+3kEkKfBrVz6OELOjkAdVPs3Q6afPmnI+eva9tSLWez5ubL6CA3SEPjd4TPETeIk+t+JK63CHjT5x6GWxxxONPnDaUbXXVok+KBq4Qkd8gj7ZO3HiHax9PrRHuiis+XU+XyXZgg1zbD6Eryo+suRjPsK+tY+z910+WSpkchHxZz5udv2pllluPqVoF2rBIWY+ROVUfzZyWD5kbHKfNnpdPlu6GbcrX2A+h0Q2np39YT6nyIGPoxtkPqbAh8n282g+AZ94XwlMcT5xR0AxmQ1vPj9W7AmiM3M+gi5hFuq8aT4WkxgEkE9xPpZ+D18ZmW4+7QTdNNXLdz6rNM4xiCNyPuq/MQ9QiHw+PvCjbu8skz5G4uKIao+dPg8keHou25w+QWWc+Fzwlj6MGkDBzTeRPnXDHbV90oU+FFdoXxddfT48lJeqbBp0PtTVzasMkm0+SIzbohlzZz7EBQXI+J9ePloTKVZ3sVE+8MrWVykfQD670bLzW7M/Pka6triKpDs+BXOWzfX+QD7sG7kUMwA2Pj7y0yO4+zc+BuV5NDZUXD7v17nUrf2NPt17Xosn35k+s+P5RS7boD66p9kGscmlPv4XBxDCrKo+oIz2zqAMqj5edckkyaWkPn2Zy9upAaM+pGtgcycbnj4AmUwuqDyVPhzVn0JWrok+vhjolKaUez4OZ/KCW2FnPj6iI6q4A2Y+KYpCvFqcaT6MkVYivQtvPtdIHY0FG3I+YBgRMr6Vaz4II7BVDcl5PqBz/a+uZYo+uaeRNNFslD6ZHfvlTFWUPoosiHS90JI+/fTDoKAFkT4nevfGhxmOPgd84wsCD4k+nwez2rrlgz4+2Sj9qUKAPo2x71A/IHs+tj2K2fmjdT55JIPbXvJwPmj4C/Kyo2k+RqyE0rbBYj574fNhKCFgPqBAOJFxPV4+iKaVRuAsUj6MQ+2c6JRYPpK5UrrHG1Y+R0VfsgsiUT7UC6ppSNFEPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5896\"},\"selection_policy\":{\"id\":\"5897\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"2f/SQHbDXD4dzG85neVgPryZROnXZF8+MR216IMCVj6Z9wyX/ZNQPrB5DxvzQUQ+5BhJE9piPj7qU5As3lwyPjNjxWn/6UM+RMuMAMUxNj7mfDwtRNk5PnyUR/MqGjw+BErQss/0Sj6vu/jeT4ZIPm+6BXYUf2Y+bnLJRBAlcT4oaS1eu0h5PjLXlukynn8+LFrdmMIjgj60xidRaMKBPlhTh/uSS34+Lo6eioKPdT6Ay9ELo91wPi62Cq8HH2o+5dDdMNiNXz40thuTSXFVPhedK3zpOE8+1hDCTmJPWT5eJ7Rkf6VhPiIBZdg2/Fo+ADZWKIQJTT5hFA/DBH5RPqHs3oFVQlM+Dqv/oKVeVT7ATgW354lYPgkILvt0eF4+Lqz6FPK0ZT7J9DDWwohiPhKzRBMJh2Y+Ck+Lu/+AXD4DK5gj8jNkPgfKaLOz0GE+Ekf1Ts0Faz7VhYGJC3VkPuqJbMJLYHE+EI2EOBxiij4qaVECaj2VPsU0krq+opQ+Hlf5WGFrjz7+eCP+/reGPraZ3FRv0Hs+dO79g7PHcT7MB3l5YFloPrStta1AhmE+BuNfcnOSXT5i/d2+n2JTPrZsCXpqc0Q+gvtFtDrqMT6IhpnRx8cwPvONLZmppis+CNDgSOqaMT5oT2OhAqMlPhSL9UlRWSg+wCwbcVYjUT4AVhuFILCDPgzg244VBZE+3emPOS9olj791MnpFo6dPj4ggldSi6I+hmpVOomnoj7H4g/XIzafPvaRhv9ZGpo+fRJyyAUKlD5q6HUPc7WLPuQ+k14GH4A+RfZHQXbfcD76dFWrd8FbPqfSrHSgglg+Zo6ey2+jXD7AiJsMWytjPg/bVHZaOGU+Fhcl3/fiXj6HUUquTTRwPiWYd3n4MYI+iFn2Xkt9jD7OZbvH39mMPpakNkNqIos+TJUpYz2PiD4k58vJ2WKFPs6YuYVvoYE+sr7BxmPLez5D847hDbl2PrLc0qfnDHM+XBzE//Mybj7wZTr1SzNnPif53De3PWE+mAunnLUvWD6gw0Ho3gZUPsQvJg6hDFM+qi2BdOZhRT58og1SALZOPk2bWth68Uo+9MJUkDs9RD7AYeKaXZM3Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"/lfxw3NDZj43COXto81pPjT2fNNb6mc+0ruvinjlYT4zogYDYmhcPuzt3fHyFFI+MH3svNXATD47o2RtKfpBPtRMauDj51E+upIIHpYyRT4REkleOQZJPtxaRbi7FEw+hjgYyFYSWT7wg+t8/3tWPqzzOlBR03M+fBJE9lGcfT7mG/nc1L+FPi+2OnVwEos+CJt8gUNrjz6qkGKJkPSOPrw7lszIB4s+4ECpXZjDgz7KxrU5JMx/PuWnw5FedHc++uohsGCNbj5OWtziU2plPgF4XkjILGA+YeP4mYbQaT4NZNb/nTpwPndqdJbAkGc+1h+N5e8XWj7z7VUFWHdfPmKNj6CUfWE+km8H7fczYz70K7rpn2hlPmRGcC/GkGo+F/B0GsNdcj52OQqYs5BwPhP9Y53WhHQ+VwemYNekaz4UUHf00IFyPhbEy6gOXHA+8+kYkbyAeT6KeqzqjnNzPu7uhBo8Yn4+EOJ68SErlD5Qm6tb3fCePkU5IkZjOJ4+g1yS2nUjmD4IcdO8rTCSPomYOyG6Ioc+9mxXnClJfz5CqJUsPGt1PpRFCdnEkW8+/488TSHjaD57DCJ8tz5gPqyNXiCz7lI+yis88X9PQT6IOrcglhZBPuJvzfx/7z0+MGoyCwRbQj6WY23KOts3PqyOczpc8Tk+RML/gZovXj6yx7x0WbOPPsy5D5EuV5s+K4tv0k7LoT60yX7nffOmPm5nTM8lBqw+xDH9qMNGqz50WXnz9nulPh2piVai/qM+rYl1Z8zGnz79tdrMRHaWPgi7nnZwRIs+zWGmtoRbfT47/XXABfVoPogVym1Nomc+4fqWaQV8az61XoKLIIJwPhCGwWNuWXM+b7llhYWZbT4bwP97DmB7PpMLWcYawos+stpfCVxzlT7t/6FUQlCVPuU9se2ur5M+fltN3BPPkT6S7Ilmr4uPPnrP7yONSoo+gQNR3Z3khD7CyDPsxRKBPvC2PVlMd3w+hIxj2da5dj7d/UlkftVxPuErZ5N2CGs+pNohAMjcYz5+fTGE+CRhPi1ub6tpDGA+9Aj/HM1qUz40VJ/W1hxaPoBEGRGtilc+6GGx0flLUj7yJRmM3VBGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5918\"},\"selection_policy\":{\"id\":\"5919\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5848\"},\"major_label_policy\":{\"id\":\"5849\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"dNPCKyduFz48IfkPl6UXPrBJ3YA83Rc+YFiXbBIVGD6YcvDAJk0YPqzbJt5H2BY+SK8FiyFeFT4wBeXU180dPjzw0nxlLCM+5DZCZRn+KT4KlxQoVn9DPh/vS7TgaEQ+wGg3rf4sIT58nvxdMAoJPlymBVNJMCE+hI76DyG7Hj4oOhpalAkbPqhO2+/sMh4+86Z/0pV5Mj7AEa5uk0UXPhiowXBLSBk+ON1S5GK3HD5OCaqABy06PvgD2KRIkhI+KKeEjGzUBD4U2ByIrD7hPQA36xsnThQ+nv1RdHV3LT4ctxX21k8NPuZitWTUFDY+6MjfQdn6BD7s3+yG4vIIPtws21eq9ww+LZVffUJSMj5c8CQz8pMOPkTFbu2lGxE+wIL5SS7zEj4wdiT3+PcPPlw8t4XP9Qk+oOPNDCdVCz5AvBdqUmH9PdxMlZzGVAM+eKyUTUkICD5op4yYcssMPuC85608zxA+QFcEbDE8Cj6kSGsixMACPkwdtZy6chQ+0DyIUnXrJD6sl6w82X82PsDeumvSfiI+PJRnyiYf4j200VIIEHT4PdgfD9UB4hI+VyFp3N2zMT7QuyMcI+ImPnalqrh7ahY+1F2C6l3HCD5A5iggab4APnQmce+tMfE90Ig3dP6MpT1gOgg1QUbqPcCC9hV9xvk9VwyKNpEtET6kTJpZe8kWPt5/FLsnbzA+yomuTN9SOz56OWJNI7w3PuhTvnjA/gc+bmZe/8pJAD4sl0w3pFsRPvh/x0MXAh8+4pzJ38P3GT7EiTHuSOoVPrgtESKJzRE+EGl1SEvXND6GAt0aT1EoPqP0CdH4jCg+0D9rkXCM+j2DtKp4Gh4fPkRPJPhjWtg9diWP7iIhJD7sXbB4D8sCPq4/SYUU2jI+9wR8JCqhOz4AbONqNhYzPn5nhhP1wSc+pMvz6EiGMT6AtvjEU4w0PryOGF1mJUY+nDOcRq4DGD4JThDenD07PuiituhWIiI+Q2gxLMGjLD6corRHfq47Plyb0T7Gi0E+eFDwsuZCQj7uECkAVkZAPo58xLlmgEU+BAfmiNy1ST6BUJkvxORDPidu5xP2Rz4+ztSoCdAzMT5zdP/glo04PkDDKu4wpxs+MojVye4cSz5Agg4YhzpHPnIN4G8kukc+AAebynEyST5MQYx9SClKPs3Em2xv30w+IB+bSp61Qz6tETGMQZFHPkuOmQjwzE4+EBOER9qcWT6lgNQZloldPrrIwwone18+Slxl2gTBXz620FCx6o1jPlzwBNhIoWQ+vfVM3xoeaD4kOuljzkNoPpV0EPGNaWg+xg4wm+tObD5HEGrbHkBwPrHfnA0tX3M+OCOVtSYCcz4k5fRATPh2PtnfL7OvN3c+O8ENLJoAdz7shnOpFNV6PqZqlb8Ft3s+Vy5fqM1WfT66h2ZcIc5+PkheJj5ZMYA+sn43jRhmgT6I7DtKMC+CPt1rvRWT0II+iIzsoi0ChD4+eFHLP+WDPouWiRFjtYQ+HNtVQpK3hD5jVpn7NOyDPqPO7wUfQoI+VO2IZX0HfD66KAcKxs5yPsShfWLjKXA+soGwgczMZD7+SiT+LnphPl6STAsyq1M+k/p9lwxzSj59B0vg9TZTPkUls6rhhVc+X0gowJF5VT72oMm1ef1UPoje7mRmm1g+UhAppiroVD7wyaiU/pNLPq4H9wgq+Ek+WlRrMkdoST4+HNBLur5NPjglhNv8K0s+nbXs/M59Tj6FklM3GlFUPmHgL+RScFw+kKOFOij5YD4uqRAuufllPmQg8xfwIGk+iqg7002PbT4DzLZ6oZVzPuh+WZTYcXY+0g1ypO3tfD4oPgQ3luh9PnAJ+My0aYA+WhPIK+Nggz7caxjdVVyFPvFCaLSpeog+UavzUpgYiz7ZnIaUUImMPjZu3wi3b48+ojTtK5HUkD7wiQO1MPCRPkySk6lJi5M+cdk6nLqblD4MfO29YeqVPio6BPEZ05U+Ux5T1fm4lT7JqOFRNyqWPsb/rSX+bpM+JTuP/entkj4n2lPzlFqRPr0vZ/cvuZA+joRnI+dzjj6oPSg/BxGKPnp+NSZhL4g+vNMI013lhT6R6yAI252EPvEoKx2WNIE+kT2QRbxQej4V/+fTcvxyPqrPY1eAvmU+g8WnnBCkUD7kCV6/xhsyPtRsZcAmeTg+JkBpTDuBMD6KoTH1390gPvDoMLYTNwA+zHRaq8UP/j1c3S2vzvz2PVTonqcKwhU+0OjTHndyET64EI2bZSkKPvSvnf+CUQE+IFOCJGZzCD7QN/7jkasPPiyfUq76QOw9jBRP7TV68j3g4vkUROH2PegeT5vEVfs96O01lGi3+z3sfAYG2Bn8PSzS77UTffw9nLr+5AHh/D202slHRvPvPYy4x4maCDE+bqycq3hJPT6Y411QjddEPuoYzUrBU0s+F82FMB+sRz7nTToOtbVVPj6/LVLcIEU+ODrWxvU4ST5d3oBz859QPuUDJ1GPP0g+GgI3VYalST5gcN6IS5JdPuYF/ZnkK0g+uB3Aa3d5Vj5qbShz2p1YPsjIDEgz12A+cJhXYV0Naj4jZns6NnJiPuLnrD0uSWk+SWjiiEUybz42SX5FOltoPmpFa/HtgHE+t0muHj/Idz4nsA+YYu13PqxOcPDv+Hk+/LfBN80JgD508H55imaCPsRV2gV0KYE++HkaqRY1gz4SlK3huU+FPirznLdoIIY+nnTvFabuhz4RyorGkuuMPhA7SM9v0I0+dgDJBHzMjT4vryiXN5GPPuIBCX7Pmo8+jKmLyZBdjj4yNEEZwVSMPoXuoNHGfIk+73iBaJ+chT5OhR02y1aDPrMWYBcr93Y+RmREGZxMcz7X6r9Ag5drPo1K6dhWTGg+V/zbWMtCZj51WUDqCwBfPoTRGc0cul8+7AWTNQakWD6RaGoZzZpkPmeuUC0UbE4+mmlGVn2UXz61oMR5uDFoPr6Q6PsRnWY+igWXDzQ1Zz5sZIsYOzpePt2rnKDu0Vs+5CHylyFMKT4smJEcXLpYPjQtDyPzf14+KWFbRoT/YD4uNrzbek9kPq8qBIMTWWM+MGWLapP2Xz5BWbQZb0NhPhIXgn9UPEU+jFUPJxNSXj7wtjvDKUlZPpaSsuOpfVo+/kxWe4zGZT5OfZpf2vdePoeddDWVZGI+bgWQYMYRXz4oRvDgbqxePl2DVHeyq1I+9FuxqihtQD724ZnkMcRaPiky6iQ2bmA+8DV50Ob5Xz6WJC5c2tdTPuvKx906mkE+XhWr6DbCTj6BvziugRNhPquvQYxQakk+O9c/5u+8NT6kZb8W79EzPusXWeyCQDw+dZVkly39Rz7v3ikHqFBBPh25vz7ekkg+GcZ/FDhkVD6EpTIvD9sjPki8I4Dp4iw+KHZiWp2uFj6yY9Bj2RwzPuBfRw3Ufzc+T1cFjniuQz6HvcqrRIBOPvmcvM5DETo+JpHb8/VQQT5gI1ANOuo5PnLwj7cSMjo+0KzYivGPNT4YBhOJ4rs0PtSk9uu4QCE+ZPs9wu0yJj66qYn6vdkwPlcJy22Y20Y+kF+buYZTNz5cT7dPB1kCPmwapKBj+TY+9KUU3Diy6D0EuuXwSF8EPqCj1aTDVhE+jv3Z6DPVST4Janh3bNhOPhC16EbsVlA+V+m6GyNfQD62ZUd+oL5gPrhKGSFq1UM+BrWbNjxIQz588fO0MUhPPv/4NfYLXVw+BREVQ1Z5WT7CrkheGFZgPiZRgJtCQU8+FaIEpSr8Wj5op3PJTPAVPtxdQ2Z8V1A+MzTZSTgBRT6Du/WvhiZFPtzQesrSPFE+zLZvFT3bFT46X7dCMOk6PkizC8bNbSs+6dt1S9CrQj6o5TEEJsRQPkwyCmeHxwg+VvMUWNXIUT7lDm7EM05YPlk360Nd41Y+AioQ7ir7Wj4b8RfsAhpZPuGXmmcyYGA+MoZYySbJWj5bQf3PmstjPvLs8uMoxlk+7WtRbULSXz6rhW/MyBRSPqU+ie1Y+Vo+S//gEwJoZz6J7JeVLyJoPoqj2hvz7Gg+nM8uBoqCZT7GHF/Z9QtwPgo1lrazgmo+lY8ULQQubz5XfTdCDwhyPlkL6rXlBGs+4y6nkAOtbz4P4bQE+tNzPirjZAoOqXI+p/YZscaHcz65daYO8mFxPioPGtKDRng+s6nfwxktcz4ngNt7HjJ6PqDY1LdBRHk+vZ4W9KHGdz7WOlyw9058PmRQ7KeSX3g+MPdOdJbNdz75vJgPBLR2Pv18B796hXg+Vb2KheUfeT6hQ8EDnQZ3PrWE99SFS3s+miKHfpkxdz7m2gwAWW13PrBtUbzSNXk+OkFrDb8ddz5XVg6nTdt1PjINvuXm/XM+LhoOsYbZcz4b4MfQykNxPnjd25rxeXM+04awOT2ycz6Ck6Gw2kZ0PjpxgikhVXE+kX6hlbvvcj4wO5gxoVNyPqVkIxLOE3A+FxbSjxvwaj5UgrMTX2prPvCvjwMHAGY+H5Tqzsdnaz5DG2rYFQlmPpm9SZ0lmWk+7SUWJYL1Zj7Uye1bjHJpPpCk3T3xaGU+/d+QlPYQWz66PYwaBstiPmiY/hDUDlo+em1TJGRDWz6x4koD+FpePiWUe2lrIUk+UmyzV+F5Sz5zJBF3fIdLPni/gNba2TE+eMqhNL28Oj7M1xGxL9ZBPuYi3uFWVEY+RNJIG57ZLT7b9N69IwxEPi0ZadkBh0A+O0usfL2XRD6+YRT9ZrI9PjxHjYqJCiA+guPw5mtpQT4YGKttwtFKPqgSZAsd/DY+5Ez/9qhSJD5Cg14BQe4TPn5dmTgCGCU+DB2i0jRDHj7oD3HyAnYfPhkBFNSSSzI+ltMod8UNPj4cQPUiIZTwPZisDtv7RAk+ZNYVinUrFT64gWQUCgIgPg6MaI9QxSA+qgRyh2cFJj70J8CuY0wrPmy7jAUvH0A+VKtpI3GqET5JbKUf4M40PtgpXajaYkk+nTHxuKsSOj6kkTs2rEQDPlCPlUprtwI+3GS6WEL9FD7sJz3GyT1LPvwuFX2bswI+sBJIX9fIAj6kYYpLGN4CPgD6LVWv3BQ+kIqNDHCNKz4YFDqnKDARPiDP1yG/5BY+AOARnIOgHD6gBi6rzOQcPlzy7jc2rxw+eq/TpVVgJT5qUHZLew0uPobDfp+8YjM+1GRCN+QGLT6YS/jZzWkHPnRc4ITqS/Q9AOZKHuFJGj4M1vLPOTwiPga2vc3ltTg+aAUKQsjWID7u/cB9TskkPj8tCW0weys+mD/wIbajHj7Q1AjIT80iPsY3zNiwizM+FIHjdL2MEz6oRephrLADPlCSU64uN5g9OG1hngsbFT4UMgo8jBslPv006IpEf0c+wNB6PfzDKz7IsYITWuAUPsjjObjI9hs+Xmm5Pfx4Nz6cNEpa4gk3PiDqK2A5mjY+AXYFB/UpNj6PJ2tdLbk1PqjhuhDt+yw+KBngw/HuKT7ZIc+gxodNPhwaL31Ddx8+EM62AaWtMz7UrDft/Go7PuL0iRqgmEE+pjX6zS2ART5wWmxPs83aPURc2g6RqyU+CIi9yYZyQD4sY0khIjo2PhzvtfDoBSc+fBc6QDduKz58FdTP6hIyPvxVL8SlczY+Kk2GXnENJT7IAmZkUn0wPliH7BA3iCs+ZDYy7nYPJj4uM31/yfFHPnxkv+i11VA+A+LoHQK4VT5oJT3xZVAzPoxv9vnJCzk+HEyVKYu/Lj5UlLBlz5I0PmS3Rf4plCg+CBqq0DG/Dz4ERUt6sTskPlTthoJYDko+sLK5Ce1cTj5Qjs0uBFEvPrjCpW7k4C8+SHFJ16w4MD7APM9lrmIqPuSYzicQTSQ+SD7hkntf/z3Axy6Gj88/PvgxPQ3F5U4+OMPY/BdAQD6oeGNxVQdOPgDJR/NH71U+5N+YlkMrTz5eqvLAqYxlPoChUuEaP2E+5J9G/sScYD6sDLAxtnBiPjQRGBQz3Fs+hD4eKk3MUj54wgu0WWNDPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5852\"},\"selection_policy\":{\"id\":\"5853\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5849\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"e66e9052-b531-414a-b4a3-e0e4ec6220a8\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"2b4d41fe-1dcb-438e-818e-26705a6bc14e\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:32.600930Z",
     "iopub.status.busy": "2023-11-28T23:50:32.600392Z",
     "iopub.status.idle": "2023-11-28T23:50:32.605137Z",
     "shell.execute_reply": "2023-11-28T23:50:32.605459Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 278.8, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(278.8, '0.00e+00')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:32.614367Z",
     "iopub.status.busy": "2023-11-28T23:50:32.613734Z",
     "iopub.status.idle": "2023-11-28T23:50:32.615431Z",
     "shell.execute_reply": "2023-11-28T23:50:32.615782Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:32.618979Z",
     "iopub.status.busy": "2023-11-28T23:50:32.618393Z",
     "iopub.status.idle": "2023-11-28T23:50:32.620862Z",
     "shell.execute_reply": "2023-11-28T23:50:32.621372Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:50:32.626284Z",
     "iopub.status.busy": "2023-11-28T23:50:32.625504Z",
     "iopub.status.idle": "2023-11-28T23:51:20.250695Z",
     "shell.execute_reply": "2023-11-28T23:51:20.251089Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:20.274544Z",
     "iopub.status.busy": "2023-11-28T23:51:20.273199Z",
     "iopub.status.idle": "2023-11-28T23:51:20.277763Z",
     "shell.execute_reply": "2023-11-28T23:51:20.277196Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>3.900000e+01</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1210.810769</td>\n",
       "      <td>3.236257e-02</td>\n",
       "      <td>5.183283</td>\n",
       "      <td>877.938062</td>\n",
       "      <td>1.615506</td>\n",
       "      <td>-0.388286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>1545.074568</td>\n",
       "      <td>1.613264e-01</td>\n",
       "      <td>0.078049</td>\n",
       "      <td>17.883637</td>\n",
       "      <td>0.163845</td>\n",
       "      <td>0.030821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>70.440000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.048527</td>\n",
       "      <td>845.651265</td>\n",
       "      <td>1.391884</td>\n",
       "      <td>-0.432908</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>283.715000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.134623</td>\n",
       "      <td>863.788839</td>\n",
       "      <td>1.502803</td>\n",
       "      <td>-0.411218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>632.310000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.166691</td>\n",
       "      <td>881.092346</td>\n",
       "      <td>1.565276</td>\n",
       "      <td>-0.397245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>1345.670000</td>\n",
       "      <td>1.850000e-14</td>\n",
       "      <td>5.215978</td>\n",
       "      <td>887.454692</td>\n",
       "      <td>1.727353</td>\n",
       "      <td>-0.367901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>6257.090000</td>\n",
       "      <td>9.940000e-01</td>\n",
       "      <td>5.396101</td>\n",
       "      <td>916.892069</td>\n",
       "      <td>2.076797</td>\n",
       "      <td>-0.321688</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius   chi_square       p_value    gravity  temperature  \\\n",
       "count  39.000000    39.000000  3.900000e+01  39.000000    39.000000   \n",
       "mean    0.790000  1210.810769  3.236257e-02   5.183283   877.938062   \n",
       "std     0.120018  1545.074568  1.613264e-01   0.078049    17.883637   \n",
       "min     0.590000    70.440000  0.000000e+00   5.048527   845.651265   \n",
       "25%     0.690000   283.715000  0.000000e+00   5.134623   863.788839   \n",
       "50%     0.790000   632.310000  0.000000e+00   5.166691   881.092346   \n",
       "75%     0.890000  1345.670000  1.850000e-14   5.215978   887.454692   \n",
       "max     0.990000  6257.090000  9.940000e-01   5.396101   916.892069   \n",
       "\n",
       "       c_o_ratio  metallicity  \n",
       "count  39.000000    39.000000  \n",
       "mean    1.615506    -0.388286  \n",
       "std     0.163845     0.030821  \n",
       "min     1.391884    -0.432908  \n",
       "25%     1.502803    -0.411218  \n",
       "50%     1.565276    -0.397245  \n",
       "75%     1.727353    -0.367901  \n",
       "max     2.076797    -0.321688  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:20.288010Z",
     "iopub.status.busy": "2023-11-28T23:51:20.286908Z",
     "iopub.status.idle": "2023-11-28T23:51:20.290683Z",
     "shell.execute_reply": "2023-11-28T23:51:20.291105Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>661.55</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.216505</td>\n",
       "      <td>863.827026</td>\n",
       "      <td>1.655062</td>\n",
       "      <td>-0.400827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>6024.78</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.059169</td>\n",
       "      <td>911.893534</td>\n",
       "      <td>1.403220</td>\n",
       "      <td>-0.393254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>192.03</td>\n",
       "      <td>2.440000e-07</td>\n",
       "      <td>5.190010</td>\n",
       "      <td>874.422689</td>\n",
       "      <td>1.692320</td>\n",
       "      <td>-0.321688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>792.24</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.078707</td>\n",
       "      <td>868.465393</td>\n",
       "      <td>1.524835</td>\n",
       "      <td>-0.419286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>331.93</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.215450</td>\n",
       "      <td>871.500041</td>\n",
       "      <td>1.479089</td>\n",
       "      <td>-0.418082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000      661.55  0.000000e+00  5.216505   863.827026   1.655062   \n",
       "1  0.600526     6024.78  0.000000e+00  5.059169   911.893534   1.403220   \n",
       "2  0.611053      192.03  2.440000e-07  5.190010   874.422689   1.692320   \n",
       "3  0.621579      792.24  0.000000e+00  5.078707   868.465393   1.524835   \n",
       "4  0.632105      331.93  0.000000e+00  5.215450   871.500041   1.479089   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.400827  \n",
       "1    -0.393254  \n",
       "2    -0.321688  \n",
       "3    -0.419286  \n",
       "4    -0.418082  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:20.369781Z",
     "iopub.status.busy": "2023-11-28T23:51:20.334216Z",
     "iopub.status.idle": "2023-11-28T23:51:20.374381Z",
     "shell.execute_reply": "2023-11-28T23:51:20.374970Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"e03f9212-4ca9-4ff4-bad4-7b0d55558c53\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"06975724-944f-45ea-b972-99b54ccd8a33\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"5Nu4y3Lx6D9I4XoUrkfpP3PxwO5fSuo/1/aCN5ug6j8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]},\"y\":{\"__ndarray__\":\"XI/C9SicUUDXo3A9CsdcQMP1KFyPOmFA7FG4HoWLX0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]}},\"selected\":{\"id\":\"6347\"},\"selection_policy\":{\"id\":\"6348\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6340\"},\"major_label_policy\":{\"id\":\"6341\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6343\"},\"major_label_policy\":{\"id\":\"6344\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"6340\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"6341\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6343\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"6348\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"6344\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"Selection\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"06975724-944f-45ea-b972-99b54ccd8a33\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"e03f9212-4ca9-4ff4-bad4-7b0d55558c53\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
