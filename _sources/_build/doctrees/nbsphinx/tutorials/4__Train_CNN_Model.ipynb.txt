{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 4. Train ConvNN Model: Regression Method\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "- Load the brown dwarf dataset used to train the ML models\n",
    "- Prepare the X and y variables to deploy the trained ML models\n",
    "- Visualize them for few cases\n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DeepBuilder*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6a0e9b08-df67-4377-9ad7-61865ed8f859",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:48.108517Z",
     "iopub.status.busy": "2023-11-28T23:51:48.107792Z",
     "iopub.status.idle": "2023-11-28T23:51:53.045477Z",
     "shell.execute_reply": "2023-11-28T23:51:53.045885Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1004\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1004\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1004\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1004\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1004\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.DeepTrainer import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN\n",
    "from TelescopeML.StatVisAnalyzer import *"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 3.1 Data Preperation \n",
    "\n",
    "### 3.1.1 Load the Synthetic spectra - training dataset\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f0207e12-7f50-4abe-97bf-4d1229d5afd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:53.051105Z",
     "iopub.status.busy": "2023-11-28T23:51:53.050553Z",
     "iopub.status.idle": "2023-11-28T23:51:53.053005Z",
     "shell.execute_reply": "2023-11-28T23:51:53.053427Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e6447ec-26d9-4ad6-ac14-ccf292a25a0f",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "68bfc730-ea01-488a-ae40-ad33704a34b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:53.057112Z",
     "iopub.status.busy": "2023-11-28T23:51:53.056563Z",
     "iopub.status.idle": "2023-11-28T23:51:55.518137Z",
     "shell.execute_reply": "2023-11-28T23:51:55.518527Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8829707-f03e-4fad-94d7-7f7529f68f59",
   "metadata": {},
   "source": [
    "### 3.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )\n",
    "\n",
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.526659Z",
     "iopub.status.busy": "2023-11-28T23:51:55.526084Z",
     "iopub.status.idle": "2023-11-28T23:51:55.528458Z",
     "shell.execute_reply": "2023-11-28T23:51:55.528806Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "74a42327-8bfb-4846-88b1-ad711c8da56e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.532924Z",
     "iopub.status.busy": "2023-11-28T23:51:55.532223Z",
     "iopub.status.idle": "2023-11-28T23:51:55.535311Z",
     "shell.execute_reply": "2023-11-28T23:51:55.534960Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['2.512', '2.487', '2.462', '2.438', '2.413']"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# training_features_labels: they are Wavelengths variables in string format\n",
    "\n",
    "training_features_labels = [item for item in train_BD.columns.to_list() if item not in target_features+['is_augmented']]\n",
    "training_features_labels[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "21aa48e5-b6ab-4db8-a2c9-b19ef458aabc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.539491Z",
     "iopub.status.busy": "2023-11-28T23:51:55.538916Z",
     "iopub.status.idle": "2023-11-28T23:51:55.541598Z",
     "shell.execute_reply": "2023-11-28T23:51:55.542058Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2.512, 2.487, 2.462, 2.438, 2.413]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# training_features_wl: they are Wavelengths variables \n",
    "\n",
    "training_features_wl = [float(item) for item in train_BD.columns.to_list() if item not in target_features+['is_augmented']]\n",
    "training_features_wl[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d56d2d6b-63c2-4005-94cb-68815ace5ff6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.547589Z",
     "iopub.status.busy": "2023-11-28T23:51:55.545574Z",
     "iopub.status.idle": "2023-11-28T23:51:55.550030Z",
     "shell.execute_reply": "2023-11-28T23:51:55.550386Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bb511a7-5a5f-4b52-a6d9-e8533ece247e",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 3.1.3 Prepare Inputs and outputs for ML models (X,y)\n",
    "- X: 104 column variables or fluxes\n",
    "- y: output variables: 'gravity', 'temperature',  'c_o_ratio', 'metallicity'\n",
    "\n",
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e90e78b1-4f64-40b6-b92e-6027c8ace483",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.554859Z",
     "iopub.status.busy": "2023-11-28T23:51:55.554342Z",
     "iopub.status.idle": "2023-11-28T23:51:55.576044Z",
     "shell.execute_reply": "2023-11-28T23:51:55.576386Z"
    }
   },
   "outputs": [],
   "source": [
    "# to assure we are only training the module with the native non-augmented BD training dataset\n",
    "train_BD = train_BD[train_BD['is_augmented'].isin(['no'])] \n",
    "\n",
    "\n",
    "# Training feature variables\n",
    "X = train_BD.drop(\n",
    "    columns=['gravity', \n",
    "             'temperature', \n",
    "             'c_o_ratio', \n",
    "             'metallicity', \n",
    "             'is_augmented'])#.astype(np.float32)\n",
    "\n",
    "\n",
    "# Target/Output feature variables\n",
    "y = train_BD[['gravity', 'c_o_ratio', 'metallicity', 'temperature', ]]#.astype(np.float32)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "deff6ab8-a62a-4a2a-9a07-43757c6bb6a8",
   "metadata": {},
   "source": [
    "log-transform the 'temperature' variable toreduce the skewness of the data, making it more symmetric and normal-like for the ML model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "07998d41-e101-410c-9a35-e5c6da1800b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.580347Z",
     "iopub.status.busy": "2023-11-28T23:51:55.579711Z",
     "iopub.status.idle": "2023-11-28T23:51:55.582955Z",
     "shell.execute_reply": "2023-11-28T23:51:55.583368Z"
    }
   },
   "outputs": [],
   "source": [
    "y.loc[:, 'temperature'] = np.log10(y['temperature'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "37b9edab-f6dd-406e-b4c4-aba7ef45634c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.591204Z",
     "iopub.status.busy": "2023-11-28T23:51:55.590578Z",
     "iopub.status.idle": "2023-11-28T23:51:55.592933Z",
     "shell.execute_reply": "2023-11-28T23:51:55.593283Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>temperature</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>3.041393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>3.041393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>3.041393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>3.041393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.041393</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  c_o_ratio  metallicity  temperature\n",
       "0      5.0       0.25         -1.0     3.041393\n",
       "1      5.0       0.25         -0.7     3.041393\n",
       "2      5.0       0.25         -0.5     3.041393\n",
       "3      5.0       0.25         -0.3     3.041393\n",
       "4      5.0       0.25          0.0     3.041393"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the output variables\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6108f702-bb40-49f4-9c38-306e0e27ad4f",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9cc267d-85a9-44c6-9081-5067d0bdd8e6",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 3.2 Build the CNN model and Processing the Data\n",
    "\n",
    "Here we instintiate BuildRegressorCNN class from DeepBuilder module to prepare the datasets and take the trained CNN (Convolutional Neural Networks) for us:\n",
    "\n",
    "- Take the synthetic datasets\n",
    "- Process them, e.g.\n",
    "    - Divide them to three sets: train, validation, and test sets\n",
    "    - Scale y variables\n",
    "    - Scale X variables\n",
    "    - Create new features \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "107dde69-813d-4145-8765-7915321b704c",
   "metadata": {},
   "source": [
    "### 3.2.1 Instintiate BuildRegressorCNN class from DeepBuilder module"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bc38d0e4-a4c2-4288-9d33-ab15fb25093b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.597264Z",
     "iopub.status.busy": "2023-11-28T23:51:55.596701Z",
     "iopub.status.idle": "2023-11-28T23:51:55.599761Z",
     "shell.execute_reply": "2023-11-28T23:51:55.600146Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_Data_Processor = DataProcessor( \n",
    "                             feature_values=X.to_numpy(),\n",
    "                             feature_names=X.columns,\n",
    "                             target_values=y.to_numpy(),\n",
    "                             target_name=['gravity', 'c_o_ratio', 'metallicity', 'temperature'],\n",
    "                             is_tuned='yes',\n",
    "                             param_grid=None,\n",
    "                             spectral_resolution=100,\n",
    "                             is_feature_improved='no',\n",
    "                             is_augmented='no',\n",
    "                             ml_model=None,\n",
    "                             ml_model_str='CNN',\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1559d83a-d54c-4d72-86d0-516f578e379d",
   "metadata": {},
   "source": [
    "### 3.2.2 Split the dataset into train, validate and test sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3a00b374-192b-4a7f-9606-a9015f6db53d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.604282Z",
     "iopub.status.busy": "2023-11-28T23:51:55.603732Z",
     "iopub.status.idle": "2023-11-28T23:51:55.667043Z",
     "shell.execute_reply": "2023-11-28T23:51:55.667584Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_Data_Processor.split_train_validation_test(test_size=0.1, \n",
    "                                                 val_size=0.1, \n",
    "                                                 random_state_=100,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0aa6f88-a1eb-4a8c-9965-ae92a84e6070",
   "metadata": {},
   "source": [
    "### 3.2.3 Standardize X Variables Row-wise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a5401e9b-1a1f-4914-838f-cac6fa26ee1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.671862Z",
     "iopub.status.busy": "2023-11-28T23:51:55.671169Z",
     "iopub.status.idle": "2023-11-28T23:51:55.710951Z",
     "shell.execute_reply": "2023-11-28T23:51:55.711388Z"
    }
   },
   "outputs": [],
   "source": [
    "# Scale the X features using MinMax Scaler\n",
    "trained_Data_Processor.standardize_X_row_wise()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7bd0840e-399b-46e7-93d5-3e850d28651a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:55.730152Z",
     "iopub.status.busy": "2023-11-28T23:51:55.729565Z",
     "iopub.status.idle": "2023-11-28T23:51:57.615530Z",
     "shell.execute_reply": "2023-11-28T23:51:57.615870Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1008x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "trained_Data_Processor.plot_boxplot_scaled_features(scaled_feature= trained_Data_Processor.X_train_standardized_rowwise, \n",
    "                                                  xticks_list = training_features_labels,\n",
    "                                                  title = 'Scaled main 104 Features',\n",
    "                                                  fig_size=(14, 3),\n",
    "                                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f35db1f3-ca36-4fb2-b040-7dbfbdf4dded",
   "metadata": {},
   "source": [
    "### 3.2.4 Standardize y Variables Column-wise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ba7f068d-9503-4b77-b516-03d432309423",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:57.619205Z",
     "iopub.status.busy": "2023-11-28T23:51:57.618710Z",
     "iopub.status.idle": "2023-11-28T23:51:57.623156Z",
     "shell.execute_reply": "2023-11-28T23:51:57.623516Z"
    }
   },
   "outputs": [],
   "source": [
    "# Standardize the y features using Standard Scaler\n",
    "trained_Data_Processor.standardize_y_column_wise()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "502c120a-ed2c-4da3-b7d6-88d08c82d404",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:57.637886Z",
     "iopub.status.busy": "2023-11-28T23:51:57.637385Z",
     "iopub.status.idle": "2023-11-28T23:51:57.889594Z",
     "shell.execute_reply": "2023-11-28T23:51:57.890151Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "trained_Data_Processor.plot_boxplot_scaled_features(scaled_feature= trained_Data_Processor.y_train_standardized_columnwise, \n",
    "                                                  xticks_list = ['','$\\log g$', 'T$_{eff}$', 'C/O ratio', '[M/H]'],\n",
    "                                                  title = 'Scaled target Features - ColumnWise',\n",
    "                                                  fig_size=(4, 3),\n",
    "                                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8352d53a-e91c-421f-a321-25a43156f5be",
   "metadata": {},
   "source": [
    "### 3.2.5 Feature engeenering: Take Min and Max of each row (BD spectra) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0c15fbc3-74eb-4417-b536-fe2f1a6686f6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:57.894958Z",
     "iopub.status.busy": "2023-11-28T23:51:57.894320Z",
     "iopub.status.idle": "2023-11-28T23:51:57.903478Z",
     "shell.execute_reply": "2023-11-28T23:51:57.903860Z"
    }
   },
   "outputs": [],
   "source": [
    "# train\n",
    "trained_Data_Processor.X_train_min = trained_Data_Processor.X_train.min(axis=1)\n",
    "trained_Data_Processor.X_train_max = trained_Data_Processor.X_train.max(axis=1)\n",
    "\n",
    "# validation\n",
    "trained_Data_Processor.X_val_min = trained_Data_Processor.X_val.min(axis=1)\n",
    "trained_Data_Processor.X_val_max = trained_Data_Processor.X_val.max(axis=1)\n",
    "\n",
    "# test\n",
    "trained_Data_Processor.X_test_min = trained_Data_Processor.X_test.min(axis=1)\n",
    "trained_Data_Processor.X_test_max = trained_Data_Processor.X_test.max(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ab93721b-c0d0-4d4d-969a-d36bed701a67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:57.988977Z",
     "iopub.status.busy": "2023-11-28T23:51:57.945757Z",
     "iopub.status.idle": "2023-11-28T23:51:58.809822Z",
     "shell.execute_reply": "2023-11-28T23:51:58.810186Z"
    }
   },
   "outputs": [],
   "source": [
    "df_MinMax_train = pd.DataFrame((trained_Data_Processor.X_train_min, trained_Data_Processor.X_train_max)).T\n",
    "df_MinMax_val = pd.DataFrame((trained_Data_Processor.X_val_min, trained_Data_Processor.X_val_max)).T\n",
    "df_MinMax_test = pd.DataFrame((trained_Data_Processor.X_test_min, trained_Data_Processor.X_test_max)).T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "915c7c1f-2e5e-46ea-bcb9-29c6b4203f8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.813969Z",
     "iopub.status.busy": "2023-11-28T23:51:58.813404Z",
     "iopub.status.idle": "2023-11-28T23:51:58.815031Z",
     "shell.execute_reply": "2023-11-28T23:51:58.815450Z"
    }
   },
   "outputs": [],
   "source": [
    "df_MinMax_train.rename(columns={0:'min', 1:'max'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1aad7765-9e8e-436a-9760-a3b2210c4c7a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.821519Z",
     "iopub.status.busy": "2023-11-28T23:51:58.820939Z",
     "iopub.status.idle": "2023-11-28T23:51:58.823292Z",
     "shell.execute_reply": "2023-11-28T23:51:58.823677Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.984493e-18</td>\n",
       "      <td>4.560593e-11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6.833671e-15</td>\n",
       "      <td>2.317328e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.870361e-14</td>\n",
       "      <td>5.564836e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.696652e-19</td>\n",
       "      <td>5.071436e-11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.321553e-10</td>\n",
       "      <td>1.636513e-07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            min           max\n",
       "0  2.984493e-18  4.560593e-11\n",
       "1  6.833671e-15  2.317328e-09\n",
       "2  2.870361e-14  5.564836e-09\n",
       "3  5.696652e-19  5.071436e-11\n",
       "4  1.321553e-10  1.636513e-07"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_MinMax_train.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f6890bd-f469-4282-9e73-7a22df6e6d05",
   "metadata": {},
   "source": [
    "### 3.2.6 Scale Min Max features - ColumnWise"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1ba420c3-13b0-418b-ab72-3d0dc45e156b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.827635Z",
     "iopub.status.busy": "2023-11-28T23:51:58.827096Z",
     "iopub.status.idle": "2023-11-28T23:51:58.832119Z",
     "shell.execute_reply": "2023-11-28T23:51:58.831750Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_Data_Processor.standardize_X_column_wise(\n",
    "                                                X_train = df_MinMax_train.to_numpy(),\n",
    "                                                X_val   = df_MinMax_val.to_numpy(),\n",
    "                                                X_test  = df_MinMax_test.to_numpy(),\n",
    "                                                )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c2a88179-5415-43cb-b3ce-c8bc96fff450",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.846674Z",
     "iopub.status.busy": "2023-11-28T23:51:58.846151Z",
     "iopub.status.idle": "2023-11-28T23:51:58.931029Z",
     "shell.execute_reply": "2023-11-28T23:51:58.931506Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAATwAAADQCAYAAACa9N1LAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAeOklEQVR4nO3debhcVZX+8e+bmDCJBiTMhCiiIMgg6QiCkiBDQJFBVAZRJiPYDoA02oIY+CEoTq3QiEhoGUVBkVkhQJihTWhAZoIECUEIEAIJk4T1+2PvSg6VqnvPvffUner9PE89t+qM6546tWqfofZSRGBm1g6G9HUAZma9xQnPzNqGE56ZtQ0nPDNrG054ZtY2nPDMrG20VcKTNEnSvRUsZ76k/SoIqba8/STNr2p51l4kzZR0RF/H0ROSpko6pdXr6TcJT9JISafmN+81SU9LulbSdn0dW1flxBqSpjQY95U8rph4fwe8p4L1Rn5sVTd8qKTZedwePV1PJzFMKsRRfOxa0fJH5+WNqWJ5fU3S7pKuk/SCpAWS/ibp+5JW7uvYukrSevm92bJu+LWS3pQ0sm74LEnH5Ze7A//Z6hj7TcID/gCMBQ4E3gd8ErgKeFdfBtUD/wQ+Kml03fADgH8UB0TEKxHxTEXrfYK0DYt2BN6oaPllPASsVve4qhfXX4qk4X28/u8DFwJ3kfb3DwDfAEYDh/RZYN0UEQ8CTwHja8PyNt6CtF9uXRi+LrAGcH2e9/mIeKk3guzzBzACCGDbTqYbDpwAPA68Bvwd+HoeNxSYDDwGvAI8AhwJDCnMPwm4t26Z+wP3A68CDwOH1c3zXmBqHv8QacecD+zXQZyTgHuBPwLHFoZvlOf9STEOYD9gfoP59wQeBV4C/gSs1Mn2CeC4vI63F4ZfDBybx+9RGH44cA+wAHgSOAMYURg/GbgPWKawjW8GLu/sf+9g/EeAG4CX8zp/CbyjMH4CcBMwF3ge+Auwft3/WHxMzcN/Ux9XfSy1aYBvAbOAZ/LwNYAL8jrnAlcA6xbmWwu4JMfzMvAgsGcP9/mxOf7Dm30mCs+/DMwAXs9/v1Q37UzgiLpttEeJaQ7J/9fLpH1/PLBm3uYLSIn4Q/X7KfDxvH8uICWsdxemOQ+4tvD6Y6Rk933gvwvDJ5I+p0vn11OBUwrjdyftm6/k7X4DsEph/M7AdNLn8rG8/OGdbff+0sKbnx+fkrR0B9OdBXyB9EFdn9SSeSGPG0L6AH02jzsK+A4poTUk6UukBHpMnuebpA/DV/L4IaRkMYT0LXUA6UO0VMn/azLwxbwccry/JyWwzowGPgfsBmwPbEp6UztzD/BAnpd8aLQT8D8Npn0TOBTYANib9CE8uTD+68Aw4Mf59VGkL4ADSsSxBEkfBK4GLgU2Ju3UmwBnFiZbDvivHMs4YB5wWaE1Njb/nUBqOe7exTC2Jn3xTAA+LmlZ0of21TxuC1IrZUoeB3AqsCwpIWxA2mYvdHG99fYhJYyTG42MiBcAJO0GnELaJhsCPwdOlbRzD9cPcDQp0W8MTAN+S9pnTyXtb7NJXxJFS5EOPQ8gbasRwGmF8dcDH5FU+4yMJyWzqRRafvn5bRHxan1QklbNcZ1F+lx+DDinMH4HUmI9hfR+HADsQfosd6wn31JVPoBPkzL5q8BtpA/Zhwvj1yV9K03owjJ/AEzp4Bv/H8C+dfMcCtyfn28PLARGFcZvleMo08IbSkrC25F2lGfz/PVx7MeSLbxXgXcWhh0FzOjk/438xh8C3JKHHVHbBjT45q+bfwKp5Vxs4Y4htSyOA/4F7NhJDJPyNptfeNyXx50NTK6bfpMc18pNlrdcXt5W+fXoPP2Yuul+Q7kW3hxgqcKwA0hHAyoMGwo8B3w2v74H+F7F+/uVwN0lprsFOLPB/3pz4fVMutfCO7HwekPqWpykL5wgH1nk/TSA9xem2SfvH0Py63XyNFvn11NJX/TL5elWzcOfAo4uLGcquYUHfCgvY+0m2+RG4Lt1w3bN+5oazVN79JcWHhHxB2B1UlP1KtKhz+2SvpMn2ZTUIrm+2TIkHSxpmqQ5+arnYcCoJtOOJB2q/CpfdZ2f5/kB6U2D9O3yZEQUz7ndkeMo8z8tJH1LHUB6Q56LiJvLzAs8HhHzCq9nA2VPZJ8PbCrp/XndkxtNJGkbSdfkk8cvkQ7BhwOrFv6HaaSW5XeB0yOizLm4R0mJrPbYKQ/fDPh83fa+JY9bJ8e0jqTzJT0q6UXgaVILu+H72A33RsRrhdebAe8GXirENA9YgcX7wc+BoyXdJul4SZs1W7ikjxb/P0n7NJu0ZLzrs3gb1dxMOt/XU/cUnj+d//6twbDifvdaRDxUeD2bdBQwAiAiHiU1JMbno7XNSacdFpBakeMkrU/ax65rEtfdwBTgXkl/kHRI3QWPzYCj6vaj80lJddUGy1vkbR2N7G2RmrfX5Mdxks4AJkn6MZ3sIJI+R2r2HwHcCrwI/DvpkLCRWrI/OE/fcLFdib+JM0k71mjeeujWmX/VvQ5KXmSKiHmS/kg61FiNdFj+FpLWJp2r+jXpkP450jfrb0lJrzadSK3ShcA6khT5K7UDr0fEjAbDh5DOE/6swbgn89/L8vMv579vkM6xdnaB4U2WfL+GNZhuQYOY7iKdL633PEBETJb0F1Li3ha4VdKJETGpwTzTSEm+5ukG00A6Z/ZRScMj4vUm09Q02t4dvQdBuW1R3Meig2HF/a7+4lejaa4ntQ5vAObkJEh+PY70ZbIA+GvD4CMWStqelCy3J7UQT5S0dUTcndd1LOmCT705jZZZ029aeE3cT0rKSwN3kuId32TarYA7IuKUiLgzf+DWaTItEfE06QO1TkTMqH8U1r+GpLUKs46lC9stL+uvpEPDs8vOV4HJpJ3rvGhwniTHMxw4LCJui4iHSS3seoeTEuHHSDvg13oQ053ABo22d0S8IuldpBbNCRExJSIeAJbnrV/MteQwtG7Zc0jJvWiTkjG9F3i2QUzP1yaKiFkRcXpEfJb0BTGx0cIiXXEvLqPZ+dpai+SrjUZKGpGfPkDat4u2Iu2bzbxlW0hahSW3TStdT9pXdiIdqtZMJX1+xwM3RUT9l/oikdwWEccC/0ZqSX4uj74TWK/JftTh3Qj9ooWXd/QLWdwaeon0gTySdMXnReBFSb8HzpD0DdI/vSYwOiLOIX1j7idpR9KVrD1JJ6HndrDqScDJkl4gnVMZRvpwrxERJ5Ka1Q8CZ0s6DFiG1Drp6i0eO5LOG3UUS6Ui4vp8GNDsA/cIKXEfmluDm5POXy4iaWPS4ew+EXGrpEOAMyVdFxHduYH7h6TTFKcBv8qxrQfsHBFfJr1XzwJfkvQE6erpj3jr9n6GdOVuB0kzgVfzof91wJGSDiCd49kd2JJ0NbYj55GOCi6RdAzpcGwtYBfgtIh4RNLPSadZHgbeQTrX2VHC6VRE3CHpJOBHktYk3ZY1i3R4fSBpHz42//8XSppOuuAzgXTerKOLNdcB/y7pVlLL/ATSOeHecj3pnPWXSaeVam4h3W+6GnB8s5klbU5qSf+F1ELelPSe1Lb5ccDlkh4nXQR8g3QOcmxEHNlhZB2d4OutR944J5BaQnNJl8kfAX4KrFg33UmkltlrpHNFX83jhpNaNXNJV9Amk76JZxbmn8SSt6XsRUqer+Z5b6ZwywHpnsAb8voeAT5FydtSyo6nyW0pdfO8ZZomy+3sosRbxpOuwj5JSiDXkq5wB+nwe2nShZf6E+bnkM6xLFXmf2swfgzwZ9IphwWkc0bHFcZvk9f7av67Q/32Bg4iJaaF5NtSCut+inQO7tS8Ty1xW0qDmFYhXcV+Jr/Pj5G+fGsn60/O7/2rpNbTBaQvxSr2/c+QWj7z8va4l/QlM7IwzcGkBPgvyt2WsjopQc8nfUY+3WCa+n1hpTxsXGHYennYhs32QeoubBSGP5qHr1M3/HYaX3SayuKLFuvn+J/O78cM4Mi66bcn3b70ct6XppFzQUcP5ZnNzAa9/n4Oz8ysMk54ZtY2nPDMrG044ZlZ2+gXt6X0hZVWWilGjx7d12GYDWrTp09/NiJGdj5l72jbhDd69GimTZvW12GYDWr5Xrl+w4e0ZtY2nPDMrG044ZlZ23DCM7O20W8SnqQJkh6SNEPStxuM/w9Jd+XHvZIWSloxj5uZi5/cJclXImxQkdThw8rrF1dpJQ0F/pvUM/As4K+SLo2IRT1SRMSPSD1HkLu3PiwK3fcA4yPi2V4M26xXFH/vLgn//r37+ksLbyyp+/K/R+oM8QJS9zzN7EXqqNLMrLT+kvDWIFU2qpmVhy0hF1aZQOo/rCaAqyVNl9SwY0Yzs35xSEvjrtSbtdt3JhWoKR7ObhkRs3OFrmskPRgRNy6xkpQMJwKMGlVViQQzGyj6SwtvFqlH05o1SV06N7IndYezETE7/32GVL9hbIP5iNRF95iIGDNyZL/5tYuZ9ZL+kvD+Cqwr6d25/uiepNqlbyHpnaRu2y8pDFtO0vK156SeULvT/biZDXL94pA2It6Q9FVSH/ZDSd2K3yfp4Dy+Vuh3N+DqSCXfalYBLs6X598GnB8Rf+696M1soGjbLt7HjBkT7jzABpqBdluKpOkRMaav46jpL4e0ZmYt54RnZm3DCc/M2oYTnpm1DSc8M2sbTnhm1jac8MysbTjhmVnbcMIzs7bhhGdmbcMJz8zahhOembUNJzwzaxtOeGbWNvpNwitRpnGcpHmFUo3HlJ3XzAy60AGopGHA5sDqEfG73LswdZ1xdkuZMo3ZTRHxyW7Oa2ZtrlQLT9IHgYeBXwOT8+CtgTMriqOrZRqrmtfM2kjZQ9pfAsdExHrAv/KwG4CtKoqjbJnGLSTdLekqSRt0cV4kTZQ0TdK0OXPmVBG3mQ0gZRPeBsC5+XnAokPZZSqKo0yZxjuBtSNiY+Bk4E9dmDcNdNUys7ZWNuHNBDYrDpA0FphRURydlmmMiBcjYn5+fiUwTNJKZeY1M4PyCe+7wBWSjgWGS/pP4ELg6Iri6LRMo6RVlUuT5WQ7BHiuzLxmZlDyKm1EXC5pR+Ag0rm7tYHdI2J6FUGULNO4B3CIpDeAV4A9I5VvajhvFXGZ2eDiMo1mA4jLNPZMqRaepOOajYuIY5qNMzPrT8reeLxW3etVSffhXVxtOGZmrVP2HN7+9cMkTQD2qjwiM7MW6clvaa8Gdq0oDjOzlit7Du89dYOWBfbmrb9wMDPr18qew5tB+vVC7VcNLwP/B3yxFUGZmbVC2XN4/aYbKTOz7nIiM7O20bSFJ+kJmvwIvygiRlUakZlZi3R0SPv5XovCzKwXNE14EXFDbwZiZtZqXenifRPgo8BKFPqg80/LzGygKNvF+0TgFmAb4FvAB4FvAu9tXWhmZtUqe5X2SGBCROwGvJL/7sHi7t7NzPq9sglv5Yi4KT9/U9KQiLgK2LmqQEqUadxH0j35caukjQvjZkr6Wy7f6D6fzKyhsufwZkkaHREzSdXLdpH0LPB6FUGULLX4GLB1RMzNnZGeDny4MH58RDxbRTxmNjiVTXgnAeuTalscB1wEDAe+XlEci0otAkiqlVpclPAi4tbC9LeTaleYmZXWYcKT9HvgN8DZEfEmQERcJWkFYHitqE4FGpVa/HCTaQEOBK4qvA7gakkB/CoiTm80U774MhFg1CjfL23Wbjpr4T1JKrwtSecDv4mIe3LB60oOZ7PSpRYljSclvGJN3C0jYraklYFrJD0YETcuscCUCE+H1MV7z8M2s4Gkw4sWEXEYqfV1AKmX49vyhYHDJa1SYRylSi1K2gg4A9glIp4rxDk7/32G1Avz2ApjM7NBotOrtBHxZkRcGRF7A6sBvwA+CTwu6fKK4ihTpnEU8Edg34h4uDB8OUnL154D2wP3VhSXmQ0ipX9pAakYtqSrgHcB65B+edFjJcs0HpPXe2ouT/tGroa0CnBxHvY24PyI+HMVcZnZ4FKqTKOkpYHdSR1+jgNuAs4GLoqIl1sZYKu4TKMNRC7T2DOdXaUdB3wB+DTwFHAOcFBEuGt3MxtwOjukvRi4gPSzstt6IR4zs5bpLOGtGhGv9UokZmYt1tltKU52ZjZouKaFmbUNJzwzaxtOeGbWNjqqWnYT5aqWfazSiMzMWqSjq7RnFJ6vQ/o97VnA48Ao0k3IZ7YuNDOzanVUteys2nNJtwM7RMR9hWHnkxLe91oaoZlZRcqew1sfeLRu2GPAetWGY2bWOmUT3g3AbyStK2kZSe8j9ZN3UyfzmZn1G2UT3n75733AAuBvpE47929BTGZmLVEq4UXE8xGxJ7A0qU+8ZSJiryqL5pSoWiZJv8jj75H0obLzmplBF+7Dk7Q+cBTw3Yh4U9L7cw/EPVaoWrYj8AFgL0kfqJtsR2Dd/JgI/LIL85qZlUt4kj4D3Ejq7v0LefDywE8rimNR1bJcL6NWtaxoF1IxoYiI24ERklYrOa+ZWekW3nHAdhFxMLAwD7sb2Lj5LF3SqGrZGiWnKTOvmVnphLcyKcHB4l9fBCV+iVFSmaplzabpSsWziZKmSZo2Z86cLoZo1ntWXHFFJC3xABoOl8SKK67Yx1H3f2UT3nRg37phewL/W1EcZaqWNZumVMUzSGUaI2JMRIwZOXJkj4M2a5W5c+cSEV16zJ07t6/D7vfKFvH5OqnQ9YHAcpL+AryPVCGsCouqlpFq4e4J7F03zaXAVyVdQCrSPS8inpI0p8S8ZmblEl5EPChpPVJ5xstJ58wuj4j5VQRRsmrZlcBOwAzgZfI9gM3mrSIuMxtcSlUtG4xctcz6s+5UJ+uPFc0GTNUydw9lZoNN2e6hzMwGvFLdQ5mZDQZlr9IiaRXSrxpWonDvW0S4E1AzGxBKJTxJuwLnAo8AG5B6TdkQuBn3emxmA0TZG4+PB/aPiE2BBfnvRNINyWZN7/6v/TrArD8om/BGRcSFdcPOYnFHAtbminf8N3pt1h+UTXjP5HN4ADMlbUEq7DO0NWGZmVWvbML7NbBVfv4z4HpSZwKntiIoM7NWKPvTsh8Wnp8taSqwXEQ80KrAzMyqVrYD0E0kLeqRJCL+AcyXVFV/eGZmLVf2kPZcYFjdsOHAOdWGY2bWOl25Svv34oCIeBQYXXlEZmYtUjbhzSpWCQPIrxt2tGlm1h+VTXg/Ay6R9DVJO0n6GnAxFRTxkbSipGskPZL/rtBgmrUkXS/pAUn3SfpGYdwkSU9Kuis/duppTGY2OJW9SvtrSS8AB5K6U38C+GZEXFRBDN8Gro2IH+Sast8GvlU3zRt5fXdKWh6YLumaiLg/j/9ZRPy4gljMbBAr3XlA/qVF/a8tqrALMC4/PwuYSl3Ci4ingKfy85ckPUCqTHY/ZmYldXhIK2kzSRsWXo+UdJ6kuyWdJuntFcSwSk5otcS2cicxjQY2Be4oDP6qpHskndnokLgwr6uWVciVtWyg6ewc3n8BqxZen0Eq3nM6qbeUk8qsRNIUSfc2eHSpYHZOsH8ADo2IF/PgX5J+5rYJqRX4k2bzu2pZtVxZywaazg5p1wduApA0AtgR2DAiHpZ0KXAr8JXOVhIR2zYbJ+lpSavlCmSrAc80mW4YKdmdFxF/LCz76cI0vyYVGTIzW0JnLby3Aa/n55sD/4yIhwEi4glgRAUxXAp8MT//InBJ/QRKx0mTgQci4qd141YrvNwNuLeCmMxsEOos4d0HfCY/3xOYUhshaQ1gXgUx/ADYTtIjwHb5NZJWl3RlnmZLUiHwbRrcfnKSpL9JugcYDxxWQUxmNgh1dkj7LeAySacBC1ncYwrA54BbehpARDwHfLzB8NmkOrRExM0UupWvm27fnsZgZu2hw4QXETdLGkW6UPFwRLxUGH0FcEErgzMzq1Kn9+HlJLdEV+4R8VBLIjIza5HSNx6b1YvvvQMmvbPr85j1ESc8675JVVyzMus9ZTsPMDMb8JzwzKxtOOGZWdtwwjOztuGEZ2ZtwwnPzNqGE56ZtQ0nPDNrG054ZtY2nPDMrG30ecIrU6YxTzcz93t3l6RpXZ3fzKzPEx6LyzSuC1ybXzczPiI2iYgx3ZzfzNpYf0h4u5DKM5L/7trL85tZm+gPCa9smcYArpY0XdLEbszvMo1mba5XuoeSNIW3lnusOaoLi9kyImZLWhm4RtKDEXFjV+KIiNNJJSYZM2ZMdGVes97kvgZbo1cSXhVlGnONCyLiGUkXA2OBG4FS85sNJDr2RSK69p0siZjUmngGi/5wSFumTONykpavPQe2Z3E5xk7nNxuIJHXpscIKvkGhM/2hx+MfAL+XdCDwD3JZSEmrA2dExE7AKsDFqTwtbwPOj4g/dzS/2UDW1dadldPnCa9kmca/Axt3ZX4zs3r94ZDWzKxXOOGZWdtwwjOztqF2PTkq6SXAxcRbYyXg2b4OYpAaaNt27YgY2ddB1PT5RYs+9FDdb3KtIpKmedu2hrdtz/iQ1szahhOembWNdk54p/d1AIOYt23reNv2QNtetDCz9tPOLTwzazNOeGbWNpzwzKxtOOGZDUDKXQdZ1zjhWeUkLbFfNRpm3Rf5aqOkD/V1LAOJd0KrXES8CSBpN0lfkPTBiHjTSa/nai07SUNzuYOzJK3Sx2ENGN4BrSUk7Qf8CNgQuEnSlk56PReL7yMbFhHPUPhdrbdt57yBrBK5h+ra83HAx4AJEXEkcBhwpaSPOOn1nKTtgLMl7Q4sBXxC0jK1lrU15x3PekzSGsBBkpbPyewTpB6qN5c0PCL+BzgUuFnSh/3B7JoGFyheBq4CVgfWAE4ELpF0gaRDezm8AcW/tLAekfSOiHhR0tuB9YD3ABcBRwMrABcCd0TEQkmfB/4aEe6WqyRJKlyg2IRUle+5iHgtD9sJeC9wBTASmOvt25xbeNZtknYArpe0bUTMBzYBdiG18E4gtUT2ALaSNCQizvWHsWsKye5rwGmk0wPnSVomT/IqaRs/GxG3e/t2zAnPeuJ9wAbAtyTtEBFnAFcCu5MKMH2PtI9NIJ1rspIkrVB4vgfwOVJ5UgGbkorRLwfcCcwE/tUHYQ447dwBqPXcb0mHsE8AB+fzdefl83ifIiW5I4AVIuKVPoxzQJG0PXCCpO9ExNXA30nlR/cCPgh8gPTFcjXp4tBhEfFyX8U7kDjhWZdI2gggIu4BngdeJ30Afwl8TdLCiDhH0lLAOOCqiJjTV/EOUO8n3c5zhKSlIuKy/CXyIeDEiHhN0i3AWGD1iHiiL4MdSJzwrDRJ7wLuAmZJOhx4HDgK+DnpUOs8UktvWESckS9ozO+zgAeuYst5f0nLRsTv8tXarSVtDmwG7Osvk67xOTwrLRc93xZYE9iIdG7ubNLFiZERcQFwMbC3pOUi4sU+C3aAkbRRrfXMki3nfSSNJ10IGkZq6X3Hya7rfFuKdZmkjwNnkj54ewB7A7OA/Unn7eRkV15uOc8hbcNay/n/SC3nS0m39+wDnBYRV0gaGhEL+yregcwJz7ol3//1Q2CLiJgv6d0R8VhfxzVQSdoGmAIcT7riuj7wJHB3RJwraX9Si/ogYH74g9stTnjWbTnp/QTYMiKez8PkD2P3lGg5ExEv9VmAg4ATnvWIpF1I99uNId0n6x2qB9xybi0nPOsxSW/31djquOXcOr4txXrMya5aEXGlpGHAFEluOVfILTyzfsot5+o54ZlZ2/CNx2bWNpzwzKxtOOGZWdtwwjOztuGEZ2ZtwwnPKiFppqRXJM0vPFbvfM4Ol7dtlTGaOeFZlXaOiLcXHrP7KhBJvqneluCEZy0j6Z2SJkt6StKTko6XNDSPW0fSdZKek/SspPMkjcjjzgFGAZflluKRksZJmlW3/EWtQEmTJF0k6VxJLwL7dbL+90q6QdK8vP7f9ea2sb7hhGetdBbwBqmM4KakIjQH5XEi1VNdndQV0lrAJICI2Bf4B4tbjCeVXN8upBKRI0i9L3e0/v9HqgmxAqlD05O79y/aQOJmv1XpT5LeyM9vA7YBRuQCPgsk/QyYCPwqImYAM/K0cyT9lNTrSk/cFhF/glQvF9ix2fpJfc6tTaoJMQu4uYfrtgHACc+qtGtETAGQNBbYAXgqlWIA0hHFE3n8ysAvgI8Cy+dxc3u4/mIxm7VJ3aE3XD9wJKmV97+S5gI/iYgze7h+6+ec8KxVngBeA1aKiDcajD8RCGCjiHhO0q7AKYXx9T/yXgAsW3uRz8WNrJumOE+H64+IfwJfysvaitQzyY255WmDlM/hWUtExFOkc2Q/kfQOSUPyhYqt8yTLA/OBFyStAfxH3SKeJlXuqnkYWFrSJ3LXSUfTQXHvztYv6TOS1syTzyUlS9eJGOSc8KyVvgAMB+4nJZWLgNXyuGNJXZnPA64A/lg374nA0ZJekHRERMwDvgKcQar1sIDU/Xl31/9vwB2S5pMK5XzDPQsPfu4eyszahlt4ZtY2nPDMrG044ZlZ23DCM7O24YRnZm3DCc/M2oYTnpm1DSc8M2sb/x85L93MS1H/PQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 288x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "trained_Data_Processor.plot_boxplot_scaled_features(scaled_feature= trained_Data_Processor.X_test_standardized_columnwise, \n",
    "                                                  xticks_list = ['','Min','Max'],\n",
    "                                                  title = 'Scaled Min Max Features - ColumnWise',\n",
    "                                                  fig_size=(4, 3),\n",
    "                                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cebec7ae-7d8f-4b76-a523-2280fd4d35a5",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 3.3 Train CNN model\n",
    "\n",
    "### 3.3.1 Instintiate *TrainRegressorCNN* class from *DeepTrainer* Module"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2e823b8a-af2a-4025-815d-24c1d43fd6e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.938341Z",
     "iopub.status.busy": "2023-11-28T23:51:58.937047Z",
     "iopub.status.idle": "2023-11-28T23:51:58.939922Z",
     "shell.execute_reply": "2023-11-28T23:51:58.940386Z"
    }
   },
   "outputs": [],
   "source": [
    "train_cnn_model = TrainRegressorCNN(\n",
    "            # input dataset: StandardScaled instances  \n",
    "            X1_train = trained_Data_Processor.X_train_standardized_rowwise,\n",
    "            X1_val   = trained_Data_Processor.X_val_standardized_rowwise,\n",
    "            X1_test  = trained_Data_Processor.X_test_standardized_rowwise,\n",
    "\n",
    "            # input dataset: Min Max of each instance  \n",
    "            X2_train = trained_Data_Processor.X_train_standardized_columnwise,\n",
    "            X2_val   = trained_Data_Processor.X_val_standardized_columnwise,\n",
    "            X2_test  = trained_Data_Processor.X_test_standardized_columnwise,\n",
    "#             X2_train = trained_Data_Processor.X_train_normalized_columnwise,\n",
    "#             X2_val   = trained_Data_Processor.X_val_normalized_columnwise,\n",
    "#             X2_test  = trained_Data_Processor.X_test_normalized_columnwise,\n",
    "\n",
    "            # 1st target\n",
    "            y1_train = trained_Data_Processor.y_train_standardized_columnwise[:,0],\n",
    "            y1_val   = trained_Data_Processor.y_val_standardized_columnwise[:,0],\n",
    "            y1_test  = trained_Data_Processor.y_test_standardized_columnwise[:,0],\n",
    "\n",
    "            # 2nd target\n",
    "            y2_train = trained_Data_Processor.y_train_standardized_columnwise[:,1],\n",
    "            y2_val   = trained_Data_Processor.y_val_standardized_columnwise[:,1],\n",
    "            y2_test  = trained_Data_Processor.y_test_standardized_columnwise[:,1],\n",
    "\n",
    "            # 3rd target\n",
    "            y3_train = trained_Data_Processor.y_train_standardized_columnwise[:,2],\n",
    "            y3_val   = trained_Data_Processor.y_val_standardized_columnwise[:,2],\n",
    "            y3_test  = trained_Data_Processor.y_test_standardized_columnwise[:,2],\n",
    "\n",
    "            # 4th target\n",
    "            y4_train = trained_Data_Processor.y_train_standardized_columnwise[:,3],\n",
    "            y4_val   = trained_Data_Processor.y_val_standardized_columnwise[:,3],\n",
    "            y4_test  = trained_Data_Processor.y_test_standardized_columnwise[:,3],\n",
    "            )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e65c79d2-9123-45a8-937f-62d7fcd06c2d",
   "metadata": {},
   "source": [
    "### 3.3.2 Define the Hyperparameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "c3c592ab-534e-41b4-acd8-1cd90096b62a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.944560Z",
     "iopub.status.busy": "2023-11-28T23:51:58.943935Z",
     "iopub.status.idle": "2023-11-28T23:51:58.946269Z",
     "shell.execute_reply": "2023-11-28T23:51:58.946624Z"
    }
   },
   "outputs": [],
   "source": [
    "hyperparameters = {'Conv__MaxPooling1D': 2,\n",
    "                 'Conv__num_blocks': 1,\n",
    "                 'Conv__num_layers_per_block': 3,\n",
    "                 'Conv__num_filters': 4,\n",
    "                 'Conv__kernel_size': 6,\n",
    "                   \n",
    "                 'FC2__num_blocks': 4,\n",
    "                 'FC2_num_layers_per_block': 2,\n",
    "                 'FC__dropout': 0.0024609140719442646,\n",
    "                 'FC2__dropout': 64,\n",
    "                 'FC2__units': 64,\n",
    "#                  'FC__units_gravity': 16,\n",
    "#                  'FC__units_metallicity': 256,\n",
    "#                  'FC__units_temperature': 8,\n",
    "                   \n",
    "                 'FC1__num_blocks': 1,\n",
    "                 'FC1_num_layers_per_block': 4,\n",
    "                 'FC2__dropout': 0.09889223768186726,\n",
    "                 'FC1__units': 128,\n",
    "                 'FC1__dropout': 0.002185843015008406,\n",
    "                   \n",
    "                 'learning_rate': 4.9946842008422193e-05}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "fb308eec-87ba-490a-b9f5-4da783c7f331",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.950084Z",
     "iopub.status.busy": "2023-11-28T23:51:58.949258Z",
     "iopub.status.idle": "2023-11-28T23:51:58.951514Z",
     "shell.execute_reply": "2023-11-28T23:51:58.951873Z"
    }
   },
   "outputs": [],
   "source": [
    "# hyperparameters = {\n",
    "#      'Conv__MaxPooling1D': 2,\n",
    "#      'Conv__num_blocks': 1,\n",
    "#      'Conv__num_layers_per_block': 3,\n",
    "#      'Conv__num_filters': 4,\n",
    "#      'Conv__kernel_size': 6,\n",
    "#      'FC__NumberLayers': 4,\n",
    "    \n",
    "#      'FC1__num_blocks' : 1,\n",
    "#      'FC1_num_layers_per_block': 2,\n",
    "#      'FC1__dropout': 0.09889223768186726,\n",
    "#      'FC1__units': 128,\n",
    "\n",
    "#      'FC2__num_blocks' : 1,\n",
    "#      'FC2_num_layers_per_block':2,\n",
    "#      'FC2__dropout': 0.0024609140719442646,\n",
    "#      'FC2__units': 64,\n",
    "\n",
    "    \n",
    "#      'learning_rate': 4.9946842008422193e-05}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e4adeb0-42fd-451c-98c2-79272adbdbfc",
   "metadata": {},
   "source": [
    "### 3.3.3 Build a CNN model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5ffd7ce9-8ef4-4b3a-94d7-7f78a30e839e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:58.955415Z",
     "iopub.status.busy": "2023-11-28T23:51:58.954809Z",
     "iopub.status.idle": "2023-11-28T23:51:59.741836Z",
     "shell.execute_reply": "2023-11-28T23:51:59.721350Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"model\"\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "__________________________________________________________________________________________________\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Layer (type)                Output Shape                 Param #   Connected to                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==================================================================================================\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " input_1 (InputLayer)        [(None, 104, 1)]             0         []                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Conv__B1_L1 (Conv1D)        (None, 104, 16)              112       ['input_1[0][0]']             \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Conv__B1_L2 (Conv1D)        (None, 104, 64)              6208      ['Conv__B1_L1[0][0]']         \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Conv__B1_L3 (Conv1D)        (None, 104, 144)             55440     ['Conv__B1_L2[0][0]']         \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " MaxPool1D__B1_L3 (MaxPooli  (None, 52, 144)              0         ['Conv__B1_L3[0][0]']         \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ng1D)                                                                                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " flatten (Flatten)           (None, 7488)                 0         ['MaxPool1D__B1_L3[0][0]']    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L1 (Dense)          (None, 512)                  3834368   ['flatten[0][0]']             \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L2 (Dense)          (None, 2048)                 1050624   ['FC1__B1_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L3 (Dense)          (None, 4608)                 9441792   ['FC1__B1_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L4 (Dense)          (None, 8192)                 3775692   ['FC1__B1_L3[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                          8                                       \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__Dropout__B1_L4 (Dropo  (None, 8192)                 0         ['FC1__B1_L4[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " input_2 (InputLayer)        [(None, 2)]                  0         []                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Concatenated_Layer (Concat  (None, 8194)                 0         ['FC1__Dropout__B1_L4[0][0]', \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " enate)                                                              'input_2[0][0]']             \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B1_L1 (Dense)          (None, 256)                  2097920   ['Concatenated_Layer[0][0]']  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B1_L2 (Dense)          (None, 1024)                 263168    ['FC2__B1_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B1_L2 (Dropo  (None, 1024)                 0         ['FC2__B1_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B2_L1 (Dense)          (None, 1024)                 1049600   ['FC2__Dropout__B1_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B2_L2 (Dense)          (None, 2304)                 2361600   ['FC2__B2_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B2_L2 (Dropo  (None, 2304)                 0         ['FC2__B2_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B3_L1 (Dense)          (None, 2304)                 5310720   ['FC2__Dropout__B2_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B3_L2 (Dense)          (None, 4096)                 9441280   ['FC2__B3_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B3_L2 (Dropo  (None, 4096)                 0         ['FC2__B3_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B4_L1 (Dense)          (None, 4096)                 1678131   ['FC2__Dropout__B3_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                          2                                       \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B4_L2 (Dense)          (None, 6400)                 2622080   ['FC2__B4_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                          0                                       \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B4_L2 (Dropo  (None, 6400)                 0         ['FC2__B4_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " gravity (Dense)             (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " c_o_ratio (Dense)           (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " metallicity (Dense)         (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " temperature (Dense)         (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==================================================================================================\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total params: 115697476 (441.35 MB)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trainable params: 115697476 (441.35 MB)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Non-trainable params: 0 (0.00 Byte)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "__________________________________________________________________________________________________\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "train_cnn_model.build_model(hyperparameters = hyperparameters, \n",
    "                     )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ebd6cd2-e25b-49a7-b207-7eba0486952e",
   "metadata": {},
   "source": [
    "### 3.3.4 Train the CNN model using the datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "e23b745d-a0c5-429f-8f69-d127e66f6705",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:51:59.745107Z",
     "iopub.status.busy": "2023-11-28T23:51:59.744600Z",
     "iopub.status.idle": "2023-11-28T23:55:27.262186Z",
     "shell.execute_reply": "2023-11-28T23:55:27.261642Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r",
      " 1/13 [=>............................] - ETA: 1:24 - loss: 1.8653 - gravity_loss: 0.4684 - c_o_ratio_loss: 0.4747 - metallicity_loss: 0.4598 - temperature_loss: 0.4623 - gravity_mae: 0.8643 - c_o_ratio_mae: 0.8965 - metallicity_mae: 0.8523 - temperature_mae: 0.8649"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 2/13 [===>..........................] - ETA: 39s - loss: 1.8415 - gravity_loss: 0.4669 - c_o_ratio_loss: 0.4660 - metallicity_loss: 0.4551 - temperature_loss: 0.4535 - gravity_mae: 0.8666 - c_o_ratio_mae: 0.8867 - metallicity_mae: 0.8488 - temperature_mae: 0.8520 "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 3/13 [=====>........................] - ETA: 37s - loss: 1.8192 - gravity_loss: 0.4660 - c_o_ratio_loss: 0.4641 - metallicity_loss: 0.4525 - temperature_loss: 0.4366 - gravity_mae: 0.8666 - c_o_ratio_mae: 0.8848 - metallicity_mae: 0.8456 - temperature_mae: 0.8313"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 4/13 [========>.....................] - ETA: 35s - loss: 1.7820 - gravity_loss: 0.4619 - c_o_ratio_loss: 0.4650 - metallicity_loss: 0.4484 - temperature_loss: 0.4067 - gravity_mae: 0.8628 - c_o_ratio_mae: 0.8861 - metallicity_mae: 0.8410 - temperature_mae: 0.7922"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 5/13 [==========>...................] - ETA: 31s - loss: 1.7341 - gravity_loss: 0.4605 - c_o_ratio_loss: 0.4654 - metallicity_loss: 0.4429 - temperature_loss: 0.3653 - gravity_mae: 0.8606 - c_o_ratio_mae: 0.8855 - metallicity_mae: 0.8351 - temperature_mae: 0.7333"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 6/13 [============>.................] - ETA: 27s - loss: 1.6779 - gravity_loss: 0.4600 - c_o_ratio_loss: 0.4643 - metallicity_loss: 0.4332 - temperature_loss: 0.3205 - gravity_mae: 0.8607 - c_o_ratio_mae: 0.8839 - metallicity_mae: 0.8233 - temperature_mae: 0.6707"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 7/13 [===============>..............] - ETA: 23s - loss: 1.6543 - gravity_loss: 0.4593 - c_o_ratio_loss: 0.4620 - metallicity_loss: 0.4200 - temperature_loss: 0.3131 - gravity_mae: 0.8608 - c_o_ratio_mae: 0.8794 - metallicity_mae: 0.8065 - temperature_mae: 0.6595"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 8/13 [=================>............] - ETA: 20s - loss: 1.6557 - gravity_loss: 0.4581 - c_o_ratio_loss: 0.4605 - metallicity_loss: 0.4075 - temperature_loss: 0.3296 - gravity_mae: 0.8597 - c_o_ratio_mae: 0.8766 - metallicity_mae: 0.7912 - temperature_mae: 0.6882"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 9/13 [===================>..........] - ETA: 16s - loss: 1.6097 - gravity_loss: 0.4562 - c_o_ratio_loss: 0.4578 - metallicity_loss: 0.3955 - temperature_loss: 0.3002 - gravity_mae: 0.8576 - c_o_ratio_mae: 0.8733 - metallicity_mae: 0.7761 - temperature_mae: 0.6437"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "10/13 [======================>.......] - ETA: 12s - loss: 1.5721 - gravity_loss: 0.4527 - c_o_ratio_loss: 0.4544 - metallicity_loss: 0.3831 - temperature_loss: 0.2819 - gravity_mae: 0.8539 - c_o_ratio_mae: 0.8690 - metallicity_mae: 0.7601 - temperature_mae: 0.6227"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "11/13 [========================>.....] - ETA: 8s - loss: 1.5372 - gravity_loss: 0.4468 - c_o_ratio_loss: 0.4501 - metallicity_loss: 0.3721 - temperature_loss: 0.2682 - gravity_mae: 0.8468 - c_o_ratio_mae: 0.8638 - metallicity_mae: 0.7462 - temperature_mae: 0.6072 "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "12/13 [==========================>...] - ETA: 4s - loss: 1.5115 - gravity_loss: 0.4448 - c_o_ratio_loss: 0.4476 - metallicity_loss: 0.3642 - temperature_loss: 0.2548 - gravity_mae: 0.8444 - c_o_ratio_mae: 0.8609 - metallicity_mae: 0.7358 - temperature_mae: 0.5876"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - ETA: 0s - loss: 1.5058 - gravity_loss: 0.4442 - c_o_ratio_loss: 0.4469 - metallicity_loss: 0.3623 - temperature_loss: 0.2524 - gravity_mae: 0.8438 - c_o_ratio_mae: 0.8599 - metallicity_mae: 0.7332 - temperature_mae: 0.5844"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - 56s 4s/step - loss: 1.5058 - gravity_loss: 0.4442 - c_o_ratio_loss: 0.4469 - metallicity_loss: 0.3623 - temperature_loss: 0.2524 - gravity_mae: 0.8438 - c_o_ratio_mae: 0.8599 - metallicity_mae: 0.7332 - temperature_mae: 0.5844 - val_loss: 1.1508 - val_gravity_loss: 0.4059 - val_c_o_ratio_loss: 0.3834 - val_metallicity_loss: 0.2572 - val_temperature_loss: 0.1043 - val_gravity_mae: 0.7988 - val_c_o_ratio_mae: 0.7830 - val_metallicity_mae: 0.5866 - val_temperature_mae: 0.3868\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 2/4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r",
      " 1/13 [=>............................] - ETA: 46s - loss: 1.2458 - gravity_loss: 0.4230 - c_o_ratio_loss: 0.4186 - metallicity_loss: 0.2750 - temperature_loss: 0.1293 - gravity_mae: 0.8210 - c_o_ratio_mae: 0.8270 - metallicity_mae: 0.6212 - temperature_mae: 0.4315"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 2/13 [===>..........................] - ETA: 40s - loss: 1.2120 - gravity_loss: 0.4205 - c_o_ratio_loss: 0.4035 - metallicity_loss: 0.2650 - temperature_loss: 0.1230 - gravity_mae: 0.8161 - c_o_ratio_mae: 0.8077 - metallicity_mae: 0.6021 - temperature_mae: 0.4179"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 3/13 [=====>........................] - ETA: 37s - loss: 1.1778 - gravity_loss: 0.4125 - c_o_ratio_loss: 0.3916 - metallicity_loss: 0.2654 - temperature_loss: 0.1082 - gravity_mae: 0.8045 - c_o_ratio_mae: 0.7938 - metallicity_mae: 0.6024 - temperature_mae: 0.3891"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 4/13 [========>.....................] - ETA: 33s - loss: 1.1297 - gravity_loss: 0.4038 - c_o_ratio_loss: 0.3767 - metallicity_loss: 0.2568 - temperature_loss: 0.0924 - gravity_mae: 0.7937 - c_o_ratio_mae: 0.7734 - metallicity_mae: 0.5904 - temperature_mae: 0.3521"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 5/13 [==========>...................] - ETA: 29s - loss: 1.0922 - gravity_loss: 0.3979 - c_o_ratio_loss: 0.3627 - metallicity_loss: 0.2511 - temperature_loss: 0.0805 - gravity_mae: 0.7869 - c_o_ratio_mae: 0.7530 - metallicity_mae: 0.5831 - temperature_mae: 0.3223"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 6/13 [============>.................] - ETA: 26s - loss: 1.0558 - gravity_loss: 0.3923 - c_o_ratio_loss: 0.3477 - metallicity_loss: 0.2422 - temperature_loss: 0.0735 - gravity_mae: 0.7799 - c_o_ratio_mae: 0.7305 - metallicity_mae: 0.5718 - temperature_mae: 0.3056"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 7/13 [===============>..............] - ETA: 23s - loss: 1.0276 - gravity_loss: 0.3868 - c_o_ratio_loss: 0.3364 - metallicity_loss: 0.2346 - temperature_loss: 0.0698 - gravity_mae: 0.7727 - c_o_ratio_mae: 0.7142 - metallicity_mae: 0.5617 - temperature_mae: 0.2970"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 8/13 [=================>............] - ETA: 19s - loss: 1.0055 - gravity_loss: 0.3813 - c_o_ratio_loss: 0.3258 - metallicity_loss: 0.2296 - temperature_loss: 0.0688 - gravity_mae: 0.7647 - c_o_ratio_mae: 0.6986 - metallicity_mae: 0.5558 - temperature_mae: 0.2938"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 9/13 [===================>..........] - ETA: 15s - loss: 0.9877 - gravity_loss: 0.3769 - c_o_ratio_loss: 0.3167 - metallicity_loss: 0.2254 - temperature_loss: 0.0688 - gravity_mae: 0.7589 - c_o_ratio_mae: 0.6852 - metallicity_mae: 0.5500 - temperature_mae: 0.2933"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "10/13 [======================>.......] - ETA: 11s - loss: 0.9716 - gravity_loss: 0.3742 - c_o_ratio_loss: 0.3087 - metallicity_loss: 0.2223 - temperature_loss: 0.0664 - gravity_mae: 0.7550 - c_o_ratio_mae: 0.6743 - metallicity_mae: 0.5460 - temperature_mae: 0.2875"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "11/13 [========================>.....] - ETA: 7s - loss: 0.9523 - gravity_loss: 0.3713 - c_o_ratio_loss: 0.2983 - metallicity_loss: 0.2196 - temperature_loss: 0.0631 - gravity_mae: 0.7515 - c_o_ratio_mae: 0.6588 - metallicity_mae: 0.5424 - temperature_mae: 0.2787 "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "12/13 [==========================>...] - ETA: 3s - loss: 0.9376 - gravity_loss: 0.3689 - c_o_ratio_loss: 0.2894 - metallicity_loss: 0.2187 - temperature_loss: 0.0606 - gravity_mae: 0.7484 - c_o_ratio_mae: 0.6453 - metallicity_mae: 0.5413 - temperature_mae: 0.2716"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - ETA: 0s - loss: 0.9344 - gravity_loss: 0.3686 - c_o_ratio_loss: 0.2874 - metallicity_loss: 0.2182 - temperature_loss: 0.0602 - gravity_mae: 0.7478 - c_o_ratio_mae: 0.6425 - metallicity_mae: 0.5406 - temperature_mae: 0.2706"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - 50s 4s/step - loss: 0.9344 - gravity_loss: 0.3686 - c_o_ratio_loss: 0.2874 - metallicity_loss: 0.2182 - temperature_loss: 0.0602 - gravity_mae: 0.7478 - c_o_ratio_mae: 0.6425 - metallicity_mae: 0.5406 - temperature_mae: 0.2706 - val_loss: 0.6721 - val_gravity_loss: 0.3196 - val_c_o_ratio_loss: 0.1511 - val_metallicity_loss: 0.1726 - val_temperature_loss: 0.0287 - val_gravity_mae: 0.6805 - val_c_o_ratio_mae: 0.4296 - val_metallicity_mae: 0.4758 - val_temperature_mae: 0.1812\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 3/4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r",
      " 1/13 [=>............................] - ETA: 45s - loss: 0.7330 - gravity_loss: 0.3373 - c_o_ratio_loss: 0.1716 - metallicity_loss: 0.1853 - temperature_loss: 0.0388 - gravity_mae: 0.7028 - c_o_ratio_mae: 0.4668 - metallicity_mae: 0.4962 - temperature_mae: 0.2120"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 2/13 [===>..........................] - ETA: 41s - loss: 0.7380 - gravity_loss: 0.3419 - c_o_ratio_loss: 0.1723 - metallicity_loss: 0.1844 - temperature_loss: 0.0393 - gravity_mae: 0.7073 - c_o_ratio_mae: 0.4670 - metallicity_mae: 0.4955 - temperature_mae: 0.2181"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 3/13 [=====>........................] - ETA: 37s - loss: 0.7316 - gravity_loss: 0.3364 - c_o_ratio_loss: 0.1750 - metallicity_loss: 0.1807 - temperature_loss: 0.0395 - gravity_mae: 0.6998 - c_o_ratio_mae: 0.4723 - metallicity_mae: 0.4875 - temperature_mae: 0.2219"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 4/13 [========>.....................] - ETA: 33s - loss: 0.7342 - gravity_loss: 0.3375 - c_o_ratio_loss: 0.1763 - metallicity_loss: 0.1823 - temperature_loss: 0.0379 - gravity_mae: 0.7016 - c_o_ratio_mae: 0.4745 - metallicity_mae: 0.4909 - temperature_mae: 0.2158"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 5/13 [==========>...................] - ETA: 29s - loss: 0.7215 - gravity_loss: 0.3340 - c_o_ratio_loss: 0.1697 - metallicity_loss: 0.1822 - temperature_loss: 0.0356 - gravity_mae: 0.6973 - c_o_ratio_mae: 0.4657 - metallicity_mae: 0.4906 - temperature_mae: 0.2088"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 6/13 [============>.................] - ETA: 26s - loss: 0.7044 - gravity_loss: 0.3288 - c_o_ratio_loss: 0.1625 - metallicity_loss: 0.1795 - temperature_loss: 0.0336 - gravity_mae: 0.6904 - c_o_ratio_mae: 0.4537 - metallicity_mae: 0.4872 - temperature_mae: 0.2026"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 7/13 [===============>..............] - ETA: 22s - loss: 0.6982 - gravity_loss: 0.3290 - c_o_ratio_loss: 0.1579 - metallicity_loss: 0.1783 - temperature_loss: 0.0330 - gravity_mae: 0.6911 - c_o_ratio_mae: 0.4465 - metallicity_mae: 0.4857 - temperature_mae: 0.2019"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 8/13 [=================>............] - ETA: 18s - loss: 0.6907 - gravity_loss: 0.3284 - c_o_ratio_loss: 0.1523 - metallicity_loss: 0.1775 - temperature_loss: 0.0325 - gravity_mae: 0.6906 - c_o_ratio_mae: 0.4379 - metallicity_mae: 0.4850 - temperature_mae: 0.2009"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 9/13 [===================>..........] - ETA: 14s - loss: 0.6832 - gravity_loss: 0.3270 - c_o_ratio_loss: 0.1474 - metallicity_loss: 0.1773 - temperature_loss: 0.0316 - gravity_mae: 0.6893 - c_o_ratio_mae: 0.4298 - metallicity_mae: 0.4839 - temperature_mae: 0.1977"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "10/13 [======================>.......] - ETA: 11s - loss: 0.6756 - gravity_loss: 0.3257 - c_o_ratio_loss: 0.1426 - metallicity_loss: 0.1763 - temperature_loss: 0.0309 - gravity_mae: 0.6881 - c_o_ratio_mae: 0.4221 - metallicity_mae: 0.4821 - temperature_mae: 0.1952"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "11/13 [========================>.....] - ETA: 7s - loss: 0.6716 - gravity_loss: 0.3266 - c_o_ratio_loss: 0.1394 - metallicity_loss: 0.1755 - temperature_loss: 0.0300 - gravity_mae: 0.6892 - c_o_ratio_mae: 0.4171 - metallicity_mae: 0.4808 - temperature_mae: 0.1917 "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "12/13 [==========================>...] - ETA: 3s - loss: 0.6652 - gravity_loss: 0.3251 - c_o_ratio_loss: 0.1363 - metallicity_loss: 0.1746 - temperature_loss: 0.0291 - gravity_mae: 0.6874 - c_o_ratio_mae: 0.4117 - metallicity_mae: 0.4794 - temperature_mae: 0.1882"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - ETA: 0s - loss: 0.6641 - gravity_loss: 0.3251 - c_o_ratio_loss: 0.1354 - metallicity_loss: 0.1748 - temperature_loss: 0.0289 - gravity_mae: 0.6875 - c_o_ratio_mae: 0.4101 - metallicity_mae: 0.4797 - temperature_mae: 0.1874"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - 48s 4s/step - loss: 0.6641 - gravity_loss: 0.3251 - c_o_ratio_loss: 0.1354 - metallicity_loss: 0.1748 - temperature_loss: 0.0289 - gravity_mae: 0.6875 - c_o_ratio_mae: 0.4101 - metallicity_mae: 0.4797 - temperature_mae: 0.1874 - val_loss: 0.5605 - val_gravity_loss: 0.2951 - val_c_o_ratio_loss: 0.0811 - val_metallicity_loss: 0.1664 - val_temperature_loss: 0.0179 - val_gravity_mae: 0.6455 - val_c_o_ratio_mae: 0.3165 - val_metallicity_mae: 0.4642 - val_temperature_mae: 0.1484\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 4/4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r",
      " 1/13 [=>............................] - ETA: 46s - loss: 0.5792 - gravity_loss: 0.3024 - c_o_ratio_loss: 0.0928 - metallicity_loss: 0.1658 - temperature_loss: 0.0184 - gravity_mae: 0.6596 - c_o_ratio_mae: 0.3411 - metallicity_mae: 0.4667 - temperature_mae: 0.1470"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 2/13 [===>..........................] - ETA: 54s - loss: 0.5798 - gravity_loss: 0.2990 - c_o_ratio_loss: 0.0921 - metallicity_loss: 0.1682 - temperature_loss: 0.0205 - gravity_mae: 0.6538 - c_o_ratio_mae: 0.3356 - metallicity_mae: 0.4726 - temperature_mae: 0.1536"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 3/13 [=====>........................] - ETA: 46s - loss: 0.5842 - gravity_loss: 0.3041 - c_o_ratio_loss: 0.0917 - metallicity_loss: 0.1687 - temperature_loss: 0.0197 - gravity_mae: 0.6598 - c_o_ratio_mae: 0.3341 - metallicity_mae: 0.4728 - temperature_mae: 0.1509"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 4/13 [========>.....................] - ETA: 41s - loss: 0.5854 - gravity_loss: 0.3039 - c_o_ratio_loss: 0.0918 - metallicity_loss: 0.1697 - temperature_loss: 0.0200 - gravity_mae: 0.6587 - c_o_ratio_mae: 0.3352 - metallicity_mae: 0.4736 - temperature_mae: 0.1532"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 5/13 [==========>...................] - ETA: 36s - loss: 0.5810 - gravity_loss: 0.3024 - c_o_ratio_loss: 0.0894 - metallicity_loss: 0.1692 - temperature_loss: 0.0200 - gravity_mae: 0.6557 - c_o_ratio_mae: 0.3316 - metallicity_mae: 0.4719 - temperature_mae: 0.1529"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 6/13 [============>.................] - ETA: 30s - loss: 0.5764 - gravity_loss: 0.3011 - c_o_ratio_loss: 0.0888 - metallicity_loss: 0.1669 - temperature_loss: 0.0196 - gravity_mae: 0.6540 - c_o_ratio_mae: 0.3307 - metallicity_mae: 0.4683 - temperature_mae: 0.1512"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 7/13 [===============>..............] - ETA: 26s - loss: 0.5714 - gravity_loss: 0.2993 - c_o_ratio_loss: 0.0868 - metallicity_loss: 0.1661 - temperature_loss: 0.0193 - gravity_mae: 0.6517 - c_o_ratio_mae: 0.3271 - metallicity_mae: 0.4674 - temperature_mae: 0.1500"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 8/13 [=================>............] - ETA: 21s - loss: 0.5688 - gravity_loss: 0.2987 - c_o_ratio_loss: 0.0859 - metallicity_loss: 0.1653 - temperature_loss: 0.0190 - gravity_mae: 0.6501 - c_o_ratio_mae: 0.3256 - metallicity_mae: 0.4659 - temperature_mae: 0.1490"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 9/13 [===================>..........] - ETA: 16s - loss: 0.5649 - gravity_loss: 0.2971 - c_o_ratio_loss: 0.0850 - metallicity_loss: 0.1639 - temperature_loss: 0.0188 - gravity_mae: 0.6474 - c_o_ratio_mae: 0.3225 - metallicity_mae: 0.4636 - temperature_mae: 0.1491"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "10/13 [======================>.......] - ETA: 12s - loss: 0.5624 - gravity_loss: 0.2961 - c_o_ratio_loss: 0.0853 - metallicity_loss: 0.1625 - temperature_loss: 0.0185 - gravity_mae: 0.6464 - c_o_ratio_mae: 0.3238 - metallicity_mae: 0.4619 - temperature_mae: 0.1480"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "11/13 [========================>.....] - ETA: 8s - loss: 0.5601 - gravity_loss: 0.2948 - c_o_ratio_loss: 0.0851 - metallicity_loss: 0.1619 - temperature_loss: 0.0183 - gravity_mae: 0.6439 - c_o_ratio_mae: 0.3224 - metallicity_mae: 0.4605 - temperature_mae: 0.1473 "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "12/13 [==========================>...] - ETA: 4s - loss: 0.5564 - gravity_loss: 0.2930 - c_o_ratio_loss: 0.0849 - metallicity_loss: 0.1601 - temperature_loss: 0.0183 - gravity_mae: 0.6412 - c_o_ratio_mae: 0.3222 - metallicity_mae: 0.4582 - temperature_mae: 0.1473"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - ETA: 0s - loss: 0.5553 - gravity_loss: 0.2926 - c_o_ratio_loss: 0.0846 - metallicity_loss: 0.1599 - temperature_loss: 0.0182 - gravity_mae: 0.6406 - c_o_ratio_mae: 0.3217 - metallicity_mae: 0.4579 - temperature_mae: 0.1471"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/13 [==============================] - 54s 4s/step - loss: 0.5553 - gravity_loss: 0.2926 - c_o_ratio_loss: 0.0846 - metallicity_loss: 0.1599 - temperature_loss: 0.0182 - gravity_mae: 0.6406 - c_o_ratio_mae: 0.3217 - metallicity_mae: 0.4579 - temperature_mae: 0.1471 - val_loss: 0.4930 - val_gravity_loss: 0.2619 - val_c_o_ratio_loss: 0.0738 - val_metallicity_loss: 0.1460 - val_temperature_loss: 0.0113 - val_gravity_mae: 0.5920 - val_c_o_ratio_mae: 0.2995 - val_metallicity_mae: 0.4386 - val_temperature_mae: 0.1155\n"
     ]
    }
   ],
   "source": [
    "history, model =  train_cnn_model.fit_cnn_model(batch_size=2**11,\n",
    "                                                budget=4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c218955-42c5-4e84-b9fd-f5dccf128881",
   "metadata": {},
   "source": [
    "### 3.3.5 Check the Trained CNN Archeticture and Summary\n",
    "\n",
    "Checking the architecture of a CNN and its summary is importnat because it provide insights about: \n",
    "- Model Design and Structure\n",
    "- Model complexity\n",
    "- Hyperparameter Tuning:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d54365d5-70d1-445b-84ee-13a145a1893d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:27.266583Z",
     "iopub.status.busy": "2023-11-28T23:55:27.265907Z",
     "iopub.status.idle": "2023-11-28T23:55:27.267819Z",
     "shell.execute_reply": "2023-11-28T23:55:27.268484Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_Data_Processor.trained_model = model\n",
    "trained_Data_Processor.history = history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "34c9c0e3-f5eb-4e8e-8723-0a11f4d16637",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:27.272908Z",
     "iopub.status.busy": "2023-11-28T23:55:27.272170Z",
     "iopub.status.idle": "2023-11-28T23:55:27.274768Z",
     "shell.execute_reply": "2023-11-28T23:55:27.275277Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) for plot_model to work.\n"
     ]
    }
   ],
   "source": [
    "tf.keras.utils.plot_model(\n",
    "                train_cnn_model.model,\n",
    "                to_file=\"model.png\",\n",
    "                show_shapes=True,\n",
    "                show_dtype=False,\n",
    "                show_layer_names=True,\n",
    "                rankdir=\"TB\",\n",
    "                expand_nested=True,\n",
    "                dpi=90,\n",
    "                layer_range=None,\n",
    "#                 show_layer_activations=False,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d362f2b2-e53e-40e7-9fd7-f94c9dcafc06",
   "metadata": {},
   "source": [
    "### 3.3.6 Trained Model Outcomes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "5476bc74-ed25-4793-b9ea-8d153b85674b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:27.782421Z",
     "iopub.status.busy": "2023-11-28T23:55:27.781378Z",
     "iopub.status.idle": "2023-11-28T23:55:29.493180Z",
     "shell.execute_reply": "2023-11-28T23:55:29.492501Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/anaconda3/envs/dl2/lib/python3.9/site-packages/keras/src/engine/training.py:3079: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n",
      "  saving_api.save_model(\n"
     ]
    }
   ],
   "source": [
    "load_or_dump_trained_model_CNN( trained_model = trained_Data_Processor,\n",
    "                                                        output_indicator='Toy_parameters_v4_1000epoch_v2_test',\n",
    "                                                        load_or_dump = 'dump')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "497859c9-57b5-4960-9929-98cd0fb1404a",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 3.4 Check the performance of the Trained Model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97852f63-61d5-4908-9e76-1d9aaf4eb6bd",
   "metadata": {},
   "source": [
    "### 3.4.1 Load the Saved Trained CNN Models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "9df88951-7795-4645-b692-cc42fba2492d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:29.497581Z",
     "iopub.status.busy": "2023-11-28T23:55:29.496943Z",
     "iopub.status.idle": "2023-11-28T23:55:32.411396Z",
     "shell.execute_reply": "2023-11-28T23:55:32.411877Z"
    }
   },
   "outputs": [],
   "source": [
    "loaded_model, history = load_or_dump_trained_model_CNN(output_indicator='Toy_parameters_v4_1000epoch_v2_test',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "cbbfc24d-f767-41a4-b213-db4fe7d6bd60",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:32.415933Z",
     "iopub.status.busy": "2023-11-28T23:55:32.415251Z",
     "iopub.status.idle": "2023-11-28T23:55:32.417231Z",
     "shell.execute_reply": "2023-11-28T23:55:32.417708Z"
    }
   },
   "outputs": [],
   "source": [
    "train_cnn_model.trained_model = model#loaded_model\n",
    "train_cnn_model.trained_model_history = history"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e359714e-5622-426f-b999-8a63769c32e5",
   "metadata": {},
   "source": [
    "### 3.4.2 Double-check the Trained CNN Archeticture and Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "9239fc9c-3fa9-4833-8999-04132087ecda",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:32.422100Z",
     "iopub.status.busy": "2023-11-28T23:55:32.421417Z",
     "iopub.status.idle": "2023-11-28T23:55:32.423950Z",
     "shell.execute_reply": "2023-11-28T23:55:32.424500Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) for plot_model to work.\n"
     ]
    }
   ],
   "source": [
    "tf.keras.utils.plot_model(\n",
    "                train_cnn_model.trained_model,\n",
    "                # to_file=\"model.png\",\n",
    "                show_shapes=True,\n",
    "                show_dtype=False,\n",
    "                show_layer_names=True,\n",
    "                rankdir=\"TB\",\n",
    "                expand_nested=True,\n",
    "                dpi=90,\n",
    "                layer_range=None,\n",
    "#                 show_layer_activations=False,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a7199a91-1b68-4d43-af65-13855060db49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:32.428022Z",
     "iopub.status.busy": "2023-11-28T23:55:32.427408Z",
     "iopub.status.idle": "2023-11-28T23:55:32.481009Z",
     "shell.execute_reply": "2023-11-28T23:55:32.460759Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"model\"\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "__________________________________________________________________________________________________\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Layer (type)                Output Shape                 Param #   Connected to                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==================================================================================================\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " input_1 (InputLayer)        [(None, 104, 1)]             0         []                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Conv__B1_L1 (Conv1D)        (None, 104, 16)              112       ['input_1[0][0]']             \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Conv__B1_L2 (Conv1D)        (None, 104, 64)              6208      ['Conv__B1_L1[0][0]']         \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Conv__B1_L3 (Conv1D)        (None, 104, 144)             55440     ['Conv__B1_L2[0][0]']         \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " MaxPool1D__B1_L3 (MaxPooli  (None, 52, 144)              0         ['Conv__B1_L3[0][0]']         \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ng1D)                                                                                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " flatten (Flatten)           (None, 7488)                 0         ['MaxPool1D__B1_L3[0][0]']    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L1 (Dense)          (None, 512)                  3834368   ['flatten[0][0]']             \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L2 (Dense)          (None, 2048)                 1050624   ['FC1__B1_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L3 (Dense)          (None, 4608)                 9441792   ['FC1__B1_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__B1_L4 (Dense)          (None, 8192)                 3775692   ['FC1__B1_L3[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                          8                                       \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC1__Dropout__B1_L4 (Dropo  (None, 8192)                 0         ['FC1__B1_L4[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " input_2 (InputLayer)        [(None, 2)]                  0         []                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Concatenated_Layer (Concat  (None, 8194)                 0         ['FC1__Dropout__B1_L4[0][0]', \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " enate)                                                              'input_2[0][0]']             \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B1_L1 (Dense)          (None, 256)                  2097920   ['Concatenated_Layer[0][0]']  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B1_L2 (Dense)          (None, 1024)                 263168    ['FC2__B1_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B1_L2 (Dropo  (None, 1024)                 0         ['FC2__B1_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B2_L1 (Dense)          (None, 1024)                 1049600   ['FC2__Dropout__B1_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B2_L2 (Dense)          (None, 2304)                 2361600   ['FC2__B2_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B2_L2 (Dropo  (None, 2304)                 0         ['FC2__B2_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B3_L1 (Dense)          (None, 2304)                 5310720   ['FC2__Dropout__B2_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B3_L2 (Dense)          (None, 4096)                 9441280   ['FC2__B3_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B3_L2 (Dropo  (None, 4096)                 0         ['FC2__B3_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B4_L1 (Dense)          (None, 4096)                 1678131   ['FC2__Dropout__B3_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                          2                                       \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__B4_L2 (Dense)          (None, 6400)                 2622080   ['FC2__B4_L1[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                          0                                       \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " FC2__Dropout__B4_L2 (Dropo  (None, 6400)                 0         ['FC2__B4_L2[0][0]']          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ut)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " gravity (Dense)             (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " c_o_ratio (Dense)           (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " metallicity (Dense)         (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " temperature (Dense)         (None, 1)                    6401      ['FC2__Dropout__B4_L2[0][0]'] \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==================================================================================================\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total params: 115697476 (441.35 MB)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trainable params: 115697476 (441.35 MB)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Non-trainable params: 0 (0.00 Byte)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "train_cnn_model.trained_model.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36499814-0ceb-40c9-a65b-b579bf5bcd45",
   "metadata": {},
   "source": [
    "### 3.4.3  Check the training history through *Loss* metric"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "400d2e76-4bf6-4c69-a12b-ce3099d4ebfd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:32.513744Z",
     "iopub.status.busy": "2023-11-28T23:55:32.513227Z",
     "iopub.status.idle": "2023-11-28T23:55:32.546826Z",
     "shell.execute_reply": "2023-11-28T23:55:32.547226Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"52e0902d-66ad-49c8-a39b-454b3ba89efb\" data-root-id=\"1005\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"b55f43bb-6608-4e13-936c-3b24ccc39cbb\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1016\"}],\"center\":[{\"id\":\"1019\"},{\"id\":\"1023\"},{\"id\":\"1053\"}],\"height\":300,\"left\":[{\"id\":\"1020\"}],\"renderers\":[{\"id\":\"1041\"},{\"id\":\"1058\"},{\"id\":\"1063\"},{\"id\":\"1083\"},{\"id\":\"1088\"},{\"id\":\"1112\"},{\"id\":\"1117\"},{\"id\":\"1145\"},{\"id\":\"1150\"},{\"id\":\"1182\"}],\"title\":{\"id\":\"1006\"},\"toolbar\":{\"id\":\"1031\"},\"width\":1000,\"x_range\":{\"id\":\"1008\"},\"x_scale\":{\"id\":\"1012\"},\"y_range\":{\"id\":\"1010\"},\"y_scale\":{\"id\":\"1014\"}},\"id\":\"1005\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1209\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1210\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"ticker\":null},\"id\":\"1046\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1075\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1074\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1076\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1045\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1077\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1080\"},\"glyph\":{\"id\":\"1081\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1082\"},\"view\":{\"id\":\"1084\"}},\"id\":\"1083\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"#2ca02c\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1086\",\"type\":\"Line\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1054\"},{\"id\":\"1079\"},{\"id\":\"1108\"},{\"id\":\"1141\"},{\"id\":\"1178\"}],\"location\":\"bottom_left\"},\"id\":\"1053\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.40586617588996887,0.3196411430835724,0.29505300521850586,0.26193034648895264]},\"selected\":{\"id\":\"1103\"},\"selection_policy\":{\"id\":\"1104\"}},\"id\":\"1080\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1085\"},\"glyph\":{\"id\":\"1086\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1087\"},\"view\":{\"id\":\"1089\"}},\"id\":\"1088\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.446877121925354,0.28742703795433044,0.13536040484905243,0.08460599929094315]},\"selected\":{\"id\":\"1105\"},\"selection_policy\":{\"id\":\"1106\"}},\"id\":\"1085\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1080\"}},\"id\":\"1084\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"},{\"id\":\"1027\"},{\"id\":\"1028\"},{\"id\":\"1029\"}]},\"id\":\"1031\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#ff7f0e\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1082\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1085\"}},\"id\":\"1089\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"c_o_ratio\"},\"renderers\":[{\"id\":\"1088\"}]},\"id\":\"1108\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#2ca02c\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1087\",\"type\":\"Line\"},{\"attributes\":{\"line_color\":\"#2ca02c\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1110\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1025\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1029\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1027\",\"type\":\"SaveTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1030\"}},\"id\":\"1026\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1103\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1104\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_color\":\"#d62728\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1039\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1020\"},\"dimension\":1,\"ticker\":null},\"id\":\"1023\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1028\",\"type\":\"ResetTool\"},{\"attributes\":{\"label\":{\"value\":\"Total loss\"},\"renderers\":[{\"id\":\"1041\"}]},\"id\":\"1054\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1105\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1106\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1142\"}},\"id\":\"1146\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1021\",\"type\":\"LogTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"1142\"},\"glyph\":{\"id\":\"1143\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1144\"},\"view\":{\"id\":\"1146\"}},\"id\":\"1145\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1049\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.2523750066757202,0.060164496302604675,0.028904873877763748,0.018214423209428787]},\"selected\":{\"id\":\"1175\"},\"selection_policy\":{\"id\":\"1176\"}},\"id\":\"1147\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"#8c564b\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1148\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1147\"},\"glyph\":{\"id\":\"1148\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1149\"},\"view\":{\"id\":\"1151\"}},\"id\":\"1150\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1060\"}},\"id\":\"1064\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1147\"}},\"id\":\"1151\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"temperature\"},\"renderers\":[{\"id\":\"1150\"}]},\"id\":\"1178\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#8c564b\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1149\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1109\"},\"glyph\":{\"id\":\"1110\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1111\"},\"view\":{\"id\":\"1113\"}},\"id\":\"1112\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"gravity\"},\"renderers\":[{\"id\":\"1063\"}]},\"id\":\"1079\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_color\":\"#9467bd\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1115\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1060\"},\"glyph\":{\"id\":\"1061\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1062\"},\"view\":{\"id\":\"1064\"}},\"id\":\"1063\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.38338378071784973,0.15113845467567444,0.08109905570745468,0.07379508018493652]},\"selected\":{\"id\":\"1136\"},\"selection_policy\":{\"id\":\"1137\"}},\"id\":\"1109\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1114\"},\"glyph\":{\"id\":\"1115\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1116\"},\"view\":{\"id\":\"1118\"}},\"id\":\"1117\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1030\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"1109\"}},\"id\":\"1113\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#2ca02c\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1111\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.36231639981269836,0.2182304710149765,0.1747884899377823,0.15989698469638824]},\"selected\":{\"id\":\"1138\"},\"selection_policy\":{\"id\":\"1139\"}},\"id\":\"1114\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#d62728\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1057\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1114\"}},\"id\":\"1118\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#d62728\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1040\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[1.505780816078186,0.9344017505645752,0.6641486287117004,0.5553185939788818]},\"selected\":{\"id\":\"1050\"},\"selection_policy\":{\"id\":\"1051\"}},\"id\":\"1038\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.25723934173583984,0.17257976531982422,0.16644078493118286,0.14598166942596436]},\"selected\":{\"id\":\"1173\"},\"selection_policy\":{\"id\":\"1174\"}},\"id\":\"1142\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1173\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#9467bd\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1116\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1174\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"metallicity\"},\"renderers\":[{\"id\":\"1117\"}]},\"id\":\"1141\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#9467bd\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1144\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"RandState=100: X:StandRow, y:StandCol - MinMax:StandCol, ToyCNNmodel\",\"text_font_size\":\"14pt\"},\"id\":\"1006\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1051\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1055\"},\"glyph\":{\"id\":\"1056\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1057\"},\"view\":{\"id\":\"1059\"}},\"id\":\"1058\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1038\"}},\"id\":\"1042\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1014\",\"type\":\"LogScale\"},{\"attributes\":{\"axis_label\":\"Epochs\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1049\"},\"major_label_policy\":{\"id\":\"1048\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1017\"}},\"id\":\"1016\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_color\":\"#d62728\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1056\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1175\",\"type\":\"Selection\"},{\"attributes\":{\"line_color\":\"#ff7f0e\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1081\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1176\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[1.1507513523101807,0.6720688343048096,0.5605290532112122,0.49299800395965576]},\"selected\":{\"id\":\"1074\"},\"selection_policy\":{\"id\":\"1075\"}},\"id\":\"1055\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#ff7f0e\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1062\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1136\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1055\"}},\"id\":\"1059\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"#8c564b\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1180\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1138\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1139\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1179\"},\"glyph\":{\"id\":\"1180\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1181\"},\"view\":{\"id\":\"1183\"}},\"id\":\"1182\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.1042620986700058,0.02870950475335121,0.01793617196381092,0.011290873400866985]},\"selected\":{\"id\":\"1209\"},\"selection_policy\":{\"id\":\"1210\"}},\"id\":\"1179\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1048\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1008\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1179\"}},\"id\":\"1183\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#8c564b\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1181\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1012\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1010\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1050\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1038\"},\"glyph\":{\"id\":\"1039\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1040\"},\"view\":{\"id\":\"1042\"}},\"id\":\"1041\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1017\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1016\"},\"ticker\":null},\"id\":\"1019\",\"type\":\"Grid\"},{\"attributes\":{\"line_color\":\"#ff7f0e\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1061\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":[0,1,2,3],\"y\":[0.4442121982574463,0.36857977509498596,0.3250948488712311,0.2926012873649597]},\"selected\":{\"id\":\"1076\"},\"selection_policy\":{\"id\":\"1077\"}},\"id\":\"1060\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Loss\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1046\"},\"major_label_policy\":{\"id\":\"1045\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1021\"}},\"id\":\"1020\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_color\":\"#9467bd\",\"line_dash\":[2,4],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1143\",\"type\":\"Line\"}],\"root_ids\":[\"1005\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"b55f43bb-6608-4e13-936c-3b24ccc39cbb\",\"root_ids\":[\"1005\"],\"roots\":{\"1005\":\"52e0902d-66ad-49c8-a39b-454b3ba89efb\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1005"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_model_loss(history = train_cnn_model.trained_model_history,\n",
    "                title = 'RandState=100: X:StandRow, y:StandCol - MinMax:StandCol, ToyCNNmodel')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "691d18a6-63a6-4576-8048-5c77d2c3579c",
   "metadata": {},
   "source": [
    "### 3.4.4 Plot the Performance of the trained CNN models - Regression metrics\n",
    "- Plot predicted against actual scatter plots for all parameters \n",
    "- Plot Residual histograms (predicted - Actual)\n",
    "- Report regression metrics: R$^2$ and skewness for training and test sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "37e2d362-e006-4e13-b63b-565c995f5296",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:32.550875Z",
     "iopub.status.busy": "2023-11-28T23:55:32.550317Z",
     "iopub.status.idle": "2023-11-28T23:55:32.552473Z",
     "shell.execute_reply": "2023-11-28T23:55:32.552865Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<TelescopeML.DeepTrainer.TrainRegressorCNN at 0x7f84130f69d0>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_cnn_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "348e061c-dd4a-47e8-8f71-a0807c8af462",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:55:32.557228Z",
     "iopub.status.busy": "2023-11-28T23:55:32.556655Z",
     "iopub.status.idle": "2023-11-28T23:56:23.609091Z",
     "shell.execute_reply": "2023-11-28T23:56:23.609443Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r",
      "  1/782 [..............................] - ETA: 2:23"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "  2/782 [..............................] - ETA: 42s "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "  3/782 [..............................] - ETA: 41s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "  5/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "  6/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "  7/782 [..............................] - ETA: 41s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "  8/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "  9/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 10/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 12/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 13/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 14/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 15/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 16/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 17/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 18/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 19/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 20/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 21/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 22/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 23/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 24/782 [..............................] - ETA: 40s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 25/782 [..............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 26/782 [..............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 27/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 28/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 29/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 30/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 31/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 32/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 33/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 34/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 35/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 36/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 37/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 38/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 39/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 40/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 41/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 42/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 43/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 44/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 45/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 47/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 48/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 49/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 50/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 51/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 52/782 [>.............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 53/782 [=>............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 55/782 [=>............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 56/782 [=>............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 57/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 58/782 [=>............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 59/782 [=>............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 60/782 [=>............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 62/782 [=>............................] - ETA: 39s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 63/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 64/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 65/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 66/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 67/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 68/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 69/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 70/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 71/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 72/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 73/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 74/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 75/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 76/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 77/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 78/782 [=>............................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 79/782 [==>...........................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 80/782 [==>...........................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 81/782 [==>...........................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 82/782 [==>...........................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 83/782 [==>...........................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 84/782 [==>...........................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 85/782 [==>...........................] - ETA: 38s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 86/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 87/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 88/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 89/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 90/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 91/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 92/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 93/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 94/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 95/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 96/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 97/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 98/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 99/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "100/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "101/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "102/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "103/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "104/782 [==>...........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "105/782 [===>..........................] - ETA: 37s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "106/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "107/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "108/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "109/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "110/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "111/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "112/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "113/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "114/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "115/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "116/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "118/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "119/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "120/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "121/782 [===>..........................] - ETA: 36s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "122/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "123/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "124/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "125/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "126/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "127/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "128/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "129/782 [===>..........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "131/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "132/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "133/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "134/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "135/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "136/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "137/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "138/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "139/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "140/782 [====>.........................] - ETA: 35s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "141/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "142/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "143/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "144/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "145/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "146/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "147/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "148/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "149/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "150/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "151/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "152/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "153/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "154/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "155/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "156/782 [====>.........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "157/782 [=====>........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "158/782 [=====>........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "159/782 [=====>........................] - ETA: 34s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "160/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "161/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "162/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "163/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "164/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "165/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "166/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "167/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "168/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "169/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "170/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "171/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "172/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "174/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "175/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "176/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "177/782 [=====>........................] - ETA: 33s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "179/782 [=====>........................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "180/782 [=====>........................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "181/782 [=====>........................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "182/782 [=====>........................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "183/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "184/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "185/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "186/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "187/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "188/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "189/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "190/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "191/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "192/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "193/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "194/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "195/782 [======>.......................] - ETA: 32s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "197/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "198/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "199/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "200/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "201/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "203/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "204/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "205/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "206/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "207/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "208/782 [======>.......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "209/782 [=======>......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "210/782 [=======>......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "211/782 [=======>......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "212/782 [=======>......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "213/782 [=======>......................] - ETA: 31s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "214/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "215/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "217/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "219/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "220/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "221/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "222/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "223/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "224/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "225/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "226/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "227/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "228/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "229/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "230/782 [=======>......................] - ETA: 30s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "231/782 [=======>......................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "232/782 [=======>......................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "233/782 [=======>......................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "234/782 [=======>......................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "235/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "236/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "237/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "238/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "239/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "240/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "241/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "242/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "243/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "244/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "245/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "246/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "247/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "248/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "249/782 [========>.....................] - ETA: 29s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "250/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "251/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "252/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "254/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "255/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "256/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "257/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "258/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "259/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "260/782 [========>.....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "261/782 [=========>....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "262/782 [=========>....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "263/782 [=========>....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "264/782 [=========>....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "265/782 [=========>....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "266/782 [=========>....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "267/782 [=========>....................] - ETA: 28s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "269/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "271/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "272/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "273/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "274/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "276/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "278/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "279/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "281/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "282/782 [=========>....................] - ETA: 27s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "284/782 [=========>....................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "286/782 [=========>....................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "287/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "288/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "289/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "291/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "292/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "293/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "294/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "295/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "296/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "297/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "298/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "299/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "300/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "301/782 [==========>...................] - ETA: 26s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "302/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "303/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "304/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "306/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "307/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "308/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "310/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "311/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "312/782 [==========>...................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "313/782 [===========>..................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "314/782 [===========>..................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "315/782 [===========>..................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "316/782 [===========>..................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "317/782 [===========>..................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "318/782 [===========>..................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "319/782 [===========>..................] - ETA: 25s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "320/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "321/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "322/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "323/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "324/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "325/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "326/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "327/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "328/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "329/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "330/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "331/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "332/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "333/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "334/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "335/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "337/782 [===========>..................] - ETA: 24s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "338/782 [===========>..................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "340/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "341/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "342/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "343/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "344/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "345/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "346/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "347/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "348/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "349/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "350/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "352/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "353/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "354/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "355/782 [============>.................] - ETA: 23s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "356/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "357/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "358/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "359/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "360/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "361/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "362/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "363/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "364/782 [============>.................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "365/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "366/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "367/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "368/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "369/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "370/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "371/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "372/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "373/782 [=============>................] - ETA: 22s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "374/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "375/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "376/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "377/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "378/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "379/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "380/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "381/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "382/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "383/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "384/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "385/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "386/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "387/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "388/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "389/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "390/782 [=============>................] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "391/782 [==============>...............] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "392/782 [==============>...............] - ETA: 21s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "394/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "395/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "396/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "397/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "398/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "399/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "400/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "401/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "403/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "404/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "405/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "406/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "407/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "408/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "409/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "410/782 [==============>...............] - ETA: 20s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "412/782 [==============>...............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "413/782 [==============>...............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "414/782 [==============>...............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "415/782 [==============>...............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "416/782 [==============>...............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "417/782 [==============>...............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "418/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "419/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "420/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "421/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "422/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "423/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "424/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "425/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "426/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "427/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "428/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "429/782 [===============>..............] - ETA: 19s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "430/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "431/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "432/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "433/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "434/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "435/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "436/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "438/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "439/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "440/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "441/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "442/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "443/782 [===============>..............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "444/782 [================>.............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "445/782 [================>.............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "446/782 [================>.............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "447/782 [================>.............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "448/782 [================>.............] - ETA: 18s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "449/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "450/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "452/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "453/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "454/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "455/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "456/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "457/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "459/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "460/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "461/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "462/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "463/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "464/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "465/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "466/782 [================>.............] - ETA: 17s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "467/782 [================>.............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "468/782 [================>.............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "469/782 [================>.............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "470/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "471/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "472/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "473/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "474/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "475/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "477/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "478/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "479/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "480/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "481/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "482/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "483/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "484/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "485/782 [=================>............] - ETA: 16s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "486/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "487/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "488/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "489/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "490/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "491/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "492/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "493/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "494/782 [=================>............] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "496/782 [==================>...........] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "497/782 [==================>...........] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "498/782 [==================>...........] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "499/782 [==================>...........] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "500/782 [==================>...........] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "501/782 [==================>...........] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "502/782 [==================>...........] - ETA: 15s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "504/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "505/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "506/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "507/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "508/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "509/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "510/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "511/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "512/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "513/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "514/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "515/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "516/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "517/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "518/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "519/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "520/782 [==================>...........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "522/782 [===================>..........] - ETA: 14s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "523/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "524/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "525/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "526/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "527/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "528/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "529/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "530/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "531/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "532/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "533/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "534/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "535/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "536/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "537/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "538/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "539/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "540/782 [===================>..........] - ETA: 13s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "541/782 [===================>..........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "542/782 [===================>..........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "543/782 [===================>..........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "544/782 [===================>..........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "545/782 [===================>..........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "546/782 [===================>..........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "547/782 [===================>..........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "549/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "550/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "551/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "552/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "553/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "554/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "555/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "556/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "557/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "558/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "559/782 [====================>.........] - ETA: 12s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "560/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "561/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "562/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "563/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "564/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "565/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "567/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "568/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "569/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "571/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "572/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "573/782 [====================>.........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "574/782 [=====================>........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "576/782 [=====================>........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "577/782 [=====================>........] - ETA: 11s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "578/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "579/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "580/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "581/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "582/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "583/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "584/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "585/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "586/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "587/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "588/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "589/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "590/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "591/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "592/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "593/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "594/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "595/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "596/782 [=====================>........] - ETA: 10s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "597/782 [=====================>........] - ETA: 9s "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "599/782 [=====================>........] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "600/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "602/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "603/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "604/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "605/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "606/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "607/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "608/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "609/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "611/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "612/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "613/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "614/782 [======================>.......] - ETA: 9s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "615/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "616/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "617/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "618/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "619/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "620/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "621/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "622/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "623/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "624/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "625/782 [======================>.......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "626/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "627/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "628/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "629/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "630/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "631/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "632/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "633/782 [=======================>......] - ETA: 8s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "634/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "635/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "636/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "637/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "638/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "639/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "640/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "641/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "643/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "644/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "645/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "646/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "647/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "648/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "649/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "650/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "651/782 [=======================>......] - ETA: 7s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "652/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "653/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "654/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "655/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "656/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "657/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "658/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "659/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "661/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "662/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "664/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "665/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "666/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "667/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "668/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "669/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "670/782 [========================>.....] - ETA: 6s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "671/782 [========================>.....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "672/782 [========================>.....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "673/782 [========================>.....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "674/782 [========================>.....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "675/782 [========================>.....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "676/782 [========================>.....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "677/782 [========================>.....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "678/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "680/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "681/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "682/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "683/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "684/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "685/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "686/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "687/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "688/782 [=========================>....] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "689/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "690/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "691/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "692/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "693/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "694/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "696/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "697/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "698/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "699/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "700/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "702/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "703/782 [=========================>....] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "704/782 [==========================>...] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "705/782 [==========================>...] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "707/782 [==========================>...] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "708/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "709/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "710/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "711/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "712/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "714/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "715/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "716/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "717/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "718/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "719/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "720/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "722/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "723/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "724/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "725/782 [==========================>...] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "727/782 [==========================>...] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "728/782 [==========================>...] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "730/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "732/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "733/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "734/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "735/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "736/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "737/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "738/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "739/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "740/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "741/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "742/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "743/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "744/782 [===========================>..] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "745/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "746/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "747/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "748/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "749/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "750/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "751/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "752/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "753/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "754/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "755/782 [===========================>..] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "756/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "757/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "758/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "759/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "760/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "761/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "762/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "763/782 [============================>.] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "764/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "765/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "766/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "767/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "768/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "769/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "770/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "771/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "772/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "773/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "774/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "775/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "776/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "777/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "778/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "779/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "780/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "781/782 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "782/782 [==============================] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "782/782 [==============================] - 42s 54ms/step\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r",
      " 1/97 [..............................] - ETA: 5s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 3/97 [..............................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 4/97 [>.............................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 5/97 [>.............................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 6/97 [>.............................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 7/97 [=>............................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      " 8/97 [=>............................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "10/97 [==>...........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "11/97 [==>...........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "12/97 [==>...........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "13/97 [===>..........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "15/97 [===>..........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "16/97 [===>..........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "18/97 [====>.........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "19/97 [====>.........................] - ETA: 4s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "20/97 [=====>........................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "22/97 [=====>........................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "23/97 [======>.......................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "24/97 [======>.......................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "26/97 [=======>......................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "27/97 [=======>......................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "28/97 [=======>......................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "30/97 [========>.....................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "31/97 [========>.....................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "32/97 [========>.....................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "33/97 [=========>....................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "35/97 [=========>....................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "36/97 [==========>...................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "37/97 [==========>...................] - ETA: 3s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "39/97 [===========>..................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "40/97 [===========>..................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "42/97 [===========>..................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "43/97 [============>.................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "44/97 [============>.................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "45/97 [============>.................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "46/97 [=============>................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "47/97 [=============>................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "48/97 [=============>................] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "49/97 [==============>...............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "50/97 [==============>...............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "52/97 [===============>..............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "53/97 [===============>..............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "54/97 [===============>..............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "55/97 [================>.............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "56/97 [================>.............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "57/97 [================>.............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "58/97 [================>.............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "59/97 [=================>............] - ETA: 2s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "60/97 [=================>............] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "61/97 [=================>............] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "62/97 [==================>...........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "63/97 [==================>...........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "64/97 [==================>...........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "65/97 [===================>..........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "66/97 [===================>..........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "67/97 [===================>..........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "68/97 [====================>.........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "69/97 [====================>.........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "70/97 [====================>.........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "71/97 [====================>.........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "72/97 [=====================>........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "73/97 [=====================>........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "74/97 [=====================>........] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "75/97 [======================>.......] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "76/97 [======================>.......] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "77/97 [======================>.......] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "78/97 [=======================>......] - ETA: 1s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "79/97 [=======================>......] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "80/97 [=======================>......] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "81/97 [========================>.....] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "82/97 [========================>.....] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "83/97 [========================>.....] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "85/97 [=========================>....] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "87/97 [=========================>....] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "88/97 [==========================>...] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "90/97 [==========================>...] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "91/97 [===========================>..] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "92/97 [===========================>..] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "94/97 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "95/97 [============================>.] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "97/97 [==============================] - ETA: 0s"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r",
      "97/97 [==============================] - 5s 54ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "i = 1\n",
    "regression_report(\n",
    "        trained_model = train_cnn_model.trained_model,\n",
    "        trained_data_processor = trained_Data_Processor,\n",
    "        Xtrain = [trained_Data_Processor.X_train_standardized_rowwise[::i],\n",
    "                  trained_Data_Processor.X_train_standardized_columnwise[::i]],\n",
    "    \n",
    "        Xtest  = [trained_Data_Processor.X_test_standardized_rowwise[::i], \n",
    "                  trained_Data_Processor.X_test_standardized_columnwise[::i]],\n",
    "    \n",
    "        ytrain = trained_Data_Processor.y_train_standardized_columnwise[::i],\n",
    "    \n",
    "        ytest  = trained_Data_Processor.y_test_standardized_columnwise[::i],\n",
    "    \n",
    "        target_i = 4,\n",
    "        \n",
    "        xy_top   = [0.05, 0.7],\n",
    "        xy_bottom= [0.05, 0.85],\n",
    "#         print_results = False,        \n",
    "                 )"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
