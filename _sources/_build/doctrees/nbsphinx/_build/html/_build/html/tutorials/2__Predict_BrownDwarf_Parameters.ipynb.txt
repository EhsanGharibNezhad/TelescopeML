{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:42.582253Z",
     "iopub.status.busy": "2023-11-28T23:00:42.581459Z",
     "iopub.status.idle": "2023-11-28T23:00:48.072899Z",
     "shell.execute_reply": "2023-11-28T23:00:48.073382Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:48.078851Z",
     "iopub.status.busy": "2023-11-28T23:00:48.078217Z",
     "iopub.status.idle": "2023-11-28T23:00:48.080394Z",
     "shell.execute_reply": "2023-11-28T23:00:48.080764Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:48.084423Z",
     "iopub.status.busy": "2023-11-28T23:00:48.083901Z",
     "iopub.status.idle": "2023-11-28T23:00:50.619383Z",
     "shell.execute_reply": "2023-11-28T23:00:50.619815Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:50.627871Z",
     "iopub.status.busy": "2023-11-28T23:00:50.626911Z",
     "iopub.status.idle": "2023-11-28T23:00:50.630345Z",
     "shell.execute_reply": "2023-11-28T23:00:50.630666Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:50.634753Z",
     "iopub.status.busy": "2023-11-28T23:00:50.633996Z",
     "iopub.status.idle": "2023-11-28T23:00:50.639461Z",
     "shell.execute_reply": "2023-11-28T23:00:50.639859Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:50.643732Z",
     "iopub.status.busy": "2023-11-28T23:00:50.643139Z",
     "iopub.status.idle": "2023-11-28T23:00:50.992216Z",
     "shell.execute_reply": "2023-11-28T23:00:50.992696Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:50.997129Z",
     "iopub.status.busy": "2023-11-28T23:00:50.996474Z",
     "iopub.status.idle": "2023-11-28T23:00:50.999064Z",
     "shell.execute_reply": "2023-11-28T23:00:50.999490Z"
    }
   },
   "outputs": [],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:51.003497Z",
     "iopub.status.busy": "2023-11-28T23:00:51.002618Z",
     "iopub.status.idle": "2023-11-28T23:00:51.004548Z",
     "shell.execute_reply": "2023-11-28T23:00:51.004943Z"
    }
   },
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:51.008617Z",
     "iopub.status.busy": "2023-11-28T23:00:51.008040Z",
     "iopub.status.idle": "2023-11-28T23:00:51.009755Z",
     "shell.execute_reply": "2023-11-28T23:00:51.010146Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:51.014066Z",
     "iopub.status.busy": "2023-11-28T23:00:51.013492Z",
     "iopub.status.idle": "2023-11-28T23:00:51.065146Z",
     "shell.execute_reply": "2023-11-28T23:00:51.065480Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"387625a7-01be-4769-a864-7b096967cb94\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"9308f098-16bd-4621-a6f5-1ee94d8ca361\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1044\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"CVNUVkjOmDyTh03l8210PDMK4OErC5U87d325tuffTzyjVTD6HVRPFiG2Ma1vHQ8kUA1Rp6YfDxWX6+KRHF5POXL7cG+vGQ8aDoxweqLfzzqvAUjAv9zPG79mAIrLWs8Fsr9Z/gNWTygmGPPPI9MPFJ0LjsjCiw8V4pfF3I0eTycuUs90YB+PHH0mzGY5oE8KwGg1AeQdTywFKEemSuLPK26502LFoo8yQVjeI5ZczyE7iWSil5sPAEqLBfM3FA88pAmvbRqIjyHNSIIajx/PLMT18++xHY8HwaTv/v/ajxrO87Xa3dgPP04fekDJoA84eNFfgOzczx4i8a4f+VHPC6LHbAqv4A8bumSbHVRejx/vOp4lSRzPLHq1OIVQnE8GZDiRKfkOTzA77ypGq11PM6OjsD3S1Q8hFCpUT5ndDz65op/RRJTPJ0VwtVxFFY8t3Mo9Kx3YDz0PVvcDbJ0PKl9yRH7BXQ8qPOD6FsmYjxwUvQyOqpaPH9I5BGV6mM8DdthZPoBQDydbHTiHThvPI9uLyghGng8D7t8eic/WTzKp73MfmJgPAzyPNxpJWQ8KYKECC11VTwOB+8QRotRPFN4/QfHMmw8ql6cBm+4Yzx7b1Df+QJjPDxZeR47cmI8mZYCPKrLWzw5nce6Rn1hPCbvjVe4FGU8E0FU9CmsaDyFVQfyPP9VPJcL4PLsJVg80Bdsnas8bDzOJ2YmHL11PCSpuwv8kD08qJGEQ9vdNjwrek17uiowPH1c4pmISwA8Zw9Aym+AXzwAeHdeImBjPBYgzxXyZlo8VqBe3T4bTDwCBPh4zEQbPEjwStqG/Vw8KDCDdmAjbDz1p8RzDGdnPPsSpqDjd048M1fczWr0ZzyUcxyeIvxiPBBeReve3GQ8cqgNEmxCZTzOg5jMGBZaPN/kcjB9/2E8saltOMAPRDzRMZib/DFgPBP82sxK2W48ksDXz19NbTyAFHTVg2hZPOlA3SZ5XjA8V60BAycIQDzz4kyQWA1nPFnyFD8QA108HLrxbvSbUTxRd54TDtxpPPRpeYUCCmM8RWTfNlAIXjwvNiVDUohaPHwo+36MBlw8WW8+uZPhYDyoV+z4/rFtPC4J6Q/yIWo8tLrlJuWRZjxoonptiBtjPP4ntWiDHWE8/jX4+TzFaDz1HKIqT8FzPBHbk6Y5DGQ8aHwMWOP4bzxA7dpjIHVuPCs1HLHQXWk8mtZk/bP0aDxp0XDgJA5nPCP3zBmR33M8Q4hLcd9CeTxBtW4DIKR3PGmimd6Dxnk8XV7vtHvRejxaw35HJaOAPNNryzyhSIM8DPV92YxLiDyvG61eHASHPLnP31YytIc8hy5jclSXjTw309j1C+eMPNLCP8ftdo48/e8NzqgKjjzjxO3BW8+SPPGNoR2iWZM8DtDLmxgPlTzE0lOnkAKXPJhmEOg/GJc8RlUlgVGDmDxW3l47tq2YPGld+D0rAJo8dT9BodGJmjymYl3goLScPJlNzgp1op08FpsTlRNnnjzDMtU7etOePHy8mdU9gJ88wssMzZuHnzxQBmoeaA6gPJEIUYoU/po8oIurBiTslTxZ5qd2oD+NPMw6VAJCMIk8CXpYAS55gDzB3vQomqR2PFvp5YvVEm8803AjDcQ6YDzSKN679BhqPH5iKFBVd2o8LTw42qlCcDxF1eUKe2RZPB+OC9ga9Gs8/Y00TCZ1ZTw477jDVCNPPGnw2IUi/mI88HiuLsRbXTz2kFj/83RWPE8Vhw8sUWM8rj1DMPm6WTwAAk6Eag5iPIt7+iMCZms8iyV5cgWwcTx3P4VDwXR1PJ7P2pHLrH08ZWq9ueT1gDz+5JlOzQSFPG0S4gOMB4o8nUlaO0g6jjyTAxL7ebCQPIwd2oQvopM8afxINoAUlTwP14EpsGuXPNpz8FeTuJo86wdLZz5fnTzg6YDua8GePK+qU4g2RqE8JikXq0inoTzqMiMNTrWjPK7KNeqyFqU8f2YPHMOBpjw8NshaLLCnPLpOL9ymrac8khBZq2WXpzy2FCrUC4CnPLaEjRGOmqU8sJhtVXAHpDwDs5EQhXuiPJSXMk6g4qA8iz4L8g69njxvsuEyQambPD2TkOYd4Zg8RBuStK8pljynctZVvnKUPOPMjK8x3ZA8tGtdRL+1ijxSm4ZSXAGBPJS9+TXcDHM8WipNNitFXDw9yGJPilxQPPPTbSrcPCU8NG9Z6njmCjxMmTBbpxwkPGZr5T3YvzA83v1BQNyOHjx32UbKa2UhPP6zbHRpgyM8ho6SHmehJTwOabjIZL8nPKez841IFFI8c5tjriwmPDwClCarc2BAPFL7ZxJDFVg8Pk2dsgveTjy5xiUXkzpSPKH177zisEw8clKs1USkNzzelAonWV85PEvXaHhtGjs848RZ3cStMzxzVFJAY2RIPBZb7ZBH+Do8zDG/A3oHTzzN8uoR8eAtPHBJ27mnYDQ8ALZTSdWLVDyuyBhvscxTPEF4ggnPnWU8aOAbvsmkaDwJa0fY+6liPMw17al5n2A8yT2nD2Hnazy3UV1YOsRmPABQsmzglmY8rENZrz7IYTz8FzkLeAxnPB/712WObGw8VwkYgK1pbzw0qeMvE+x1PJ2liZm/33A8HPawtstVdTzSt/ngG1p4PJ+N0WHJVno8x48g/bYCgDxozAxwStCAPC/FfurYvoY8NCArlDZMiTzB1fAme0qJPB6cHejcX448h0V8bCOwjzxdS1eLQdqQPCfQp9YJBZI8KKdPN3UGkzx95sy9/g+VPBvEz1iPGZY8jqsMShgyljx0rw0Szy+XPMI6ijI245Q8nsCJD0izljzfEJepTf2UPL277JHAN5Q8kx+YHe3/jzwkhyU6H9qKPMHRada+0oQ8dLSKwzESgDwFMh/wfkJ0PGJWE1ZC7GU8AB82I+2mZjyiP4Yac9NnPH8fmGJsh2Y8EiIUGFr/ajwbxqKJn/pjPHf5aZY1fmU8whBhY++5ZTw3dxg7VBJuPApVbsGBnWs8r1lOr12NbDwV832ABgBuPEfJb4pBqGI8KT+5gNLiRTwEwoBoP9VCPGtK7ohD5Vk87YoujovZYjyEIifLRK9jPIr2e87cqWk8OnSafBnFWjxeYiMrVw9hPL821Oe/FF48r33NujAnVTyWqn1F+x1VPPOT+LaAX1M88dgUS5zyZzxMiYZFoHduPBFvfG+2Fmc80vQapQJdYTz8ToERMSlnPP+kcic1fmM8i7a92r+uZjxPNq/EQXNXPNM4f1rXel885mEuyIjbYDxySX5F1stXPMppuRie82A8Vao7qRJfWDyNDzFYNHJnPMrTv0z9wkk8Vs9vC9Z7RDyn4IUj4KZTPLJW/oksKVw82Eoi1M/EXDxDY3pyuwtXPMi1hFl5H0w8goeUxDNEPzwr98GauMJIPKUPv91spUA8PlB4QUIQMTxJJlDuWLXqO6X33hIQXCE8c3ZsS2WGMDzUdj0WTb4wPB4pO3uMeVY8ih+gtNfJSDz73ptPyM1QPDGu58SkNlU8zh/yma31TzwQHun5sFlMPFEc4Fm0vUg8lEjh5CcQWzx/QWnOuuBkPAJj92uFBEo8srR8rsyfNzyFPojL0lhAPLEi0j+/4UQ8fPIglZp+KjwufbsNDc1BPHzf7mY5cFQ8tOhtfbrvWzzj7/xoirdKPFe+RCe2jTs8ayJFwHcTYjxAWlQXs7NgPP3YfwCnGmQ8eD9UImGZTzxktBINvzBLPO2kwTvb1Dc8L3pYF5gJVDwC76nKW9xlPDJyqlFoDVI8D3gGMjjBLDxv5Xc3IrhWPEi+iyXoDi885ko48Jzp8jtIa2GrtiVBPGqVnKBjcEI8BoAOBcLzUDw+mG3DfQZRPHewzIE5GVE8G7HIi5VRSDytHCqj8dZRPJJZy176tVM8bU02t/IeUjz+BkPx7RpVPAXEvHwW8lY8qil3c22zVTyeAo0fuhNdPDZ7nEOL1mA8/ysOIDasYjz/YX/WrKhlPMQHLODYI2M8euUv9zF0bDyR7OKnEEZuPF8XvE1gcl08dpXrLPigaTx0A6rSc8NsPPVBkppuo2w8f9BcKrTeZDwmR8qpocRxPHPWLDXGFGw84DuwafZLczxKGr8NoypqPDzWHTzNzXI8kWNAZc73cTyehVqN1dtyPLi5NHkqMHQ8a6g3AkAKdzy11lnZxO93PHTNyRimlXY8umtYNSvedDzpzI0gxVt3PFHBYgqo53c8nHlM32Y9ezyzOFJsq893PN+3VW4YRHg8M2uP6db2eTzkrxasP3l5POOkGuiEnXo8vAJUYsEleTzGJXNzFBN6PI2rQ+ufY3g8kwgj8QoVeDx6XMEd1bR3PPaymG6Z/3c8HuqBcLuHczwA2CqF/4p3PBRSXd/3/Hc85MwadDgJczynjr8rhfd1PEg0sHGCfXI8JsSvMYFocjwn+vJO7ntyPISjsrREFXA8n1VxoYDRbDyYVUi3c19wPMaFfPwoam88AlqvFysPajzLP0aH1+lpPKlgNE1Zp208EAQO72tYZDwxmMGjJZZkPK6z9zZ+NWM8me55KAUeZDyQMItPiZ5fPFwyQ5c0nWI8WDVe8s8EXDwcwxH6IE5jPE9XaHYAZGg8XT8MbG9kYjzdQEvLDAtUPER2PZ3F6Fk8etuC3kKCVTzdqFZV4gVZPNAcidNcjE08ys/J+OkZMjwu/zKf0Jc7PHeWCbdjrzs84RUV/QUDNDysKHKKIapFPJO8Sq/HL0Q8ncZqdEN0PzwytTRvdVdBPHT/5zOhy+Y76c8llXT58Tv9LjZ8Oc00PDfrQJum6TY8X+QRFMo2MDxOsqpKjUImPD1Ta9Rb5SM8LPQrXiqIITw1KtnP8VUePEubRw+1PUQ8uKwUAPp5LDz+88bhGoE+PNDIwWGcYkc8tMD5X5JvQjwxcWO8EPk6PPlg07j8EjE8bLgnELLaOjzwB76zM1FCPG91NN4bsDU8+WuzU0H3Gjx3X6lRSVAwPDREQBxZyzM88ijX5mhGNzyvDW6xeME6PGzyBHyIPD48letNI8zbQDxwF96hmydBPEtDbiBrc0E8oaCNmSt2Kjx97ie5MOM/PFzls5l2WjY8drh/9HijKTzNmF7WEkgKPFUFIg2oFS88PDJWsqXMOzx3pGmUX2Y2PLIWfXYZADE82BEhsaYzJzyd7I/qNM4YPMSScCLoZkA8oGALRFqKODxY6oq4ytMwPIRq9KGYXDY8AOWy7+wJNzxf89a1WuoxPHsD9veQlSk8cEB8CNmsHjzb8xhCIF0EPBdf0FH7lyY8Dan0BtnUIjyGaEdE0t4yPIR8FAU4Uzw8aS2kE4+bNDybvGdEzMcpPMY8DsP0sBQ8rc9SSD6OQjx3nBhDAf8wPJ34QmpqB0A8/vJaKt7GNDx+QfmIpewaPJ8sNDlYVzQ8mkqynt0cPTyXwqw0OGRAPOBfAJoBOkI8Kv1T/8oPRDx0mqdklOVFPL03+8ldu0c8Ym0cZ7v4HDxZdIAwHII9PKqpxcGdwDg8Lu8G8xK4Bjw/EY7Y2J1OPLXhBQskRUo8RHzuctPgKzyemushqn4mPPe46NCAHCE8oK7L/650Fzyo1ou7uGAJPIuAArybwN47y0Q1JH9QWDyDfTvn1flVPC9OJVfHIkw8sEKnv8WjODwGxsQIFtUqPP1J3DYJo0A84m8dHrHbSjzkSq+CLIpSPPUduj6xGNQ7CLRNIHOaRTweU3f8JFc6PF/TIu3nAjE8eV3ANkUYUzwgY4kD6cRHPJoWJDOPsjI8ZeYVFJm6Wzwa/3Y2i7pUPPctZyN51188RRe70ZcrRTxA/VeZSCxEPDrj9GD5LEM8NcmRKKotQjwwry7wWi5BPCqVy7cLL0A8SvbQ/nhfPjxO3pRrqmBkPCYogXWff2w8ALm2P0pPcjzs3azExF52PNgCo0k/bno8b1IDW0joRjwa5NB7u+RoPK05vN88Q2U8QI+nQ76hYTymySVPfwBcPFa722BlJGk87UgSjUUkcjyEfRYGlglqPFrSEORBlV88\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1047\"},\"selection_policy\":{\"id\":\"1046\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1044\"},\"major_label_policy\":{\"id\":\"1042\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1067\",\"type\":\"Selection\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1042\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1067\"},\"selection_policy\":{\"id\":\"1066\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"ticker\":null},\"id\":\"1041\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1041\"},\"major_label_policy\":{\"id\":\"1039\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1039\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"9308f098-16bd-4621-a6f5-1ee94d8ca361\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"387625a7-01be-4769-a864-7b096967cb94\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:51.085099Z",
     "iopub.status.busy": "2023-11-28T23:00:51.084464Z",
     "iopub.status.idle": "2023-11-28T23:00:51.267314Z",
     "shell.execute_reply": "2023-11-28T23:00:51.267736Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:51.272259Z",
     "iopub.status.busy": "2023-11-28T23:00:51.271643Z",
     "iopub.status.idle": "2023-11-28T23:00:51.274293Z",
     "shell.execute_reply": "2023-11-28T23:00:51.274627Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:51.286960Z",
     "iopub.status.busy": "2023-11-28T23:00:51.285770Z",
     "iopub.status.idle": "2023-11-28T23:00:51.289830Z",
     "shell.execute_reply": "2023-11-28T23:00:51.290292Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:00:51.296732Z",
     "iopub.status.busy": "2023-11-28T23:00:51.294856Z",
     "iopub.status.idle": "2023-11-28T23:01:03.266693Z",
     "shell.execute_reply": "2023-11-28T23:01:03.267061Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.3399446348349253,\n",
      "    'gravity': 5.016667095820109,\n",
      "    'metallicity': -0.314212071398894,\n",
      "    'temperature': 814.2718546549479}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    5.016667   1.339945  -0.314212  814.271855\n",
      "std     0.154572   0.209815   0.115331   34.947106\n",
      "min     4.651086   0.992236  -0.454397  762.519592\n",
      "25%     4.910125   1.191468  -0.398041  785.121124\n",
      "50%     5.015755   1.292073  -0.340613  809.573059\n",
      "75%     5.128985   1.483289  -0.297018  841.847946\n",
      "max     5.313151   1.855972  -0.040828  891.725281\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"ca754280-1c50-42c9-a779-d0c28fd8d7a5\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"bc8075fb-ffb3-4302-99fc-82cd197331d9\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0AQpfUHGRT7I3UF6+blAPnaLEdkCCDY+22Od6cbfSz7NLOjINR5IPmgGymQ+fUw+EiDvXn35Tj57Y27OdVxMPn5Go/w9N1M+HwiZlVGoWT5nqtb4zTljPn2s+TJGUmk+YeVI0ogvcD4SzmU5L9NyPhugzueeUHg+3zotYJpJez5zMHp2sjV/PrRaZ1y96IE+QH6lUJ+Zgz7PJJjLz9+DPtDZD8fap3g+aoM8BlhiZj72X43HDIRPPiQrBGqriVM+oak3DJkHUz7UdAWy3JRDPlLWwNPY4EQ+VHDTBH+sUD7ejVnwlwViPm58HCgz93A+2DfZqWfQej56V650SFOCPv1IzyKPF4k+fHx1KufFjz7iRH8Fr6CTPv35EcjFbZQ+0Tlxu/3ykT7fYxQsYYyMPmw8pim/H4U+6bLHiznvdj4CfQcadABQPpYC+a5uxSI+DlsKh3jSMz6DLu05C1pAPpaY1q2gAzw+XWeCLwzwRj4TNubuSa9APkP4mneJIkE+4xXXtH7oSD7oHsV8/nlaPtRaeyBPr1s+3VcaIqYaXT7c9v0VtIRmPjHscERr4HA+NExnN2l+fj4AdIZFICOGPhb+oOamYYw+iMHa+WAqjj7Y8L3BlwaGPg1mQt8Nh2w+kQwLAmkrYD7Z/amJQcBiPm5JSZ7rTmE+7/6nud3+WT5Jj0VVZ/FXPj7m77jWLGE+ybI35qkFYT4JDXZedJtWPkeJpjB9GVU+TM+rPeNEUT5j75YXzJMmPtscabjbaUg+DT2HpZOrTj4bVxeMfPVVPjnN9Aqym1M+Ve2CWMvRYT60wIA//JxRPnYosImUwkc+BFBSBXPaUj5KHOxxx5NePuVUw7QkMGc+nK5NFhvCbT4HBVn8fQtzPrPEi7Tc1Xg+rxOotH/mfT4Z2Lfx/l18PnBI1mZCdnk+DFMkT4eMcj6q0mk2u1trPrh/qU7FGWU+6Yjd0RDEVT5vqu8KPs1EPqbrWo4zx0A+AUb9ouM4UT5XA9qts61EPqGoGuhuWUc+nfA5P8HoSD56OEUr1ZpHPnYVkkX77kQ+rT3yY1N6UD6I84pAleRUPuNh1nrl8mE+Q3sEshP6Zj53G9Nf0/BoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1374\"},\"selection_policy\":{\"id\":\"1373\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cK4P7cwkPD5k7g0uOC9BPlSct6aeB0I+MoRWxIHWRj6SoYGyYzxBPjuHphHtJk0+d/nOLPFEST65QLm4MBBKPvBV+ofYMVQ+WnI6PuAGWz4QNz/VecFhPiOPB/ufW2k+tHd1krfZcD7SWzIGjUlyPiQgILDANXg+rPABu6mMez7vQSrdhfh+Pg2ClRqXOoI+SbqOE499gz4vXVcpbM2DPkVVbHFmi3k+1tPrxO/QZj4Dm87VtHdSPk+iBCI72FE+bogQdrUwSj7GbKggYkBEPhM2A942GUE+4wWi1JEcUj6pqXBPs/5hPoU+1kEekHA+OR2Q3M2nej7lQKQEfuWCPmXdDEPkAYk+Eei3g1Dhjz5uITcUkbaTPsdjICMvrJQ+Nw9MlB0hkj5KpJAG6w6MPkSzXAS86oQ+qDK1mUtxdz5t1H7l+HBQPtJK/lGrpy4+imk6W7bGNj6g0zUBsYs9PnmTfavHrD4+NOF9Cm+uLT6SIAyv9NI9PsPPm7jKaEE+6KsmGdLJQT5+Ra93Kz9YPtxJTaFYxF0+c+v5lI5zXT6+noI+vVhpPpgefjJhfHE+XXgBoEM7gD5ABwxH+YeFPksXKsPpT4w+zPAtEqACjj7lQVvhrASGPpIcdHAE0G4+tDQLGkE5Xj6zm0bs8JBjPgvI7fcF/mI+/UIZ7ahZVT4SZ8j6akFXPrsRGZ69Kl8+P30f1bjWYD6vUiPz8fdVPiM+kbHHp1U+DIJlw9VhVT5+U8RAWHFFPlVHruYkoUA+7OBAygaZWD4CFvMEf4lcPoCPvKUZpVM+GEgRjrn9Wz5MrtnRr8FVPqXWNtiRJkE+o7WbFfO1UD5Jqe525/NZPi8zfKX1TGc+piSuTIx8az5UlTP9cI50PjurvfENfXo+Xnfc6x0mfz7+eQGbDGJ9PpOTaI5aJnk+IJ7WGZIOcz7qjXnDMi9qPn531ZqXI2U+3FnqgxK9Rj6x84FNJPpIPhzDUgYMrk0+Id0DemB1TT44KuJpjENFPjy4HTClikM+EavzpmSSTj5VJbQJJChKPn+PmAAOZEI+2OyO7wlwUD6aS4m+EVRfPhMPpRmdlVw+vfW0eRw8XT7y8SrCoMZiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1376\"},\"selection_policy\":{\"id\":\"1375\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zOWG1QlkPz4PGU2gwfNHPmLjfnkexjg+hisBZJ1pRT4F5UoewWQ7PibggY7e1E8+BIPJ7Zz5Sj50LB8q78xMPh6vtU2m81M+5PJQQjhWWT4uuP/mAnNhPoOKMgUzyWk+bTACdh4Ubj6kDhaa+8ZyPgUrEaokCHg+L9xuxsgFfD55AsErlBB/Pjck2WJ/4oE+YHonN7CHgz4anDxGGjOEPi2gGPoTeHg+9F8wZrpqZj7F7pvZKotRPmIYBe3GmFA+GAfQEBq9Sj7573ysgFhKPsUgZ2m+aUc+jtgvAcDdTj7rqhfgKa9iPuyKFYq7jXA+iX6GEFZYez7SMvjxmwyDPuFD/u8u2og+RlBq0Tzljz5Lxr1SG9OTPqVNwhdl0JQ+2YZf9y/ukT7Xua8hST+MPkGfNBJ1u4Q+0+LlhXOfdj6uE+4qFL1QPmAEnjBEkiM+WCCfTM1xJj4rJYsv+jk0PtBOghWPFTQ+49/1e3ZGST7561couN43Pp2A44nYUTo+7i9g5XWcPD7DWy4OG/JWPkaySr2vZV0+9luMqlToWj7rKqgqT0RnPmDQMhTUn3E+wJPoCkRnfT55fuKE03aFPlbK5vJUqIw+9TqHqD8ajz5hFBJTK3KGPszJb4cEBGs+L7Tc2CAIYT4tdMtKeZphPvPDAEcduls+tbhJd6eMWD4KIZ8q1QtVPpp794s/TFw+QRx2K4fZYT7a0RoQFFBUPtWmSOF/R1c+qQoDeHc7Uj78hIehKchGPpgVzsgyt08+69nZw2deQT75NLOuLptPPk7v4+rAs1A+0MHGkVIJYD4PV+BQK4dVPrjLsxa5t0A+TScuNWyrTT6aiyV6mf5YPsjBrc+c82g+KPG+1XnXbD5Lo19eJ4hzPv2F3FJUznk+R57qhL8VfT6g2Lgs5cx7PqB30jFs0nk+9pR/6KLYcj62bfboCs5rPpl+EV+9/2I+t9P4F+jPTD6OEw/0u5FCPr2Td9Ypdjk+/XhFFeqnRz4Lubb8IrdJPpJGkQK2L00+6522tkgSTj6uQGFRJR1CPmCUOwEsQFE+mBFFCCqcUj7WnAUcytRdPopNGBZHvWE+XEjoVlcWaz5fOJUXNC9iPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1388\"},\"selection_policy\":{\"id\":\"1387\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cgYJIpWlQz7KAdgJF81EPrM9gy+IfjI+/Ly5/aw5Rj6ARDA8x+47PjPv1SWHtk4+LLFuB5OjSj6r6neWLC1GPlmT8pNIWFU+fTbDPSkUWT6FxcW/SrFiPqnHx7gb2Wg+EeorZQe4bj5a/dr2WU9yPoboIBfAFHg+tpSHgTjXez43nbLXbRl/PjSUVYqdFYI+a/6aCeuygz5+DP7G7MmDPn4VypgeUng+jBPrwS5GZz5psJ5h1GBSPsCzTnlnKlM+SoVDDkRSUD7kUT9bVgRBPt4U68wNZUI+gnNHJuyqUD7eH/7ElS1iPrZWS6lHZ3A+cZkL5rjZej6hzZq+IriCPkuNIavlNIk+s/QnaAHmjz4AAuA8ja2TPpzbC6FvOZU+G105wZDQkT6cVGfIlkOMPk+Py0Qr74Q+WQ/PgblFdz52yw0dOiJQPv23EmLQNCY+Uw2k2Nb4Mz56HUX96OY1PndgRHrNFEU+0UjpKWTmNz5oqmONw2ovPnxA9TJKrT4++6AmlYdTRD56+lQVlLtYPmcQM4vzOls+61tjL5QAWz4x5+cM2NBkPgQRRqN0b3A+YMMBNwUcfj4qx1nFumeFPuPYdtXJfow+Q1Q29/rfjj4+sm0gekqGPoYtqLPQFm0+7X4EthjhYT5tz2rR5G9jPsnIRwSqTFo+3p90U9avXz4Fm/WP+z1XPr8rUG83n18+2I2f0ee2YT6ulJopUNZZPv3JJI0lY1I+GnJkZzfmUD6JEB2R6vUwPgMFMs/sPkI+z1h3o+yKVz6kO/dvKzlQPqqurPzIRlE+wUZsLufGWD4MNh8mPJ1ePk4o8cptKU8+l1pNi2HrTz7dsNJpm3FbPvkP58JHyGc+WeKNBSxYbD504UOqualzPtD7qXpYZno+ylxpL9snfj6M/7QbAUx9PjdST625s3g+XDd3X7THcz6iJvBp729rPmE9CA0NDGM+SNLsgkYjUj7zzweS4JFMPifaz9G15kE+R3k2GTBQRT6GP9DF6+BJPhVPybcHTEg+sifJn+9WQD7sgrD99zdPPiRG4qZQNEk+fhza/1GeTz4uLvxFMOhQPhOl6/e/DmA+4qauhxWGYT4oEzUacfFiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1372\"},\"selection_policy\":{\"id\":\"1371\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XCUOj+daLz6c5Q79/4U9Pl7FoJ+3VzA+a+xGYTi3ST4KwHCHXAFCPtbIQcVUxEw+rTvRx6VxTj5AlGk/3JxFPnUGz44WpFM+4Bwj6QAoVz5wwFPT9eRgPi6xI6ToXms+54LrwKkAbz75PulBT0lyPvhygNnyw3c+FED8xSBeez47tifJs+p+PkjoDBSgUoI+FiFzzsWXgz5YCHhkK7mDPoQYy8uypXk+LPbV0vNdZj5bzrp/CI1RPgvktNfSpFA+ebEkGCohRz7gEZ4NiGpGPo75hAzdMkY+kfI+rCzuUT6OFZ5ynQNiPh4yeKnVdnA+I64vQgcKez7QdYbWrmuCPoELkeMI+og+dvCu+RbDjz5UqHoSV7yTPiNXIIZo+5Q+LmX/gTDrkT61K1abrjSMPp1TrDl184Q+q/o8hc7Ydj4JXpc20wpPPvwoyn+uTAw+SZlwcTwbOj4CcZU4aM9APn4mGFNfIjs+cfx7MhiJQj7cGyz62fA6Pm9MiEc9Izw+aqrE8isoMj7t5IcLegxWPoKYHX/FwF8+qUauaTV8Xj73UpyDhERnPpNCvt4lf3E+2lEwwH0lfj6+htV0vjuGPiE1Qvc5K4w+tUkJ0uX9jT4liF6sA6eGPmlXwxPK7W4+BrBPNfGCXz7s1/fFNOdiPgj7WoAxOVw+zMUBRXRCWD5dYq8wne1WPqs7eMxLJ2E+YvWowfXVXz6tiwCv169VPk/NvDI1b1I+VfJ78AD+UT75g0bSvc48PuU5QSc79ks+xkAFLlGrUj6Crg2IjRJPPmNTQVaP0lk+PKKGGF4vXD7WBPSsuAhOPlFIjh6/20w+aH+KUz9jVD4a0kDpwUZcPujwVybUjGo+8StqTozPaz5LHrc389ByPjklEtl7U3k+S6clv5TDfj5wFkMUd3B+PvdquuhmZHk+cwXfPLJhdD7Z4d0uUwxrPgDDOILmEmQ+OIE7SV0WSj4HKTMe3W49PhCLH/2oYjI+edx0ZbPvRD7OwCe18h1JPt/8vTBNckM+FzlBgQ1LPT5EeZOsuHs9PtKTjoo1ZFE+NITQL4xnUj4oEIqa+GFSPljK3O7B52A+I1P+fdMGWT64uNS51BFnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1384\"},\"selection_policy\":{\"id\":\"1383\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6NM+qH/fMD4boxYdyEdCPr+InrWbNEE+eh4OoTVxQz5bJj7V+vZCPjKVL7GBFlI+6R03KLfoTz4/2nYWBaROPjS9eIitflI+7pehMtlkWz7D2vzu7PxiPk/UWfMxC2k+rlBqAfuHcD6h4HDsb9RyPgJ+fXtNdHc+ZTeK/bUdfT4mPflYomJ/PgoGFl8DAoI+z+vsLpKAgz6ZOFmhEs+DPsQEXGOIbHg+6DZwGw8qZj6gZUf89PlQPvACVsA5G1Q+/kW4i0mrTz6x0UdTDzxCPphqZJZO1kU+ZOCBlBSrUj5I79MnKdliPhxPGmdBXnE+s3q4ZK5oej5LFvmLNWGCPrIZTOubq4g+X3Xy5/y9jz7FpjOOF6+TPrJmNC3Ke5Q+xk4OAZrgkT7tPUuQknqLPsJ6fHt9foQ+KUAVirRldz62UZczQqlQPkYd95I+sxc+tbpUsvIPIz7kFNRGkwUuPjrnSDOuG0M+6y5miCAGPz6GG90zGBovPoS/lFEWUTo+249dO9E2NT62Op1qwDJUPpijMzoDFlo+Ugn8kV8iXz5VjC9UFiJpPmplnHhNMXE+oL3NxHhwfT5PCQA/7TqGPgoXlyT2XIw+mZViR5anjj6P5HfpgsSFPnNr4Xk80Gs+BlTMBcTKYD7RizZW+HhhPtBkoQbovlw+esJT0lxBWD70G8zMc/NZPj0/87nXqF0+nF/JUIwKYT4GdGXvBGZYPhX1B/W+d08+BahNZZgdUj7fq1nRlvg5PrXaP1NaA08+h/0f8aEHUz7GjoVqWAFaPtZBxmq1nVQ+csreQqzoVj4Aia4ycRtVPgGnaoilg0o+MeQYvU6XVT5QVXciYFxUPlM1L9l9I2g+XiX/zqsObz7H847Pr81yPj/cXglceXo+XTBXEfbBfj65sHxldd98Ph6MZ5NaTHk+u1+ZBwwQcz5C6x/zSMhqPnyQ8z1UzGU+7ALT/aXIVj5munpKtxhGPvk1G0RIB0Q+vMIQpfwnQT5KUfRl+bM/PnOYue6As0c+1dItphRdTD7RFIG2KilAPtFwu7+8alc+4i5Rm9FaUz7VvD54nYRaPqEsCryomGQ++3WGc29BYD4oYwZZGclkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1386\"},\"selection_policy\":{\"id\":\"1385\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uQX5SK2/Mz4UwFuRF/xEPtOJpx6jd0E+Q97BV2PbRD7KUKyKyihCPlMG612rok0+/GcTemlUST5KUHvzqHdMPrHchZyHP1c+ZkJcVaYYWT5TqGAcGllhPsXaAkm+ZWk+ieadlHFZcD5+N9aSPpByPuRxBT1pDHc+vDs1AXn4ez7aNKQ/AH5+PtOdy6tf7IE+Q4hKIkwpgz5S0j/Fg7GDPkBK5A+zo3g+GEE8YfEDZz5iAujlriNRPjzHLfbnk1Q++EccBOHUTz5Q1AuyJTFDPt7AlbXwqUc+b2HTFsJuTz6tgdi9XtthPmE5TOCx/3E+4XZY4DZLez45juJT2WCCPo/0X48KQ4k+vOJ/XM29jz5f6FKTU8OTPp3lJid7uJQ+L1nAqcbvkT5Dal/lF9eLPh+aYsvROYU+LBnTemXjdj5Gg/EL6/VPPlGs0jK/lDM+7XmclOHnPj7APPtMU6c8Pg/3FfHH7jo+5UPIrgc+SD6vYwWaNOJFPjfgqHL1Jz0+DCbfR9HzNz5LCV5u9h1YPi04zIwHRl4+z8r5HbzSVz6e07iJjv1lPn1FiqvPdXI+g1z+kyN7fz7Ae/RNzASGPnqkX74W5Ys+8Tr0m7hkjz77/vEla72GPmlWMKaJd2w+cZCXIlBlYD7EXF4VgeljPvpipwAn9ls+uMUniYmtVj5lKOoTLR1VPklH4PiYGmE+Hcom7LPcYD5mxhBwXXJYPloJGRCUvlM+Yf+KwH0PTT4MyzS24vhFPtSNKBXSslI+JHCfh/QWUD5u0hvk7ClUPoUF44LATkw+cmCCJwFBWD7HXGC1HbtQPrtcMf1DrEk+hJNl1F5YSD4Yiva2kq1UPj/HUIAOmWk+OQbBxrTlbD6MQe8UeuhzPhGxhf+Xr3k+UslPYWFUfT797gLZv2d9Pu+qB0h6M3o+6hmftRsPcz4LZam22VxoPl0xr9iXVGQ+dBaUbAYRUj62uD9NUEVNPkuMKtCehj8+Xy0VzFs4SD4oNSGsitZEPkEgYwoMPks+fPi5XKiyRz6ffrJ8chVFPrakKX91uFE+Rp6XerfqUT4RMbmIZlhaPjku4rYqsmY+BTvgrLeaZT4WoHApWtFqPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1340\"},\"selection_policy\":{\"id\":\"1339\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ik6o7p2nNz6HTZQtAndBPtL4eySr7jE+iD124xboRz4g/Dwnq01HPvS7gYAP8UY+LrmhovA3Sj7ks2blZ9NHPrX6JFrgXVE+fG2t3GSaWT6+cX9UMoRiPhNHXQS0Fmo+ydBR7aKJbz6762XdJ0xzPuDgrDxYlHg+ixlAH54/fD4aqCkYpbh+PtR21QfRFYI+OTWHppm+gz7ttLG+3RWEPuIlzOeAMXk+x2WMlY53Zj57CrmGXotQPg1/Yhv36VQ+8wQg+MJDTT78Dbkalnk/PrBXZmY1fkU+/bFJ5PYwUT49KfQYPURiPjZFSeiwfnA+oW5zNiQEez4HG70P1JyCPs0n2EMKwog+U7SHWNXDjz63GCdEQYmTPhkL5eP22pQ+jRAm3QO/kT5fQ0bXNoKMPq2AL6Ie74Q+ovVy5+ksdz5PzfJqjVlPPnxUBLtdwCQ+9rY3feOOEz46PM6i6OorPq2AASWXok4+sr8AQ6z4QT7j3PlYiAM2Ppxx5XxVnUI+1vZXlBxQPz6Crn1xXcFWPiOWQ7EAkFw+8djXKQbUXD7jYSw8499kPmlXLz+F93A+d8PWouLIfz5UPJoAvJSFPun2Jyjbhow+04G2hHxHjj4GQeOsV5iFPpzb0k/s+Gw+RN/wWFpEYT7lK39tiORiPtjWh+EIE1c+jgvWtFQIVj50xv1HHZZZPm3XNoOABGE+rRMTfN7uYj4RBtcVhK5UPgAwx3VMEVA+ItxFvsWQVD6jjzf/u0Q1PmfHUK9SCkw+pIgFmQUeVz4pInCa6o5SPmxKnyW1mU8+BFZU/C3VVT40XZ+iV95SPhvtw/8Nvko+aR26edxfTT6Odjp2VFlcPk6ApmuC7Gg+J5RbfFPIaz7NmfDBpWd0PhZWT+ZRgns+yrsfMdMMfj7YdG51dU59PiqEDWYsZno+GhwkcY1ccj7N+r0Fwp1sPuQ0oahNhGY+94dwIcHJSj7Pb5ZStbxAPupyL2g5Rzw+sr7sdmliSj4MalYAuf9JPtSWtJMCnEU+tkzXI8iASj6k1p2VRUhQPrKRm4w8wE4+KyheynHSWD6m1OugRUJPPqM/SzIjqFo+LQjg2lWOYT7KUzxXRvdXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1344\"},\"selection_policy\":{\"id\":\"1343\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lX366QhYQD44bwbSpmVCPme6Dv/MtD4+w96YcO2pSD6UBMdxVD08PpNg+b/wkUw+EU84/pdHUD6mzS0EoqJJPjD9txtTJFU+ZnJQueqDXT5inQnw5pRhPtrK7YFfxmc+QJTkZ5hIbz4ok+OUwx1yPuIhrXvMOXg+PtXDeYaifD44OAZN9K9+PhU01DV0IoI+bRG7xPxMgz7ndNQqFTKEPqyGuA1R1Xg+M6jj9na5Zj4hOZJxzI1RPtZWcelYw1E+CbHVpDqdTj7z5Dfkc15CPjoRP7RXwEU++7au6XzGUT7Ge6RanQZiPlDiBSBg2nA+wLxCGoAzez5dLDgT2G2CPmgJPGHiMIk+JOsCmDvTjz5M435//LWTPiMeR/JrjZQ+EY5jkTLlkT6TQCXIzz6MPlsYWJ76KIU+pbPttJWtdz6SKvBLArlOPoKpQMFtayI+sj2FDCXxIz5Xsc0Wc3Q2PtDRqexp4EQ+wbiskXw1Pz7PBmaUEVsvPnaUzMmGxEI+rRN1KvcwOz7K7gFRDHBYPvOMwsSvxFg+4kS5A8zFXT5Zc8jRYv1lPmHLoikrCXI+ZfV2CDVNfz7ZEX+tVJ2FPtp+l4NFL4w+hw7vPBCqjT4THJwA7LiFPsSjiFA1A28+mppo8sBIYT6VkXmriq9jPudyX3/GBFs+1C/n7pj/WT4HbhdNOS1YPnwpw19NRl8+rhvjRXA2YD5GG2WM3WJaPjgu8XQrzVU+Rep6d0GFVT6tTNjAyPdGPv+AjfC2VEk+GNF4kEEJXj7AE6js9mJXPjpxQ6dzflM+SxzBPKyJVj4obHC0YqhXPnZMRP8tiVA+7+P7jFTpUT6oFGmZdh1XPvArOvZEeWU+mEvXOJ52bT5T5OBh/gh0PqQjYMiU2Hk+82bixoryfj48ghysRMh8PrbhwnyTe3k+UzdIKVdtcz5jF+6TKzRqPoNfriWu2GI+pvGlSvm4UD5HH+Sk2RFFPvbHqmRaSEM+tPpN0xcNTz7C77tSS5pHPljMgjvdnEo+uklyHh08Mj6sRx/hJlxQPrzuA8/JBFI+XrKf0NZ2QD7xpDaFk+NRPilYe0N9gFQ+xwXyr+uRXD7upv/h3ftmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1352\"},\"selection_policy\":{\"id\":\"1351\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"riPlDYRONT4qVE9ETHNCPq3cY/u8UD4+S4DBZK0+Rj7GhHhHYXhDPsfQSaghgUg+5Dy8aGcRST7NelVmHsdGPlMlBD0ifVM+hp4droTZXD5nXZvZNrpiPmUHm638gWk+b3OZFcOccD4jACI30VtyPp5AxYtjbnc+cqlJRWvhej58iUTh9Sl/PitSIb8hxoE+YZYKkbg/gz7Vuz3WNeqDPo3IThDUdHg+GPotu3+dZj6mM7QGqVZRPqKe0S8MNVU+LOlj47lkUj6uCh5cOfBCPuOLohC/uEI+Y3alDpKFUT71yQ0gqyZiPucXoaOPTHA+9VObEjKKez739Kn4ur2CPos8ktldEok+0fvQS7q1jz6cA3WQgaeTPrs3QWiav5Q+eJeNj+PUkT4YFIuwyoOLPrkpAIet5oQ+RajSY+aZdj6hL4x5TfJMPnJJb7xhLSs+KS8odadEFj6yT6DZMMo2PothTwZH3zY+qz3a/Ua7RT7R0XmyqJtGPsAsJggOpUE+O1kOVeOXNT4SUI5JkbJXPgLv5j9xP1o+bI3Svl35Wj4X3oEJXrlpPisDXIxw2HE+1WBX36IRfz7ZoqOIQRyGPmB+QScPQow+D66sbZJ2jj7pcM5YrEaGPgLdVH7W/Ww+InJfrXrXXj7ihVESgSVkPjFMk8+qnmA+h1IJM7PeWT6wh7yZS3lVPjSfQeJVCWA++FbajmNRXz5ggU60h1JZPqAYO5qTk08+xIv8BUwtUz5IxhmTKn81PgasFxdIl0k+7H5VfoOxUT5Zd6s+l/JYPo49L+DWQVY+1bz3HYA9WT6CvllkYI1SPm0CORu8u1A+gQsLL84PVT6Sa+VuqDNbPgjTSrFwA2c+caOnixBTaT7tKER6MI90PitezL8r1Ho+crx1uiTvfT7dreWsE3t9PkyBj07Ds3k+81vtoXV2cj7VbRg5xIdsPsm3ApX862M+zNfwNNiGUz7Hgej/7CFHPuTFo8jcezw+nloYzadETD5JP10G/QNEPjYMsBLBHEU+QmAk+rIGSj5U9CTpIFhGPswmt5KCi0Q+kN9CC5A6Uz4IQkSk4SpXPrwB5XoPzGI+8PvnBknOYD5r/QavP39dPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1362\"},\"selection_policy\":{\"id\":\"1361\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1327\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"4Q44BS96OD57Jd1HhChIPjvregA5+zk+iImj2Ci1Qj5wSaq3c3JEPr5N9PkcW1A+Rcd8N73MSz5IG6fw2jVPPrvakKyI81A+20iLWizFVz6z6R0QfYxjPuxOp4Jp1Wg+aq6dpIgvcD6uz6aLzJtyPiv1jpAO5ng+oA6aUWiSez5z0pv6Oo1/PmXyNZoBr4E+t7tXX2aTgz75PL9K/LyDPiENYez5Fnk+u2M8wkoRZj41ykc5M8dKPk1R0d9j0VI+tJmaVLOyTj55IB0X4P5APgULzNOsOUU+yXlQEEHVUD61QQQ30wxjPkT+POU453A+sRVWKphjez5mmwX4U5iCPo0xq6NDUIk+1ecTphO4jz4GEMohObGTPuALcGzXxZQ+CWGHqyvwkT4E7KjMOB6MProT2N39toQ+nAiWCQcWdz4aWAAf+wZQPrJgKIwsZCE+upsJ6+m8Hz4BthdrQacwPq75YNZoEj4+otPjivVtRT43OjB5vV9CPl/bUTYZqjk+3QGY1tysRj4RjNiuTz9XPuHP6ksIA10+MmWaZ5pBWz4lMeaSqgRqPgzfQx1Av3E+rR1/8yXefj6G/REhfB6GPvxB0OvNQYw+ej0xSSfKjT6y/9Z6j/KFPrfTQtKFpW0+Knk/4koYYj46lQT4FPRhPgfJfNEcJF8+EH7R4SGnWD6Atfwg0BRaPlvhck/qfl0+MkyhD9DqYD6VePiKdipaPvxcR1m0uE4+EI5eAhz3UT5daj18LBFFPkcg0dXVvUw+v0DicxkvVj4WmDMzYdlWPpw5sPO6+VU+jkWEgD8YXj4UAXkFUmVWPo1OhaIqqjo+1UEUvtUpTT71rcMRzVtdPvswJuDr9Go+m7T7jvZ+bz7blN5ouzF0PoLHoyFRPnk+VMOvRLAxfz64GO0JLcJ8PpdVmMM+5ng+ERvhyU+hcj7SoV8ZaclqPs0x6mfqI2c+jqqe3TaHTz4ckpNCyHlEPoZdB2388kU+M6aQRVqKRj5TpZ0w3iNPPkDdpUIxQkM+wWmfLokNRD4Stwf/bwZQPkrwH7aMxVE+PybRAME1UD6xjlJ+rQlZPqc/hCuQcVg+0q8kq0J6ZD5VP0uQLS1hPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1354\"},\"selection_policy\":{\"id\":\"1353\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XHcWmH9iOT7+KCMQfKs2PouuSmBJGDI++kxhZRXcQD69LvzqBTFKPip96emw0k4+z/fC4Bl8Sz7+WfAEMexHPq1sfn40iVc+NeN7p7a/WT69+3SaBVthPiMTEjzwqWk+U6WQK9a2cD6+eyThQktzPizBM6L7bnc+MlKQHSX4ez5etfJ0tp1+Pp4f0e0r14E+iUb6ZBMsgz7s6pmL5DqDPlzPjIZ1P3k+83cNmz7eZj6hvPE5811RPjtQ2ZbM0VE+YFkrJiXBRj6l2GgrUsFDPkgWuo+NsUc+dn8qkwAXUz4MScbsmt1hPqoQNz1bqnA+HHSrJOboeT6cIQYHqtuCPg0nxLIn/og+QBPedb/0jz7QPHBYZa+TPjRjPgZY0ZQ+FVv/EFD/kT75uqRF+eiLPteUD47d2oQ+r18lYR7zdj7PXk8jwqdQPpbrGwm2cAo+PBbRdWeDLD4+ekgJUPA8PkFacljyCkA+g7oLot5JPD4le+JO1f8+Pm9v+1eA9kA+AbapWCNASj6uqsA8hz9ZPt1o0rZuE1w+8KECrj4xWj4X0EMvNeRpPkYBbt2sinE+DhDWCiYNfz74C4/Tvx6GPlaFoYOAW4w+jm3vZk3NjT7zAsf0TjuGPgm1DmdttG4+DWm6BB9oYT5MXLCEZ+pjPvLUV22TwF4+nqNI1IV+Wj6yOoKSm2FUPlJCokLJA14+AacsNfcUYT7E6maL2SNWPsq39V6LK1U+Kxr7AnNzUD4GHSfwxpk8PpPdAJ8KkEs+3VKJ2phSUT6YvLLo3UFZPo2+AnPJa0A+mzdN/DSSVz4bCAMnGstNPgCdRKJtHUk+z016GRajUz5Wds+dLGJZPkP5VaovgGY+j8MYzWwdbD7YLQjf5oF0PiP8dD6aR3o+HI1MuvqRfT4X++l1MON8PgJ2033VVXo+4KtywLcocz4hvXfWSDlrPjWwJBMzcmQ+K+ofZc0+Uj5MdxUxwJdDPjv6ey39JEI+B9SXqH5PRj4n92RMb9RCPs2toUCy8kw+p40iac7MPT6bV1skc1NEPrWcskmmfko+oo+E2XTRTj7FjP/5vF9VPs1yM3iAsls+uPtU53O7ZT4KHq0MAs1wPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1366\"},\"selection_policy\":{\"id\":\"1365\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1324\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wud2RNifQT6E7lSrDEg8PkSPszw3Uzk+hfwn+BNwRT6xRSJ7n4RCPhL5CQC0Lkg+ELAmHFwITj6gSuAB415HPtz/s9ARJVE+nj4CNK0pXD70al7UEwxiPrsoz6bc+mo+pS9TONeAbz6DIhrgKShyPk8pZCT/M3c+Tz+Ntk9mfD5jxDRw0Kh/PlymEcrL0YE+SC8qVq9kgz5zSFruOQmEPmrJdNsDFHk+QUzqW/S4Zz6HzWrYUwtPPvcGOL+U+FM+E89wsAFYSz63pBmOwnBFPrwDKK40OD8+vVCGv10VTT49XXxpRYZhPoi1N8Tmr3A+GYAnoEAZez6Zd5bSUXeCPrWfqJV6W4k+3hAM3PKwjz4Gj1U+o7iTPkEu4Kxhy5Q+EBRVYiS/kT5DoPIIrqiLPlCgXnHaroQ+4PRCufZ7dj5FIixHxYZQPpfFyekolig+r8pRBc2cOD7nLIAGnfhDPhe3eRMa0zQ+m7WH6M+ERj75a+87ELY9PtLGrs//Oz0+nZyYEyOaQj7EmauORZxRPh0jSkXDBF8+hnVfq5f5XT5/tZXENGZmPjFLsCrwCnI+8uM/KHatfj4oMSEQHE2FPkByPZy2Z4w+9RtgMDSwjj5FDewp3jOFPqz1PDly7ms+ACfy89VbYj4kfiW//vViPlmr53gf5lw+DgRzAMmMWz6QWONXAHtaPliZNjdOLV0+w5rdBQyYYD5LXy5hqc1YPgehLKn8rlU+p62PHHLyWT4VOEDW9PpNPlzvGzeapUY+Rhg+dF8kSD6BRy6a6+xNPl2cGeQDI04+fq9rBMk/WT6PnSa7SHZaPrxiLUFiK0k+YK0cSf3VTT6b3V7mQZxRPmafaWpKymo+u63xuR1/bj55QHn4EsN0PslvbHAlOng+/JgiSB/JfT52nKhwU7t8PgESqk1qUnk+G2w+K+LTcz71z/we+r9rPu5BewNXmmU+gK/uLW7/UT5PbppANr05Ptv6SbiCeUc+Q/HU8CG7Sj6X1Hn+miY+PtelfMuxekk+tIRkxfNrRj4ys1hGryBAPmN+7SX0uFE+/ajEV2WHWj6vhzNCaApgPiCxq//m3VI+swQVRH8YXz6wNVXDf5VoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1342\"},\"selection_policy\":{\"id\":\"1341\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lAnNcozEND41a1M4tN1CPpyOmGaIkDY+B/dtnsV4ST7mi4mOP1VHPqMfBN9gHkk+Wx3Kj0luTT5rcPDkeSpHPmwbqZVPMFM+uH0vEvSQWj5KWmO04aJiPuYDrmY8bmg+7rRjYmqHbz5n9zIwhHdzPoBpaLMPRXg+a3H5//JVfD5ozv+PZKJ/Pk9guBWx+IE+8DISNRoqgz6zWF5VcmGDPg1+0mdf0Hg+9Vc2qkBZZj5OlUYvW01RPobrpvgZKlQ+mZIglTi8ST6gHL6ezEJIPjVfoLvOXEU+89LRk93ySj6TMZiN/3RiPq8ZI1qQjXA+IV9ovUmdej5zndopyZqCPvE97ZNqjok+8pKejKkTkD63T57PmaiTPn9BuLNFu5Q+K/9hvyTKkT6lS6lx/6qLPv1/HKhCEoU+RwEg3cpgdz7xW39bNbpNPj+kSHJCxxc+at+bIB84NT7iMBr938MxPu3a8x8fCUk+EjOpgoF3Pj73Mw5CAHsxPtuLvjIvYUM+tHmMwCYbRj6pyKsaGG1QPthrEN0RnVs+hvuah91hXD6GH66A3utlPotywU37IXE+7t7J6N1Dfz4sFnhETXmFPn2pQai9XYw+dhkIfTaQjT6Rbf4wbXaFPol241rdmmo+ND9FpQ/lYD54sPe8cIBhPkoWy9/POGI+pz8Npd+AWz616/r+I9JaPss4B4NMVmA+5JUhqZalZD4qOjGyjgRZPkOAsZ3iO0o+B22zQwm0Tj4QAXlFHuhCPtViX0LnFEk+/zvktoS9Rj4H4KoW2+lYPmu+44k9hlg+Zx7j1ac5Wj4ihyVBrCVbPmcSbSmkmVU+ieWWEHQ4Tz4Oolnf5lFYPko1FddvUWo+68Fmw17faz5d4LwW3BVzPs6PxtDuH3s+M0gX6c/PfT5qbwt24D9+PvzJ8bbeXno+FrgsUSXtcj57i+VEmTlrPgA97/GVRGc+zCZREmdYUT67piWauPdHPjfwfFCzfkI+YKsuVatBQj5R6mOia21EPvwvUZbEqkU+StjGVLNtST5+ewh1vZJIPpJtrl7+z0c+YQ4mdh1zUD6CoAhfZIldPij+fYyIkms+caapnGQcYT5FzbzihMxvPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1360\"},\"selection_policy\":{\"id\":\"1359\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6AFYpMp0NT5R66H+tERCPnrMD0cMnTQ+G5CvRrIRRT4j7d+5a7lBPkGIi1GWGEM+aCJKsei3Tj6CKee31uJFPvKjh+Q6i1M+f0SauubuWT5AGGqI+j1kPk4tlZyTHmk+fToSAh0KcD42Ik96mo9yPoNu7uXNS3g+B/caiv11ez6LsfmklfF+PjpLUnew9YE+tLzCwqergz5BdkSt2LSDPjYHGPIj5Hc+wkwHEenOZj6c0kjA9b1MPm8hpuZpZlQ+zmo4blPETz4sx9M0yTpDPtbiYlh2K0M+Lk4teoT9Tz4HDuO0oV5iPm8RvT5O0nA+tsIDctNrej4QxkGzApuCPmx+Js6gP4k+oew6Dzz0jz6KNVTKdrWTPlDgXw49spQ+J0f4LmL3kT6lRNcNWjGMPpixu5n5sIQ+YgnTkPAKdj6b8oJFDj9RPlgByYm1SxE+59Snduj6ID5RISUXzlk2PpPHk6uXV0M+byY6QUdcRz4AHE52lz8yPseXxcW9TkE+/N3kCqcoQD7BiBGep1RUPsrkuxA+y18+dUtoOw+iXD5NWOVGL5JnPjLnQMcgeXE+1I3TirykfT4Dv3/9ErqFPuKW+ekgZIw+mo1LqO5hjj7h+zcSpceFPuTfoBtZC2s+479qTb4gXj7DnIIOjlhgPrWLAOzhX2I+/8aQ4rJ/WT6FLVw8wW1ZPh8kHfupdl4+hAtCL92IYT7+zWwzR6RVPkpFOTfEtVc+5Qrchu/rUz5VuC0kLhFBPmuHCVR6ikM+y/PfEJ9vUT7GxL2JrPlIPjggWpWTeVA+MtM6HdgbXT7YicvCRzpPPq4C+o+jLEg+1fgRYkJtTj7i/UZN78dcPrFrHKAvW2s+xMQq3kokbD7Z5ojOkq9yPp5RkvUJAHs+fxSEztMYfj6e9QKJsoZ9PqzbqNz003k+He6UxLU5cj6GY4XA04BpPh3QeVzST2g+PPjtTIt6UD5vKaidVwRIPg3k1ht1+T8+B2kh5wM6PT64GFnnFLhJPvWAsHqJdEI+ec3PbQU1RD53JZp4mUdRPs66J/d+2VA+6tiCjhoKVj5fJZpfCr9LPm1Mzv3VBVk+1kMDfcP1Zj76Y83pGZtqPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1356\"},\"selection_policy\":{\"id\":\"1355\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"3hq0/0oLPT6RtbRY71lDPpIDu9Ffbzk+CWTWn1ZMRD6bBsKlup5EPg8JGLZ4GEw+eWMQh+0RST5n9IY8Kb0/PoBI+PQ1VlE+8KzRQQdgWz6SlNpi+9hgPp+2w6Dd8Go+VV5p/V6jbz7p8Qb+uLVyPrOFlwtc5Hc+h8aZ/zAaez6fdRanM3x+PvnANjG644E+jtoBMXFcgz7bnsdsd96DPh8c9Uk6CXk+gFBmqdd9ZT5FHyFp0dpPPl6ePngSTVQ+3L1DFMA8UD5elQYacnJCPh+kH57NQ0w+DKASCbx7UD4feX8yNxFiPv9oOoRklXA+JrXkDLfoej5kU/adUY+CPuTMel4zDok+qyTAJde5jz74a153a42TPl/HoOve5JQ+WZOjJnL4kT4G0X1bLTuMPn2tYA9zT4Q+UQMUrS/Rdj6BFzJm+ZBRPqHfN5sG+DE+hY84HnlNJz5AIVxsa5M0Pg0Gz8KHpEQ+gAoBrN/xQT7T84uqb/cyPq/34tRWaDU+qygxtKD+QD60eY9Nu2hYPmKVf5ntGlo+Q+ajdPvbWz4FUqV+DmljPtfppTcvFXI+veBHE14kfj5mXt/vYWmFPrO6mN5tDow+lW39qxJfjj7Xt27Ib2OGPhBipN57ZG0+ATSwPL54Xz6fGai9ykZiPgjo0qEIXl4+aS1ynpOZXD7J9koRy1FYPmmqD/k9wF8+dyKbzuL7YT5Ztzj1nSdYPicOwA2W91A+//KN5P0bVz7g5Lupz3pBPhVWMuP4DUE+1+szJaP+Tz77fAyOmexRPst22897ZUw+YoN/ZRO0YD4GZkr/LbVWPip/auAARkM+/Pxrwli5Sz7cfKPOeR5YPglzpWmsdmY+KZv1aKSLaz61FLxJ5tpzPv1Fz5Cep3o+zBxx+/zNfj6FgifYPSJ9PoLgdSm3sHk+l8dcGzFOcz6HD/i71IpsPgHzggNnCGU+F0Sbkw35UT7HEH1hzNNDPsL1XWo02UE++B4ISAn2UD5Xxi0dK51IPvQifQOgJ1A+PA6qqGBuTD6xWa3dneBLPliXzUDsoFU+tu89DFCSUT6R63vUsnBTPhaeruUEZGE+moZyIuwkWD6dwN0YouFmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1338\"},\"selection_policy\":{\"id\":\"1337\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GK1ScpcpPz6NqmY0Z086Pvi+CUevJDk+i53jqQNiSD7Lc7QfXE9GPqJQ5udwJVA+/8PVC9BbTj47hiSrTnlIPtcjm1hFj1U+1Sgku21zWT5Z80FbpCxiPlDRtVftTGk+AnFJL5hQcD5BMcG02epyPiGqaI4RNXg+YMt5sXpQfD7yAvb9zXR/PmorguZ6KII+TcexE9yEgz5xJFZFRh+EPjA2A65+GHk+VqCJxRT6Zj4q8rvswVNRPqmovxg6WFU+ElmzgLWsTz6DWpb+YbdDPt1//Qb2gUU+4ohBm9MMTz7pXrx4nrthPkKOW7NENXE+pltAwW5Rej6YPRrI8yeCPiTCu2o/F4k+LxXRmfPXjz5RNLHTU7iTPqPbcK7t+JQ+5Ug8zgO7kT6epHb+WO+LPoMBGb6sm4Q+cMIQq+Bbdz5n+bSrclZQPgwzzi91ESM+GfDwNIpjHT5A4ZY1iz8dPuYUNcsSOjY+3IeoT4lyRT7Jaf7EiQY+PrhJUDiQLDA+ABcY1sG4Pz5ZomLfnHhTPs6TSrI+81o+q4I3dexUWj4/HdI0Z4FmPmbsPnck5XE+JSq0iZTEfT6cspKa/mGFPo6N/tTUuYs+uIOfVfnujT4c2QqbQdCFPsEKLojONm0+lGb2SVUrYD5VrPmiHk5gPnNhTgYS7lw+G46fB+7FVj5AARa9NK1XPshOSdwHH2A+llb/6WTNYT6IfS93GxZZPv4E5MFl0lk+AY/wkPh5Uj7ZpSWP2l9LPrTtMzGe+VI+FGH7mlLrUD7lQrBvY2BZPlO934zaQVQ+7rG87HUPVj7iA2qK37FRPgHIr5sBm1M+9BF6EzimTz68GBhtk/pePgAJG4HnrGk+LHNN8CQHbj7bDlE0B+lyPh5rAVtrFHs+CCnlhEn2fT6mQ7eoTrR9PpPu5r+gsHk+yhJyUTVRcz4BbE1+mEJsPlbOG7wb6mc+wTnsvhntTj7qDq7MeDtLPpjNgpcI60c+zB+mF2LVSD5DYbW9s/hAPgqUMcLEjEg+cdX66ClZTD5qSvFVGRxFPjwM9dS300w+EaiFQCviWD7XKh6J1AFYPlniIoJZFGA+JQ7pwL+wYD5mX9Avt+VuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1348\"},\"selection_policy\":{\"id\":\"1347\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"63WdCvctQj6bfe9BLKZAPtukqm5jjkE+nUFefs3rQj4m6mmvFTlDPqOiGdpVC04+msQqwThDSj7D+gv3a8FNPmj3CJemmVI+9uVS9XgXWD4tdXesP+phPg0cZFxWjmg+MK+2SXLqbj7iKVF8PMJxPpYB0o9oOXg+iqt5uBG0fD7bYeab/Jl/Pss65OGz5oE+vjgsfE2ngz7kxO2qZ8qDPgI5dLDssHg+TQ48nPkxZj7bWgRk2g9QPkfhmocLyFM+6k4fFhJLTj4JDxn60P85PrXGiPwE8kU+r3ctZhW6Uj7y5GF8iB1iPmb/tjKN1XA+bZ22g6PCej5vg9FNhaiCPl9X+eBNBok+9WJrWya7jz7yFqlR3baTPoDUlldptZQ+ufvVMVAHkj7IR8l8cM2LPpz7FGJoo4Q+bJmviZgHdz6Ke+luu2BQPt0ilVRE9gY+Qm2jKcyqND4srCWlwlgxPi8flJqn/zk+UZiZh0oNSD5mnjNmTJ4xPopnUMfv5y4+2Z4zeiwpPz5LZ1NOhx1UPpbmTcinblw+nz3Un3FCWj4EbNnCvIdnPlcbuGAV1nI+CXZdqRUFgD7k38/ZfDuGPh2JZ+BhyYs+YVcrNSDxjj7omdHBwnKGPnaLzWW5xGw+PV0g6iOzYD4bTM2qgr1hPk6KUr9A01o+ufK0hKGuWD4gyUy5C31ZPt81wNSJFWE+3YgrmEgYYD4ibhc0dNtWPuZRtDPS300+7dOOHh6CUz4puZyfXwRSPgga2WD1I0I+d+BMgJoPUj4kckqd8mtQPvgUvyw3X04+5XC+luVmXD58hgn62xdYPi8X2zFWwEo+sIPS8r+/Vz6BrI2EeWxXPn/YHGI3RGg+5QfT5P0Bbj74F6Vl9I1zPqyy11XhjHo+bA4J0kQSfj5mqPC8Ga19Ph26Pyw6l3k+OXK9YJSgcz58auex861pPgoAriyogWM+K1snLEFVUD4XTT/URsw+PiskiV22XD8+4qNdrBTQTT6wLdpZkNVJPiqc+UG1YEI+tEOtX/eWST71tD0U2EZGPo81tNT7KVE+Wp+uSWq2RT4cUG38CM1YPpAhaJ3YJ2I+8x+VEDWMYz4FiBWx0rZwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1390\"},\"selection_policy\":{\"id\":\"1389\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GBH3IJrqPj59z9mKR0NEPiWoM7ZuVT4+ApPlGIfXSD4D6vaVuD5JPoAews53hUs+P3iKIhU2UD6+Yt6yFllHPo6zGAIx/FU+ARl1LgleWz5Zo1W0p89iPn5yYYpkY2k+9unTCyqvbz6T1su4vQ5yPnPuukM2/Xc+MI49GXjLez4tpE2GV4R/PktVML4184E+HlVL5T+lgz5G6jcR4n6DPk95UT47cXg+AmW5ZpgzZj6RW7hSZ6hNPu41UnZhx1E+JNaINzL2Tj7o62gE+iJCPqtT7u1AmEc+ptFytC7nUj4JwjGKGfxhPsDVyqQZN3A+YRAzEeIbez7rD4AA1bWCPi0yXJ0hFIk++wMLk7qxjz7mZEQufriTPoxkUkPoqpQ+jjkfd/sdkj78/+BV5d+LPoyZbaaO74Q+ylu7OL8Edz5mtvnkolNOPpFQ1QPPJx4+CVVOmzJ7NT6pfKpgIOxGPq1Wgqqk1jY+BviPTI5KPD5YkPCCuaA1PgVQDjOcIEU+bxM5xJ3iOT5Tq2pMb95WPi3gfzBUHV4+q/Rwf1k3Wj5z/G1Xjg9pPozGm39NJHI+NbQO5RIffj5xT5wjPP6FPmIQ5OwEp4w+qCumhAVVjj7otDPLTUWGPlRBPRugeW4+2kUBCxSXYj5TMVKO8SZiPt0QrTBmZlw+4hknyQU/XT5bv+gkrXFaPnue7ztfRWA+N6ZndwX9YT4ezEwrefFTPtOxfkhmPVo+1tS1MZxiVz7XlmXuAo5EPqP66XGUJ0M+YlA6wepOTT4w//0R7wFWPgCi65c4nFs+2vP+n8R9Vj68yObk02BYPueE9pS5a1I+eQKXJykOTz5dQkdmUZNaPr3gxAFcfWg+eyhmjYYcbj68e4Xh8WdzPmFlMVuW43k+KtQ/BPlKfj5ShU2F09t8PsGXACQlpHg+znYvOm6gcz5lJe3VHe9qPrGcfk18g2Q+PlAeRnT7Tj68NwxzoqQ9Pod1Q6vSsjo+DkZDiHHvQz6kFQRaTOBMPu4Ezgx0yEs+wxUnOLrOUj7o7X3yO1hIPiWygvTq10M+4/pIuu8eUz4Q30/MF4RbPgxaqyGuoVY+aseXGASKWD5HYn6sfvxuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1370\"},\"selection_policy\":{\"id\":\"1369\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BjjlqXMbPD5ubmj+zdk/PnqOvFp8qzk+7MWP/vOYSD6T+9vx5iNDPmGBMxeLQUU+8LU5C8qmSD5swrnO3WtNPgY1nBtBgVM+/1xRKjbFWD4ekvRDo89iPppmDcL5dWk+Car8ZliFbz5C0Y/v65pzPq5iOqBEaXg+J8+N6D+aez6Eh4JJqRp/Pgn7Td8T34E+Lyws70+8gz76/IbL4wiEPiubQdrGvHg+wO8K/0S9ZT7ZzVLAS21QPkmNAs+26VE+EetDBQsATz6Y/19iJVJGPjDDfkHfqUk+LGeNNBY7Uj6BiC2NWgFjPqeDhiQ7hnA+TdYE0zqbej7D6rFYhsKCPpMoAMF17og+Q9EHIJ36jz75S9kXZ7KTPtTetmBitJQ+VbZKzmfSkT4FP6nz7bOLPqZgOB3SBYU+BvUTqDtkdj6kZm2sgL5RPmGiOuZtbyM+9rNQEzX8MD7/RVXYZ7gnPjQDF9+czDk+PuX6V1b/Oj5Xyl6pf7w8PiyeS/mTQ0E+L67uOY5EPz7YV5b7NXNWPrBDkfknMV0+AohyFvIvXj6/OasIHk9oPgNKYkXMxHE+yTw7yKE7fj4+KguFzfSFPg3eSU+EWYw+NcnO9zlBjj6e/z+FqemFPkJVl5OQOnA+2ZU+n2Y8YT5W0UAnvUthPhVcZewE6Vk+X+1XZJ3ZXT4eeEDWpP5XPlaGKre0PmA+1GHX5BM6XD62PREe2UhbPo5cVR8jHFU+LWHAvzxSTj4dTbkp/YE4PlWxJkBSbUY+7KPbEFhYTT5T6Reg2MRTPiZBK08pI1I+rYx6onb+Wj7zGkC3XyVUPvmrBN1tG0s+Cb+s1QcaUD5Gvbus4sVUPnmaJr/kTGY+3KKhvIs/az7rU7A6ypd0PhCJ3hM1A3o+LNy5NA3VfT7qv5rAF7d9PjtKL6tS23g+QG7vE9Zrcj7m3QQD359qPpljPmdPkWc+q/JQjstTTj5BDWm9wiZHPk9gdGl5Lj4+2Sut2WIpUD5ZgoVjfMNKPuXJMavL6lA+ocA1gHs0RT6SE0uhfkxKPr/4Y90HlU0+//P6SBOGVj4MKJ44ZpBYPgRT0lZXuWM+FsPWIklFYT4Zf1dBQOpwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1336\"},\"selection_policy\":{\"id\":\"1335\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"ticker\":null},\"id\":\"1326\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"E1GeN6t0Nj5wrcEf1kFCPsKkpLO4QkI+5nS90KimRT65F3+A2+xGPr2EIgqkIkY+wePaqCmXST4DDdNz7K9LPnR5ALJz5lI+7XGKEoElWD4r68Dy3w9jPi+xHhf7dmo+pCIp+WofcD6nzdzW8MVyPnJDnN577Xg+o5X+EC0HfD4Hter9P0B/PmLAMqWrxYE+9AohGJq0gz6XhJc/aLyDPg1JrXm1Q3g+Qb4Ryui+Zj6Qqxd520JRPuyM9dkpq1M+xVbzrO5kTz678b/qdsVEPufxDeo83EU+oSB5iUYqTT6p24yt0i5hPngE1AwyX3E+wCLmuWISez6jj7FiysyCPj081eXZZYk+ExNco9ztjz4dz0bIccaTPrurJp//l5Q+7e8LWQvkkT5DcJ37YdGLPkGiOLSQ74Q+kW254SfVdj4RE7hZ+H9QPodcaHg5RDA+OQqjJK8tNz77s//mSIY7PhIFipv5uDs+vB9Ul+cUQj5kmT7qP64nPluPrQMAdUI+OzAqjNCgMj4eiVbEkSxUPt6VIojiWVk+h1xXkDwaYD7RlZR8J2pnPsqmX14+5XE+FMGSApN3fT6sMuGLBoGFPszuIqVXMYw+7QA5l5bsjT62W8CuhTiGPrq14YexKG4+bQBWHrrIYj7FdOWF9v5hPk1jFTIKo10+n/aYi8v5WD6n9b6CovBWPucVCK30g10+lCJfs6s0Yj4dnLZq2w5aPlCiLFGPRFM+N97oAbByUD7XOLk2dJ5KPjy+OIv9NlE+6KBEUQubUz6+y7ZmL0BRPpKEDvr0O0k+ldNsMFYzYD7mPUuoJrdWPhRfp5lKy0U+BL3AujxXVT7NwgqZPWFVPvfr4xSjoWc+7WaE5i3tbT5Hr0NUJpVxPniGLSWW6Hg+pSnGA0OCfj4Bp1EXFWp9PirW7yt9JHk+Rw6nQOaMcj7ftSb9sUpsPhVzRTyMomU+gyCWuLGkUj7FXL9B7DNBPmu48YlJxzo+AxablBImRT7HKfCDkkxBPgksEH8vOEQ+sdpYv2moRz6fywZg+pBEPsMqBXJRHUY+oGtt9UTxUT6eHq9x2glcPo1x8fCErVk+UYW4Zc9PZT6lIcwEyJ1tPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1350\"},\"selection_policy\":{\"id\":\"1349\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1329\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"HA0IJMagNT76TWS9UOZFPi2/d+0jazk+E+biBXKWST5i4g3cv+lKPriCrkrnt0Y+/2VooMiZUD7o/teYMK5HPgYunQRvw1U+0NQD9kUXWj7W6pkMbGlkPmw0BrIBJmo+HocXy2ZFcD5ct91z7khyPnWZTmQ/D3k+vNQufXB1fD665dLBI7N+PsDCwujfoIE+20LjtFtTgz4RxNdCf6yDPoSGo36ZA3k+aG7Q97imZj7Et1AKKJlRPiFxLHA4rlI+yIj8U5JXTz7/tzN2aNVHPo5k+XBjKEY+SPEWzT/0UD72NgaqhLJhPl6Ri6D3RHE+8mYID/UDej6UC3Yl/YqCPn75lXlpXok+Aztxs1+fjz6E9W9F59qTPshDdTCKBJU+xkSkLA+0kT6h3SKM/0aMPhPYDXk514Q+qs6pcYovdz5ZrIfdPx9NPuVvVoPZYhw+HslIt0HwFD7uNBu2lQAjPogKXVcYaDM+QhUyU25COD6xy8zLodgtPh9Vs/IsPTs+XwSOYssQQT6WAdK5heFVPqGWeKNWK1o+1ehipHv4Xj7vhJwVR51nPomZPA3UYXI+tbiKJ9GMfz4m85Ed552FPn61BOSHi4w+EBOkRoUZjj5oHFtcTT+GPsTQrSvfqGs++7Z9K7U0Yz58HLKnQE1hPlptJKksrVk+AFpChCFrWT7+INqHztFXPkrgh4t0NmI+O/QGtPtwYT7gHQYDY+VWPlCrsJxLjVQ+6UzTUxwzUj7JV14eVWQ/Pid3B/TNkUo+i814z8lPVD6YL5J9oSRTPoVgQrNja1I+4R7nCtV8XD6VfQZb5phRPkdVqnroM0U+MaGbi91mUT4R/92zuTJdPlyFIFIp+mg+a5P0w1JYaz4eClw4FvhyPqYXOFLb9ns+2BVncuMAfj792sTlwaF8Pu6BtIXj6Hk+VOzx0gIXcz4gsa4+y49pPu6wq+AotmU+U1JxBv6oUT66/nmf9YFNPtuNMD07SkI+DeaUyNnKRz6sk34MBthEPjkANTNr0EM+vT9sf0SySj7WnU1jxmVJPjy/R+MYUlI+nG4idKQdWj7+YrvTO9pbPqIOrrGcoF4+tuwuhYMxSj6eupwYtS9WPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1358\"},\"selection_policy\":{\"id\":\"1357\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6pEZNaEIOD7PGtuFjXRAPsKYgHOTTiw+l73Ry3ftRT5eqjbHtjxEPpXCYAqLlU8+i13UIiqZUj6BmQCuYr1GPvv5IuvdlFQ+Z1oLdJtBWT67BIKX1RljPrzrQNDYm2k+cgKWI181bz5qmtBeOQFyPi6BNLASOnc+xE+ugVodfD5jHTz+VjF/PjRExQga/oE+kxwC851Jgz7bLjwcm9CDPuGLEJ6Zw3g+E+FF5ZFfZj78fvOCzo1QPhNbKZJZKlM+5ouaBhr1Tz6lm/Fm5/9CPnaU8+SsPkQ+OLz6Ql5mTz7A7Kan/w5iPot43PGrE3E+fGFa7F0rej4GKz8s4NKCPuHT7wlhRIk+2NLIyqLsjz6gxP/TBYSTPoKNoqph4pQ+7ftpQCF+kT5K387A4R2MPoHl1sCQ7oQ+2cVJTmY6dz4yLH3CkTtPPpIiDWB+/RU+DWg/0ReqLz4ojBqDdBc7PiIZfAoIskQ+aBZ0URkaOz5jYTSkYbcdPmVZA9xtADQ+tDpNatalRj7fLmFSwkRaPhG62P8cKlw++58cyQ3KXT4Ao0hUONZmPlsXAvqS1nE+PlVkNFKtfz7+YpKWedSFPqlkLqYgLYw+FWxGKaB1jj421igxcKGGPmLr3VlwPGw+nzzJsMYoYT4PPD488SFkPh3ZtCTAZV4+fiM5NGn9Wj4uxXbHVy5VPiPpvgzKFV0+F4gF5Sg2Yj6EwKVkhvhaPgp0KT4bmFI+Eyvo6NiMTz5wfayxydc6PmH7Bgh7JDo+FfGFtYzqVT4ohgrIoJdSPl9oribSHk8+qqWZrrlkWD5qaNguzhBXPohoHubl6js+LjoJdX2IUj4RvnJvgHdbPrwOrqGN8mo+GTald+9zbD58Kbcbneh0PqoDRyY5EHo+WbcFrhBFfT4nNDVFtMV8PlaLXDcQCns+Bc9deZa3dD5IPSnhM5RrPl1LAneU3GQ+w54PCOUJUT6rDYQAyvtEPiyTBZmgekA+KNosokhFUz6RpLEQsKJGPuU8CLlt6Uk+oRkfNHdPOz7vd6amZw9JPjarGFAi6VU+L2M2tNw8SD7j4UQ4iy1fPnTeqAvwH2E+bmkdIXFPbD5apwyqww9nPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1378\"},\"selection_policy\":{\"id\":\"1377\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1326\"},\"major_label_policy\":{\"id\":\"1324\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1390\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hNHT+EWBPj6d/Scu6AM9PiTceg6FHjY+I/6eSDU3Sj4A9IyC9s1DPozh3wo+PFA+/jtK5twPTj7xhnFZzMpGPqKr6VcSE1I+cW9yL1yjVj4wSRGXO2xiPmmfym0kj2g+lY56BQB1bz6YeypPzwFzPuYkTuSwt3c+jHeo+1xGez4DpGV+xvp+Pphk0E/7woE+MKCEpSFEgz7a6I6lyjuDPmSN87/6qng+NK5pwueyZj4VqqwB/NNRPp74De+8lk4+aLECIL+rUz6Nux1Sw2s7Psy8ieCw10k+35e8Dj/JTj41/cdbKK5hPh6sYyvRwnA+a9Yft7jNej4/cv6kqZGCPgymmKicAok+dE18kquljz5uykELpH6TPule0Cur9pQ++gNUG8zLkT5KKLQ83POLPmtZ2g8DcYQ+Rgv0afmndj48K+yJUghQPgEKtEmWoSE+hHVSXxpMOT7RR8iATZQ+Pqfw89ONmUQ+TMtjcqTOQj4MI5Q1iiw0Pg95aKp5M0A+Q1+BQIIlMz53PLkmbCtWPt51aoUptlk+u2il9UtdXT6TelaWndFnPkG7KcAz2XI+Jjacis1Tfz6nj5/2sIeFPg7UNTI7G4w+qNpRHMYVjj50+5oxrr+FPjf5iBo0gWs+U21Ffz9qYD6ZfFw3GkRhPrZ6gK66hF4+nr0D2NUOUz5wumME9zVYPvizcgPimV0+p7byBW81YD7F+QgdaCJWPtbliCTGHFE+MTXybybUUz564jLhLrpOPgV2iMMpfE0+S4QIlfMkSz4AAXR3mmdQPmnqzQ1aFFA+YPQtF5beWD7dc5vBk9JQPplCkJmOU04+gjasU1pOUj7NekkDdYJZPoKYsizlsWk+d71W9pOpaz7A5SxcIAlzPl2LgZQOHXo+4TCwd8sNfj61WMy8W7l8Pu85kgWpFXk+MH/3JObgcj7BAB57sf5qPrAfwRG0N2c+UH857enzSj7UOKCVSRZIPnuXjY13yjs+vMJUkNpZRz6Ih3r32QFSPgfbmiYHYkk+gGgNInFMUj6iHmvpWuFGPsOhOVyY/UU+9I2nJlCdVz72T9oa/PBUPtzDFSlhglY+N1ielGbaZT6WuFSF9JxoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1380\"},\"selection_policy\":{\"id\":\"1379\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"C3FwEShkOj6BHvIJcHpFPpxx9qLWAzg+rybX44V3Qz7lTcyGjGs5Plk9diak1lA+ge1CE/EQTT75iFHn7EZLPhKJTs1J01Q+rUfa2DzoWT4wFAopEZdiPnkZVyVzz2k+/8lMvmc8bz79FAkrAkdyPjGDF51FIng+/6/IOMKtfD5+YLlQbA9/PhOXlwyMw4E+xVQl65Bzgz7JL9rmVHqDPphuCqCiVHg+DKAtC+ZtZz4V8yXz3KJNPk/YcEQSKVE+Ir2zUFeaTD4KUfBg4XpDPhc2a1Oim0A+VVuanJ4sTj4T4wJkiHZiPvXCmVFVtXA+So3b3E7wej6cjmI+8JiCPuo8jeepcIk+meUYg0Lijz7TRM1WMoiTPl6Va6UMI5U+AKylWIfBkT6kv1iNi+mLPvG+aTQPqIQ+nZLZzuISdj7nD7DM4ENOPlPMKbnryio+LwvOJOt6OT5JhXNOJdA2Po+pm9lwy0E+ehmdryDLPj6wvtZtY7hAPn0E5tM3yTs+Bq2wOCmwMz7U85Y79KZaPlYc4R4vumE+O4YVrGPMXz464S6jkGdnPnchEuwMv3E+6i+6UEeifz77EQOSzo+FPoG6hMRoQIw+We6X1jqejj6h1b0wBjmFPg9mEtxoPWw+cH6hqWN6YD47k0ylKsBhPuQ5p33Q+F0+zaZUm4iAVj4RGm0s6VtYPh++LPQdj14+PaffN3ohYT7rTsnrn5tWPggONGaRJ1I+O0/7SXQfUj6gC4UuXDVEPh8vZYMojEo+nJ+1ZF3SUD6vfEgq6K9JPnKDc4HAP1A+GarxYHlZWT4h7Q0YrK1dPrLprxgANU0+zOpT/xfTST4OtzevKndYPqMCHz3D0W4+Z3iljIwSbT7aNwQ0qNNyPoDmry4j7Ho+UbSRVVQufT6wz+ROMbV9PgStME50qHk+sqhcNnNacz7/fF0GNFZpPq5yOlWbp2Y+QI1PsnUQUD4dx02QNT9HPvScGwOQxkY+OJIkXD9MQz48IBl6BHVKPtmStyl4cjY+K6Qv8rTsQj7soP1U/PpOPt3sAtVyalg+aZP+6J+ETj4OHrpXenFbPriMjA2jgVQ+gz5O6h/mWT4bCAGowHJvPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1382\"},\"selection_policy\":{\"id\":\"1381\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"P/aUji/wOj5eCL9X67JAPtwuQsDyfjo+UmAcoRGnSj4KagOX2mVCPs/GWC6tG0o+HTeTYX4XTj557hE6FoJCPjcQsTJTnFM+JooRBI6RWj7MAD/xOmpiPnFMKwpzqWo+CtOMFY2lcD7r+JBDRbJzPnWNj8p6MHc+7fb4763qez5SIr1Ynrp+Pq3ZkSJtB4I+mGOjCo+9gz7Fe6ljivCDPu+2kwGRl3g+PLrSliCNZz5wMn31eUJRPkQXQ+EiQFM+MSwlUwhySz76JuQrEmRIPtNwW1JmPEk+z+x/X4zmUD5Z5EaXx9ViPtzMJfi8YHA+iPxq9ZuAej77zYaN7q2CPh/rwRVCcok+dyVNKBPNjz6hit8pz2WTPuYvmfcKxZQ+KRDeVmPxkT5Fq0H6bAqMPqAvMxFi6oQ+U7ZLyzYedz5qZ7k3rlJMPtb7UGJfuiU+68O872izOD4u4FLu+IYnPg7MC8lL3kQ+B2sbNIm7Rz6RXtp+CkQgPvKrHmG38UA+x1FTS0QSPz4cG3V5f8hVPnyw6PP4mVk+sHxUiu4nWz7wAoAnfnBnPpoJ/PC0FnI+HY5HOrv1fz4g+NbWB7OFPq3tnRxmtYw+6CSBHA2Djj7MryeiN0GGPtpdy/CwcW0+2A65efYdYT5WCJ7zwVFjPrqEDQOmAl8+yET+o6BBWj5+MU3dH0NWPkb6fhoawF4+GCBBUSz8Xz445Oln9ThSPkaY+ffu/1Q+15ZIGBBEVT5x+BgI9PZAPvJfq1L4XUQ+U2ZeoA4hXz4BYosVbMVcPjrloOgqHVw+l0uF8KMEYD5xR/YcKHlfPnjngN7Fb1E+ATHiOj3VUD4fxXXnHw5ePmhic0pftWg+JdLoJUIWaz69OmY39610Pkdg9rw2i3o+aTLIhBUXfj4phqHC9sJ9PhwyTitRdno+YpcBWCPMcj6znAHoy+9sPlB3ZPJ5WmY+gFgj7rZ7VT6Q4e1pvNlCPlGDbI+BFj0+h9aozlzSUD6Q0p32tulIPjyG3dPHiEM+Uvj1PaRqSz6RriUl6VtJPoDrZYH7VlE+zAYcEmdsVj56Ar74U4tUPj4rHeQbDFo+q/4r6JClYj7vzKH21MVoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1364\"},\"selection_policy\":{\"id\":\"1363\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"n4alwMzvND6XPFQVWzBCPqpsRpXOCiw+z2FMlhSzST4m6nd0ar1BPpMnZGGZB08+42abQTujST5cpA5T45NDPs3ywDnF3lE+xDbycGZMWz5DzyIjM9BiPsFd3VXqR2o+7v1iY6gzcD7OeZHQ2JBzPq9FFM+yOXg+tT3dHCI4fD5IbBLlj6l+PnW0C93Pr4E+VYUfdCQ7gz5bCw18Jz+EPgKvBKuZE3k+bxNi1wn6Zz7HZt1OHQhMPmLVXMhznE4+qi7AgAVmUD4GGZGGqG9CPsjjhhbY30U+gTKX6eqrUT6uzn4N125iPt4cvSQZfnA+V+gE9nDmej6h9vkYyn6CPrVLYVst0Ig+XFKIFui3jz4P09nXJbOTPqa0Aeu18JQ+WfGREqoKkj4wFEUtGwmMPgJ6eYk5uIQ+1GXZyY2Cdz6r/JOHwCZQPoar6Oxk0RY+M/E+DVICMz4RbEieEes5PidUi8Lr/js+gIiiUIhmNz6AytpL+6RFPnsA1DKlw0A+M8uSpT4bQD6GQ/yZppNZPpFt7r4owVY+tdKoR9TLWz5Hu1hmgltoPsuXQVwm+HE+1wmFRQ6Efz7aZi1yemqGPkfb62HgiYw+Aq80ovWZjj511wmfyN6FPqDaowlgOGw+GgU5t/54YT74Z/M8FmNmPmyAvoiRZ10+VZHRFKO1VD5LRaptOV9YPpk26xsESl4+L5qz0zKMYT7PfU0HYy5bPgZMaghYVVE+pbuCqFlOVT7PioNOVWJLPsctSn9iH1A+rBaDpsEDTj5i0aQqF/RSPipt0fX3KV0+jfX7c+/rWz51zeQPxmtTPtV7hC7pJks+ibtyJpbfSz6BuwmrAkJbPoNF8BpnAmk+Xf5irMx5bj6BKbQHGgV0PkmO/FjHrXo+4RO2AA0Dfj7TwFw1nfR8Ps+U4F5X2Hg+pV0YTOPvdD7MFVEsJH1rPt/t/Ww2WGM+BHvIF6/RRj60RiRwvs45Pu3FNe7p4ig+zEE2r18sRT67tsv6CrpFPjZfzeiHU0E+IEJLmbqSQD7QynA2KrJQPk8OYF4qI0k+PrtY2h61Tz54y+UHritUPmRyEW5MtFk+ts3kiko4TT55GLEWDBBgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1346\"},\"selection_policy\":{\"id\":\"1345\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"kXgak8DXRT78JNQ/eUtAPnj401SDyjo+N95sm2RbSD5kfYvPMHBDPudMsQfdQ04+SlyjrLbgSD64jvuBqKNHPkBKFKMuQVI+KZJ4wLvqWT4Q9b8+LSViPtVlk6Pq2Wo+Qa/qzAxzbz4eF47xnVFyPjYMcnWyn3g+xg/JtyEpfD5vZSHygSt/PmWIrmwh3oE+CKDN/06dgz4lznUdNeqDPmuGvCq3Dng++FrwgYgzZT7TkjySRBpPPsYCgMbpYFM+KXX0V9ArTD6B8JQt22NEPgws7+CvXkM+QJ5PiXpSUT4mBdOIQiBhPrY+gD1cMXE+kAHqLD+Sej5fAVjqSoSCPqNWgrg/QYk+EFWWri68jz6MLepUKXmTPgZD4oYV5ZQ+xOlhVlrskT7z9CRF1/WLPm8RldPfv4Q+OkH6kXtMdz7KNOB73eZQPvSF62BirzM+v0u3UaQDPj4TuuzpiU04Pt0SS0bDYEc+HZSCG2aTQz46WFFSgO5CPkUAWgTbLkA+OZLwJXFwQj5n3ERVB9tcPnFWjW2yj10+VofUvWhAXT5go4jFXXtmPtqgPOqWuXA+pLZi4QRJfz7U1BcGFv+FPqKEeeH3qIw+GR0fZmuejj5zKW+ui0WFPkGjh+VAa24+CLZgpvhEYj44wpTamopjPm9OcDjMIWA+w+mkgaCqWj4GjsmdJANYPmVSCeXD+F8+2EjOUYwjYj4l2y7iC5NYPpUMYzTJrFQ+ZR/4z2suUz4iM7clV187PsWNic1SG0A+qfad5bnpVz4FHMZDHrhVPjIwFsP8mUw+qkfhMzokXT7iIkvTuHNSPgbegabqPVQ+sHh1wgM8VD4LWhDHx8dZPifdl1hIQ2o+QRhkgluebz5NAqOZ9q1yPpSkkDolhHk+Oqs7HivSfj5NnYno6QN9Ptlm+qHuEHo+R4JqOmAtcz6ANpUN2pFrPoreg6GNqmY+nJJJKdkcUz7y3NlAI8I7PvG2ikf2DTo+muOuQSz8TD79XJp6uQRJPkJcEXX+SkE+qdOGX2QsQj4a3VuOSFJIPulJr+bVfk4+xkXQ4o7gTT7K2dTqHUxYPkq0QHSiUVo+DrQLiM/kVD515amWC8JaPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1332\"},\"selection_policy\":{\"id\":\"1331\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1329\"},\"major_label_policy\":{\"id\":\"1327\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"F4er/pLQQD5w5pz7Uog8Pqa2umDbUDs+r2NNrs3WQT4K7niS8wdCPiPmRCbXc0s+AIHS5tuXSz6bcDSAHFdJPs3X/Aq6gVE+EgGSpW4BWz44LIqodLhjPluNKVaxjWk+rH3JnM8CcD6+lzI4nvtxPmCSmkwMunc+O7ebOqOFfD6aCZAvglV/PphMJ1Ut3IE+drpa5qN3gz7cWjty5MuDPvlwoEttknk+uegMqpZxZz5BnIo4GtlRPtVeCgHBA1M+sFcR5NPXUT4dr4+VD3hMPtRDpb9+Ekk+5Ygno9LTTT7fy5ckrM1hPj4HNqdsx3A+RikPlsBkej65kcThCLOCPslkLNYqMok+BN0M+nygjz4HLLrXi6uTPjrZBeOJv5Q+gCDxE58Dkj5C1LA9GDuMPsggTZB2VoU+41ODpO7Hdj6ngoydASdQPo0Fsz5fTjI+vTa0JTsvMj4Ev1l/v5spPvBH0cUHrDA+HFEsAqpuQz6vu9GigYc3Puz5bIsyBEQ+bvMkPpTQOT5EbKchnuJWPv9Z+udFp1g+NzB9IJAsXT7jfGls1ilmPpj32IoruXA+bj7JxDGxfj5b35hWG+2FPjD08sfLMYw+HWswzcZujT5AKvvQmMKFPsMR3yLNyWo+o0xXnK50YT6vOeVk4ixkPvGGuC8ybVs+sFXfUm2LWD70wvyYfWVbPh6IJgk8sl8+HlJrpOXyYj42vzLiUjhXPg7cqLA87U4+lADvMx7aUj72scmmQnQyPhWptWOrHj8+T+5GCS1OUT475ZQCAI9MPr/R+GBQ+lE++qJr0LgNXj4BzurdFVdfPhw6YvxzLFA+Kh9qWC3UUj7DvhDCErxYPg/jVbq/E2k+JuK44VmObD7oFHDHFaJzPrprZgT6P3o+42ZA8rjffj4WnJABGsl8PnneZEFSqnk+ZeRSA7Mdcj7ol2iK9ChpPmuchamug2c+KPPJ9ro/Uz7b47Kwl0RLPgVKYNYCUUA+Grv6r57OSz5SlBN46V1IPkAGHtMjWU4+H+QXTIXZUD4cKrGb+DlOPs2sxSGekkM+UJKFCcq9UT40LLE8kidQPuU/mN5RMFo+oE7VtkvrbD4oDgNqaF5jPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1334\"},\"selection_policy\":{\"id\":\"1333\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"7ssmo8PhPj5RhZPKH55BPr/Z7FmrADw+QsKqdjYNRz7cqbMLea1CPh8WDB9IVkg+ek3RgqurTj6xHqYYThxKPiMPyVmGblE+79QvMq71Wj4FqOW96H5iPtWuRiLK9mg+1Zvm9B7ebz4V0njKz1ZyPhYnHu61Gng+pf0ei1RyfD6MFFQJ3Jx+PktGDAngBII+v7cjGiszgz4fBmZh2ZaDPjJbqxSUR3k+Vx55j/+7Zj4rruHWkbdQPvAHlL3s4FM+YF/nhtSBUD55S+GevVFIPkYylD/wPUI+4yGOVoQ7UT5WLZ2W3qViPl9mduzfKXA+5IIcDB3kej5+Rg4DlIKCPrxcnvkECYk+PF2HPB7ijz76di2eWqSTPp65sYdBwpQ+92MyXGwSkj4rDzbwRqWLPhfH36J2lYQ+mCB1PmEddz7deWhOiMRRPt1X5XC0Yyg+1EUS/dx3ID6ZVbKeDCErPuUw2NMyHDw+Z4bvw9myTD6s80awUjE2PrT4AlZ9STg+rnp85uPNOD7yyNBW+rlaPk5jSP9jNV0+pj2NvjdPXj7WR8/FfWNnPlvA/AgK9XE+RnkDra/bfj4rU/OEAsmFPke8V6sZM4w+23qPLt3BjT4ibtoHLrqFPlyUevuSIm0+XACk8cbpXT4eye7t8jlkPjQ7zN3Pb18+L73jTPYeWT5MbD46hFdWPqguD44fDls+hOOr/DIaYD5IZhiLj6RVPl3vfLz/DFg+/G3trbJuSz4tP7IlEc86PqYf+uDbQkg+z7eBliQlRT6IPFD1lYBSPg3C5jlud1I+LDDTglszXT51xsOPEKhWPuABMBjVtk4+QHisZyd3Uz7K0XpfKSRZPlcyAuXzR2s+c5Mi5sIzbz590M+Z0At0PrUFy09K6nk+YqroWJK6fj4XNbJyMLF8PuRtTFvv2Hk+Sh4RB8Tvcz729mnGDtJsPrY9vpY+sWQ+MxxEOTYzST6reSlcQOQ7Pm/JRBOf2kI+Dw+Rmf2tTj62WPGY/mtAPscFoGR0/k8+WVbM4L4cRT5UX5b+CPlGPhPkKAo4zlA+TadrDTJ7VT7FW9EZq2lXPp17RrQ9/10+2Y0krdpHYz4iKVlDaCJgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1368\"},\"selection_policy\":{\"id\":\"1367\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"bc8075fb-ffb3-4302-99fc-82cd197331d9\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"ca754280-1c50-42c9-a779-d0c28fd8d7a5\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"25748959-f26e-4591-a6f0-2bcc63a1f2b0\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"48e03b92-44b6-4d6b-a9a3-e996945e4789\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"8g4ufjEGcz6U3zpEZ0NBPnD0Cx/vO0c++rUb4eoeTT5TjPc3n9pWPhe8hal39S8+iljU7ktZRD74csXCMW9QPrpikip2A2g+OOqPiXfOYj4WrQsj4+09PmRxUThx0+w9FGnSo3q5PD7+6Lg+sEQ8PgEelij/zTs+gctDemZzVT6KTE7XHTQrPmhpKogtsFY+9IVp2bIMRD50HCTiClddPm6JfgKm2Wc+RU+a6sgsRj5q4m00NDhAPmZGhx6sYDQ+XH7QhfURQT7+0h//4tBPPppDdlufylg+0Q3P2LCHVD5pGpEQJ9FUPqsCP85f6lM+/ZlYyMM2ZD5ak2WhHHguPppM/JbQkVg+aUXnN8ngWD5t4UvuBCVWPss8l5wA21A+JztL1ygaSD6i+mdxTCJUPhR87Pa6VVQ+UnFo+OpzUz4V3Sf8rQhOPni6p40FL0U+TfF7VeIMMT4qOUazbQVTPsSfPD8L7lY+mo9akQjsQT4+xYh7lrtHPoa3fFJoXEs+8wqVVdvmSz45Ghg0BIlLPu31XluQ00k+SzC4FsHgOj4kBinPjlf8PaKfvNKudSc+RmUFTKl5xz227YJx5pQVPlAXsptbBlE+xSFKHh8nSz78isY93n1DPhq4JgKwTU4+o8hkxJivRj4G3+QKLe84Pov3CY2z80Q+OGNY9gnNRj5u7nAFpZ0mPsgrsNBmCUM+7v8jc/bGMT6gHcDnfBhFPgh+voDAMBw+6DaGIYv7LD54tM/3Ygo2PpoQPkVDBEU+HnHdfDipTT6FvVTvn+VKPogcKtK6hTk+46J82CG0Qz7ubIKjLftAPq4HcifvJzo+UEa7OqPYUj65Ze81RF9KPkJBHkyHhj4+dCxKtAUVRj57w3X2k5tMPkjONVZ01T0+YW62uXKxST6a5xhRkjw3PpxsDnudDj8+dFs/TuDM7z36ljC2JUdIPs0G6qUxdk0+qtvfHwp0Uj6/WsCpzjdGPgAQxvxQnUI+hPBOWbotPT6Mg1MeekxMPl9sGclCFUs+d+N89nikQj5OuA1LxTBJPhrTGDhmpUY+nmGlCRBLQT7AWeaU1t1HPpAT2933jEg+xZkf25WZRj4jZng+0zlNPtCUqLaFt0Q+sNVSXbCMST5pqsRYrxNLPoL2QJOkWUk+OgemIgTrRj563O7M47RcPg48XTzbJks+XWVBXlweUT6PipMZn3dSPtvc8gSCu1A+6dgxNc4ZUz4G6Em82YhLPmCAauFJaFU+CoBeBLGWWz5Xbd5XXzJYPlkj5uK8wFw+QktSp/25Wz6ra2ZTiLpiPgcnKwBHlGY+7pwN2/kyaT72EsVXR15pPnP7PUc5O2w+W1mjRv6OcD4iZFMRa4lwPp+0Hh4l928+9r8Me7FycT4UzZPhEPR1PhuknLWLP3c+Puf7Rk+AeT7LKHAhv3h8PuJRn1vN8nw+uui7Rk1hfj4syg1G2nZ+Pkt59jzrUYA+DX28GLX7gD5iMm7VwMaBPhrlaXHLkYI+3X3cKs5mgz4ET1wyTOODPshB5b2/j4Q+xk0mdDO5hD6kQ2TLGNaEPlI+X+jtP4I+8AQCA92zfT6llKL2oz1zPhxPO7whRnE+PbF2jm3KZz4IRyFKonBdPvbO/bBdplk+w09+3METRT5cH/9pprZRPlGDprgIzlQ+2R1vGndrXT75kCmbkQFIPi0pIUQtKFc+a2lg5hESUj5cUYAOs/06PqjHS5oL30Y+DH4ym4OCRT5cMvmD3uxMPizPnjOUlEs+BzhRyzwtTD4yj4x4qY9SPpq1GgGmSFg+3WpzTL36XD4NuhkGMMVhPqZfIgefGWc+4j/Q9wtHbD4U/+1XZJpvPir5bCfwOHc+t4FAOpEDeT5BfYCmuvF6Pm7SbucDhYA+FxTWKzR9gT6w9pa3v8KDPrYH7RAwPoY+6sj+buEeiT4od8N1LMmJPnFxVoa034w+g66jCz+Xjj7+/kZkAuqQPsKSwrBytZI+P+xUlwa3kz5wy+NHaK+UPjhl6b7rFZU+TONyiWMRlT7hjlv8CQKVPsTQGdlQ1pM+x/tkPmc9kj7ZWiGybG2RPpAREiRVY44++edmVkgjjT4KsXMfVk2KPv+6E5YeFIc+XDAeLOO1hT6+HKw01JqDPu5AXnN2YIA+RDWnSWHGeT5//ufdufhxPtSMLZKzt2I+Fs71AEdyUj7D825dMPtDPm7ri/m6LxY+kpRJFgJsDz4uhKtkmk0CPgR7EgO12yk+8kBO74a0Nz79xx22UYhDPhwJ3yAxo04+7KrnsxBuRz7o1dvrH785PtS26mSH7/49rqWbyPf+DT4ymHq2CFUiPvyouzNeTVc+FvWdHGp/UD4LkygYNnRWPpKmDXQTv1E+1KYWTHUrSD7wmmjM/GxAPrxfaJCkLDE+QHDA8EQRQj6u+1Ub1OEnPjYm4CwM/B8+3zplHIYOSD52W3LI3gxFPqoVtZ5rN0Q+ymvevl0ISD6iFMzcWDRTPt4CO4K2gVs+NdXq+dMEVz5kDfpx9vBaPmwphGWx81g+u1DM6Da5Yz5qcGc40/FdPvjODi6ZrGU+BZR9DTq5VD7ND8dkzmJhPokmKEdhhV8+cHIXN26pYD5Wcx8/rElwPtJH/0JO5mk+XujvGT6cbT4IlpndfPtyPrXpSEHUbXI+iSECBauDdT6A4X+P94V6Pr0XIc1qn3w+qzFLtwrTgj7mUs0iIxmCPsXFSwjOJIU++z2wp/PbhT7W0B5W4IaHPokp16txzYg+4/VNUrn6iD6uUPWStuaMPppiuwD2vY4+frv48H1MjT6ropNuZVWQPoL7pA4R540+uYD7Emz1kD72XzJ3L7uOPkTbyL65f4w+UtW4at4giD7N0IbBM6SEPs9pMcCBdX8+moHH4V3bdT70vfsujlNuPuZhvH7VTGg+XtWd3lKVYj6MkbiZFvZkPrtI7/Lqm2I+6fVVf27jZD5r/KFPImxhPv8b41PyimQ+6WSezzrmXz7ccNGDpG9pPi+bIs3uP2Q+IKd1tyr3Zj4VZ7P0DohkPl0E59pH/WM+AljE2LDoRj4Vjq6o6b1APm8oX/mkpVc+sMl4Ly7CYD6eGRGFn/9fPnKX+KMFZ2k+Zlws2LY+Yj46L02LqmxUPmrmoVRfHWQ+AJ2f0ep3Wj5crTsJtodbPgArgCLpk1M+fwu20bgMaT7Tc/JfPJNsPv74C1Whi2c+hK2JV43hYD7XTpd/tRJlPgA+zdJDkmM+wlR5wbJcYT4YwiVTMKJbPpzA+sDTXlg+QtscrxHXYj5PJ3wQweVSPgkOngWimF8+mp3FB8byXT6sXjKzqCRgPkuTC+Z3QT0+er49qpInQz45u+jdrGVVPgATJzjhZGE+xU59O3+0Xj4nrh6biRphPn+W5IAwySw+xfWnIRh0TT5+9uwXd0RWPuOpEPxcUGI+JHThnzdZXj6GOA5uezlYPgybmfDu/1E+YvbHgutuEz5eZfo1q1EePiLGMYzjcl4+/NTwdJ8iVT6Eal7nL7RMPsvVwylcX10+4krk1UY9Xj7KV+WfFqVcPmBQJSfiqWA+Lw/XSJrgaT64Mq3zL/FkPhrFCETJjF8+ywc2zCeTHT60nYXIyhU2PhR3GUGuqEk+uifg2Bw9Rz5SmVbjUAIsPiDkRphYyWE+O16ydNVJYD5y5VDZg2pdPpgcmjFEGEQ+eJEyiBSbWj6C4yPgD9psPkinnCFTx20+EG/xE9/hXj4O4ispB29NPq5jDg2XbF8+kGoTfDvQZz76KfIi6oJqPqbrCExktls+Q5oNoixMRT5yoP+L34diPlRj6Zh2kFQ+YL9WeJQ9Vj7AwTT8/CkyPgTiPH9sME4+8Ck/uNBbWz5h4f6aWw9YPqF+avn56mA+gcmI6bDrYD5/6Flbu1BgPjhFJglbdmI+wMcXppNEUj5gxBdwHBFhPiB0EaSzoV0+pBjTDuIWUT4OMhB1sglnPibFgQKCYmQ+q9gMBn1TYz5EeIkipd5oPrnpnG20mGk+HEyXbU6EcD5s8nPAgB91Pi9X+sbBC24+AM2Xb9b6bj4w4ydNyydyPvUyyDvXOnM+FBqct1MXbj43bDsE/ERzPgv4jV/mcnI+143HBeondz5ykwbrUXVxPvWZHDseUXY+Pm/7FyIdeT74chtyzRJ0Pmar9xPCF3g+7j1MqKwsfD5PkqAXdrF8PnFtEiY19H0+ny1MkmbbfD62xA7MduZ6PjLfoKuHc38+WvMyMR8ogD4nEDrGjIp+PsOQDJ7MQXw+xqwZju+nfz5+tUesYdF+PiVQ6KjiE4I+UMm+dFjBgD7FBC2kYpd/Phl7WE+MK38+sxECMRGLfT7GY4bWwxyAPitWsHiG+H4+Peg0ukp4eT4/knULA/l8PhZbj/sRu34+KDI8jJJdeT6QGGY/HCF9Pq4e+XUKGHo+nmH5098teD4nB6Z6RdR5Pq18FkvpunQ+tLWws8R+dD48AbXI5LB1PsiuDWjYrnU+yk079YYfcz6ln25JzBhxPsLhQqwXg3M+5ZIlLKGWaj6spBg2nOVpPpStKdJZK2w+BnFvtC+qaj6Me6mhzGtrPu0lHttta2s+3pvYOu3tYD6IKhgX3nJqPmEFstv1IW8+sLT2hEnCbT6MdZ+EtQtgPpd3G+G8H2Q+7oGDkmjyYD61LSLEcLVmPr/taVfK10w+OPvALKm2UD7WO3ELgPlRPr+cIpsYH1Q+L7A84AJHUz48jMveoEJgPkQOG/PpQEI+lM25oek5VT5XTBHSUg9UPqoM3PxOwEw+Dgszg8IrMz6QMcIHCtUxPl+UVgBhQxk+Js/DkbK1Kz6HmJ0PSYRJPmQmOIYjrEI+31NxWiJMUz7mLSmnN+tRPsI/AYYWKlY+zEBmHo8xQj7sN28garVKPkFTssc/j18+ZyckeNxAYT4z53ILfho4PmUVSEVW1Uo+6oZQ8ZBiVD75fntSobNhPuiybu8r20g+nhY/7qkcNz5AtHK9QuEvPvh8Wud201c+GX2eApnkYj6qBgE9vGpZPnGtUfLXqFk+93n+77B3WD7qo9/h2vUlPv61DbJk5l4+GvTSdscLVD45Y18la8NAPi+dPa/wK0E+3BZbEl9EPz5O9IGVNg8tPtUmDuEydkA+fvyNbWacYT4KYo07wwdHPr3R2fLUyUw+uJgJp49JUT401I9PJAZYPhCg9safeFw+ELj5H9szYj42mNXIQyc/Pggf4BtfbVk+rlro9N/SVj6IHMCrDDVUPlff88geIVM+CGR2VccLUj57iwtMxmQNPqIByl34dkk+tOKVvQ3ZXj7jVM0587dgPoisL9nARFY+IsHf7QWNQz6hALuTUvpHPncyH8HG+WI+ZgIVeNj/az5NCSUpG2lhPqTE/RscGmY+MKWkp1GRJj4hR1N7yKtZPjgrNmmNlk8+rGsBO8j6Vz5yNZts7hFVPps3Ho6aJVI+yg1GCTfcJj68//jjzSZjPjY04c3A7FM+LhJi/hVTRD7n/KEOarVcPpj0l4Kng2A+TssRMexLSD6p36qGgllxPjTWXDzarnQ+Dq0ImF2RWT6OxcrDZGNIPg6N9+wLIF0+4Dp9sPQQZz6qXjIN71FuPjoHtIFIs3I+PPwvQhUUdj7jEdwnffpyPhuWVPumZHA+JB+I61VBbD5TJMwBi71jPmInSQps7VI+oMO3UNw+YD6oIT+h3I5IPtRF1DLf92c+4nqLygkNYD68xN5usaF1PlvD2NMI42w+qGoMExyubD4ij5vt3mmCPrr/zeYS4mA+x5wz2Ctedj6wJYaXi5hjPuH2qzDcnXQ+zy3Cpcupez7kAzRc7k5tPl1Nx7xnaXU+scZdsciDhz50QI8Fqjl5PpfB3r9pRIk+GUJ/9gMrdT6AWHtcZVJyPliYiFh8440+kt/q4ufSjT5rTZ3quQuXPs6mGIvFqno+Roy19UXEej5iWju0kqSHPnpns74f6o4+mFIQzhgckz4M/+5nY3OgPio19oj9wKQ+QZUoD74Olz4uwbSsneaVPhYJqJJ3mZU+\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1775\"},\"selection_policy\":{\"id\":\"1774\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"1772\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1767\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1799\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1770\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"1769\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.02, C/O= 1.34, [M/H]= -0.31, T= 814.27\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1775\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1772\"},\"major_label_policy\":{\"id\":\"1770\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"EaWqha6RUD4AUYbucH9TPqDV9laeK1I++tckHC4QSj7ZgGgbP+NDPt9+9YYILzg+dWwWOVSAMj66P/hgMQcmPj1sKtRQTTc+dfYx3JCwKT7uvH7NpEQuPpStaZ/nCzE+WIYSuQ8RQD6LUdI30Ao9PuTh3WgBRVs+OusYtaAcZT5qfn5wkTRwPj/XrXu9aHQ+enyBgFOQdz44IyI4eYp2PqQJSu/+p3I+6J5q+UNOaT7dGZqpZrtjPgo2R8h2710+hQXE2BDHUT7iMCJa8O9HPkvvUw5TQ0E+Gc8GJOgATT6DqNAZJnVUPtZFqOR8SE4+XvSU3u68QD5bKlJmXvBDPrGpM7Sde0Y+vdBKeH2HST4p/6Cq0y1NPmprB5XVQ1I+kN2IQCo+Wj6m3oi33aJWPphNT15VSlw+4p9ad+RHUj7eSqxSwwRaPsdwjvxDM1c+IG4FHpMaYj4Yc0ywQrpbPrxRtYjJO2c+wbc99qQRgT5BaezozYaKPjDZOnvdxIg+8Dpllab9gT535kXWbWp5PiVUfWeNhW0+iu5n8KPHYj7Wae88lpNZPssnHkLajVI+wOArk+emTz5J4pOVr6FEPv6JL1PAmDY+AKo2xYIQIz7rdj7wftEiPtjNP5DFoB8+cTgVQNUqIz4SMqxfHyoYPtBeYyYXhBs+B5Y3YXc2Qz5S78XM7d92Pq9kNkl9HYQ+PHQm9I9uij6DcgaCkaWRPt64/+8xxZY+jwv7S7L+lj57FrPWMG6SPo35D++4mo8+qb80iuPghz6ZRiF5X1uAPvSI4iCPxHI+XO7q/IIfYz7JjExqlzNPPiZTMH3qfUs+fd9ECY+eUD6gPMhk1QZVPmASBYDjqFc+DAaVKe0MUj6sIYCWZFliPqqQv13wHHQ+FYDyc2qEgD45VWSnfJyAPuzyHO5I9H4+IqPW1PHPez6/Y6FibgF4PruNbVu/nnM+JF+BYG72bj4d2TZ1UWtpPt3bOx+I/GQ+iH6quINqYD6J5AJM5DxZPqFgXZ08ulI+izDSwJUISj558+JkOn9GPhO3wLAqZ0U+GZ9bP2T9Nz6MAcBbOj5CPnpikonLcEA+9OSwtuEnOT6LTffeLAQtPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1799\"},\"selection_policy\":{\"id\":\"1798\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1769\"},\"major_label_policy\":{\"id\":\"1767\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"48e03b92-44b6-4d6b-a9a3-e996945e4789\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"25748959-f26e-4591-a6f0-2bcc63a1f2b0\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 95.66, p-value = 6.83e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"ddf272a5-7843-411c-9f81-bbf158b8f88f\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"a3951241-ffaa-46b4-bdf4-67792d5af877\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"2045\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2067\",\"type\":\"Selection\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1993\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2025\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1995\"},\"major_label_policy\":{\"id\":\"1993\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"1995\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1996\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Q27MgX+tWT6/4tUcSWVePj4F3uryb1w+dlRMDEaOVD6XH4yHpoVPPqtjXfvmT0M+GR3v3Bu2PT7XnZ81eswxPu/TShhLqEI+42+Us6nRND7R1YnwvIo4PiDn2kQ3rTs+qSEQnifiST5pxiVIW2lHPgV3UeuHw2U+XIm2UzO0cD4LNa627H55PscINXih/n8+r7cZUPZ3gj4RrfmWUbCBPvoSmKsQaX0+pzOG7PsadD5ZAWn/+IhvPrDUIzRmymc+r0OLxjbHXD6/WD2ZYoBTPvdBBnqWNEw+OQwNciiFVz4sLKdAC01gPlrs2jKWC1g+pTgIY6u3Sj6Q0CBDb9hPPsC3ofux7FE+PhpXrQ9UVD6Xm7+rATFXPkxIOLz/FV0+xx+771zUZD4A6X0yUCxiPnor6bpGumY+XxMHfK/IXT6eWlR/XvRkPh7a2cW7pGI+bWR4knkNbT4R/N9RQ0pmPjT1/YEUZHI+tuKAt49Aij7pHf53px2UPsVVVYXIvJI+jQyXgq1Xiz7uFToNNWuDPrXuCfTg1HY+TATKdj9jbT5GDAKe6xlkPs5E5Px7Q10+nELhchLcWD47R9ahw0BQPuK1NwLE/kE+Dcitt9nELj6w7kPmAZkuPi0r+ZEq4yk+C6t1QuhHLz5lY3YaU9AjPoZnHsOCdSY+Vm0uKcRYTj4thfPSk76BPvcDplOxJo8+BX+gPPxvlD4NtJH/1CGbPonjGMFEbqE+YZomUISNoT6aUTGb4febPsEb1LhnM5g+FkycM5xZkj42vP9cGj6JPq/q5j/TO30+xn0kL0sVbj7gHfi6IuZYPmDkuUVNH1Y+4UHUrI2SWj41/LWcgn5gPhVlxShGpGI+zRE9iqGDXD5yD4J7K5dsPisYy4coHn8+kAV8wciyiT6L7mzF+tyJPs/AsldmGIg+jQCjFsavhT7dQ9SvqMiCPn2Oo6NLwn4+FPf61ApDeD514cEPzuFzPsz1wo+eanA+l5SKxSagaT422Trx2a1jPvJWKSIZMl0+oUNW3JtiVD6vMF7K36NRPrCTjLLSt1A+JZ2slxrgQj7brEmsYXJMPvAY8Et5sUk+vm1Gsty8Qz6HeE+WPws3Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2025\"},\"selection_policy\":{\"id\":\"2024\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=95.66, p-value=6.83e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1998\"},\"major_label_policy\":{\"id\":\"1996\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1998\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.02, C/O= 1.34, [M/H]= -0.31, T= 814.27, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"kVg/nf9eUz57Cm/yDvNWPs73KRWDO1U+7AikbJ8bTT4C9kwmfIpFPugbMKO9STk+QIpStAOwMj4u80iofXslPobrsCnxJTg+36L4tINdKT5GBm9DerwtPoKclEvPiDA+ehqg7ENwQD4PxHfeBhs+PuAzkU76oV0+ah7X8xdIZz4YnMZ8fiRyPtHMR2UKB3c+eivhWjGHej5+r2b8pEV5Pi4dQaWWkXQ+0OzHm39Raz6i5n7UuPlkPmKGOFXjZWA+lKIAWEqQUj7ufXGUc29IPnJeV6q8B0E+ol71nWkWTT6a5pr/Qf1VPsoSOxOGtFA+MCCL/M86Qj5iPXPqJohFPlY+woa1L0g+m0IzZU6rSz6O3c7BXe5PPkQUScjvuVM+BETVZ2zKXD72efnhxalXPmRDN/5IYF0+evvmyoUpUj60UsiiIiNbPtpqFFPBO1g+FJUFNbCtYj6M7I6xmKxcPppOwDxmWGk+xFYChBIqhD6cBfB6Eg6QPnJoZ3Jwr40+gNB75l65hD6STh5qPW18PlW2urXyBnA+YH/EGBO/Yz723zYzYglbPmbLz8QZaFM+FHSoGUJlUT50w/X+B9JGPqZnPOhqrTc+CMyQH/U8Iz6i2L1Z8VIiPkOszamhix0+BkqwfZENIj6xPlLU1mQWPrlPAB4VjRo+wTphwGd/RD4KI6T0k6Z5PvzJbHliyoY+LDqDioNwjj7lEi6aH7+UPhTi4uFtcZs+/TcTIhQwnD75IokREAeXPve4uJZOvJI+uI1CMsKUiz5oybQluHmCPr7w2R/FYXQ+qBqy+FwXZD6KHYvdjKpPPimY2WapAEs+za0z22aYUD5k0RBbWVZWPjIPFjh5jFg+jd9NqYptUj4pRNgIRUpkPlMVfC+Jo3c+f3uY9fPXgz649gN10SqEPgAqWVcG7oI+gtoohX/4gD773KqbifR8PgKd4tItYnc+SB6zMqxIcj55NM7Y1fptPqgIzmijtWg+0BaVGx8uYz4QwJw9ShpdPrAPxKNOW1U+Plr2MXDWTD6yFPq+mXxIPtWj8bPOgUc+CL3Mzi42OT6Xbfc1kTREPrICSrWk/EE+botKEh4TOz42nTNC8GouPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"9YNZZv/7Xz6CXZ6jwetiPlcJSWAx0mE+dqRGYryOWj6WpGV0aMBUPmK5IiXv+kk++dfFAhpeRD4XwhqXNds4PhsyvZudPUk+Vo6sjJH0PD5AFK5fnhtBPt+YEJ/PaEM+bBTApwWqUT7Kqg8hM8VPPhpUWq8Stmw+g4OBrVrEdT7/5kp4rWyAPl4ikUUce4Q+odnC8lOshz5jAsCv0L2GPmOE91hFIIM+5nAoCziNej4IjimVHAx1Pv4iDxPpLm8+ZfKKmhF/Yz6H8kFoC8laPr6S2iS4sFM+kLSPCo4/YD4L5YCBdZtlPurFelKmYl8+jajCZEOaUT7fMefNWxRVPlVQ4jOJwVc+LpMUKHjSWj5nyJd21GpePiq+E9gHOWM+jJ2Lq4NDaz4FFf9zvYNoPkK1tvZoxG4+opWTluyzZD7ii0StK1dsPs9+KeKWK2k+45n1d6G2cz7cgfhKOj5uPhvDm+X1G3g+VLd/dYYrkD42Ngx1PC2YPlH3dtHYoZY+TSRZD/76kD6TBGVly5+IPhUnWTLPon0+nMRn6rWDcz6RqGgiJq9qPhtffBpvj2M+kggNZnEpYD68rDFEgxhVPvE3UZDSJkg+CWLlJ18mNT5fAmU5iW81PhzAhSdCgDI+CIadgx9BNj5yp8PKOm4sPjCnPPd6pC8+9s/9SBAZVD7V+JSr3amGPvme7xaAwZM+9GD/s7anmT6aqnoyRcKgPghWQJHSI6U+xJhDj/4CpT4dwGySWXSgPot+79qAqp0+UFEXTtfolj6CVyVKPgGQPlDy+a/wCoM+cnDLspwJdD5+VpWDf/tgPqz8BthFvl4++mo6P1pGYj64j+OL2NFlPpHCf7VPAmk+BiKWNdxMYz5e7RX3CHJyPoENDfBjTIM+oY9fjZ2Njz5e5tUVJI+PPp5XDFjGQo0+mCYdqAxnij48GdORDBeHPvw/Mro0EYM+4M9Cd2k9fj6uqBwzMcZ4PkTnHmtrenQ+LwnANxcJcD5kUqfDjs5oPhpPR9BxhGI+I1qxn/9ZWj4FVz+1cglXPnZVIAu+rlU+xtvyxx0lST4Q9k0RGVhSPpcXS/Ems1A+xZVnWyrwST5zIoULB+E+Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2067\"},\"selection_policy\":{\"id\":\"2066\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"2001\"},\"selection_policy\":{\"id\":\"2000\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"2001\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"YXZTT6JSVz6DirMYfZ1bPrhOKJA5v1k+AEbel4xQUj6vSfk3ictLPvKXb3B80kA+U+jCTFKYOT7pMAhIqlMuPreADdD7MkA+Tyb1pOTHMT7LysB+/+00Ps7OqSQchDc+BtEuzUxbRj6++AV1U0pEPgY8KpRpK2M+Jm+l4GqgbT6Iegt3A8B2Po/B8XtxpXw+GRTu13KGgD6sw85so5p/Pkz+n3neG3o+8jEDucaycT5l7IDwj5drPpEHmlO5B2U+HpcIFMn2WD6+amQhHMhQPt6WhRtUCEg+drxpthYrVD6PN01cm6NcPr3NT93uTVU+7r9Ls0+MRz4AtrRxif5LPmD4rsuEfk8+AY/azk7nUT648cNnRX5UPrKDcWpLl1k+0R8vf05tYj4b809DO5xfPvLXtavBuWM+ifB+zb1xWT7efJEOVTJiPnIKMV3TNGA+6da7ssktaT7gzQRwBVJjPrH44Up1QXA+3UrTrJz6hz53TBLHd5mSPrExfT15SJE+GO6bWwPfiD7lVSFonHmBPoKLxV5uSnQ+FD+d6Z3JaT5Pl55LpaRhPtpV98Q8lVk+0/JJ/I8SVj66P9M+q+NMPlgDOkGDZD8+/ajbc5h2Kj7RZ0G/vQMqPrSAXOexvCU+Hq4hcm1XKj4E1hZLoJggPmDMFvOkByM+pjG0S0arSj6MhHHqs9B/PvswlxB9B4w+uifvUzd9kj7Uvrj7a7+YPiklGQWzC6A+MFJpxd9CoD7Mr7gclx+aPiCXbSv5KJY+UeZFTcKlkD5iCSFlOLeGPhumoZGq7Xk+1WtvkCVaaj6+VNwYg4NVPip+8pA051I+8VU0SdHYVj7b9qRV3QJdPkdHO66bQ2A+ARYfh3a/WD7tldoVuH1pPo4eX/85U3w+GhYThhyDhz5vLyJAfryHPvIzzuidKoY+tgKSOvjsgz6U2bUJBS2BPiaDW91CAXw+eIKIx5cHdj7AYSPlJw5yPjxoiwS0zG0+zBBhKAU4Zz4zT53BrcNhPjA59gbARFo+NJo2q0UoUj5W6VfW+D9PPqjkfQeCuk0+puPSSciIQD6Jr3VdkF5JPuAjR4zO0EY+OwtLPSdsQT78gdw0Rx40Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"JWZFtFwIXD59HXyQipZgPsS7k0WsIF8+7GK6gP/LVj7Aeo/r4Z9RPmQvS4ZRzUU+8KiNtvLpQD46IztHH280PicniGCaHUU+d7kzwm7bNz7X4FJieic8PnL/C2VS1j8+THLxbgJpTT4UlEUbY4hKPgSyeEKmW2g+JVsaNzGYcj6O71D21T18Pv8nPLroq4E+RVtFyHlphD5M+It3UZODPtQTyG4hW4A+XDUJIDGDdj4niygHMb1xPs+hrRQTjWo+IPiGPNJLYD7ARhYRqThWPoh2Q2xsMFA+/FuwLTrfWj6RvCfTSEhiPvcKZog9yVo+XLHEEgfjTT6QdUaKKtlRPlDza5EhGlQ+e6XTi9DAVj52RbvvveNZPnOG/wZaSmA+vR9HYGs7Zz5z2FPDgopkPgJ/HMrLumk+G5tHldAPYT5eOBfwZ7ZnPsqpgi6kFGU++XgauZR2cD5CKrszgUJpPrfxGbmzhnQ+j3ouwoKGjD5b7+ko16GVPtl5Lc0XMZQ+AiuSqVfQjT731VKyzVyFPuhRTolTX3k+wmT7gXB+cD49gWXwMY9mPuGZaJrdeGA+ZZJ46ZSlWz6Z7kKksQ9SPhhq0mNGS0Q+jvO/fY2JMT7HOqMGI5cxPqbVlTyjCS4+/NNkiTEcMj7G8NXpBQgnPqwCJpNg4yk+g1RUAyEDUT4USK6wzZSDPnprWsvyIpE+UNZRJcFilj5GqWoDPoSdPumhGH3W0KI+kuLj2ijYoj5o86kZLNCdPmKgOkbWPZo+27HyGXYNlD4Kb95U/MSLPqEXFvf9RIA+3MfsZjjocD4C5xNdwkhcPpZKgfplV1k+0S10EEpMXj79fJmOlntiPuOCT6PwBGU+zIatRuYjYD73iCnhnrBvPuSIG4iL9IA+BvXk/HTiiz6nrbdKd/2LPqxNl8YuBoo+ZP6z8pNyhz4mrvJVTGSEPurM9TSqwYA+sGtt4n1+ej4qYWA6dLV1Pno3QB3j7nE+Yhi0YkgIbD45Y9ggBphlPlo6rh65D2A+Du11DfKcVj6zbJApw6dTPgw1WmFkklI+pFaG5Ww3RT4tqh37MoZPPgAOmQskkkw+QdBBJ5INRj4Sb8L3N/g5Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2045\"},\"selection_policy\":{\"id\":\"2044\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"UnionRenderers\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"a3951241-ffaa-46b4-bdf4-67792d5af877\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"ddf272a5-7843-411c-9f81-bbf158b8f88f\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:03.272141Z",
     "iopub.status.busy": "2023-11-28T23:01:03.271434Z",
     "iopub.status.idle": "2023-11-28T23:01:03.278048Z",
     "shell.execute_reply": "2023-11-28T23:01:03.277604Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 95.66, p-value = 6.83e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(95.66, '6.83e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:03.286360Z",
     "iopub.status.busy": "2023-11-28T23:01:03.285763Z",
     "iopub.status.idle": "2023-11-28T23:01:03.288160Z",
     "shell.execute_reply": "2023-11-28T23:01:03.288700Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:03.292319Z",
     "iopub.status.busy": "2023-11-28T23:01:03.291703Z",
     "iopub.status.idle": "2023-11-28T23:01:03.294787Z",
     "shell.execute_reply": "2023-11-28T23:01:03.295187Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:03.299240Z",
     "iopub.status.busy": "2023-11-28T23:01:03.298499Z",
     "iopub.status.idle": "2023-11-28T23:01:11.639697Z",
     "shell.execute_reply": "2023-11-28T23:01:11.640066Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.658866Z",
     "iopub.status.busy": "2023-11-28T23:01:11.657883Z",
     "iopub.status.idle": "2023-11-28T23:01:11.661717Z",
     "shell.execute_reply": "2023-11-28T23:01:11.662043Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>404.845714</td>\n",
       "      <td>4.321429e-01</td>\n",
       "      <td>5.096887</td>\n",
       "      <td>809.702503</td>\n",
       "      <td>1.503204</td>\n",
       "      <td>-0.337317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>668.885374</td>\n",
       "      <td>5.264195e-01</td>\n",
       "      <td>0.156768</td>\n",
       "      <td>22.845101</td>\n",
       "      <td>0.150288</td>\n",
       "      <td>0.070511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>18.290000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.796538</td>\n",
       "      <td>776.164022</td>\n",
       "      <td>1.256849</td>\n",
       "      <td>-0.411169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>54.365000</td>\n",
       "      <td>1.520000e-08</td>\n",
       "      <td>5.048297</td>\n",
       "      <td>794.208323</td>\n",
       "      <td>1.413241</td>\n",
       "      <td>-0.398343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>129.250000</td>\n",
       "      <td>4.100000e-02</td>\n",
       "      <td>5.119810</td>\n",
       "      <td>815.522339</td>\n",
       "      <td>1.543168</td>\n",
       "      <td>-0.345811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>351.330000</td>\n",
       "      <td>9.920000e-01</td>\n",
       "      <td>5.197356</td>\n",
       "      <td>824.108816</td>\n",
       "      <td>1.609777</td>\n",
       "      <td>-0.286091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>1874.990000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.270552</td>\n",
       "      <td>839.596883</td>\n",
       "      <td>1.676375</td>\n",
       "      <td>-0.235376</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius   chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000     7.000000  7.000000e+00  7.000000     7.000000   7.000000   \n",
       "mean   0.810000   404.845714  4.321429e-01  5.096887   809.702503   1.503204   \n",
       "std    0.144016   668.885374  5.264195e-01  0.156768    22.845101   0.150288   \n",
       "min    0.610000    18.290000  0.000000e+00  4.796538   776.164022   1.256849   \n",
       "25%    0.710000    54.365000  1.520000e-08  5.048297   794.208323   1.413241   \n",
       "50%    0.810000   129.250000  4.100000e-02  5.119810   815.522339   1.543168   \n",
       "75%    0.910000   351.330000  9.920000e-01  5.197356   824.108816   1.609777   \n",
       "max    1.010000  1874.990000  1.000000e+00  5.270552   839.596883   1.676375   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.337317  \n",
       "std       0.070511  \n",
       "min      -0.411169  \n",
       "25%      -0.398343  \n",
       "50%      -0.345811  \n",
       "75%      -0.286091  \n",
       "max      -0.235376  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.670801Z",
     "iopub.status.busy": "2023-11-28T23:01:11.669784Z",
     "iopub.status.idle": "2023-11-28T23:01:11.673489Z",
     "shell.execute_reply": "2023-11-28T23:01:11.673902Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>200.45</td>\n",
       "      <td>3.040000e-08</td>\n",
       "      <td>5.174532</td>\n",
       "      <td>815.522339</td>\n",
       "      <td>1.400766</td>\n",
       "      <td>-0.410534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>18.29</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.030838</td>\n",
       "      <td>776.164022</td>\n",
       "      <td>1.543168</td>\n",
       "      <td>-0.411169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>34.21</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.220181</td>\n",
       "      <td>802.168437</td>\n",
       "      <td>1.676375</td>\n",
       "      <td>-0.264654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>129.25</td>\n",
       "      <td>4.100000e-02</td>\n",
       "      <td>5.270552</td>\n",
       "      <td>839.596883</td>\n",
       "      <td>1.654663</td>\n",
       "      <td>-0.307528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>1874.99</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.796538</td>\n",
       "      <td>786.248210</td>\n",
       "      <td>1.256849</td>\n",
       "      <td>-0.386151</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000      200.45  3.040000e-08  5.174532   815.522339   1.400766   \n",
       "1  0.676667       18.29  1.000000e+00  5.030838   776.164022   1.543168   \n",
       "2  0.743333       34.21  1.000000e+00  5.220181   802.168437   1.676375   \n",
       "3  0.810000      129.25  4.100000e-02  5.270552   839.596883   1.654663   \n",
       "4  0.876667     1874.99  0.000000e+00  4.796538   786.248210   1.256849   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.410534  \n",
       "1    -0.411169  \n",
       "2    -0.264654  \n",
       "3    -0.307528  \n",
       "4    -0.386151  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.714472Z",
     "iopub.status.busy": "2023-11-28T23:01:11.713568Z",
     "iopub.status.idle": "2023-11-28T23:01:11.718045Z",
     "shell.execute_reply": "2023-11-28T23:01:11.718348Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8c685156-2ab9-41f4-9252-3e72da4f8436\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"64553dff-f1b5-44b3-8f5c-4b3481241799\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2297\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2294\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2300\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"qA102kCn5T/KL5b8YsnnP+xRuB6F6+k/KVyPwvUo8D8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]},\"y\":{\"__ndarray__\":\"CtejcD1KMkB7FK5H4RpBQAAAAAAAKGBA4XoUrkehUkA=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]}},\"selected\":{\"id\":\"2300\"},\"selection_policy\":{\"id\":\"2299\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2297\"},\"major_label_policy\":{\"id\":\"2295\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2295\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"2292\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2294\"},\"major_label_policy\":{\"id\":\"2292\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"64553dff-f1b5-44b3-8f5c-4b3481241799\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"8c685156-2ab9-41f4-9252-3e72da4f8436\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.722203Z",
     "iopub.status.busy": "2023-11-28T23:01:11.721602Z",
     "iopub.status.idle": "2023-11-28T23:01:11.723607Z",
     "shell.execute_reply": "2023-11-28T23:01:11.723972Z"
    }
   },
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.728515Z",
     "iopub.status.busy": "2023-11-28T23:01:11.727844Z",
     "iopub.status.idle": "2023-11-28T23:01:11.730205Z",
     "shell.execute_reply": "2023-11-28T23:01:11.730604Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.734117Z",
     "iopub.status.busy": "2023-11-28T23:01:11.733533Z",
     "iopub.status.idle": "2023-11-28T23:01:11.794389Z",
     "shell.execute_reply": "2023-11-28T23:01:11.794727Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"2108fa86-bf53-4b2d-b58c-13781e0a4961\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"7451a922-8c8d-40d0-990a-8e8d0dc68e27\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"ticker\":null},\"id\":\"2508\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2509\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2652\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2514\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2514\"},\"selection_policy\":{\"id\":\"2513\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2511\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2508\"},\"major_label_policy\":{\"id\":\"2506\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2511\"},\"major_label_policy\":{\"id\":\"2509\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2506\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2652\"},\"selection_policy\":{\"id\":\"2651\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"7451a922-8c8d-40d0-990a-8e8d0dc68e27\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"2108fa86-bf53-4b2d-b58c-13781e0a4961\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.815446Z",
     "iopub.status.busy": "2023-11-28T23:01:11.813216Z",
     "iopub.status.idle": "2023-11-28T23:01:11.856704Z",
     "shell.execute_reply": "2023-11-28T23:01:11.857066Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.869112Z",
     "iopub.status.busy": "2023-11-28T23:01:11.868280Z",
     "iopub.status.idle": "2023-11-28T23:01:11.871134Z",
     "shell.execute_reply": "2023-11-28T23:01:11.871697Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:11.885606Z",
     "iopub.status.busy": "2023-11-28T23:01:11.874788Z",
     "iopub.status.idle": "2023-11-28T23:01:24.218030Z",
     "shell.execute_reply": "2023-11-28T23:01:24.218989Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.1542826473712922,\n",
      "    'gravity': 4.657348505655924,\n",
      "    'metallicity': 0.8206860264142354,\n",
      "    'temperature': 955.0324666341146}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.657349   1.154283   0.820686   955.032467\n",
      "std     0.174362   0.130615   0.133001    54.436935\n",
      "min     4.279515   0.935255   0.585137   836.002991\n",
      "25%     4.616300   1.059740   0.752077   914.978729\n",
      "50%     4.702560   1.141474   0.789924   949.169312\n",
      "75%     4.744305   1.219711   0.905688   989.303467\n",
      "max     4.942502   1.489780   1.185095  1045.905884\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8550aef2-2590-409c-9ee7-2d951f6758f8\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"d1071e94-e2f2-4eac-bd67-d965f48a75e0\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rdx4cCw3PT5Ekti9m2Q5PhpB4ApUST8+e2hcMNGvRD6MCXTeMExBPmisy960p0s+7Vk2iGr1Rz7vpivgyKNJPjriDZmZPlE+EMnEfewrVD4+DThdJZ9bPgiVhttZXWE+s4oKj0FUZj678d25T3RuPo6jFOSntHM+WfcKDzHrdz7Ta1uKfyt8Pp855l1dT4A+JNcli3/lgT7ZwPjSaxiBPm6QNUdk3XM+lHBXptJfYj6uVM6NvQdSPtMyQYOgu1I+3XYBBn01TT7bjYefNSk8PtnTul6cfUI+G9PxD+dnSj5hUD44VrNbPlMttPYHG2k+LcnIEOsHdT4cSz7gGpiAPjx9ZbyduYY+HKis3vNLjj4BOtaGB2CSPgg8/ZdhTJM+nJN5LHpEkD5bIAblpzaJPuTODlgYyYA+4E7sHSSccz4oFI53qX9PPupo5B6L2Tc+iyKRFrQcVj5tr431AztOPn58rjdk8Vk+LMI2WYxIVD6dfI8eGHlGPhOtrbV6sTw+cTKzWyrMRj4Y+g4aHpBZPkrmsvY6J10+4dg3GeFyZD7wJLGFY6htPqWmxIF33HU+cxPfS5rZgD7X5sIw15CIPsxfMmEWiY4+/z18c+3DkT5td0x5AIKGPrW22DFoOHA+1Fylz4+jWT5r0qAwtldhPtgdOQ1Wk1w+0pkib+LRXD7emB6FaqxVPp2UZOJdCmM+JqE3f8bEXz7GqK3Mog1YPi8wXfGSaWM+CjG8Vg6gXD7uweQkkxdgPggC+AUajGE+qj27ojOlgz4yhKEdPk1rPjvXATHiE3Y+gUEuPVGEdD7NePK9agRwPh/fW/c6MFo+13C/h3kDbj6zovaO2pJuPthVOnVHn3I+FVzhZ5yWfT65CiP0/XuDPklTRI6SzYg+ktpLX/uxiz51Ljr2vrOLPsNq3N8AhIY+a3xRO6StgT4/YVbyA7V3PiomkqRlfHQ+L2RAQyw0VT4p77kUfUpfPkzwFJEMnVc+i9rZy14BSj6f/Qnlb79YPkO0HtDORlc+E5zl0z5mVD4BPBPI3ARVPvaqJN0Dd1o+68kACtiIbD5LaR1XjoRsPts1D+maTW4+Cg0nNHzniD5lhgLbAqCSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3041\"},\"selection_policy\":{\"id\":\"3040\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"fLQ1iq1KQD5qEduHrX46Pi+i5w5dMz8+NWt1NkBvQz5zAQGuAao+PpQs2T8c5Ec+zIE3BFCMSz69tgGPTp9MPpdQkGfps04+6+MLeqFPVD7acuFlKCRbPuLAkbBa2GE+IlFhWdn1Zj7XFt0qmrxtPil+AFdaY3M+jdmjlIJ7eD6JONkzzkF8PnszCnjQOoA+OBvXnFoAgj6msycUbzaBPjJUIcNt/XQ+EIJCGvm1Yj7wBYWKpvlSPgoHn3FAy1I+F0fTubVGSz514noo2QhEPsLOci4Ik0Q+Ao15brL9Sj7GXRAvzOxZPnXYaOr6xGY+XEXaIXv2dD5BlhrOHwmAPkoutOrF1oY+MWZXupX5jT7u/5ER3qySPuOMbjay7pI+yX+NIUz4jz5oMNe4/T6JPnch1l3KkIA+V6MvReS1cz5v/xosx2dQPg+tFi+q1TM+URhVoFBrRz7hpfEOp5hHPt7GmuDKBUc+KZOdOwsuUz6+eqKWO19FPq0cWRyeRzs+3Bt8J4WxRz41yBFi5lpaPly+uBz0iF4+C8e6ZWsJZD5empp0Az1vPtLw+c2b6nU+t20oE6tdgT4HtnSinBCIPodhksfVdo8+HyZUKgODkT7X8lWULOyGPjB+Qnm3VnA++T11A9iOVz47Mf/tMR9jPp9FUVazpWA++nQTLpyUXD6M7EbGn9pSPs5U6XOmqmA+hUFuJ6V8YT42AwgpzxJbPiZ5wI56DmY+YoobitN/XT6iVZ8Z7aFZPkpl3YauomA+7kPYiPjpij6veqB3A0R9Pgkud0FA83s+SsSrOQsZdD4qKJJSJIVxPtCJiCNuumA+qZ6gRKJhaT4mZSa8ZttxPk/kDGLSaXU+lroj0CZefD7eUMuGjB+DPtN2indVrIg+1mEklx9fiz7hUrXBSL+KPuKy30XG64U+KKuovqxRgj6uRnaD4495Pgi4YtFpKHQ+Tu5jkYTbWT5tFcwGGDxmPt3gwc6QaFY+5NOs9wPMRz714gh6RRVbPhqH7sBqTFs+TaW2noELVT4cvkFbtNtfPjBNgakaGFw+k7hpTkc7Xj7c3zDsP69tPgjRqgjdN2k+cqlqg183iT4cJZtpoZSUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3043\"},\"selection_policy\":{\"id\":\"3042\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3027\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BmiDWQydPT4PILl/IB09PljbYhD3IUM+lv5uAsjsQj6avCVFcZc6PpBC8iz+W0w+UKjeUD+xRz4DknGJStBMPmonvbiT41A+UgQo8RuBVD4+T7MZJ4JbPuwdBx6wjmE+bz74Le0LZz4m+z08JdFuPjtQ9eEgM3Q+X35d9sWhdz4UdmCbF018Pl/cO0UAH4A+OwPAhSi7gT62jYAbqHWBPnZ4PM0w4nQ+NsYCD59lYj5JMzW4oEdTPo8rGUjQW1I+VbPpep9aST7z8T0Z1aJGPr9yazDEPUE+yghfR0PlTD70wuPOdFFbPiaw/JbGOWg+qVOChPRkdD7gP4lK9EeAPvRXPIMMRIY+QLWeN7PEjT7xxuVNU4CSPt5PHnNeNpM+JvHa+Kvbjz69CrxNDSCJPoH6IBbezYA+BvsDC8XGcz5qS0Z3unZQPtf+epWYUDA+KvpVFWd5UD7RovXA+nNNPoEb6nZ311Q+a4IkYeBNSD71H/fehSRNPvLtyuL9Vzg+lvkACorsSj7PTY9F565WPu6CDvNisl4+mZ+2JQqYZD6aFx3a9MpuPuF+Kws7JHY+kK0TRltrgT4Ak8EBZSmIPszXWmgiEpA+ITIwN12AkT7sJjbzqxOHPoKSmQrQ8XA+i1FnoplKXj5BlOqUqtxkPstrbTbUWFw+MFHsHQ+XXD5aRCBA+AZVPtDKKnBt3WA+KG4hzSTiXz6/ylQAFs1cPqkdM0DJiGQ+gm6EiKjHYT7VhipWgxBkPouIdDsdCFo+weDcX7wIej5eBhVF1Sh0PkvEeO+VFIY+bgOO404EcD4vvbzS4ktsPkT6mjExHWA+s1xotLlbZj4Q1w++gmFvPlGZpKJ7yXI+Pd12gYfjez4tYa3kMHCEPndj+0X2BIk+bHcQBS1sij50LUYm/CWLPoaeWl8o6IU+xNkYwlhRgj773uIRvQJ4PmSPnMnrI3M+uIaXXXJlYD4hmc4fAlpfPhVXpHJ2qFI+m5mPzewBTz7kJy0k0aFTPrRPlFeW9FY+TX9mQF1UWT7RWIcRqE1UPjkqqcFhm1k+LzW7RC+pcD4BPaTjnCFxPoklGch083M+kH+LPC9/hz5oKVeSq7eXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3039\"},\"selection_policy\":{\"id\":\"3038\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ASjwmYeNQD7AQdwt9sI5PsLZYeRqDUE+DFlQkm30RD7pMyuRTzhAPj6hUTWKXUg+LgzsDrgmST4bEK8a/1BKPkAnhLSZA1A+qr1MjUk8VD5oB5VVBVpbPt14Z7FC0WE+tGoUaM2pZz5P0XU52qZuPiXjxxtwxHM+FdeC0SMQeD6BNVuLRAV8PsXXO+78PIA+/b2/PBvvgT48KaGeWTmBPrmvHZWGYXQ+wcFgzZ41Yj57ASUMmKhSPkvsnA/1X1E+a6nVW9IESD77MfdriFBBPm0L4vjPcEE+H4lx9NmZSD7wRIOegUFZPglmfF2P12g+JClHJrSgdT6GmJxyhWCAPn4hi16XhoY+pcDXwbzsjT7dG5GdN5uSPsFocbizcZM+6w4miUWsjz70V6nzOD6JPirrt2Ea24A+OXZLfEZgcz7hV7NX6x9QPpStT7G73Dw+TdxMXzEvRj6TuAdbrXZSPhY3OYpiClQ+6Q8tIMVKVj5ZlrJ8Nm5KPvmfXByptkA+80XepKM6SD4V+lStv71UPo/N6EwtqFs+AnSh6iBKZT4RSsPWbtptPpVZOHRClXY+oVCFHmDMgT5XBAuoYG+IPu5KOq5A6I4+LOqOuRSFkT5f4fg+UPWGPhB3hMSaRW8+3Ul2S1s+WD7UA95ryGNlPoXjOPF4NF8+Dsz+aCtOWj76pU8P5SVZPtCpTrxXSWE+R6K7jmK/Yj4hCovu2FlZPjlATzwmPmQ+OOHmvZiWXD47+17JPM9cPj0udeay1Fo+ovtFlvWIfj79q9UPkEh9PnufLNFTbnM+vQrqFbz8dT6fPfCmDyFpPolZ6RXPk1I+NLXWaIxzZj6JcHo+le5wPhAChGw6/HI+LK5fOOE+ej6t5BjFt4OEPoKHopZWHYo+eK+rZ69OjD7y5etdzDaLPsh3ApeI6oQ+j4ic3f81gj7rSd4BGsV3PrZSutApnnM+DHSZyXwvVz4w4sH1rdJhPjGWRnoZWlE+41clfS5vTj5oM+Z21RVZPvcFiqRryFY+bAmEZ1E9Tz4wzL4+FXFNPtN0D1eoU2M+j/gv0Iy0Zj4yUt09JfNsPugdBIN5+XA+KAG1s5ZWjT5z95NNYrmTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3091\"},\"selection_policy\":{\"id\":\"3090\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"ticker\":null},\"id\":\"3029\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"vl9xy49xPz5ZiHacA+05PqSiFDr4zz4+LVHMf4KjRT4Q6MAHPhY8PpvyBkrl4k4+VcvbmeOERz6r1NUNifpHPswCdokQaU4+quI4dotvVD4Z3YqxQ8ZbPmCnYgR4vGE+Or5OE15/Zj5K3T0vrCZwPrxo+bl7XnQ+T5T0tV8FeD7kwE1tbx98PrgXrQiRNYA+8m7RwHRNgj4VkTll03eBPv7uFqtIHnQ+cNIsPUn2Yj4mhT3znXxSPq59sK35b1E+c/g4vj0USj633Xr6Gx9BPg+7ii8Z7EE+BJJNcAjpSz68vVek5e5YPsrZdd7OzWg+pcKcll6udT7+sj/MmnuAPm+T8tK9voY+v434FrLcjT44Q2uWM1qSPtdla8aTbpM+bkRpIJoVkD4XIavNERuJPo+WWlUXAIE+B0eewlKrcz4l8RlgWU1LPszEZVF9u0A+KXzA5eyvTz6uCrvvtvxJPpKFbmAhrlU+HBvj10WqWj7aDmptg/ZOPo0OQVaKazs+lDmY0nQsRz4xLlt9A0hcPjyLdIP3IV0+lmz7cAHUZT4NtZURY8xtPko4hufZE3Y+S9d4cvCBgD6eEJtm1k6IPvXCHRgkBI8+siq22A91kT7TsT5iXMuGPqev+x2cZ3A+qK78FfXCWD4A7OREFPljPvYGm38CpF8+LrHuwFdDWj4e27YbE2tRPqwJlBm4hGM+1QBEn+6tYj6zvd3FWBlZPuzFM+axi2E+MxAE3KpQWj70szrRnXtnPtSpn3KkZVs+JhZF4klqeD5Bk++TCR58Pj5MKC0gWoA+h+tYNnibdT4jvBZKFh5sPoV+ZN1b818+pYmc4U3vZj7Hw9pkyNFvPvQjGY3B8nQ+7aFZWfCuej4phgtuc6eEPlx0IMG7+Yk+IArCCYriij7h/V9RdCWMPuQW4QTHRIY+m/O1xj+rgT6zKQ56li93Pq+N0p32yHU+zJsAtnigVz6l6JXnjiBgPuj0jGop5lU+rxeI/0KLTj6Ss3LRYs9TPiAqGATUy1U+DE0TN0iMUz76mG3zJNtYPlq0Tb9Ll2A+jCgVsf/baD6FAjgzjMpuPi4tl/pF/W4+LI2aRqMIhj69shZovoCOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3081\"},\"selection_policy\":{\"id\":\"3080\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3030\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RFw8117uPT5eXc+r/r9APga95+1CPzw+32CyGQmTRD7a0TYuIeE8Pg9VUFWTako+UbzVXgoMSj7QP7e2lmhJPiv5rXx7F1E+fuaHEMpuVD6E6IrtWfBbPtxfFdrsVGE+7QQJESO/Zj58aGdzzuluPowEJ2nyu3M+4WYp4ew/eD7OJUkAV4V8PianRz4+HIA+VDezzIofgj4m46AzADKBPmBTuuTHw3M+xiuAUKyFYj5aH2JZkJhRPp7RtVvkOlI+tFOEEzarTj5ttX3aYVZDPuNcEMf6K0Q+DNmiWulJTD6Hv+2HcshZPmYNhPH5NGk+O5gvL6M7dT47uRJTjwmAPv/8SiJzrIY+0/OM9h35jT5Q8LJtkWuSPhkclLpfUpM+clofmX0UkD5lBftF3rqIPjZsu/y+SYA+6J76ruyKcz57bWd4OBFOPgOIYXWpqDo+7w2BaCftSj7oPvldMbFPPmxkV0eRzUU+VaJaGwETSj5ej7gTKKxQPqGdNGwwt0A+J9VgzEOXSj7mZxADfptXPuIEXbPrt10+VfXn2ANMZD7lGiDKdUtuPrVbXhtFr3U+zgX0eUDxgD7lyQZQsV6IPrAkpZmFqo8+g4acn4/RkT4nSX+GLsOHPqYFxja4KHA+UpanJtPQUz5cCWQapIRjPiIFG5GsFF4+eOuQzpWIXj6w7LbXAJhPPnOKoeZLwWE+i8CCsNotYj5Z/ukLF/BbPj+XHkOUQWM+UeRa+eFKWz4bBSlbwJJcPigZdeXzimE+QRenE+kVfT6VseZkW459PmBjGVyONJY+qX9Ga5ITbD6e4sosbV1oPjvkJ0WPYl8+WqY9hZp+az7+uqJT3UxvPg5nll98lnM+T3rPQx+efT5jQk61pkaDPi+Egn6D8oc+Gni/nsWriz4lq/oWj+CLPoqQEwOvZIY+dQD4w/oRgj6Nvxb1cq53PrypRdeHpnM+AD9XxjODWz6pTnM15/dZPtYhaWICnlQ+ykVej5xfST5mEhOfG05YPskTT5oxU1M+01y8P6NnUD55QHSQuiNXPqN8xUqs1lg+rTG3CL3mbj5uz4NuEdNuPu5xSipPt2k+4N+TtUkUgD6v5qVMoFiGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3093\"},\"selection_policy\":{\"id\":\"3092\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dMiNEtYDOT6PKFHK2qE6PmB4fGL0sEA+VwiCOb5wQz7NdK5UkH87PpNwfByHy0k+dFdwaxkkSj5146wwlPxIPswUzke2QlE+W3sts5SkVD4f8Vs9jeVaPqwUe1Y2TGE+sMDhmTv3ZT4KvDWVG79uPv6J++tApHM+BpifgGeeeD7SEWW9EEB8Pm5gxvwgRYA+AVsstEUkgj7fp4QvM4SBPl2TO6NBCHQ+3ZEvxMUBYz75FXXuFbdTPvf99sj/7VE+kcSWcIySTz7EQs9z5GtCPvsSj+PrHUI+eNGgSwH2SD5UoD/lTDVaPho+EDbmhmg+JKL07dACdT7FHSvKOmGAPg/Nuw3aYoY+FWgMSmALjj5GzMNR6nKSPqkan5NwCJM+OGHrrqEFkD5PvSrI5N6IPpaY3la6mIA+y1TC2MFQdD7YFr3MTI5NPosF1ulhqDg+T8KFo3ldUT4OSuuw5alTPs9T9ekck1E+H0ihX31VTj4BbM6npcRGPuqXFD82P0Q+W1+TSrrPST72pO5JMUxWPhfIYh0woVo+hzndoL5EZj4YadQKHWpuPkTI3XPnG3Y+w8jxWV5fgj4z5s7jdg6IPtH5ar+zT48+csFMreTgkD6y4aD/gm6HPiryWMDTCm8+FqCXNezJUz6b2I0ABOBlPiAO/YL5/Fk+uFfwdQQ9XT6gc8GAfDNNPpw8h0debl4+cloNSLb0Yj6wL6ictE1ZPswEO99DYmI+S2a6CLXoWj5mqXCJ6LVePs38vWfimmE+9hDkujoEgD6feP57C+h8Pif2swnYT4A+ioQGrC4ScT5kzSN45RdyPsmh+iWs6mQ+v1uED2plaT7CdtHGk3RvPgTarQSuoHU+U4zGkRe0fT4kxt7bccyDPn1aYYTq14g+uRlHVOOUiz4Qhsw7rmyMPoGVJ/k/bYY+qIEdWONZgT5NybC21L94PuIsZgrDEHQ+xXbiySicWT7Q4ULcl/hfPpT6kVfniFQ+Dvf7M7p1TD7fJTjgTz1aPsIpIjr7+lk+7OhnhTPfUj5TUpEwDRddPnizlgUZGF0+W6HcqsgVYz7yUiNgYalkPhTo5l5sQWQ+40ByHUFchT6tmDQn8iWWPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3045\"},\"selection_policy\":{\"id\":\"3044\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wf1eOgUMPD63UdjHb8M/PktjjhX+4T4+slc1jEVrRz7CJuLq4Hs9PtjctxfBr0k+t1CWSEhlSD4eRocZYodKPiVplVsVA1A+k2jP7kReVD5Iu8VLeP1aPmFndhJMmWE+CMkJIrleZz40D+9fIqpvPn1kSiE4anM+f6rO88NMeD77TZc9dn58PqSwuikzEIA+sI4oWCjngT6H9Z+3bQGBPsxyZaheYXQ+kQnaLwatYj511gkllrZUPuSlXimmBlI+jWNehH45Tj6F4l9+9Jg7PjSVN/Cla0Q+gJ8b59JYST4Ciy8D9AZaPjs/IC0b22c+0VTMKSoSdT6YT8Kqb12APuPv/07RooY+HE6oZxtHjj7wNQJJiIGSPowFvXJKoZM+202CqhQUkD40t7aO7VmJPsFrbegLqYA+i7NXNnUMdD4oaSD1X2xMPrUCyw0YRTE+2ycefSaWVj6caomgglhSPkcpHDwlyVA+ujqo74PDSD7QXll1R6JLPogqgV5BNz8+y0gY3m6wST6poERq2cNbPkXv7xdCdV0+As3GLowuZj7fWLKUPl5vPhepLydqBXY+KZwx6rA7gT6aZtcTV1yIPlFuwmzqgo8+uHZ7MRGDkT4uZHBh702HPgjW4ptgnXA+o8oqw+n2WD7Rf79JLFNkPvMH18sWxl0+bGQP1ySPXj6oMnvqxjtSPuXlEpuf6GM++Nqlbf74YT7fFiRj8gZcPsG5/EmhFGE+MYpZuwdIYD6y3Zas+dZZPiSSvONwHGQ+d3XlZGaUej7a7FbKxM13PnWuC1OCHIE+pvyMAP4Cdz65dMcBrdpwPjjUGKxedl0+1LzTI1IzaT7vDKYPGgByPlAhO+xIvHM+BdMQEQE4ez7/P7u/fGyDPsfv5emIbYk+2ldAFLGEij4MPHG0beKLPsk99+wLU4U+yEWYEBDigD6M6ZhngWN4Pp8Tvoh15HI+8jxwy69pWz4ulSmQiIZaPlCk7CLtf00+9MArRYWPUj5ToqP04dxVPs/kxTOYIlg+Xj7UoGy+UD6QBfBimkRXPpuaJN1L91g+7I8qoyF+aT6OTcbZdg5xPsVlyKdVQG0+cvmHWrMqiT5QwVAE6IuIPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3051\"},\"selection_policy\":{\"id\":\"3050\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"e78cDVkhQj7NrjY5NSE6Pl2iqbSyK0A+pdP35G7HQT5dO3H/HQA6Psc/74AZk0g+E0g+7DVaRz44G1r1JdZHPljShJCILFA+7w0ChoZxUj6XMzIvAFtaPkhcFQKTxWA+PJx09Tx5Zj6xbCHj8sluPqqG0KZao3M+SP22uKr1dz5Xmd1sS1l8Pr3YYO51RoA+/IL7pY/qgT4gYM3KChuBPidfVGFHU3Q+BP03/OugYj69BsjB7y5TPn2h5F0J8VI+a8aEsQUXSj5975OhOpVCPmHQjbMlnEA+gdb92srGSj76CuLPl5pbPhkghrG7d2g+uBW+r5PHdD5HMTwkcHaAPsPV+hPni4Y+z3JYt0SYjT7uEcl/zLCSPjonLQNlsZM+bZS6X2EQkD7AtB1T80OJPs8yIZ80tIA+hZRdTqLGcz5Cpm/kwWZQPs3tdfCu1Co+Q3xQJUMcVT7nQfC4aFNTPq5iShlJT0M+ulRFKKwTVT4DA43BvPdHPoePE8cyV0E+77UHG7w3Uz7ckeac1yJaPnnMPIJ7N1w+f5dLfLw9Zj7tdLvM2RxwPmKMlZOC93U+pDMWJWkAgT60fGUAY+yHPtdIlcp2744+CwHb8VGmkT7asYuS7amGPiyr1g3OEnA+IC6S22YkVD5QLNChpOpkPqKska+PuWA+HWHxv5bBXT4sYz2qXxhYPgkhXiEgWWA+dfQoLBNfYz6Ll+shgsBZPp1RPu3qXGQ+sAFsK82jWz6Ajz6ffP1XPiLKN2yjUVU+PT//MvkrgD5EcWlq5V2CPqH88MNN43c+I+i2DHkocT7Q/axZmL1wPrZwFOKMl1Y+1AZG/vAraD7hAhiqAylyPrYtvizGm3Q+Yto8Do0uez6OnfGli+aDPsfVVUgw0og+MUMt1CTRiz46U7s0BciLPilYm5zdX4Y+k4ahhHYxgj4DCKedlat4Psvzva18T3M+ZTtlEWtMYj4OpKUAW/hiPgQOw+FYvVI+yQMYs5pBUD5Uh+d5VV5ZPrSpDjlRF1c+Z1oYc2iKVj6wn6I/f/RTPtgDbV3nz1o+CsK4ScMCZj5QYF/1SUJpPuRsBn5+HXA+H0B8RCpShz7igspkBOebPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3037\"},\"selection_policy\":{\"id\":\"3036\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nYIRiqrHQT7sY8HpaHs8PogncxF8R0A+Q1qynBQzRD7FLu9ExMA6PhE62ZcBJ0w+aCsxzO/UQz7eoFG4d95LPjMc+ZQQJlE+cgCexxKEUz7tQm9SUsJbPvHDRXh+imE+PKZor57kZj5wEZX/1zFvPnHG5FXx5HM+zFPltXQPeD5jnFK3CvJ7PmKXWUs5AYA+UvyThYXXgT5JrAuR4/uAPv4KhmdLAHQ+PXyWnV5nYj74RLP365pTPgTf2geZ+VA+Fv8axJ0FSz5xnXhyBYI5PnVzouzJDEI+Pi+AvvbtSj7SGJ79tZFaPl43k0n79Wc+6LHPlcR+dT5r+SnUlwmAPuz+1wmkX4Y+aGyfLDnOjT7AaGXfy7+SPmgS8TV5ZJM+GIF1nVojkD4Y5E0CXCmJPjqRSoEP44A+EDjzUsYsdD4Pt2Sg+whRPoZ8BW2AQDk+7jUqj/I5YD6ze84fgWZRPmfIVvTejVc+BjXAFFVkKj4wVzeEnXZHPrkcSePLmEI+QPRbDCayTj6Atm0W+r5XPrOafJ1XWV8+0h0xFcFaaD4Xny6zgn5uPk5oyGU8NXY+Uv9PphaKgT5duzAGXH6IPkPWDDH8Vo8+Ns2mTK/NkT45F49lBK+GPmjx6PTseWw+DWwJXKPpWz4oTvC1n1FkPtqHRY60QVo+Mb8/UU3qWz7kGtXd+m5PPoB80g9VN2E+r82eqY5XYj4OU7VjQ+tZPmjRqs+45mI+NS2vNzOAWz7lzvEGw4pXPvvXpukVW18+xUdOgywTfT5X8zDf/y9uPg54KM+r+p4+/nNcmC9QZT7lw2yb+oFtPvhS7i9vNFY+T75cpe7faD5pd13F5gtxPjAxHVEgSnM+l0CmCsClfT6ctaHaimWDPk7lVx0BYYk+ohr7G6YMiz7P7sOsvJuKPs3995V7BIc+EBpLYD3MgT4HJReEeGB6PqqfFBdQaXQ+vr+qOGVGWD6NrAg8ZcRkPt3IEWEvXVU+zo9ncJqRQD4LUpbxf1dWPs091GpNh1o+bGFXTw5cVD507lUtWKhiPszmDLVch1Y+VXAC9woEYD4xMRk8VEFuPrJd/8v8O20+E43R0BFRjD4MLmDxrr2UPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3075\"},\"selection_policy\":{\"id\":\"3074\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0ER+wfFfQT524S79ews9PsnJOhCMFEA+16S1eUFwRj54NXPY47Q8ProAc1xQWko+D+g3UnGhRT5S2/46DtBKPthFkzoRpFA+3MzwnuA+Uj6PNW74Q19ZPtrAjhqmTWE+sbTqD8V1Zj5mHyCtCltuPgpQ3lVWE3M+3r0gQRY2eD6+KYCqfZ18PmjhENNPUYA+3OhBpKf7gT5tGeOUG0mBPp0urBKRInQ+dlMWVaejYj69tyP45INTPlzBEUzWCU8+Br3mdGxoST7jOkTlpUg8Phr3YousG0A+LFNELYGjSj7T1tmY51xaPtxIQN0DQmg+ksjxbviKdT5Fa1hjyriAPnTYtk+9uYY+v4DVcaMYjj4m/rEW9XKSPo+4EP+wL5M+oW+zWYTfjz7HMC7G6+qIPs58ezZe3IA+eYBMvQYWdD7f9QHa9XpQPqOAzZ3fAxM+2Z7ZKHGVWT6/F3ucS24+PiIbOd1U90o+AvnCW6ysUD6m2uS38qpPPi3YOtstUUU+Z/KeyeVfTD6Nc83I0PVVPuIiLpeuLl4+i/OZMJz8ZD5ro7adPDNrPhuTYwfWfHY+IpAchdAngT74by0U2f2HPtI3z+juAY8+pyLcRLnfkT5g7YAV3z6HPmxpRGPrfnA+bNfm4mLIVT7FhKfZDzJjPlIIZGktyl4+wMQJEJwgWD7PpePTQ8dOPg0mWhDZpGE+nqXFFMpGXj48RtVFl7BePoWBTX/PR2I+UknFkR7FWj51eyaPwlhaPl50Fr5/cEY+OSs2MQNscz5EZjZP0QJ5PnSIeiMlAYs+Xtj2w3oZcj4Wc3zDZ7JwPoS/1PTptFk+t7yDSlqfaD7+LFvkA0NvPsujU6hlrnM+mn0+Zq0Dez5aji11OwyFPqf+LT+Xsog+JLyIx/M1iz5TT5WBdGqLPtGdQ4CkeYY+JFlZHRiCgT7Ke4AT4JN3Pg4MI/3DYnM+zTACsCERUz5gzomNuYpcPneIN1z80EM+UrYjE5tjUz6pYL+osqNVPoBhBWXNAVg+CXVv/B8SVT7zALDp/ZZWPjoeReKIi18+hMssO1U9Zz7T+3pZ0bFrPv6EITctinA++tPGn8MdkD4ewxeUYCySPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3055\"},\"selection_policy\":{\"id\":\"3054\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"969wDTiUQD7cIyjRwQxAPiEwOQbj3kE+k050uFTBRD42C1VcZN01Ph4rgtK8Q0s+4wMNMrZRST79fKiZUVJJPv7942ni/E8+qAAl59H8Uz57zQxLBJtZPlXof8jlnGA+ooQJr8x8Zz6JRu5xZrxvPnnnY/e8W3M+2vJOPOF+dz5DaHiRo3B8PpowieVGUYA+zneQ+f0xgj6o4GGZSmuBPoUNU8hlOXQ+3tR89Dg3Yj7gdt/fGcdSPgdCu8CFiFM+ilUy/r6nSz57Z1A/obFJPsaEeNCdmkQ+vFRtHp3gTT4ZgP6z+hVaPq6DnbtRyWg+LWTo8F7FdD4M2DtHp7J/PnLh841nw4Y+B+dRHzDsjT70gTVVqkKSPpRWqMeGOZM+Xt2P14kxkD4giDoj4b6IPjNSX8kzqYA+Kx+ciDqncz6dxGFp6fVMPj9sUhKEWDE+g89PmDatXT4LpQIp3lNFPrER0MHiolE+uN0qA85RVj4JZbYEVhQ2PumzuGQurz4+x0+GXQEyTD6HOGWDkexUPrpNhe6dL1s+5lXMKDfSYT5OECxyG4dtPhuJ+LV6SHU+SeeCZXRRgT5onUUKGNWHPrTjcl7nB48+rqKUZjDOkT52V8fgZo6GPgClV5451W0+14jpYcs9WT7BNnpJUHNiPkFG2m6Us2A+5Lr/ikE3YD5R7TTS3PFaPsp8KneFQGI+CSH4QWV8YD4jD1/0nSpePkbrtQGnDWI+hm7Q2sXwWj4nxoEliblZPl/24rRK+GI+KIKe3LdOfj525N+VFkd9Pu4SYmisF4U+NWmYX9Y/cj7z3bTBNqhzPoA2S7XOGFk+OMB4WCRUaD47PeFuw51wPjh7DbluCHM+0HczcFnLej7LcNckeLmEPimwDnD5TIk+A1WmjSIkjD6gj6aXkHSMPiDgrLQt1IU+PwvYOttcgj5u5NQQGVd3PjQNrtq5+3M+2rgtjEpRWD7lDCe8IjBiPpiN8bBgw1E+1aO6kxBxTD4b0VNchdVYPofLW8Jl+lE+0GfOUzI7Sj7D835qHVNTPhGW+ZC2hl4+P0AAe6OYaT4W2cMU/9JsPtmixO/nUm4+JKOxjelHhz6bryumAG+SPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3077\"},\"selection_policy\":{\"id\":\"3076\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"B1eHykdCQj4MgyL/MyY8PuseI4ArkkE+5y/I0chpRj49vFyT6r06Ps0E4GuhWEg+vuok08S8Rj4BRKkyBFtIPkfVX33pKk8+eMTW2vEHUz7J4Dl/XTVbPu/DrkGQS2E+TvrF82AbZj6CZj5UeQpvPjQwnBnEeHM+TlAlUE78dz7q1S3G/iR8PrEv8+RAQYA++J9Qr0URgj540E7T6VuBPjaGdedlw3M+n3m+5mkoYj5OIrWC+OZSPgcDc1Xx3FE+Oa/xjkkbTD7GQ8TLPNc+PrHTRVTIcEE+VTOde6d5ST4ITGNkVcBaPtPrSKdx7mc+5NDavNnAdD5lAX9SjwuAPlMQ94n0tYY+JYvY3PPvjT5bO9tbYT2SPnBzMsCEUJM+DlS7W58ckD4GM83SK9uIPnXlKlTEn4A+V+mv5e5fcz7kNUDZSxFQPv0/iXZGEzU+c+Fa0g6RSD6fFGJ6B0JSPr1satxr0Us+lcfOty4gUD5T+2FDZpZFPnvRC26cLDc+/4JM6Cw9ST4ttDxJEXdWPi1LT2YrAVk+Ft/vgHKpZD4540MDNUdvPh2LRsGB0nY+QStHuH5/gT4g1rA8yCCIPq1ynyHeCZA+BgPmbT8kkT6MKOwT9UeHPgU6M5NCNnA+5WOkhzKmXT7fNuNDiNZjPubm/6JkjmE+VClGEWO7YD6cgjkoOyNTPnrg2i5jJGM+/06tE8YhXz7DwZf8M3hePu1uzvb/ymM+k6wtuQPBWj4r3V6YOLdUPm8uyYhYS1o+ytuLY+8FhT7UcF/SN6N7PtzmW1KXMHI+XLhZB8ecaD7sXv9f0WRyPiHtIaM5j1Y+xDN7wBt4ZD4USuIM809wPurQtJHdU3Q+oI50fHdffj73vbMLBUyDPqBofGQ9jIk+h8xQjUdiiz5HNgqA6SmLPuY1FzP6VoY+voKz4X1BgT6DKdEFStl2PhCdShHPCHM+j3AiV48KXj5V4iltnNRhPorowOI3SlQ+mOqHVUt2UT5diMWB5cZUPg1ygApmllc+63M43DdvUz61y2zrPXFSPi3bvhEM7WE+yGI0SLhHZj6QIWXRgWpyPno+nV55WGc+02wEuejkiT5RO73OlNmNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3047\"},\"selection_policy\":{\"id\":\"3046\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"enDWtFHSQT5oQgCag/g7PrPnnzBZp0A+uf4WXbTcRT5hTfXLURQ7PrzI+o7kkEs+UUeGH4WbRj6VYUIVoPFHPvr3vSiLu1A+E681nkOLUz7UE2se2D5aPrjEXfsxG2E+DlwbcFFZZj5TT2sXb6JuPrS3ng50y3M+uJqHuwd3eD5BckoLfGZ8Pi46AdXkKYA+OIEekXhegj7eYc9Bj0qBPt0c+feQTHQ+tYF9YKIfYz5OVHFzq3pRPrrovA7+v1A+Gj9LhYPhSz77nSTkaThAPvtwA9q7uUE+2LMi0kwbTD4wZHjTsphbPpGFyHhKvWg+hiYcnQgJdj6/JPBghTiAPt2FZZS1dIY+6ZMR+ahujj60CwVkeaiSPnGO07AOh5M+qCYTs3EBkD4cv8hNRMuIPqj7I/yDqoA+eUJjhGOvcz5gFH10vMNNPmRujMQMYjM+ybApII2zVD6T0KmMYwtPPhhDgONf0VU+FaPS3ItEUT4rV8ReIpJDPkEbcDN+Vj0+G+HRBf4LUz7f+2HtHIxaPnjtptcQFlw+JSq7rY4TZD5JhkWMURNvPmjGUI5jW3Y+At9k2uKHgD5ZBP2KS/WHPr0lzo9JDI8+bJ7AdbhfkT6jyVIFZXqGPptiKgD7pXE+Aj6rOXMhWD5lrtfJc2VjPgtTr3gnWFg+HSJ7MfOUXj7N4cqKortXPsXPcAY7a2M+aGJkx8I6Yj7idstNbgFcPsP9nA2qU2I+b2mBOVSAXD7SkXskZnRjPvwIZaxuLGA+WlWTj/t5hj40yRBitWxvPqmB7GwH5oY+Eb8M+a+tbD5v0XilyLFmPnm1uiRmZFw+pZwuxO3hZz5suWaocA5wPssYcy0N53Q+lk4PBgRWez5NElPro/eEPtiu7UdU9Yk+4HICQ7aDiz6PPI3P8BqLPqql47hPN4Y+FhLrkKkTgj6tDXnDC+F3Ptud2dv6C3Q+JNIgXTiTXD40VMinC3NgPpSCk8P+t1c+51HqE9+vPz6GGuxnQbxWPkmtToZXrlk+/h2rIamaTT57nZ0RKwRQPkkCy3mfnFw+DOnVcGzJYz557pEctLJxPl1A4WEp03A+BvAyIlh8hj5dhJmgFByOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3085\"},\"selection_policy\":{\"id\":\"3084\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3032\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+6ZAs+GaPz4+0ZDcmi49PtvN92WiB0M+HeNw4hvvRD4Cfq8VuBQ9PncbXPabD0o+968agJFUSj4JtkzYUqNLPmnyOzniF1A+EswCBYSkVD7FYFs7x8BcPuTuVngwzGE+BjD8zTwiZj6mdKq8pDJvPn06gOgonnM+t+rRSRrMdz4oBhvJ3kt8PtRxhagIVoA+jf5invgEgj4veYz7JQ+BPg8A7W8pu3M+9eCuaeW1Yj5eT6ZHDvdSPhUalTLmJFI+PCHtaw2oST4wSqB+F61APugE/XE0rUI+ZH8JqNUMST654orSbJ9aPqZbKHj7YWg+MHrNXi70dD5BeGdow2iAPmD8fZ4aZYY+4nFa92YLjj5g1LxBCmeSPrX9zWaWP5M+EJvxyoNZkD7TEXYk5wSJPoxuKNcU2IA+V56/2O2rcz6Y6zX3og1MPioaY5X+gDc+5CgDS7/1WT4v+7aZ97ZRPmuu+3ZHo0M+QTTmevttSz7NsD65oBpWPizmNW5EvUI+ZKr0c93uTD70hNqniMhZPvFon6X7sFw+mcrK+Gj+ZD5bSiuNNSBsPgFBahIYAXY+J4qZyzMwgT4pcX7QoSeJPh4heDgHZY8+cenNYXI0kT7jxuLwEdyHPpOIz2rAFHA+eJFPs+4rXD4SKTjN3wFhPkq//N/tWlY+zIsvlkN5Wz4puttgm75WPphN2Mhdg2A+j7T2cpfwYj4HfPOYpRJaPl9kcEZtvGE+EaTm0bh8WT7gIrpWEuZcPkZO5xU2+l0+KVEV3IK6iT5AEcJZQ5SIPqd7bkqjtYE+yJw5RXZLdT6wj7aE12RqPvfp6RF8J2A+b+nDFoyEZD7qchp/AeBwPgKHXRITwXU+hvrNsl0rez605ZUeJ06DPl7PzohCP4k+IiSpqcWFij6T3BM4gFOMPmI4PHB0iYY+tcmgO9Ingj6XKvPFnYR4PtS5fWeWfHI+eW2pBEXOXj5lRyQYaMhhPh1yF2LaF1g+aL45Nq3MST6PzBKrH/dQPlujnHBQ4FQ+XFBXdh3uTD4hqcRZQs9ZPj8Q3GStOVs+4+6QNlz+az4z3otKyHhqPvkrvaVmF2s+Eaq6aWXXhT7fsEWEX9mRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3079\"},\"selection_policy\":{\"id\":\"3078\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uMCtQavjQT4cqlJihI4/Pl81BrhJvkQ+1C6kMJEYRj6e5F1T7AlBPoXemwIrtUc+O5e9Ok0TRz61nefj8gBJPumHnJNjrFA+4pOrZYcaVT5InkpkH39aPh9q2QPxeGE+NxD0NJTFZT5N6+ZwYSNvPrnXGxMH33M+Vma7YKoZeD7eojKEMyV8PksOZciaHYA+3RE6TLDKgT51itvWXhCBPmhA1yLpiHQ+412mXtU7Yj6VNAfCBXJSPhGDi+JWXVE+FWJ/383UTD7g6N9jEZ5DPhv52Nh7ED8+mTB8OsdzSj4/EEun8uhYPoA7+IucYWg+KWf87QJXdT7zgzjC8WaAPi3uCtexsYY+k/0rUlBZjj4nK0XRElCSPmjNcNM2nZM+J6NravAvkD5sLYmXm/mIPjSrRAoI0YA+MscAKHB4cz46SPheOHxMPlShj9U/bjU+PfkE5HQJVT7u5c4KQmxPPjAODJSsgVc+hoPLlzORSj7EfTrNEHxJPlG9EFp7pT4+ouNhIa/BUD7fhQdybipYPsxJec4MKls++4DZnGk7ZD7A/I2eaqluPjeqfsFwvHU+7Ubb2Ah2gT6ctuJMmiGIPtH9x7NCOo8+rzKGO5GykT6IP1Rj8hWHPhJ2Kn2mVnA+r6VfD8PoVD6sDTi/g71iPpJ3fRm2sWE+47uQZlB4XD67SquDqY1ZPteRSf3qz2E+kUtJ+B5KYj7P95KpzEtYPl+ONYjsfGE+pK1LbN3NWz4Fl3lL/5taPuPSXR7AxV8+mXVnsgT9cj4yYCBtzVx9PpKRWXxzJXM+neVKA3FlcD4XOPYB+oBqPkBDGBwog1w+c6TcAntzaj73V0qjroNuPk75noIhHHU+lCSiUumuej4iMg4nTRCDPuv6mWsATIk+yQyDZf0+jD6H5uNRu+qKPkx9X3qt8IY+3VkCGodhgj7Pic32RiB5PjGIQgPxcnQ+faBltCP5Wj6bBjr686xfPmASuWk8ZFI+pXlyhjo1QT6QoYxSqn1OPgYMId7W5lo+t7VIF6LYXz6AzJVPiL5iPjaX6DHIrGA+HtpRTFHzVD5jvLsVezBwPvPMV1yEq3A+YAgzct94jT4hjtOiBO6EPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3083\"},\"selection_policy\":{\"id\":\"3082\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+m2gnM7vQD5qp85w0YE4PujbkiYJ+EA+00HvqcydQz7MQGCh5hE1PoSJzn7e20g+pupbzLdsSz6ppAzIBh9KPqnSMqENNU8+xdrPNAPfUz4ODALAhWlaPiTKXdu1ymA+aJheaL4qZz5d0OXbSjBuPhHyr/y/UnM+mOBFsq0QeD7N7xPvnqN8Pi8JCE4yWYA+1L0jr6sagj658Hd+GDOBPpoG0V7hSHQ+BrCcoxfvYj4R07LbWIxRPt2MRmXtFlE+4S1yE5fDTD4Q6JtpUKtCPh5//AoqrUE+mC7gywwjSz6FlkBm4Z9aPnvbNk5iaWc+pq1J00btdD4FhvQEzYKAPrp/l6ZLuYY+mmybsb2+jT5sdPrrKG2SPhMrp/MjTZM+V+ftXtwmkD7Yhp0cIVOJPm4ARIlB4YA+iJ5zp3ixcj4qu5gEpV5QPv19u0pSmj0+hjqbn3szVD7NW+FP3jROPrFZ0BORSEs+IgZNNq2tTz40hKxxIgs1Ppm5/WakTUo+ctS6y2TUUj40NhHt6uBUPhiNX25Td2A+/wEFtXl1ZT4NBx1uZZ9uPru+vXi2A3c+Wnw5JNpsgD4m1ACXeA+IPh3uupC5E48+6Arb2QXrkT4yQ6FoPDOHPlVbPQo9EXE+SSSfO63AWT7LVfEfn2ZiPq+2t3jVtmI+Dtt+Fd1yXD7ba1tZZ3VRPgWS6m+jXWA+3YILR3ZvYj5a4tcCl4ZZPr6bQ8SVfmU+puxA/tpOYD5tOtOn7fZdPhlP42BFEGA+WdxW1qa6iz6P+E9ADRqBPhpCiAq8bHE+3tAdKE2QcD6xKm26AgtwPlvAk+CXHWU+4lSuSVGyZT783Pco0JxxPjqg8KSZ1nU+pPNftKWMej5FY1k3rrGCPif2LmzXk4g+IqvsIfjdiz6OPc/ooXGLPh7jMhG6Roc+9Q3uaHR0gj5aK491yx53PvujeNy0/3I+6Agc8+5zWT5CDF0hP3BhPnKBR3LcKVI+1162jnikTD7g6tqeDgZaPqgtLRSbSFw+TGXEyt9uVD62G1NupG1ZPhdAG2g6kWA+Q/usgg8eZT67ucyyRjZuPtD2yXB2y24+8CTNeQyAhj4QKPBkOQmIPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3049\"},\"selection_policy\":{\"id\":\"3048\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XPzBATVmOz7bhXtzJVk+Pofjr/WwBEA+odPbzTDaRz4sDI5/gOA+PjeAlh4RLkk+oLibB42MSj40N+TQ98xKPiACsde5z08+mljetnsCVD6IKyB2BLlaPqr5hVB9nmE+9wBCxEd+Zj7ulDREFt5vPmSUK1kHanM+n3cdknp9eD66xSPEQkN8PsNzsBMBQoA++VDU0tdFgj4noKNrUyiBPqO+sA5cGXQ+77b/5JUuYz6GlU7mZTJTPukTdNb3/FQ+TAqqVBTpTj6RCJX5byBFPiY4+H64dkI+BT5RuryfSj7akIIEAEFaPsfkRemCAWk+gzFhyhLDdD6gCfumtRSAPr8k2HTiTIY+FVtP/7XMjT4ulJMA7iqSPqFeM5J8VpM+pmi1sI4OkD74iMk2BkiJPksZPnULGIE+3cBWlZnFcz5arV21fi1OPrNcluNbwSs+wYXA3pFjVj4pXZ6Ii7BQPoI9VuqDJlU+Q5uLtEWtUz4TBCN3VBxRPt2ugHr6ujE+633GSVB1TD6klflUWl9YPr06czOufVo+9XmpZVeaZz5yjrbWLnBuPqLsunN5RHU+0yXDoZkqgT6jTiXtQV2IPlqhyLEg7o4+AT/+OX1mkT4uFla4sByHPgoPOl5PlG4+G43DO57CWT5juP7KBl9kPlSm/qGKNVs+TfB7TiaLXD7RenPJrZJSPlXMpObV8GI+xdNNXUBJXj6ENQLd+URcPulm6BDcwWQ+bkvanDkgVz5EpUdmhFFkPnYazw/wJFs+0egMrUq/gj567S1FFTR7PnBPuGYsDI0+9CgNeofucj6D5Gga+xt4Prw0nQLP21o+2SQ3RSf7ZT6p5elOatxwPo3B5uwPcHQ+w0JRl4+rfT5he2ByBjSDPvwORuvwkoo+mS0XKjdRiz5L73/0uvSLPr2fgCw/foY+THqyifdGgj5oS/tt0tV3PlRaph9VZ3Q+Reg8xQILWz5xSwXTMRViPiAThhW/F1U+QpczdRKsSD6eL4Nr6HNSPkRmK3IlaVI+hM2K3G5GUz5xDZ6zdS1ZPr4+95hZbmQ+oYBPb0KrZT6eXIvqGb9sPrCy633OOXY+9EyBBUXfhT7DcuXLKfqYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3087\"},\"selection_policy\":{\"id\":\"3086\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Nm73Yze7PT4QUl5Oqiw9PvFrci1160E+zdS83MhZRD5SQdWAYpY7PqYAFtBClEo+dOSTB4BPST7fsb1E/K9JPvVCJQ+FoVA+dtwJsZFCUz7kSNu4HfVaPrwAgrcbuGE+QAk7/5vTZj6KFBUGG1ZvPibsQMJVUXM+v7VMsyiTdz6/gbLhS6N8PkCmgeXJUIA+Nn2zmLTfgT74iQa/OiSBPoU8TK4Vx3M+c4sFNlDyYj5qlLWH7MRSPkdK6ojM7lA+o32jB+D1TT6Pm47FyblKPoRXH00RxUE+1+BlT3a7TD4LNh+0xUJbPshWWz94nmc+PXTSP2t0dD48x65HNGmAPjOu3PMCgYY+C8CBserjjT4stmEVIJOSPoDeLbzi/5I+5ouGG+4dkD7HTXbdZhmJPmdJz9GNzIA+z4pIi9jFcz7FoRSl5ztNPiRAKoYPmjE+KjdNlDfsXj7DnThmLj5RPr6b3vGfklA+15mmfWwqXz7kv1ekL3lPPksJUjfGSjo+769cj9isSD6BRVC8B9ZWPrAA4hNCoFo+hU1hq8q8Zj4T0IgUtNduPjwcqk6LoHU+57YX8QZIgT5D3RipMYyHPq/5lamCso8+71ysqedOkT6qEjaOPAOHPunDrj7Ad28+6ccJP+JaWj7r+RaxRo5jPkHHRIxz1GE+iwusXDX7YD5uzPCdLhZUPkvQ2ks862I+BpRWoo2WYD55tC5lNatZPmMeQ8fR32E+4oHJJBWeYD5kQfmapmtYPkRW2vNBc1k+adNfqBq1eT7nSKlsB6yAPqnNM4okCHk+4D/H3ItXcD7mhJsF17RzPqTavm6Z7GA+hGkmT4JYaj6oroecYGRsPnMJ7rfJGHQ+TuqdWEOHfj479i1XctmDPi8oJDKoCoo+NAHSuZUqiz59fzVYjJWLPoqcxCJXY4U+0CQRL6/PgT7RnDILyAh5PhIV5Sqb13M+S9vGNgdZVz5OWqnk1S5ePrj/ZUJXUVg+XoM1h6OfQz4Z+aaLlllRPgFhIK8RVFg+jRGu/ZU6Uz6IBNZ7ug5OPus49toDaFQ+J8CE1cf1ZT6glHvzMdJpPjCUDotsDm8+QUJ7ORAUiD4OEl8tZ9GUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3089\"},\"selection_policy\":{\"id\":\"3088\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lXBVat0gPz56c6QPEz03PnQOIjp73Ts+796dSGtGQz7F63KRNX44PraG+gCbFEg+KW7lazg+ST44bstWHc1JPpIfvuV6x1A+/qb4zqTsUz4Ms228WgNaPi2zJEISymA+sajdASmlZj61Wy1rbtNuPgatlQHIpHM+InUVHTgWeD6aQc9YBn18PklwW77kToA+lvOpuNU6gj6xGjXzHgeBPpdbREY2JnQ+tJHGGfACYz4xGfHyyEVTPttxJ4btq1E+roI5NO6CUD4ClQcEnNhKPiB+iVsXh0M+81hpduhfTD53OAdk10VZPitev/z1bWg+0unjoUm6dD5hPfTCH3WAPrl3Aun3woY+Y+KjJ/UBjj7d6sGqm46SPiwqZbc8Q5M+LggY562Djz4GnZcJiw+JPoZKg7k1fYA+7zd68eQZcz4rtFcCbgVQPuvQk/zK3C4+T8OSd+mRSj4PQth0t9o/PmzFAIeBv10+PFyKxkeBTj4IRAWqDUtFPhkh1Q4k/z8+lV1njkI8VT7FO/1/SoxbPrsrbdz1ImI+xdvxynjCZD5IsIULt9RrPvAJHqJfh3U+glASS25pgT44sfwm90+IPmvhYmj8Eo8+jSQk4wWxkT5VxIm2cKyGPrHYN2oYpG8+/+4KUu0yXD505NhzrIhkPmUbErUUC2E+oz0CcnEPYD5bv50jvaNUPkJABxV0X2E+1T6jnx/SYD76QqzuOWdXPilmf1OI2WE+wy0JSC84Xz63KMN/QLlYPro2OrFzjlU+2tRJvxl7ej5kK8SphsJ/PrI4/IZqmYU+/j2ohq2iZz4ipuveqglpPirvzaJGzlI+x4rLSAShXz4roKzjNzJvPl16X6hwh3Q+JHVNZ+bkez45f3gADYGEPlMnaH4eB4k+ZyTHbOtAiz6hwCLvRy6MPokIp21ldYU+E6fAlON8gj4ORBba1Px5Phf0WtVbGHI+4Tk5sXvmVz6gA6KgBNNjPtTKvPpYMFY+jmGa0a5NUD6rrHFseyBNPr3Tx2Z2Sk8+9Q1AU1CoSj4yg4uCWwldPsm5QbIbVWQ+r3XldicYbD4g4GuUw8tnPqZE+qkRgmE+UgYdJH7KiD7JnXJFImKSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3065\"},\"selection_policy\":{\"id\":\"3064\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3029\"},\"major_label_policy\":{\"id\":\"3027\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"TLoHgmKBQT7nN45WSCQ8Pg2YEi2X40E+OuKVrrn9RD5jCITF/KM8PgQc6O5wqEk+U8pCQc8JRj5ZSMM5pBZMPmC84qxnilA+0rY4tY+hUz7KpP8qgUVbPmtsX7/LQ2E+5iCzpIxqZj7ZqumGM11vPng2Evu+cnM+5fd9ifusdz5qes7mNCF8PqBOte3XToA+OSu2v25Bgj53c0wmaCmBPn3/yCYVOHQ+W368GxP5YT6zW7kvdINTPtPdUgAEGlE+OCKkBDs6UT79epNdGsxFPo9h1aY0+UQ+07NIhM/dSj5FX+fgaLRaPh4I25rZs2c+SJiymbSXdD7La9+19dt/PrgsELTQiIY+nLgiZ7U0jj4ZT3HjyoGSPu0hVFWfO5M+HFbFFzdZkD5PkDrE9veIPslRTgKqqIA+spvviTg1cz7UmN7PmF5NPs36/x9T8Sc+72wj3n3ZUz5QcE/3FlhNPnLSlbi8HEM+BZB35NmVUD7KQsgcO8Q/PkoJ1W9hSj8+KF6aou6/Tj4Xz3GttltWPo8NSHdBNlw+MVEfTxveZz7PUE259UFsPi/57THb83Y+WiYW8MJJgT7kzcoegMSHPp19Zpu99I4+JoEtctaekT7SxGLJGQaHPhjWIp3oYXE+3fsZBiFDXj4Nb9v56HNlPjM+y0GkGFw+wZVsL94pXj6+xTsfvyxSPgy24wKslGA+wVrhWacqYj64De+pVp1ZPlJlyhpcV2M+4ZhW2Rn/Wz6AtQ4xKvZYPkXjLKNknlc+wzjcemu/az7HwJbiprl3PvuMj7P81pE+KgQYkj4scz60Zd7USJV0PglkMPJvylU+FqnXtrUfZz6NoM06lUNtPjHWNscNUXQ+Fl4bgBu8ez6K2W03e22DPtqAaIYyAIs+nR6g1XGyiz4JBrKmFiGLPiqu83RBI4Y+ZuH6ZXC4gT5nFRhXUdt3PvLiIjWQv3Q+UPMTeijMVz7wm9CZW2NiPgbXMqTbplU+MEjO5CdRSD4Bx1d3veRePq7fSAtwMFQ+TfZQXSy9Sj46fDunMlxUPqtD15oX3l4+PJsMNIjWXT5AamMhtfpjPlOk4R5BXW0+qpzIDwSYhz7iBIyNP8KIPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3059\"},\"selection_policy\":{\"id\":\"3058\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LMtU9Kr2QD45TUXTlSI5Pj6Ck6LAnEA+/NM7BR5KRT67jOzj8zE/PpsK37inxEs+4q+hhg8/SD4YQVwIV65IPrQtJyfc+00+sS++7R5xUz4USYyxMvZaPnIFMqJdZmE+lBGQKorTZT5sKPuFjL9vPgOwU64ArnM+XZazNTTveD4f6+IQxEh8PvmACcc+ZIA+sYyGw4n5gT6djGQOMxGBPvfxbjv/sXQ+Ca2brYkxYz5UDMggZWpSPlUuoWmLxlA+97C0A7hMTT6w2it8CrhBPnHjUUlPQT8+BVPpq/bzTD7o0sBNIF5aPu4Y9WCB0Gg+szAmSvl6dD43CxjUXV6APtfqHsuZaIY+z+gou2Bvjj7MIsibaKeSPgg/g6fOyZM+iEKw/mcCkD7L4GfTrfGIPqr74awdJIE+hTslQq7ucj4YHSQFSR1QPph/JihwtD0+TrctIbrSXT5OE4ygVe5PPmQxtSJA6lA+Lute6kxVRz4slG/j6qxIPtK+T5kKykA+JSuccpPfTD4vPAeF/kFWPuzdMhzBal0+lXyrr7pYZT7riQirMt5sPhWCkzgg+nU+w5WbANg+gT6ZGSmtJLSHPipv0E9QfY8+JnMjp/q/kD6JiGFIUOOHPt/qi0kZCHA+NrFNKxS1Uj56GISl+7FlPv0lstAPu1w+wgFXk7ToXD6QuPuAnHpVPpzr0zN2v2A+sr1m5xivYT7dWCf8q0NZPob1TFubx2c+X1f8S7r/Vz74BmDbgaNXPgks1tSHSGE+6SL2BW9CgT5XOlsfmD91Pu7GGxYYGJc+VUATFwsHcz57B9PaHEx1PozgYWZ0YmE+/XFbuv32Yj7VkRpTdDZuPl6Tvp7sKnQ+Qnd1IFxMfD6LdMYttz+EPmgMCCfWj4k+mrq51Z2Uiz5XSjknc/WKPpEgqKH+GYY+c/tLIKnrgT5W5iIVtRd4PjvYT0PTjnM+woXdS+cSXT5jIuE2Dn9dPmZ6Z26Qd1A+rYA2RvaGRz5xcjX8iSJWPoqG+O5EJVM+xOagrShCUD7fKgxfZbxSPlH4bAkffFk+MT/AgJChcT79Ket7WC9qPoZaBGZvbHQ+F06u1c3dhD6lCl29NBOMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3053\"},\"selection_policy\":{\"id\":\"3052\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3093\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Bk/HMcQLQD7l+DojI2I/PqM2jol3iUE+i1CEF5aeRD45DV7wJcY/PmeLQIWw70o+fQmrgblhST6RO9D+C+NJPiHmRE3acko+f+C0BKxPVD6/aya8FJhbPh0yT5p72WE++SLyH9EmZj71QeQN31hvPsz0sFl5knM+sZ2P3WtJeD6fMDxBaYV8PvOuu7WDOoA+fPgm+HcWgj4obxvSzyuBPkDTEn3MR3Q+dILw9EycYj4/6ZAs6/9RPifpyRPtMFI+kXGKyzOtTD5d8DVl6iNCPpNVW0nRrEU+u92RbGFdTT4f8GKOVB1ZPkVkMuLabmg+dwQwlEHgdD4jZ9SK3UqAPjxjRA9IloY+ySGOBxjfjT6Xr7EzGSGSPrAhFFEggpM+lutv1ZQbkD4N5KNtxP+IPqdoXLuFIoE+8bt3z5FNcz5+/aZ0AWFQPliFuYwFTzc+gZFPexYdSz4Zg1geWqFBPh+tK/Z3lDw+8Ix18/ukVD4To8/+lNlQPuLDKhnGakM+TDYfnXYqTz5JNZTre+laPunXU4dELF0+4UsFoImZZD4aPZj/llRwPmzD39fYcnc+93hzk/zbgT6PeGthAuWHPsQ1+M20NI8+E/EBVh54kT69UZ4v99GHPni8nRr8LHA+MZXd3rS0Wj7q9hj66GdkPrChbtVkr1o+Qwphwrt+WT5rzQrJ5bdVPsLElNFJLWA+wYx9xYSUXz5jzSF3H9lcPlctb/CSgGY+aGwczHldWD4ibCuOh7RXPvr94tBVSFU+n7v8kH48cT4c57P5MnJ7Ptj+XVq9Ppk+uB2Muh+jaz68JPi9jqpwPgZDGS5Y5WE+/SKTJ72TZz5OQCKmBmhsPi0bN+Ek83E+JK/Vp6g5ej7U6aqfHiKEPsI5tWfJqok+cAPCjhEJiz7LGzv68c2LPvK/hCC4h4Y+jGkduGTAgT5oMUy9qbJ5Pjx/w8oqbHQ+8qbyEpkYXT61ETv842hgPs7/OGqSr1w+xuSbDPs/Vj6R3UgaTz1YPp6LER1ej1s+Qj8A80LsWD5rPpnlN75YPqJsjadc/VM+dSeXtwhmZz6P6VO0Z8ttPvGhdaZVGW4+4rZ8oFMKiz4z/MHHEXyRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3067\"},\"selection_policy\":{\"id\":\"3066\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"n8Mc+yJgOD6ox9MYzu44PsJLvOLy3UM+UmthpVPDRD5hap1eAXc5Pj0UoK9I6kk+bg3wF66SSD7VGdloRARMPgSDli7APk4+wTpLMIYoVD62naTvq8JbPg3s3mmljWA+PizUMHTIZj6C2Z9FffRuPoF7QJx+S3M+a1/miH+1dz4uY+FV2/x7Pn7FOEn7SYA+1ry2z2chgj6m0fsk5kyBPoDisMwo/nM+FFpuo+WJYT6F37OHpf5SPgRG9Nh0NlI+F34Df3OTTz7qAwZms88/PhCax3yGDEY+uEh+pXlxRj4bXh8iDtdZPrjZd1oKWmc+8DlF64+4dD41K2myMDKAPsu4t/Z3s4Y+dv8o5jYbjj6rqOFZDmaSPs7A9d6FaJM+jhzjuxsWkD5K/RkrzFSJPj2cdsZdnIA+5aDJnQX2cj5zv05UDLNRPt14SJPmBig+ht8eP/3BUT5T+eO1NdFQPoeR+xVFg0c+srmRRnWcOD6BCEljeppFPo8fud/q7EQ+uu+Zqxn0TT7Ucg+9W+lbPovtCKR+MVs+H25SE7hFZj6d86btTrxqPlWxSHvWqXY+PckNmojXgD6/1bfRdWuIPv+ah8czm48+qopteyevkT69WKBoEaSHPtnSrqlTA28+U4FgTVj6VT6WYqh7vAhjPkpVn8W+EF4+XMh5Z1EDYT5h5nlocXRRPqwRHOEM8lw+wXpMPDC2Yz52PA/JZXhXPkGM51tQ1WA+MaMar/A6Xj6E/KmebXFbPiJEhLQMvl8+sVu8Z4AGgj7/jgtwDNllPruhFqnOzYA+SZkXAj6Ycz5ErOI+F6p1Pm4Oq2EbyF8+7UqTUGGyZT7vQNz6HoBwPugVBgMid3Q+4j4aFTA1ez7cmkvlieGDPnKxWmbProg+Ry53gD3Uiz5vHff9yvCLPpdsv2kUloY+f8+r2cTxgD5Oa97yGDh3PtMKA838U3M+NcLbGzhrWj7a0Vxj7pVgPmVcZL/5A1M+p+uFZNv0RD7wlp+HDLJTPt3n24e5alg+jQqqTFuGST7CmJAjX1FePh+zjb7VT2A+E55o9n8tYT4zVC3eIzdqPlGP8RNK+2o+MMko//KghT6XozNj+CeRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3069\"},\"selection_policy\":{\"id\":\"3068\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GhZLSLI7PD48K/OpWJw6Pqr7solcHEA+77+N3p5eRj6grSnnC7A4PoqaJxgOoUo+XDgF4JCKRj4lJid5C8FJPiAqz2G+SFA+RSbwSW91VD6woj028ItbPjlsobO+vWI+4qdT9a9FZj6XlXo3DDBvPsDnfE/ak3M+JKysdiQrdz4YWW2mW6V8PlmNrX95NIA+nDrRbA4Tgj7N5mX44VGBPsUaXzViDnQ+be0d4kHQYT7rOkshH2RSPv2AszFP6VA+v2L+zrQ3Rz4oakbWE4NDPquG81SjvEI+vfjyATU5Sj4Peh8t5WxZPpGNJG1x2mc+kmzRU10IdD7qnKAScEKAPgE7aI6CtIY+TGW1vF0Xjj55DNWMjJOSPkb6QO5NdZM+HgLzh6BBkD733bZzHPWIPq9Dytw7z4A+NYSw8OX4cz60Udh69CFPPoyAR37zxzg+vnC0cxm/VD6RUBFvuTFTPgmRzKyFTVA+hTr8u/5eRT6hc+h6i+ZAPqZnVLvwFTI+Bc4ysMAPRT64kZY0s2hXPgM9LLStbFk+WJFNpw1tZD7M0Z7uBUhtPjl3jn0dYXU+4wTrc8v3gT5uSYhi8LqIPus0mKlPP48+S/+QludqkT6ihlh8UK6GPuxTOm71M3A+yv5QsqTWWj6NjQqs6FljPnGA0e2q814+4vG6W+qyWz6yTOGPKktPPuLOj9TD1WI+gt/sVkdaYj79WuYr72laPuTTiWugq2Q+y8qtzsdwXz73IFVa9gRePqDYi626umQ+eVM2Jsewjj7F+zfGQySCPjWgd+cjxnM+B11wqsUmcT6utzx3Wk9vPvZ6xGAfQ1o+3UUsDgXkZz41P1cITI5wPtZsf7hRFnU+7y4e8BcifT5XphdDlGuEPlSr9er4jYk+PrYBfzYejD7pDD7zH9mKPl5sVQD54IU+ZdljRh9RgT6pg5jetHN3PoyVJYGwcHQ+xOmWcMb7XT56/YB4fTliPiF0LfOMmFY+lSTVkOhRUD7HubCYndVXPh4/Y+Y2qlE+zhNFBBCaVz58y1+Cqj9OPokHZxrk1GI+YMIgdk9pZj5nsTOMDF9rPjjlQ0NJpWE+ag3n/BNuhj571zljU9yKPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3057\"},\"selection_policy\":{\"id\":\"3056\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"NBbgJgIJPz5MvQKOJ7VAPtoW/M6kF0A+6DPtUKv4Qj7VH+q1Z0FCPjEeyMGEnUg+mSF7ljqlRz5YGFhXcDtLPtsd1BW+Yk8+RX4iw/nZUj6YPrSW9R5bPvm6YgVNaGE+WCoJvvKnZj7SV+byxAxvPq8HpwpITnM+rQkBfSDQdz4mDp/AenZ8PgGGbXxaLYA+h3KJVuMFgj6QpPSgQC6BPmkQXLc3QnQ+MnhMI5X7Yj4O+2bTFy5SPt7cVWm8U1M+eGRbIBevST5zf5LZySxHPj+hyAcWG0k+PooVd9S8Sj4N8ErQ+V1ZPnJgg5/+Mmg+IHvqu+6xdD6Ytu2P65uAPnAayOLEYoY+vKemxEsojj7iMjS7PkaSPi3EAT1fIZM+H9CkMPA+kD5o2/hrMeSIPphwF1C4toA+e51yTuL8cz6MPCdAB1RQPond14wFtjg+x1bXn9FQWT5Nh/teZthNPq+HCBy8X1c+ZNMi9wB0VD4iQTr+WrdCPngIZw0mT0A+uRF4+MjdRD43f/cYHVxZPs647KLHtV0+16v0iBcyZz5axYQws5VtPm4VvsJntHU+XuejCBxsgT5Ltn1Z3dmHPqYL/+WTkY8+rcs8wRZlkT48b5uKfwqHPhVpItgGanA+quwykTtZVj51O4x7Y6JkPn98lQRwm2A+k1z1k2J/Wz6kDSi1ZnFMPkrlnX8n4mA+6ycrVDU3YD6EnkEFgztZPiwg5SjZ4GE+QHiNj1W5Wz6iZw5d+VRfPomKQ9EZx1I+DCYGtnaLdz6O9NA1sxRyPpjUzmfq/Zo+USqOOQmoaj4TyU/sITdpPg1BKMYspVw+oJhieA+ZaD5bLaz5no5wPqC9eE+od3Q+kV+uB8KqfT5nnC+yUd+DPpXtc80EaYk+XzUBKFFsjD7E60Iam0KMPrWlP7e3q4U+IP7fYSqHgT6yRRRz0HV5PrAVE8lQSHQ+b5jc+l4qWD4B5kZImJVdPqQi6z0Jd1U+FT/t78G7SD5s2TIZcpFXPnQ76ZBF7Vw+T9JkzTcISz6oUkz6UiNSPvhT1AconFg+6jE+4dKmaT7+fFLJsslmPlK4VMTEjHU+hdJN3dVtiT6fY26F9hCSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3035\"},\"selection_policy\":{\"id\":\"3034\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"eVAy0KjGPz6vAru4yZ5APj5UsQsk3D0+qqI6QJCKRT7IC2SACQU6PlAPfdlNqUs+mMfvVkPVRz6RqnzEtINJPm+YwEjLAlE+yxHFXOCaVT4nluH22wxcPhvswxRo6mE+TeKZ9BSUZj4fYzNkgp9vPp6+5mECV3M+t/K1LynUdz6t/Jbfkjx8Pmj8cs0pMoA+2NPLP2swgj6gOdpoXCqBPrgUeIQCl3Q+OTyj2APuYT4aLrNv9ZtRPqx85pBPB1E+UqowzlTXTj7LtaI1jC5GPlzZIAlJ8kU+qWNmzyG+TT6k2WsupSJZPmbgvQSZO2g++cNXb2uhdD6ztmTiRmGAPjI2+Eb9wYY+nJInEN1Hjj6/ePBGazaSPi2CC0pRDJM+vFGaexcOkD6u/9QGfHCJPnYI4VO5H4E+66V4S9oKdD4Zst++1GNOPtET5vAh3UA+D7Le18s8Sz5w6+KjGVtXPr/A5IGD1Fo+pdGMVsvaVj4x1dQiC2hRPlOiWZm+MEQ++XlKPUDmUD6jaSueLctaPnhIzahzvVU+LC6tXmjCYz4T6zqiZ0tsPtlVM5Ik0HU+2uk8qUeagD68LOFc/MqHPlr+WAb4nI8+uVLdf8vjkD6aBT69R1mGPkpemZ1gfm8+uUtqgZ5XWj6v6mi4C7hhPp5UlBNmxF4+AfFf6ZErYD5q5s4G8WBSPl/nSNnmomA+0jiJA/DhYj7wmz2ZV89aPspbkSbKYmk+FziBdCYLYT6S9In2qmxbPrVAjQvHu1k+/8NdtRU5gz7iQ9SBTEB/PrF+bC86XIw+GkD4a8tEdD7RwuMn1G9zPmSxbP+L0l4+GWyhPS8qZT5sSas8+p1vPrVYX+MQRHM+yRl/Inriez6WWk1InDaDPmA1FJbPq4k+c/UGmN7piz7+IKDZUl2LPi1qb3RlBoY+v+4PR9dUgT5K8yg5fnp4PmDBjel9KXQ+DBTtgVk2Wj7+WE6v9t5cPuDJ/Qbt3lQ+8UzNHf2qUT53yeNJsFFWPkbjhS4pLls+j8vfmlJBTz5+yZr0g4tSPrtNSYNY01k+w6Y0vZ34ZT6pGD7ZOLVoPooqMltMXWE+cS/InFrziT7XLIvjeZmUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3073\"},\"selection_policy\":{\"id\":\"3072\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dwXZdzvvQD57xO2lGsM7PnbnlTAkbz8+tSe7nIbMQz7eO5zntkA7Pqh+p2Kel0s+PB5otaoKSz4KTKyQtXdLPvq6/wtKWE8+egG8ak4IUz5HyJ32xyVbPnjHNR7lRmA+CiJSWZMRZj7wUNFfO2JvPrQRnWJmVnM+/Dl+rgUneD5qLLtjUrx8Pk+xGloTQYA+3tOl7UrKgT54sSBLcjuBPlDLwJGYqnQ+os/w/qiTYj5prnB2JJNSPi0hjIJZJlE+4aV+0oGxTj6R5Tb72gtAPhSF66AKi0U+Hediveo8Sj6NZq4YJZNYPoc7tJ+uk2c+0DNr04ZfdT5450hoGpWAPkv4F//5bYY+RNdT31nxjT6+ukzWuSiSPuHzYnIghJM++1zNkGj/jz46UIGXhDuJPlRi+MdmoYA+IGRC8rm6cz64/HCz8hdRPgeRIrtqmjk+kM8YtLgKUD7FDKyUKBBYPgV46P3ZW0o+0uazuwTxUD7FYDtntcNRPtyKa7yikUU+Sa9/oPtmQj6dkfljso9VPpAXR8Uqg10+1hOXPk3PZD4M+Y7dS35wPnH3uIWDw3Q+rmyc0gjEgD6wMk2Mpd2HPjvp73vDZY8+7gOF/8SFkT4BhFpApiiHPj7hc6WRuW4+SwEM04OtWz6WssGV7UVlPoscSNLhzV8+vstKgwkxXj7HVjld4PlXPph/smptpGA+fvlDWqMcYD540uoRJM1ZPmc5YeQ+tmM+KVdbQsN0XT746djnx+hePrRzWoGYH1E+nCZ41VSNfD5+cqZlhA+APoMf32vFhJU+yMoJCL7MeD79tD1om8luPgAfOclAlV4+3M/dJNqQbD4DGIkcRspvPvzNW5m0IHQ+0wsmDfVZez7FTUayI4CEPpVBzz5LAoo+Ckm5rkW3jD5reY7G0CKMPp5pla2M+oU+0vrNQoTogT4Jp0EvkHZ5Pq9T6xBH4XU+PrC6haBWVT5se5WItDVhPvrNREwRE1c+jnr6zeYnUD70XzJ43BlUPoZ1Ke7hm1k+nPCWOGvxTj7vwzIG5YVWPkpjgNBef1w+6BC5L5C9Zj55MRs21NFvPjDrdWZbqXU+9AQtCl78iz4mDp8YhsGMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3063\"},\"selection_policy\":{\"id\":\"3062\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3032\"},\"major_label_policy\":{\"id\":\"3030\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zrSf9VNVPj5qZawZFxE7Ph6yphQzMkA+QI7cPdEgRT4Oe9YhfK05PkdET7yQCUg+JFqD0CMoRj5UYCGDbfhHPuMRKgW0FVE+da7NMNyFUz5jzUdROlFaPukhg2gVr2A+RdZmiS3sZj71rjw0FrJvPsNMrhVZw3M+caJoJdrudz62v27iUph8Pn5p/97EbYA+r1WCq8wHgj4KFButaQ2BPm/Opv9tKHQ+jpBBRK2mYj63oYjnUVFTPgss3SHLpVQ+N7IpC9J+TT7fV+2eIVlCPm6AVcvR00k+tf/3+zQQSj5WTPjgwRVZPq2rEjEQbmc+XhnM976jdT4wRFSJ7JGAPrroJWo6toY+zA0Uxu2jjT46eWzZF3aSPoNdDc5pkpM+bVYI2xL9jz6LXbI0NfyJPoaRvvMmh4A+NKLyFh+Vcz65JRyn7C5QPsBnJi5lJjY+APhrczrpYT7ZtTiwl8NWPpgtzmZJcVA+1Y8nvCnmVz7kv09XGLpNPljZr4Ymb0U+ua9BLEQyUj55bWXFNIpSPjuxm0V1PV0+xntaitfQYT6X4wtDNQFuPhD6hVo6sXU+Iz0xYevzgD7b+A6tcaqHPqu0EMr8NY8+Cxc2PKNbkT5brVbcDamGPjsoyIkOxW8+QvG1E1XxWT6+kpxOTeVlPsXxNX60NGE+5GWWbcjcYD734NjlwzBRPvQKfrc9R10+UHUfhtpYYD5PYY3YOF1bPqJvfqG16WM+15t/69n/WT6VSbNTh0ZiPsCgJbeHOVs+/2brd2HlkD6Ps/w6yZCNPqrIThgcqo4+wlRbnXv0aT5IiTN920NzPtZ5qWcjDmU+l4shZ58gZT6I3fDPbOtxPsCqEO1+JXQ++KXbPajhfD4vN/ZOwruDPjSBFXThVYo+UOc5Hk/0ij6+KDSclEWMPlQdyN1Xd4Y+wz8kdDQzgT5TYZAs7oN2PtM/4MirR3U+q/bP9W73WT7htGwj8x9gPlKrxJ1ZWFU+Yk55zo5HTT6G313frJxVPn7FCLWvFUs+2ptE9mEjTT6HowUeik1WPkjW4MK+lls+3ixyGiefcD55jSUpc75wPnwGh0Hz42Q+8RrY6SwcjT4ggNwCQEGQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3071\"},\"selection_policy\":{\"id\":\"3070\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"vl13VNGLPz4Q72msIMo5PgI25R4ndUI+xB6puW6DRD4/dTvI+1Q2PoOZL+um6kk+QqLP17T9Rz7gLNPLK5BLPplAUNRM+U8+3hmtU5PXVD6GunIjECJbPkp9tzUK62A+4YUN8LN1Zj54bba5qL1vPuNiyTdDl3M+8WCJmZ4UeD6EHNyXNKt8PpRYe7gcQIA+3gLZJaL+gT4UzLiHoROBPuvtr9gO1XM+Y+HqNV32YT42gEem3V9SPkF4WMQ8YFM+1PzUbNMQUD6rCscgY4BHPvNghd7doD0+3sK8b8WvSj6EbT6l5fRaPreAXfRenGg+A2ZNE2BQdT5Ki+XHxVWAPnGivc5HrYY+moUDsRcfjj7R10grQG+SPpxnKdvUYZM+DF84THzJjz5LkZI9Ls+IPrhdiuT/AoE+63IhA4qOcz5io6EORw9RPqcWAH0EMEo+JB2jGCtBXz6XqLHXgzNIPtOR1ntG/0I+1iXK9TlDUT52JBIarsBQPqY8hUa2/DU+IjDcXrrCST5F79/UPX9YPhEYgeq33lk+U2fS1RtQZD6DT7u9G7dtPm5yRVnYcXU+HBvisgKVgT5xO7zlRSSIPvPLztxsmY8+qT0mZEmLkT6Brcd/S7qGPj6Nf3YtEnA+LXiXgVIjWT7Dhmev05FjPqTn0v2Uu2I+lz/EoOdkVz4vH6txQ0JRPkoYyrjNkmI+DG5ji4okYD6ecCzi/0taPqva20fdjWQ+ukiQ3vGyXT5AxeC4u3lQPn7ljDoAa1Y+mBnVczgqbz5l/dEC6Xh+Ps2U/7Fo2og+F+j2N+rDbz7GuSbt+2RxPpbfgUum/GA+TCPx3+rIYz6BUVh+QJhtPhJKQspiBnU+ZQ6mw3x9fD4N+vvONoaCPrvuRjHA6Yc+BVo+Sp2iiz7ZaNQgiDaMPo4OlpkNv4U+rjgUZPEVgT5fULgl2qR3PsneA2UFqnM+5snPGvpFWj42wQ+t4spdPgIpLYOO2GA+S54YnRReTj7d4Yk8h3laPrvaCBtFiVs+j+EJWjCkVD5lqxhno8NUPlTHWTcNiVM+h2ewsefjaz758Bvp61JrPjgtMooeXm4+7XxMALPohT4FlDmAhOuRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3061\"},\"selection_policy\":{\"id\":\"3060\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"d1071e94-e2f2-4eac-bd67-d965f48a75e0\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"8550aef2-2590-409c-9ee7-2d951f6758f8\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"b7d4b77a-9cf3-42c0-b306-c2713a3a56f5\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"27fa881d-3c67-4b13-8d41-dfbaf982617a\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"3475\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3472\"},\"major_label_policy\":{\"id\":\"3470\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3475\"},\"major_label_policy\":{\"id\":\"3473\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3502\",\"type\":\"Selection\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"3473\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"},{\"attributes\":{\"ticker\":null},\"id\":\"3472\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QOowkrrpST7MJ0JvoOFLPkJDp2YJW0Y+KehmQRATPz4OQTsR8pQ5Pke+UcS9qS4+9a27rEgIKD5bhtf7wu4cPhYXGbX3cio+ajPExM20Hj4o3mJRRTciPkS5C/W9niY+11vtvep7Mz4CA4cpblAxPgw9vDyTllQ+2EsZAJ6iXj5rh1+q9AtuPoo7HVQJIXY+hN8k72eGfz7kXoR66AOAPuLOZ5wd+Xo+h0e7Il6scT4yQ4Fu8QprPizARlhdVGE+4XDzpTtfVj4PUo4viJxMPt8W/sqt90I+Hhbpa5XfTT7GfdbabDlSPh6OazEY+EY+w7UxK4MwOT41Z+BsA107PgwDhKhkAD4+srFK+7YWPj40mLqlW1Q8Pv7JgTeV8j4+oaA96TgvRT7qrKlhceQ8PrL8vF/vAkM+HgTxoN8DNj7GoBDPzQNBPgSOC3bnsj4+zB3vWNqgSj6WRW7YcFREPv0Yq4MD/lI+EMBkKvjacz79ud6d+1GCPvA4+OMzwoE+V28Q21bkeT6+CMeKR/1yPnrd54i/lmU+Mlyz7h0pXD79hOmOpfFRPgZ2yIdgUkc+3KYPzmFeQT6aw9pTwcgzPrBROglzdyU+BFeOfEWRED644d8T82UQPuDt8RiWtQk+8EA74bh/Cz70AxUwfGEHPnqppIZXMg8+Oki6DMHCMT4B2oXl9MRnPlQdWvUiZng+9CZe/J1fgz6Rho+7R7eMPliLGWQTo5M+FxeJwSNrlD78YQu//jCMPmSXDq7G4og+ebznMpI/gT6gomeqGZBzPnnSER9LjWE+N09QBa9vTD7weFL5DlYzPmer4ZyzoTM+Ic3VETalOD7yVZ0CR1BBPsZkUg5+zUU+uMMJ8HhfQz6hi2qBJl1XPqdz8pdupWg+TcPMwopNej4CVFLotrd7PkC7rniHtnk+HkIg5KjKdj6ETK4uHfxyPvI03wL782w+mFbjtILgZT4WPnI+L05gPmlf22EkMlk+jnAzpv7UUj62wO2YYr9NPtNEbj6BNEY+gJGs/HtRPj6obL3U20E9PvGditUr9To+rMlwDozQLj6QxnnHRFY7Pu/t12ST/jg+FJnCMhHvMj5G4JMtYcUkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3502\"},\"selection_policy\":{\"id\":\"3501\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3478\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3478\"},\"selection_policy\":{\"id\":\"3477\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3470\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.66, C/O= 1.15, [M/H]= 0.82, T= 955.03\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"27fa881d-3c67-4b13-8d41-dfbaf982617a\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"b7d4b77a-9cf3-42c0-b306-c2713a3a56f5\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 102.21, p-value = 5.03e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"37d0fb0c-6b46-4e08-935d-b2c463b3dfdc\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"63863be0-bad8-4418-8bc6-2450542129c9\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3816\"},\"major_label_policy\":{\"id\":\"3814\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3866\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"3819\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=102.21, p-value=5.03e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3819\"},\"major_label_policy\":{\"id\":\"3817\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3814\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"3816\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3846\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.66, C/O= 1.15, [M/H]= 0.82, T= 955.03, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"P6XcBEMnXD4KgSgssiVePmWI7JhdIFg+aA477s7ZUD7Oo1yJ6dlLPjE4H//D3kA+/femUjTFOj7xtUTCEU0wPlWyVEvD9Dw+P4wl0gI0MT4/c9VCSFo0Pq1245uKGjk+RbP2xkFGRT4yIzAaz+1CPhDJ3GPRImY+DZEFRr+JcD5Mm1Hod0eAPpSy9q3Q5Yc+lnY+UuT/kD6Gcm1kHU2RPgQLidd4K40+L6Qc6SRGgz4Qogzjf8l9Pv4MnANjEnM+DMm2/ghCaT6OqxlGz3xgPjtHEzMr4VU+iCwnWT4NYT6iRdM2ZkxkPhMV0LQVlFk+JTwDQLsiTD43ptdSr3xOPgRX0SEyt1A+21qOjKKNUD5rnsTjTPdOPtpwCGNK9lA+la0TyS0dVz4v5SvZ/b9PPg73DCJID1U+12xhS4yuSD6iX8gVhN9SPpFepDWlH1E+8F1ptbXfXT5PjZq4w7NWPgwIxR7EB2U+Hha0KveQhT5FDkvC5ZWTPjduM6O1/pI+rToSJg+6iz7XQls79m2EPu4tyzluhHc+pymXDP/rbj4lzaoQN9xjPiID2HG02lk+b6Sj10gNUz6kKf+bRNpFPlX/mgNm3Dc+U1tmWR6pIj7Cgm2fK68iPmpYsub6gR0+bx7JW8N4Hz76Dnn2fO8aPoJY4ZIyVCI+8lqperXhQz4qHKPol0t6PqOVhqTK1Yo+pmC+ulUwlT4yAm8UDSifPjoqoHPUH6U+UtUpNyTSpT72fpv4VvadPhx06Cver5o+P/k9V+ygkj7wZ16qbkOFPmmklcPCRXM+sKmEP9mIXz4qC+SnWqlFPszxdrYieEY+CjGyK+MHTD4A+Ljxui1TPoALaBglYFg+C4iRWaO1VT5lq7tIk7ppPkn0L+obmno+pzKx/6RMjD6hGS/R4sCNPqKaqVdvjIs+WlNs85hsiD5JXgpvNGmEPtKasulCLH8+9G08XpeWdz5v22WxI5ZxPoHuIcWrN2s+Rw/SRZ1QZD5v4QzjxBFgPv0KZt1RCVg+XcyK/8h1UD4UMb8OmbxPPntL6sjHIE0+m4VaKCzGQD5mDYOCY11NPiVIcj5D2ko+tXsst5BdRD5bHp5k0YU2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3846\"},\"selection_policy\":{\"id\":\"3845\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"dNcG+Aq7WD4vfLvJpntaPmjYUoXOK1U+Fq/MuxhDTT5o+CEjFQdIPk0FkCPnzDw+ka8gImuTNj5glYnejEQrPrDaOeeamjg+Esm0Coy9LD4KB0Dya/0wPgtAfOfECTU+SzFLuY8HQj4IBjXH1AZAPkY41FfDF2M+1S5nKSJebD4MUA/ULEh8PgRdnhoAAYU+500gRZ4zjj4IhyUvk7GOPsuABAk8t4k+e5aKfFWzgD7izueEVGp5PlVEBOSwU3A+4Yp6WP0LZT64DXm/SupaPgTEfWNpu1E+4lCGZQC+Wz7aUL711etgPrv7GHhnW1U+i5sYt+VpRz5y6NwVnUFJPvWK2FmxoEs+HtgXxUyJSz7c4BXtAb9JPugUj+3q/Us+SzwppSMkUz4GZPM6f91JPvgFYfSZFFE+OG8kNxXBQz6vMvYkSr1OPuH2yMihyUs+UANqRegeWD5Rnm5aWXhSPswMzBuicGE+o87y+3yvgj4XJ5vxjmyRPraI/gsY55A+nYpHZn9NiD6p/Oq0lbeBPmRpPmps6HM+LtsNT3nDaT6PmE0OQF1gPqSs0HNWJ1U+LDwtWMpwTz4zbHrlI+dBPihcakveMDM+qtm6uNyKHT7MKthpJSYdPqhgX9tHyxY+6pguLIMzGD4rAqjj79MUPnscPtLGKhw+cMx456PcPz5xXaHkved1PmgqVEHGtIY+Bhm1KFg6kj7pbaueEVObPiekT9ks36I+pq//VJrDoz4I8NjAPVubPtHRyxcho5c+xrngCC00kD5G8uZf+RmCPkoLyWJRvm8+c1Rq7R5MWT6ex1+veftAPmZIWqGKWkE+VPRYuCfsRT4FWPrsu/JOPlW5OEXqgVM+tASSLQhdUT4DhlDxmH1lPnFVfaRm9nY+5MC90bjriD7R5St0umCKPhJI51kcgYg+mNk6m12shT7APDg88/SBPplQFMKzIns+xjSMkR1tdD4h+ufzqlBuPn3BH60BU2c+LtM9hYlcYT4WXelgil5bPshzSW7ZZ1Q+cGzUY4SLSz4hwL4gcZZKPpxXUmHkhkg+UHfVb+yyOz4fjhYiw05JPhm+PI+TA0c+9ZCZqghQQT5Ebe+yG9kyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"CnOyEXuTXz7ywkrH3udgPmI4hqzsFFs+RcWPfhESUz40T5fvvaxPPrxtdmwUV0M+aUAtg/32Pj4yoUQV3fcyPv3Et9d1p0A+9bPwnj8JND5032qTJLc3Pk+tSlBQKz0+PzWi1POESD5cQCttydRFPtpZ5W/fLWk+sIpXd23kcj6Sjptm2WqCPiQIT0Ghyoo+OMbsgfnlkj6IIUgxcUGTPp/KBtPaT5A+47GuVfTYhT6fupigVRSBPqfVMyMV0XU+NwfzpBR4bT5A0HYseYRjPnLKqALtBlo+nzCLf3w7ZD5qOuh39qxnPmsuh/HDzF0+YO52ZMhtUD7+MenH4NtRPo1otpYLnlM+p8mQtp5WUz79rTntyxdSPkBXSU+f7VM+3x7+7DcWWz4sM7I7PtFSPiTouE/2CVk+dmqeXwOcTT7tpRUZY2BWPrFB5IZ5WlQ+SFy0kkHQYT5NfMYWLu9aPkwDviHmnmg+mV11WXFyiD5z9fqSPL+VPrhTaDpTFpU+verc5Z4mjz4FicvBViSHPnjyVwlwIHs+EDwQZUIKcj67AQgTLltnPqBZ328Sjl4+yKowgyxiVj4V54NSZc1JPoKiy7vthzw+0UlvVs6MJj4e8O6JRMsmPhaoAvlWHCI++tGxxQFfIz7kDaUEhYUgPsaio7wBkyY+rE+WARnVRz7j2qTsca9+Pt4AuQfP9o4+RqjHTFMmmD4+SxlFhH6hPk2w8A18YKc+/vpTGa7gpz7yBi8YuEigPmcWBUCbvJ0+uDibpasNlT6a3dX042yIPi3DxtVcrHY+dn/PyMniYj62TmigO1dKPjKbk8u6lUs+4LaFT88RUT7+w/TsF+JWPqtdl+tfPl0+YguRhT4OWj7H0CagjfdtPiGT4i/RPX4+aqSkLZGtjz65JhmXhZCQPjLta1XCl44+HM2dS9Qsiz7Sf9yhdd2GPoVyqAjpmoE+IqfsKhHAej7Nudfo8QN0PoUbJN1VHG8+YEtmBrFEZz5TFKWVRHRiPjKigkzKqls+gmIrzc8lUz4D0V9+YHFSPq0fQZhV3VA+jk/KGOKyQz5XxnfxAbZQPjHSp+3ysE4+dWa/wxhrRz5yz0wWhzI6Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3866\"},\"selection_policy\":{\"id\":\"3865\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3888\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"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AAAAABbU/D8AAACAIt78PwAAAEAs6Pw/AQAAQDPy/D////8/N/z8PwAAAKA4Bv0/AAAAIDcQ/T8AAADgMhr9PwAAAOArJP0//////yEu/T8AAACAFTj9P/7//z8GQv0/AQAAQPRL/T8AAACA31X9P/7////HX/0//v//361p/T8AAAAAkXP9PwAAAIBxff0/AAAAQE+H/T////9fKpH9PwEAAOACm/0/AAAAoNik/T8AAADgq679PwAAAGB8uP0/AAAAYErC/T////+/Fcz9PwAAAIDe1f0/AAAAoKTf/T8BAAAgaOn9PwEAACAp8/0/AAAAoOf8/T8AAACAowb+P////99cEP4/AAAAwBMa/j/+////xyP+PwAAAOB5Lf4/AQAAICk3/j8AAAAA1kD+PwAAAECASv4/////HyhU/j////9/zV3+PwEAAIBwZ/4/AAAAABFx/j8BAAAgr3r+PwEAAMBKhP4/AQAAAOSN/j8AAADAepf+P/7//z8Pof4/AAAAQKGq/j8AAADgMLT+PwAAAEC+vf4/AAAAIEnH/j8BAADA0dD+PwEAAOBX2v4/AQAA4Nvj/j8AAABgXe3+P////5/c9v4/AAAAoFkA/z/+//8/1An/P////59ME/8/////n8Ic/z////9/Nib/P/////+nL/8/AAAAQBc5/z8AAABAhEL/PwAAAADvS/8/AAAAoFdV/z8CAADgvV7/P/////8haP8/////v4Nx/z8AAACA43r/PwAAAOBAhP8/AAAAIJyN/z////8/9Zb/PwAAACBMoP8/AQAA4KCp/z8BAABg87L/P////79DvP8/AQAAAJLF/z8BAAAg3s7/P////x8o2P8/AAAA4G/h/z8AAACgter/PwAAACD58/8/////fzr9/z8AAADgPAMAQAAAAIDbBwBAAAAAIHkMAEABAACgFREAQAAAAACxFQBAAAAAgEsaAEAAAADg5B4AQAAAACB9IwBAAAAAgBQoAEAAAADAqiwAQAAAAOA/MQBAAQAAINQ1AEAAAABAZzoAQAEAAGD5PgBAAAAAgIpDAED///9/GkgAQAAAAKCpTABAAAAAoDdRAEAAAACgxFUAQAAAAKBQWgBA////n9teAEAAAACAZWMAQAAAAIDuZwBAAAAAYHZsAEABAABA/XAAQP///x+DdQBAAAAAAAh6AED////f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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3822\"},\"selection_policy\":{\"id\":\"3821\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3822\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"csjpULT8Uj429fkWkVVUPqG8G4FDNlA+5DmPyfXPRT7srwrnjpxBPgYWr1nLgjQ+WsggGxsTLz7f7RmRBlEiPgKpslj+TDE+blFFIpQ7Iz4t+6vgtbEmPj4+j6mabiw+VI76GTorOT7XG7TYJ1A2PhOCX/vw+Fs+rlKwhXp3ZD6EAuR2HBt1PmiTZ3fgJYA+mTEM1UbUhz70Y+hZbSKIPiKlhcFw64M+OgZ9x6LDeD4gU3sQTxRyPkoi5tQQcWc+qJ4X1/P1Wz43a4ShFr9QPgBRelB2i0U+ceHZnFIRUT4tFeKGHIJWPoLyqhrwi0w+naEDFNT6Pj66XrURlnpAPqjHovKd40E+LPVxuHMwQj6QZ7F2pPxAPhadvZSGCUI+CBECVv7ySD5OffbGDPs/PpF0AURpzkQ+kxzriZD4Nj5h2I5FTftCPqxu8Ra28kA+1rs30PHuTD6L5jkqprxGPumEt/GQ1FY+UnW1Hu6zez5iAbRkDpiLPhalrPibyIo+dEhblZWOgj7SHtyaxVR6PjDKCNLJs2s+Bg1ngZIbYT5wuwEH6f5UPppUEY4OiEo+6NgG72hCRD4xzKgM1ow2Pq5a/HxrtSY+mFLttTx9ED42VC91aLYOPlYykulvDgc+ZABn+HsACD4EFdZkcSgFPkrX4Ait1gs+tyAa7VGaMj5FBqoYuhNtPiC/bGoYjn8+uAGpS8yEij6H0pqt7uSUPli8fl0KL54+kTnakAtQoD4LhKcu0fuWPvLr3PIChZI+fhkZGBBFiD71NIG2U5d5Po5qXBR+VGQ+9oQJTHepTT5MViVpwEIyPj1tet70iTE+3lvVaEVYNz6YCPIR74NCPoKSA0lcrUY+ta9fWQwkRD6qnC7+5sFcPu7lqO3y2nA+GKkg3lZAgz6c0WEXobaEPpNAp85dZYM+NR2DSaEOgT7gdG1vaq17Pp6ZY8lWXHQ+nDcd+Iw9bj6W73zG0ylmPq3QT/uNymA+PmyB5ZrPWD5AX9B9pV1TPipOSO9NoEw+ZiIFqm6GQj7LwprngvJBPpj+l21WzkA+9kQ7RC3iMT7YcAxc5X9CPv6Ko5yUkkA+HFTp2ithOD4bgHAaGl0pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"BsFn3OioYj5vhqug6fpjPhSqXtg7BWA+3n+u96LLVj7YS9cVogtTPl/lZlEifEc+5sXei20AQz7ydPw7oHE3PtRd+x5ETkQ+x28okzvKOD7o6FSVtVs9Ph6nf/Hj/kE+YB/wgOb2TT54OAZIirNKPhbRCUoqSW4+w/gyScHXdj5WNTGVYQGGPsDRheTApY8+YNT2OaUVlj4Ss+YbBImWPnM4xnbANZM+QcV6bngqij6A+M5aWL+EPtcIxZw9bHo+YuHwCIxEcj6AIXE7E5poPvuy9J5NfmA+WGjhY9ORaT6ugDUqvldtPnJYJa4ZcWI+vlMCOwZkVD7a9vxJZD9WPjRKUUqVfFg+ILvjPAsDWD6j6muo+nhWPikTsnvR51g+UymTM27gYD7cRW6nOsFXPtQzGaJbt18+sqXmKGjwUj4UU8mIYUFcPswF0F/vxVk++m5bQfmjZj6sEwwumgRhPqRNrsQ/pW4+k3ENRvdHjT7ZGzxSxF+ZPuOJEEodmZg+c5ZkW8Rykj5FdkipibGLPmL7SMV7l4A+JKPjyzVedj6SvNSd+ThtPvytU86wOGM+atzDN135Wz6Y9tQYDzdQPqroWyQLL0I+Wg3WV54TLT52MI8hvbAtPtTLTexevic+Vl6vXaR4KT65iUOdYKUlPjJ7iuO5si0+iKXF/kF2Tj6ZmnhiqQaDPttl64lE8pI+cECoT0UenT7umKG9lbWkPkj2gLgjKKs+E3F53TxUqz7xvEdhbniiPiP+ebJcbaE+v2VvolAfmT5mNXx5M7uNPosT/XxGYXw+ckiCbHseaD6XtZqNqhhRPn1W2H6lFVI+Etp80dExVj6063hafhldPuAmJwbOtGI+Hpw5Q6CsYD46BDCJGYpyPlKBW3OiLII+G96gkHmskj7TMH5FkmWTPlj6VXDA2ZE+f4lVnZDKjz4iAl6ms/uKPgPOAIUX/oQ+DSA1IDQHgD4TP41/XRd4PioGesdk0nI+b2jjGG05bD4+kzEHt3RmPnL3k2E+4WA+hwcTqlqoVz6uz/GaV8NWPi9MHpKcuVQ+u2iXrkGbSD761HzUcB1UPqaCIPD4kFI+XE3kgIuKTD5U/gHeii5APg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3888\"},\"selection_policy\":{\"id\":\"3887\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3817\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"63863be0-bad8-4418-8bc6-2450542129c9\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"37d0fb0c-6b46-4e08-935d-b2c463b3dfdc\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:24.224424Z",
     "iopub.status.busy": "2023-11-28T23:01:24.223760Z",
     "iopub.status.idle": "2023-11-28T23:01:24.228179Z",
     "shell.execute_reply": "2023-11-28T23:01:24.228517Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 102.21, p-value = 5.03e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(102.21, '5.03e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:24.236958Z",
     "iopub.status.busy": "2023-11-28T23:01:24.236449Z",
     "iopub.status.idle": "2023-11-28T23:01:24.238512Z",
     "shell.execute_reply": "2023-11-28T23:01:24.238845Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:24.242344Z",
     "iopub.status.busy": "2023-11-28T23:01:24.241743Z",
     "iopub.status.idle": "2023-11-28T23:01:24.244412Z",
     "shell.execute_reply": "2023-11-28T23:01:24.244747Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:24.249143Z",
     "iopub.status.busy": "2023-11-28T23:01:24.247897Z",
     "iopub.status.idle": "2023-11-28T23:01:34.166365Z",
     "shell.execute_reply": "2023-11-28T23:01:34.166806Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.187049Z",
     "iopub.status.busy": "2023-11-28T23:01:34.186350Z",
     "iopub.status.idle": "2023-11-28T23:01:34.190409Z",
     "shell.execute_reply": "2023-11-28T23:01:34.190065Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>1542.900000</td>\n",
       "      <td>0.025881</td>\n",
       "      <td>4.616865</td>\n",
       "      <td>969.582995</td>\n",
       "      <td>1.150263</td>\n",
       "      <td>0.805124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>3615.422044</td>\n",
       "      <td>0.073183</td>\n",
       "      <td>0.128026</td>\n",
       "      <td>18.887567</td>\n",
       "      <td>0.090909</td>\n",
       "      <td>0.020715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>114.460000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.433230</td>\n",
       "      <td>945.578898</td>\n",
       "      <td>1.003689</td>\n",
       "      <td>0.758068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>175.487500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.557378</td>\n",
       "      <td>954.459239</td>\n",
       "      <td>1.091096</td>\n",
       "      <td>0.801606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>190.435000</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>4.612278</td>\n",
       "      <td>968.634644</td>\n",
       "      <td>1.158955</td>\n",
       "      <td>0.810161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>397.727500</td>\n",
       "      <td>0.000014</td>\n",
       "      <td>4.676842</td>\n",
       "      <td>982.705200</td>\n",
       "      <td>1.187586</td>\n",
       "      <td>0.819297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>10477.130000</td>\n",
       "      <td>0.207000</td>\n",
       "      <td>4.807963</td>\n",
       "      <td>997.730001</td>\n",
       "      <td>1.305734</td>\n",
       "      <td>0.820921</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius    chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000      8.000000  8.000000  8.000000     8.000000   8.000000   \n",
       "mean   0.680000   1542.900000  0.025881  4.616865   969.582995   1.150263   \n",
       "std    0.139971   3615.422044  0.073183  0.128026    18.887567   0.090909   \n",
       "min    0.480000    114.460000  0.000000  4.433230   945.578898   1.003689   \n",
       "25%    0.580000    175.487500  0.000000  4.557378   954.459239   1.091096   \n",
       "50%    0.680000    190.435000  0.000003  4.612278   968.634644   1.158955   \n",
       "75%    0.780000    397.727500  0.000014  4.676842   982.705200   1.187586   \n",
       "max    0.880000  10477.130000  0.207000  4.807963   997.730001   1.305734   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.805124  \n",
       "std       0.020715  \n",
       "min       0.758068  \n",
       "25%       0.801606  \n",
       "50%       0.810161  \n",
       "75%       0.819297  \n",
       "max       0.820921  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.199500Z",
     "iopub.status.busy": "2023-11-28T23:01:34.198439Z",
     "iopub.status.idle": "2023-11-28T23:01:34.202351Z",
     "shell.execute_reply": "2023-11-28T23:01:34.202762Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>177.03</td>\n",
       "      <td>0.000008</td>\n",
       "      <td>4.629676</td>\n",
       "      <td>997.730001</td>\n",
       "      <td>1.090915</td>\n",
       "      <td>0.801945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>114.46</td>\n",
       "      <td>0.207000</td>\n",
       "      <td>4.585516</td>\n",
       "      <td>986.171387</td>\n",
       "      <td>1.178820</td>\n",
       "      <td>0.814658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>177.92</td>\n",
       "      <td>0.000007</td>\n",
       "      <td>4.807963</td>\n",
       "      <td>954.736186</td>\n",
       "      <td>1.149828</td>\n",
       "      <td>0.819020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>170.86</td>\n",
       "      <td>0.000030</td>\n",
       "      <td>4.594879</td>\n",
       "      <td>945.578898</td>\n",
       "      <td>1.003689</td>\n",
       "      <td>0.800588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>10477.13</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.648336</td>\n",
       "      <td>979.441488</td>\n",
       "      <td>1.091157</td>\n",
       "      <td>0.805664</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000      177.03  0.000008  4.629676   997.730001   1.090915   \n",
       "1  0.537143      114.46  0.207000  4.585516   986.171387   1.178820   \n",
       "2  0.594286      177.92  0.000007  4.807963   954.736186   1.149828   \n",
       "3  0.651429      170.86  0.000030  4.594879   945.578898   1.003689   \n",
       "4  0.708571    10477.13  0.000000  4.648336   979.441488   1.091157   \n",
       "\n",
       "   metallicity  \n",
       "0     0.801945  \n",
       "1     0.814658  \n",
       "2     0.819020  \n",
       "3     0.800588  \n",
       "4     0.805664  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.261571Z",
     "iopub.status.busy": "2023-11-28T23:01:34.215367Z",
     "iopub.status.idle": "2023-11-28T23:01:34.265011Z",
     "shell.execute_reply": "2023-11-28T23:01:34.265313Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"672d70b9-dcd3-4e9d-a680-b7cf7823aa7d\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"42d1834c-a675-4e0f-b8d0-0775807cd3e0\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4236\"},\"major_label_policy\":{\"id\":\"4234\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4233\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"nqyWN0Yw4T8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[1]},\"y\":{\"__ndarray__\":\"PQrXo3CdXEA=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[1]}},\"selected\":{\"id\":\"4239\"},\"selection_policy\":{\"id\":\"4238\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4233\"},\"major_label_policy\":{\"id\":\"4231\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4236\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4234\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4231\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4239\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"42d1834c-a675-4e0f-b8d0-0775807cd3e0\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"672d70b9-dcd3-4e9d-a680-b7cf7823aa7d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.268892Z",
     "iopub.status.busy": "2023-11-28T23:01:34.268400Z",
     "iopub.status.idle": "2023-11-28T23:01:34.270325Z",
     "shell.execute_reply": "2023-11-28T23:01:34.270649Z"
    }
   },
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.274176Z",
     "iopub.status.busy": "2023-11-28T23:01:34.273535Z",
     "iopub.status.idle": "2023-11-28T23:01:34.275582Z",
     "shell.execute_reply": "2023-11-28T23:01:34.275920Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.279062Z",
     "iopub.status.busy": "2023-11-28T23:01:34.278561Z",
     "iopub.status.idle": "2023-11-28T23:01:34.351542Z",
     "shell.execute_reply": "2023-11-28T23:01:34.351875Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"11c4557b-568b-4644-b056-13f01cb02704\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"5df9a59e-00bb-4703-ad93-e0216505326a\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4563\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4827\"},\"selection_policy\":{\"id\":\"4826\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4566\",\"type\":\"AllLabels\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"JpfSKzhXijymLllglmiKPCbG35T0eYo8p11myVKLijwn9ez9sJyKPErLUu4V24g8bqG43noZhzyeQII0ygGQPIQwqPnWdpQ8OMI/5iwUlDzlrICryy2hPA/efpALwZ48mtM+6N3fkTx2r4jKOuV5POk+x3c+qpE8HA05wMtijzxlnOOQGnGLPJey6bTJdY48zCocNfUVkDylv/Imti6HPCkCXZRxB4k8rUTHAS3gijwxhzFv6LiMPPvXiRGQC4I8JMjt3xwddDxDgR9zZoxQPC/UH7BwLoE8bkpSyZzZhTwApAJt9pp7PHajS6+cqpc86mGA5QSDczz/cCKhqA53PBSAxFxMmno8YPFgt22qjDy1824uZ7p7PCA1l6yV1H48RbtfFWL3gDwBf7J4l3B8PHiHpcZq8nY8YcjpnE8BeDwaCO2QLKNpPKUDBTJ5wnA8PoOTG1yzdDzWAiIFP6R4PG6CsO4hlXw8M29YcLIodjzvtwDkhXhvPNnEvChymXY8aZKon5qsgzx5UdmbR8SGPLqsyyjwmng8ErQlz4hqTTyNm5/Yx7ZjPAI9Z8PJPX48H1Y/zRdQiTxrkpTwPQGAPDS7dCG/qHk8klHAYQJPczzizxdEi+ppPDz5XYkjblo8OivFqAhzEDyR5UMThepTPDe8/c3sZmM8poVZEpfYbDz+a/pl2lR0PIXlm1iEwns8hq+eJReYgTy8I1VOecGBPJ8fHINUUHE8gZjpMDLnSjwhvKPNtLF4PJ8+R0UwZ3w8c7XeBAj1Zzz+lxtwwdVoPIh6WNt6tmk80H0XWsysgTy/J77jRApzPHh+L/SC4Ho8Ky8cRQrSYTw3u33zyqRrPOPPW/61G0A8c80CHdv0fDy3qIejM39oPImH71qMBYE8YP3ZyIJtgDzUipsX4M14PN38Q4Jwr348DIvICzxYgTzO+owJDIiDPEjmXSUWKIs8Mbd+K8V8fTzguGkDPFOCPLxoZBsCuX08+YmfRy8fdzxrb/5U+rp+PLdoPhiEwoQ8C1Bnp4nrgjyq+IjLiumFPILuh9O9/oU8+My9UVxuijza6mH1DRSEPFG+j6Zi5IU8WM9foFT9dzz6FJEfAbF6PDnVzsRw1Xo8STpf6zK+kDxO5+Y2mNiLPCXRyghRyIY8ecTalIu2hzy13L6i+buJPPDECtvtjYw8rDzRHkDOhzx/JTJYDE+MPLwadwkH75A8m+5iDuMsljyCC8LSPW2YPPAxTifar5o8gV8IUAGrmzzkM9W0jBahPMNe3+akiKE8kTc0DCq2ozxvidhEYdSjPMmcYvIe6KM82Ht+ePj6pTxTQZ2z7SmpPCd4UCmlV608BGoP0IV+rTw77YtmQFCxPAiI3NIt7rE8tAI30TOLsTyQZIqKLAq0PH7SIE9k5LQ8/wTwrj+CtTy/SgGpubi2PHWSxqiAybc8NqG730LWuDw8u4Izc/m5PI5Yl4ykA7o82nKS/b6+uzz7HbyyhBu8PJEqFWreubw8RvPIGeyAvDzMkUVUKiq7PAncTbnerrg85wmI7ky1sjxCH5vGFHmqPNcrx98MbKU83ERkxO3BmzxQh2OeNmCWPNbuc5aw44s8KGvRqzmLhDylEA4Hk2SLPC1Om8oT/o08BGYVSCirjTyqFBZ5KTKMPMcH3LcaRY48b9nXxe5uijzPqu5fJfmEPG38Nvfx8IA8d4ZTHykGgTxTmPa0UnODPPPJGO7JWoE8EfocpWzXhjyr/po7EM+JPCblKfRZyJA83oDdHQd5kzzoxiIPpA+ZPIN0GKtFsp08bkhKJukhoTxmjejWVrOlPGxKVjOFKqo8Smc6D+brrzwcnrqTbWSwPMgBgCp/K7I8pWs/0fijtDyUN4oEzPO2PHGOFC+MObo8WFP6ThF8vDxIk2Lad1m9PGYZSFXcIMA8Nifey6qHwTwzu60OtiPCPHjgdZ64oMM8tsJX7YK3xDyLCg/i/83FPGAvt0pNlsU8bLmNmY+QxTw9AfHK3pHFPC9+WLasqsI8kBFJjGBYwjzTqVZMC9bAPHwYQ6vkmb88MUHat9QvvTxA8UNZyiG5PMrE/xz6v7Y8XpGicKpUtDySGV9beNyyPHgjXAW4PrA8eJHDXv1lqDyN+YVx+5uhPLrVC7weupQ8sWTmABrBfjyCAkNWxbVpPNDYzyQeJmg8uH+8oiivYDxBTVJBZnBSPHZFiRBKF1E8VXuAv1t8TzxJvjAk5+xHPFklJ5oYgWY8QcwHGtjuYTxT5tAzL7laPCQ0kjOulFE8X6+4cSKrWDyaKt+vlsFfPC5Z+q5FKDw8sQ6QUlBNQjzL8KLNfYZGPOXStUirv0o8Ixmd3Xb1SjxhX4RyQitLPJ+lawcOYUs83etSnNmWSzww33fzrlc+PMQ/TZ+dLmU8x7b/FU91bTzlFllGAN5yPAJMpx2VKXg8sf1GOZOCdTwFYWbmpn+BPNj3+7y5QH08ql31YKm1ejzx59SvdjSAPERsqG83MHs8uwfXwwBgeDzkUEPtUeWFPOIW6RZE9X48jf4uWueFgzyi5ONSGz6EPLo+7OvU1Is8ZaNRwE7LkjzQNWQWEB+QPAbP0qVbM5Q8T25yqpmFljz4m/NeiQOUPD+vM3glBJo8vpWn5i6doDyRn9l09vOgPPmqxrqTaqI8nP7kynuqpjwKrJqZJBupPOZvrLRRdag8smu8otjbqjzZ4J/0eVesPB48gf2wmq48El4K9ecLsDzAWFAz6sOyPHfhTVmHSbM8bZDClXyaszygMMV9QTe0PPVASKiwgLQ8BcGqQPeRszxNeDgVFpOyPDX6CPvFY7A804raVfEzrDyVpL9AuOOnPAzs/BPZ1548MJjPitDRmjzRHPJ0VRSRPFWhhFTxEY88hIOg7bKpjTwYeg9ahW+KPPU+ZPnNzoI8FP2pO0hegDw27PZTa16JPIkL9LBHbXw85tJtYAm0hDxyKCjm7fKOPN/t0h9bx4o8cCDVDTkxjTzPjRMpn6WEPDG67mizsoA8fArupx5NaTzzh4iY9Pl+PLjg308j+YQ8roAHHtRnhDyv7ZJSYpWIPB19BGPrtog8k6zOmrPqhzyykc5tNduDPLaLAosWoXc8tKZ2Vu8hgTw8nWsTtVV9PJjK6voZ44I8XEcqDG2OiTzkujJo3qSDPELURC5zyIU80YAgEo+fgzz8SxZ3kQ6CPG68Uq3RkHk8HZCqIYeHazzYaLOjPbF9PLwNmKFTlIM8RxS6HpdDgzwGWI4ayu56POS+JVVYw3Y8Yfoho/Irdzyzc95yQ6GCPBU8KRwppHE8lJ6mNU9JZzzLhF1C5ilrPCtFqzGA4Gc8NaQP12lwdTxPahK/XuJnPPBu7cLAlG483xd5DzjKdDx/V1avUs5nPBdYs5jMiG88K25tZTv5WjxyTUWahtJXPJYl8DlELGY8vbPStUnscDzIUV3sr+h3PE79W/sb+mM8Ud8MODClcDz0jOzJOTxzPO/Ja9s3bGg83d2U4XsEbDwhffldH7F3PL9EbosWo2M8lx0F1BkraTxv9pscHbNuPOBUTxVfc3M86ps1N9MCZjxOODIPoXtEPDXRZS+ljHk8AxouxCNcKzxGDs/NzXtGPAZLSVVJEFM8PfKnoLvIbDzAonF9N9l3PG65i2QbaHM85/KwF0wVaTxC0fw3n2+APCcqJRKGFGk8HiPM/4pIcDwUzo6cxNF2PGEgma/eh3w8B+RMzmVbeTy4TRryfnWAPPKvmVx0C3o8DRZY6hhrejyUNCOdRedWPBDLHXJ3HnA8sDQa8lotbTzEds/FMihkPE0eY+SXkHA84kMbpH1pVjwfc7s7pIhnPHD5KLP4OVg8FdFGwlQTcDwxjhVHbj1yPK6+RbIV90g8QuMdAxNxbjz0rqQi8dl3PKAuYla1fXU8Uj2jK5BWeTweFqsoyyN3PLgVPmd2Z3w889FU5iYNdzwkJ1UfP0aAPJ8VL/ML2Xk88XDbPYJfhTwVmsSbvxlxPKHRD9TPTnk8bSOPjgTThDx/YYsnPVGFPKyrCrq+XIU8mv6gTMLvhDyWtYr6AaiLPNEKU0RewIU8x4woHih2iTy1NoSOA2SMPG1zahvBZ4g8eE3YeAY8ijyVmnQKxMSQPDPC8ZuUQI08uVotk3cwkDyftx3LIzmMPPuqmyvfr5I8ANTOe7UujTxxS/2/Qp+TPPhUVd84XJM8WcLZhwV8kjy5ym28mjuVPG99YFWahJI8OMZ0QrP8kjzjAcg9nqaRPG0kZRRfU5I8P8M+oADvkjwmenvTypeRPHYv1inztpM8o81TUZb0kDyYWr6AU4ORPLOcwosiz5I8LBCh3VqHkTxQcJ9jbLaQPAkTlxr4g448ZCgMEnz+jDwkRRX/RQGLPHr+IwTX2Iw8T9ZopZh0jDweYGYPO2mNPMCurpjVE4o8OSG3ZLNLizzVGnhHqhOKPJmV8SRW0Yc8iyedynSJhTzyUYtlh8+EPJF7WsZJ9YA8qcPoRCuxgjyTuk9PfGWAPPL72ksbW4I8BU4f8ATKgDwfHGwGHliCPLVmUJ3C93084VjjOd92dDxzIsBX/5d7PF2/dSWjT3o80QQznhFxeDxkdcGNiE94PMhcD5uQEms86kQ4sL2qZzw2EBCfOo1qPFFSbhWs2VE8w/Ff5syvWDw0kVG37YVfPFOYIUQHLmM8dPtnwOy1Zzwap4rI3wRkPBGwqaaenWY8PWX5PtPuYjxurO5rdNdhPFB7BMEzIlk8Jv2PezmSYTwBiLXTKLxiPMIIyEcN0V08JUbL+rfMSTzHGB5fw7hEPHmi1eq6Wlg8Gp+KutlCVzxxVBY4GB5YPMgJorVW+Vg8H78tM5XUWTzh4jT9FzcpPKvJ0V14KkM8Ty0rXpUDUDz8Z+SavQtYPDfj+pnNE1Q8wiSeKGv2UjxMZkG3CNlRPI2aK0xitWA8AAtSvohPSjwnSwBQD8lXPGfIayAtNWE8Karm4RPCVDwSDtcLNmc8PDYuoLX0hDs8j5A7aF/ITjyz9zJu0jxjPBNlfnTiSTs8UFuz0ylXOzyMUegycWQ7PNwOLLdHNk48U3BS75PmYzygu5N6eMRIPCHEUBEMdFA8cqpX5duFVDxMKIomu6lUPFHg/xZ4dlQ8Vph1BzVDVDxcUOv38Q9UPGEIYeiu3FM8ZJf9xFiBZDzGU3YZ5X9APBHStgGBiSw8gRCvYrJvUjzCPgFx8YNZPJpqLsD7V1Y8zLYW0+dyVzxc294HQPBTPOz/pjyYbVA8IH5aV2YuVTxT/A1yNO9ZPBjwHpfCGFQ8wuUEqLXWSjym1pdDzPc6PApyeMlNi9A7aALyvYjFTDz2iShw/bRcPFwJrECbg2U8NLHuPh3LYjzZbajBBDJMPCKUVzsc11I864sP9Yl2YTz/SJBSyt5ePCh6AbuA0Fo8UatyIzfCVjx63OOL7bNSPBtvv6SZxGE8BcF2B7IxYTxb2TDEDqFsPN+ldvOGxFQ8rqsTZE8CaDxHT6mAW1xqPODyPp1ntmw8eZbUuXMQbzwriaL59X0RPKh+hZpuOFw8Xmq46n6sazwm0UuTr+ZjPN5vvnfAQVg8RbTnhKmzYTycMPDNckZnPPKs+BY82Ww8PWpDX8W9UjwOP5787BdlPMl2D9oDkmE8CV0BbzUYXDw3nBDC4sN0PCB/Jhfy4XE8EMR42AIAbjxwxI6lLkNfPJ4da+toi288jD6Pxe5RYzxkfT/18ctpPAef9QwbwF48jYbYXqTQQzxQAa6wjzNZPK/4UjcKKWU8ZCvhkPmQfDxvyBOniF9jPCiskfRJrWM84o8PQgv7YzyP3srZvjZgPHhaDOPk5Fg8EZivAUIxMzyCI8vJn2pzPMKmvbkV0YI8pWMOuKC/czywOGQfjDSCPIw/weJHiYo8Kfo5T57PgjxhOwjvgESPPI3TbwA7xpE8aYlbiTXqkzxFP0cSMA6WPOd2mTZon5A8El3XtUBhhjytmPf8YQd3PA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4571\"},\"selection_policy\":{\"id\":\"4570\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4568\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4568\"},\"major_label_policy\":{\"id\":\"4566\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"4827\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"4565\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4571\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4565\"},\"major_label_policy\":{\"id\":\"4563\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"5df9a59e-00bb-4703-ad93-e0216505326a\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"11c4557b-568b-4644-b056-13f01cb02704\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.372389Z",
     "iopub.status.busy": "2023-11-28T23:01:34.371857Z",
     "iopub.status.idle": "2023-11-28T23:01:34.405987Z",
     "shell.execute_reply": "2023-11-28T23:01:34.406435Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.418032Z",
     "iopub.status.busy": "2023-11-28T23:01:34.417322Z",
     "iopub.status.idle": "2023-11-28T23:01:34.420269Z",
     "shell.execute_reply": "2023-11-28T23:01:34.420599Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:34.425222Z",
     "iopub.status.busy": "2023-11-28T23:01:34.424746Z",
     "iopub.status.idle": "2023-11-28T23:01:39.413303Z",
     "shell.execute_reply": "2023-11-28T23:01:39.413630Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.547822403907776,\n",
      "    'gravity': 5.144673013687134,\n",
      "    'metallicity': -0.36662079095840455,\n",
      "    'temperature': 885.8198059082031}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.144673   1.547822  -0.366621  885.819806\n",
      "std     0.146331   0.205954   0.053009   42.826401\n",
      "min     4.914331   1.253080  -0.414068  814.115051\n",
      "25%     5.064962   1.467646  -0.405928  856.389984\n",
      "50%     5.177329   1.581522  -0.383012  879.089508\n",
      "75%     5.221916   1.616461  -0.352056  910.468704\n",
      "max     5.375073   1.970521  -0.249116  953.849365\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4cba6f75-b3e1-4855-8ed2-4c4570fc9bf8\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ed899a70-3c4a-497a-a114-f617a909cbc3\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zvYztDRMQT4XwscO3RtEPjr0rhG6CEo+Jv5npcT4Rj4Dr7veues5PgkkIBiRM1Q+aPCgrMBuST4D4rznVQZLPpYpgd8q/1E+gx8xLGHoXz7lmnpxRv9jPuVAoTxqdmk+BNsMYFpSbj6E+1kEdyd0PmNtrLPKKng+CEKws4RMfD4n6V3R0SWBPpzkvrabYoM+O70XYFyXhD6We/xXnZqEPget9muiS3s+lFg2xG4iaj5WHLssefRVPiI+dzXI6VQ+MpaRoV8nVz6wCmgbAzFMPjBgmL5qGFA+m94VVaXjVj62WQ7DDIZmPvS74X4EYnI+ZUQNvTjTfj6TYtSDpEaFPjzBKToNeow+bwuTyrsekT7arJ+QeSmVPjM/BEPtlpY+cv1yr1VUkz4jV3z3HiuQPuRxCCr8o4c+liMFrmHDej7IYL9hlQRaPhGQ6he7/jE+xrL36vH+LD5kOsBznspGPqy9VG81eUc+gkbkwYzqKD4g3HZnD40hPlX6WYzmpDU+88ycKFodTT6m1EdNRMFTPvIeZ9aRXVM+QR34ZatOXj72lIKJxp9sPvuXsgxZf3M+79XivyRZgD4lHY6U2/ODPtAmz3cnBo0+ttDuj3E+kD4m+uAZaBWHPkM/GyEteXA+PhiZYIlgZT4yZO+RIVtlPhZCRvVE22I+xkYNedEwYz6+RqgpZJ9gPnMBV3RAT2I+dmQQ93LOWj7yZhEIENpdPiKyQvVEX1c+KzCokgkHUT6Co4iTabVRPjy6k2wXUFQ+YMtq6f0jWT6HgzhCkW1FPnwdniGYuTQ+aQ17wGQEUz46ikauewZePsINyKmFaVA+75SJwr7IUT7hQuUx6tNbPkNo1PDoGGM+TnrSAYnxaj52Q3H3kzJyPhZ0dfl1j3Y+SagTnOiuej5EeQaNoXF6PtAqx+c6pnY+kOR3Acoucj6UNsRDKL9rPkAU9EenN2M+X7mi1lejSz4/WC4t+b5QPs98gQBbETs+Wubl6IBQQj7vkeNfY+tBPod0eouWOU4+y2QO6lg9PD73VaA6Qw9FPhFOaxEc+FE+lmrgpFVHTT7jcpeO/CRePpq9vC5XgFg+We/ha6aXWz5OfO96Lp1nPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5244\"},\"selection_policy\":{\"id\":\"5243\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"moQzCi9LND7BbtdaP0lCPrTJDa39cUM+T01Mu2OzSz55KKeAUog6Pqb4IUYFs00+06GouzpgSz5aJgnuUftPPq0EwlJfuVU+jLysWQ6qXj5viBzHVlNlPqG+lw9rjWg+umv0xd7+bT6Y/hz1ojN1PpKUmrflzHg+r87qZ24pfT4zOf2Xw4CAPk+a3T5HkII+PVlAdCaxhD4xAL5ByKKEPvloTBqClHo+pDK+S7G2Zz67UPXH4l9WPqqhgMJaR1c+AEwGajR3Vj672HMg1fRQPrFBFet8F1A+6dxvkGp8WD6gjd2c/mplPtD0XzQOKnI+kagIyeSZfT5bvhXrqK+EPolRCmaK64s+Gn2Bs/MmkT6jaSJqiymVPhnXujDPzJY+nE1BHeTgkj61bNDJmviOPvwSBLs2B4c+KhcButi6ez7UsWE16aJYPopvGmCanDM+BnSHbA4jOD5NhG+jaO9GPou3gEB5Uh8+ve/nvhkgGz7hYkHCvpYnPjUVLQUOozY+CMUjlm78Sz7oF+ppyZ5WPmRpo8BkuVU+49V6bsCJXT7fOAed449uPuHzur/pgnM+r7yCsE0KgD5rjJZSdgyGPrrv3V6wW40+kB5ccpsLkD7CcazkoHyGPgOwzKR/dHI+EAwl0rJ1Yz4t6aYLAJ1jPlSr0h0Ma2E+ct06S0IpYj7zN+QtZFxlPgX17hcZDWQ+p1Qe+GiJYD6dLUrbVBJgPrqP5ELmS1g+zY1kW9A/UT6wnIRazGtPPiHJwVpPolU+YQy85OYpVT4J1WOdKSlKPrA6kfQnJ1E+yiZ2h5mIVT6qe600zUFiPjc8hUazmlQ+m5JLugG4Tj4j5iLtEgFdPmPTiDrpkmM+Hg2LtRjqaj5Q49SmMd1yPgkWvAOXWnY+3J/YHmpneT7Zz8F/9UF6PtfljuJhXXU+bNI9CJa1cj76VVcnQRprPq5vP7/k4GE+UApUuSLTSD7QTBgt0C5SPrBemy7rEkc+g1KV4TtVPj64F0VEGqJGPv/tK0x6+D8+/V+RPz0NNT4YEKq5RUBDPqFl+yg06VM++XhV82GNTj6QHzL/fmxZPso1X/ZzClI+blPKGwM9aD6h15AGtmFkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5234\"},\"selection_policy\":{\"id\":\"5233\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cxK0+kzdQT5oadHUI04/PhuadDBaik4+AQO2YASqSD7mZ2H2nXRDPqaKL0cgTEg+6Spxqkp0Sz5NY9+LMbxJPu+l0cxPLVM+TQdtsF41Xz53RqUMtzxlPv4mVoWsKGo+DAD6cfJVbj4M+KJd/Eh0PmySxmWo5ng+/0eM4gJOfT7xvCx3YBOBPtA6Gc+xyII++l6fTaGHhD4xEUvfgCWEPvyKacTt5Xo+eeTaf3CMaD5tBflKP1tUPlaSHAILflU+vKHEK1HzVT4bqb7TvzdQPj7IH8LJhFA+7uA0tXDXWT6WQVFlqJllPnEDPuFXf3I+EPktIKtBfT4JwXk9kziEPtNTiiDms4s+UlUPRs8TkT69QlYVk36VPgtnaGAusJY+UElCgqa4kj6B1hKXODyOPlbUw8y9Roc+/ZNCATKifD4qfGn87VFVPlotU6LZpzA+T7AJC8z4Nj5hOAR0YF4wPrSQw6O+rTg+D8DdnI8ELz58zF7FddIePhrCanvEajk+9RdlilJ9Sz7Bjk+cgc5RPsvPoVy6ylM+YPk9Vn83XT45pTJ8l0puPkb/glxXW3Q+0yDCARkwgD569AzvsUCFPnr5s27CkIw+Wdqwt3SXjz70O+xdR4+HPjkBfHue2G4+rJ7z4eRfXz7ie6lMSJRkPhDACm6jzl8+3aot4lAWYj5Sp2M+8WpgPrJWusBZCmA+WxY6586dXj4MwpFCmAxfPonHbHeNr1E+4cOR+6fjTj5rWN8uf3ROPk1YFxfLQEs+5wbRMTlAXj7Y+KsgUghNPqD6skqCb0Q+gkczHDByVT6TuqG2d3tiPtZTdkGBkk4+rhtv7I5IUD5kR9goDlZZPkeAqqsXZWE+JBaCDpDWaj7enhrCCfJyPqyO0C8c0nU+1PKi8OYdej6nIZ4hwwF6Pl+M3H7aUnQ+PszCXGsacj4P56g6oFZrPnMjYyqixV0+X466rbxDSj7BSnGdJX5QPpx4Tih/X0E+sRImKqWqQD4dh1TWNlVBPkjb3fRMvkg+dNNEBnqFTz5nWYmRud9GPlDx3Xc7PlI+SoUhF74/Tz7o1Zj4ynlbPlTsxY6bWFM+3dTLQGL3Wz66qwUAimJgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5240\"},\"selection_policy\":{\"id\":\"5239\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IY+LANeAOj7Np0PcRylEPlca4fyeA0E+vjH4gAoKRj7PZAswt/hBPqHHEIb6tVQ+r9cVBA2zTT7M3MzXsxFLPsDvps7OWVU+Ssv6RdhIXz6W04AZ+o9lPrO0M8H1wGk+PzKzVx0tbj7QYghHV8N0PglBY3pkMXg+7vwvPctQfT5SHWb2AnyAPmIogkKvKoI+TxBO1cA9hT7eKrPLZ8GEPi3NkVt6T3s+NOnFbuMPaT7pgGbrgSNXPvYh2+WBklk+J6qKGxctVz7TaIxv67FUPpYYwhFFuk4+4vGQ9mb9Vj4YQ13H9L5lPtrZi/ig3HI+GpahGmn6fj6EaaENFtCEPi/dDoFlHYw+PwzTtfhMkT5mWKjFhPeUPt8tr0RXlZY+dbQRVxU6kz76TVBnu4qPPhkKnBoykoc+kTIbI27Rez5+0flrIFtWPv04PTZm3TI+PTXtllQJND67bsR8ofhBPjFhDOMeFzE+a5x2eJjyJz6+YYpe3XQNPv3yOk4gNzg+wO9IiqEnTD76U1AngzdRPtTe4qbpZVk+wkb2xlXRYj45OyuNvcdnPkFgPE9DKXM+ByCR2pwHfj7/97Zj2ceFPlm+95Jgoow+M+iPURwUkD7P/Yb6rcuGPgE5tqarD3E+EB83On7FZD5ckhQPBrxkPllzJ1c2FmA+YzZ94AENYz42y3UFk7tgPuLZ09RYk2I+mYNZ99ONXj7F396G2dVhPrm09lzs31g+MpJtDIsxSD4+Sx1OVJhGPg0aX806FUY+qvSgUG4NUj4jpC3n4vlPPlTuKJqcSlA+4wU3A1QqVD56EAwzLftbPoYeGtTdBFM+bn08pDScSz7f2xZx3DpaPox8xcV8gl8+PCX5UqBzbT6gVqMD97JxPii1H7djxHY+IMaHLQNMeT4x7Inv3pB5PoGeeye4wnQ+SbUXakvJcj40pP7et7lpPlkEWW5Qx2E+10T5uDUOUz4fhYm5EmhOPq8jnISDS0k+vdO4HrMlOj7wqWbaurM/PqF4a7/p3UU+KzNEfwdBRT64Y2owjANGPv9s5P4drFA+VmXXrvXzSD5aYgKCb3NTPmwK/KTfnVc+AebuP31UYj5WShdgXUpePg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5230\"},\"selection_policy\":{\"id\":\"5229\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zLjFYZlRRz5TehaKBnJDPtbcSNRi4UI+jtOewDIRRz7IQJQgihc9PmS3e0kNrz0+jU18lomgST7GdzOe/oZKPvy9q8YZ6FE+JCVKPHApXz5Ps9tGr9VjPm59fV84+mg+CC9R651Ubj69+/saK8d0Pl51dWC4V3g+xRyzMuAifD7NkzcPtxmAPs/e9pwCm4I+eGXdaJrRhD58A/vgVwaFPhCvr/xKtno+NzDv+3S9aD6QhQA0CvNUPg7e5BzZrVU+Le7IppPxVz68KSXH/RZTPiHUdihcAk0+j5w/HkecWD5HOWDSbuVkPo8ZZeygO3M+/47RIQ5KfT7itIkkV7yEPqA2TK5eeYs+8Mcw/+VskT7eiT8tCSKVPhFNnN5APZY+GS3v7fR1kz7h8xdvce6OPo+EA/ddaIc+q8NXZ1UgfD5m19mOSHlWPpXdtQR6wTA+Moeo48ZrHD7pZ2CnW381Psd7iV9ZoCw+LH1oQVv0LT7r2UgRbt8sPrPybq+xaik+2WD3C3sfUT6zgVuWioBWPhIkjqCeo1g+dbFnPia6Xj4eucDaZQdwPknRcnTJEHI+pqkZvcKyfz7k3/p6XLyEPhQQbcEaWIw+Jz+afNY2kD4JM5UQIoGGPsm+X6VP/G8+jx9roLxBYT6E244bTZtkPrURNMrYGmE+qBUyG8DAYj7XKfiiFWdhPr1VUt1xTmM+E4MAJ2GpYD6V7FeZutpePhlnqfZ3Blc+LmknFnSDTT4+GoTQTTJXPhTFa3UkwFI+E3lpNMcUUD7DD7XvXqlBPtzraG6ZH1s+TjdvNlHdVj54y7lo2iZgPmU8KWv0TlE+UIrT9/ZlSz7zN1ryTpVcPto7JQbnoF8+kA8PiUScbD4N3ItTu5RwPlMzrN91QXY+CbO4+Zu/ej5yCkDQV4J5Psk/mMO3fnU+LJ1mlE3ucj4EdkVipyprPhpkteyh8WE+Tz8/RrtVUD5Fvsc65PFLPhdgDhlOCUg+GgHCSavuQT7Lab7fU+dBPnC+f8WnlEQ+vIfyt3xTNT6qigDI1fhJPrsdSK+ji1M+DcEBRjw7Tz51CzfQGHxjPukORZwTUVM+jZyzuUFUZT6/9mFu1OhfPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5242\"},\"selection_policy\":{\"id\":\"5241\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9q/4jW+vQj5QSWI+LwlFPjm5ofGs8kU+2787IZxITT5hJcrU4FtEPpzLmU6PtVM+72QA2ciRTj4Sne13ojJGPhWrLAdi+lQ++qZXCzr+Xj7BXKWDSzJjPoKBwUpCOmo+ELA/SHghbj6P3wbTS/J0PmnEGxdKuHc+BBYTZ++afT4MVrCb4beAPiE9wSFzcYI+maDquIkIhT43exWqd6eEPqXYIepcSXo+0jjXQZfcaD418Xc43ftVPukrdyAT81Y+SJKBkiwVWD4najG2d+pTPlptmy4I6VE+G0cP+QLGWD6I7oZdZ+ZkPtuWIdqeuXI+/s/6L0b1fj7oLFP6O2mEPsxGp0xmqos+AFtFfA4UkT4UPntVbTyVPgf6lxnnSZY+em9SVLoUkz7YaMNvmDiPPu+wevoKDIc+YyZELIlCfD6396OqzCpYPj9pFwU7/TQ+O4m8UeYcMz4fnRZ3Mo82PraUdWhtjiQ+vfXIeF1fQT6eXPjxhSsiPq2zNsjNsjc+JqoboaO7TD6c5o6G0x9UPhM6xAv97Fw+U0LmShs3XT6Dz8m3Wv5qPjpIFbRFJnQ+Rwkppju+fz69Bk8prmKFPl5kKBCP0ow+jgcsTB2OkD5nIkLFlESHPlAKgQ+cFXI+wCUmkhdpZT6nvUDHG5NjPt2vU3XKc10+ZYZzG22VZD64nqG6iHZjPu0+MERlzmI+wlOUP2VIXj7sC4UZImhcPk2jl8SvAVQ+IM95cSPPRT5Z6EcbXSRCPlpklLiVNUU+qTmYTHNHYD6zm8uM2f5QPrmvfnt5k2A+Gj1bNorXVj73V0jfmThgPt2HExI0+1I+UP1gpB4eTT5ozC6b365ZPh3QZFlWW2I+MFTiDFexaj4wmxOkghVyPmCfbSnN/3Y+mkcjgXb0ej5wnbVlEk16PmqEbYQe43U+PMsBtgVecz5DPjFq9EVrPtQ28lBUV2E+4NfZ16xWTT6HnWbtQbVJPk9SnGE3HkQ+TNqKLIFEQD4+qzpuvkdIPjremZtMo0M+n07IAN2DSj4Ad1ZYWqNLPs092RVckj4+Px5Yi44BUD7mjab8m2laPiF+vYguR1M+qrZDgtoWUz73qdxjXtxrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5238\"},\"selection_policy\":{\"id\":\"5237\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5225\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5223\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5220\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{\"ticker\":null},\"id\":\"5222\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ilU8FuSHQD4O5fyqrWtBPp+duKWLY0g+9xGuRVX9SD7WzwXpscg2PniS2M+urUc+TSwXBrueST4D9ofworRQPj/n80HLhlE+gHmuU2NHXz66HAducYplPiU9Q4ds5Wg+5qvuyg+qbT5kh5z2gulzPk3lf1o8g3g+yv7VybGTfD6GW0mBrgKAPkTBpoaQ24I+FD07l+NbhD6JxMJK2viEPq1fQoqjr3o+EG1BnnR6aT7cyIzUbRtWPmpTa0jpD1c+BVagqz9nVz6iqdllV8xQPg8Ioej+7E4+bm40aP7vWT6EoN21McdlPhazgcn69nI+G/BJ9ZXafT4iFhPjXruDPpjffPl024s+YV3yVYeikT5TZ2pLHCyVPmRMYgUrnZU+EYLxyj6zkj7wCemUrraOPqvChg29Y4Y+Ejgjfhp0fD6pcpns1vtWPlDnkHly8zI+9XwN53ElPj4p9SUHeIowPvbn0leD+jA+p2cSV/LWLD4n2r27cz41PtBPqMzu3zQ+hqanbOg2UD7lPnWGhjdNPr1qrg0nrVc+qt7lZpLAVz71Tj+PODVpPjMXP3sJ3XI+YgM0QRR6fz6OucttWn2FPg0H7e61Po0+FlbgeDSjjz71UIAOyYOGPlwsZAn2vW8+dF2HTCa/Yj5zxQuhKRBlPnnrYvI30mA+D2ykwOx/Yz6qGBMFYdBhPlNHOfIaAWM+LlYIT+xrWz7xCPOncOtfPsIBWCWU7lY+1TW4uDtUSz71lwb/YWhCPuWMAyg13VA+mzUgowCPVT4HEWB8JUJOPo7JimlQNls+3/p9QLG4Uz7+lcIjKyJfPv3gxkuBz1I+MKx90IFRTT5kbEdz7DdbPkiocO+PvmI+0n+F59Febz4pAmCCZiJxPtDQY5xDiHc+D36IRVAveT7gfQDRL655PqTQKj0UzHU+4Psgv+Jbcj4JRSKgGUVsPsi6cgn/hV4+QATkoOrzST4K6pshGEFNPmW5x+YMU0U+0ebyzf2WNj4BISvRzvpDPnvMedux6Uo+DtHqb4vVMz6JXdRhSJRHPgxpu9iaAE8+o/uNGveYTj7vsAEtd5JdPkSdu69F31s+Lssm6FCjaT6OhjKiNP9hPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5232\"},\"selection_policy\":{\"id\":\"5231\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"J0dKoXc4QT66TtDpz5pCPok+rZVoNkY+amHQltd6TD78ez3OtaJBPtflCtgwxlI+DqCiGawdTT6JrEx/JhpPPn81t7pselo+aWJvduixXj7Y77yr3ZRkPuKPjll7+Gg+MDyZ0UH8bT7BzwlID0l0PgBFd0aeung+rciWEuqUfT5W8C9m1PaAPs6ujbKCfoI+ENN88F63hD5WtvT+IlqEPg9KPOEKDH0+MRh8mqTWaD6qfa1wZhxWPpmcNKikX1g+/htCBWguVz5SaplJsAJTPte5ZdafMlI+D2vNeAw2Wz7yGgbxCABmPqrA7T5dC3M+Ops0jHtGfT5fq+yvvGSEPprjMXNTtIs+qymG3nJekT7BdQmfNyWVPsEUnSCuKZY+/SOYk5kDkz5YtUhc9JGOPl+3b6RTLIc+piA/hDPyez5a4Is/KxdWPgCGoo3nFDM+kfM90MzOJz6b1XNmO/01PrVhoQDBYD0+T5oBdZiKID4xelbOiLolPg+NRTAwri4+lbgEO9xgTj725nbIjzlTPipVtlguxVY+b0fuWsJnYD7t5jfAu1NuPpzwvsZ1n3M+LC+bC3Qsfz75qTtk1f6EPiIleUVAkY0+JNvjowTXjz6lzCNqY4WHPrUZbgvljm8+2YxbNLXqYT4aCX1lrdhlPubriPKt7l4+I504t7rVYT4GndTUdbtmPkZZkUqo2mI+jGu7s1zCWj5zIwOzzQ1gPjoBcJFqmlQ+HbkapxrdPj4gN7EOEs5MPlFSJW02elE+7paezb1eXT7qcew85wRGPowqXiWYCkw+JyA6fygkUz7cVREEQRFWPkrqjK9Qq1M+cSYlNOr/UD4MC+1KRlNZPgEeLPEUCV0+v+HVJdcGaj746oqE6KNwPt9P8U555nY+Esm8x9SWeT7o/lwAMYN5PnYdQz8YSnY+dl7Ql+vrcj4ZuVC8MHVqPmHcqfHgb2E+ppcbsRMYQz790oWxgUJKPiXsDaWyUkU+rS9TWgkaRz7s6OVXLclDPk6OHi5KcFA+8Y7XjVcVRj4clVHdBbZIPlhPmssesU8+jBcXeMziTj6+naX/HhZdPlau2K7aZlI+LxzYdk9KVD4jTz8Hft5gPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5246\"},\"selection_policy\":{\"id\":\"5245\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gAM+Zu4XNT7+YoMQpW0+PsVtK1idyUY+S6+F7HbhTT4u3KeXOKNCPhRef0ifLlM+uKwyyCFwSz7kfvbOtGBLPtDBfe7U0FU+n7/+U2LGXj6feZN53f9kPr6H+m4kEWg+5uKsuOhhbj5Z6crKlJ10PuuJKWLOK3k+ua1auhOlfT78QxmLIFeBPh2yk7ltkII+hHkwix1ghT6PXdRF5euEPjxFTk0I5Hs+Ln5DHwVAaD7VQPLYgzhWPjulDdd2E1g+t9ctSbHzVz7452UkcWxLPsTwcrCvOVA+aPjmu+lXWj7wAoiIsBNmPrY9NKkln3I+bWQOSZLUfT5aP+jQw7CEPtw6iEw1z4s+npESNxY7kT60bJgq1c6UPolwe5RdOZY+BSyP/cPzkj64UZIt3bGOPoejUgDe7oY+jf3EX/OFfD5FHVgQZVBWPh//qD70yTA+29Urwa93NT5IbvPz4utEPsqHX8GczUA+XRBzTi/YIj6hvmfHohglPqTwR9HkLjs++kOCRKtoTD4gX0XblVNaPuV6T2zzqlQ+hDr9gVpNWz4FUKoPf6lnPg/fmEbWPHQ+uhSsh5HMgD59ypwIIASFPvb804pTk4w+Byt5oUUFjz6xNpfDOymHPnRdgrQ/5XA+iFK4fRvHYz5c8MD+9dZiPpj0edmjDV8+fYCNutpHYz6NHME3D3BgPjPB6UlXMWI+1gxZQBWNXD7ygFQZ6L9fPs6EKWM6Vk4+K7RSD2mWUD78iYWyY8xMPkd8qluT3FQ+/oQxOekzTD7+LzGBcrtRPqtOGqhrIFo+thRp5O2JVj4vbMiIZLRcPgeabvqOg1M+zLuvoUJEUD5woHBZR3BdPtZDck3YQWA+BXAw5SFeaz7idk1VX8xzPqOLVlCh8XY+Za7FFx2ueT7NLrl/Owx6PmZHOl1Ak3U+qV9Q/i1qcj4pwOhdrXRpPkg+eGjZAGA+b9WE21TcVj5xOc6Xj9dZPsZpExyPREU+upZ66hsHRj4SheB/GXNCPuAWYXwBOk0+t/G1esbgTz7OBPFKIwJJPmnOaDJ3IUk+MlM9EzlQVD4QFiiaGfFXPjdmIdFL5U4+3yQjp2FtXT50k1XmM2phPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5236\"},\"selection_policy\":{\"id\":\"5235\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gmiF08CAPz58mzFUabJBPiQD759l8Ug+GXhM9HnDSj7pnNC6DL0+PlGXEV9bNkk+AlnqB+sGTj5dzQiwyzNPPrEd1DC5iFI+rE8tQW8bXz4xl46OwVxkPv6UgIRKoWo+MMz5YWEmbj6zeMeW3cx0PjbeUs7V5nc+qTpWEQLFfD5TAYRsnXmAPmw370T6g4I+8YlI2AKBhD7dr4UNi0SFPu1+Hv+/+3o+JnFrVpjNaT4dqWZR0B9VPsS1xpABU1c+7Y2B5RhXWD7s8zHVL/9LPqCmlN7+h04+TeB6hH9HWj7eUZd9M7tlPjPL9kTJa3I+VGjjXvdffj55XLygFaSEPiFvaueObIs+JtqaLIPFkD4E1DQtNZKUPoqEsqSzj5Y+53opoHzXkz65MdXdOXyPPlcWSrfLxoY+JWyFXLwfez4xTrBdibxXPvJyglm2EjM+0UuqZDipNT67OpH8gxE+Pg8hAngNlUI+Khy1R9JRPD4fsSIV4YkxPlkn32WYPjY+ZL44gQ9USz6J3A/t0PBVPuceiTyvj1k+1ebdV5gnXT451KGUPqRsPsz6oug1C3I+uQQorPP3gD6s8LFAmPCFPnkCdx/DbYw+6MBeivWsjz72FkWAzQ2GPvAw/pNZwHE+0qUVAAuiYj6/cHM/6sFkPqLxcRfmN2I+ZshVF1sgYj6Xh3XUcFxiPlkWavhK22A+ApKeQKniXz4QfbPz7zJdPntjElcTuFM+xKsciBSJTj65The1jlBLPmHSouZ14lQ+O3B2PpZEUj5/RW3Zwy1TPm/Q/tT2zlE+Xx9w4h/YVz4tOiJOUppePvZWIcM1GE8+oKR5z5eMTT4e+v+1WDhaPmoe06nI+l4+6G5D8ORtZz7EBnogbqFyPqMzEQb/bHY+LqIr0d5Iej4opOH3Sad5Pl/wOe0Z2XU+XBJqHuRtcj4eaR8nXAlqPiQeNnub6WA+J9CKm+LiRj7ctGwBAHhPPqYtGX9RbkA+ck7pb3WnMz7dvTAxvlFDPsHBgU4PHUQ+2rUinPysQj4wlq9T/ShJPsqIna08zTs+vLAa8HMVVD5h4oWsZAldPmW3zPIlh1g+LO+4AXuVVz6JWjyObCxgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5228\"},\"selection_policy\":{\"id\":\"5227\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"Selection\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5225\"},\"major_label_policy\":{\"id\":\"5223\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5222\"},\"major_label_policy\":{\"id\":\"5220\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5246\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ed899a70-3c4a-497a-a114-f617a909cbc3\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"4cba6f75-b3e1-4855-8ed2-4c4570fc9bf8\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"66b4dd61-bd71-4b07-9e61-037d3c792645\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"cbf0f362-22bd-453c-86e6-819d855a4a02\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5428\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5455\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"novSYhgRWT7EZphYsv5cPig0+uEtmlo+OY334Jl/Uz4KdmfXyKlOPq6tiGd1MkM+JnNp+poxPj6oj/yosqAyPimd7dle/kI+HiIy83XxNT44+Te+Gfk5Pn/CKATpJz0+9O9/6FZ+Sj7E81deasFHPsQykIenqGU+f+dwiQRNcD5Auc2YhD54PqLSjQI3ZH4+6MSXR7OwgT6sWk62HmOBPkwuhC7bI34+0DWrPDrHdT4OMF5XeWxxPn2LO1LI0Wk+XkGZIkOFYD6tR/tAMfFWPjZLHfGuK1E+knXq0ceiWz72MnlmzMFhPsQmIjkR3Vk+W7XgzGCNTD4Ru0qokyhRPuh0q/57E1M+sIFg93L2VD5r0GqJPFRXPnh349ajpVw+TRtUNz7aYz5+5Fm0MVhhPlguyVlbaWU+bU02Al4CXD4Nq+iGwixjPt2eLDRA+mA+uslOW+aKaj608wQNySlkPty6JO4YLHA+6rJzuJ2qhj6gvMRXYMORPm1jojYcTJE+RLKrFs82iz7jlHDOKkSEPsWYG73eW3k+qF0BYYvycD6KU6yNMSlnPqScA+qeAmE+gsedOS4pWz4wVUBNlrFRPj0wh/+cVkQ+4IYd5iNKMj76/TaeHesxPgg2jbBVAi8+Xv2qjBj8Mj66T4L0PbQoPoSUe8cfLys+Rvd6CblRUD54230MPXuBPoIKTKU5Y44+AEHz7Jbwkz6+oRg56/mZPqIjCsJxCaA+HOfEdnN0nz5pNMsE0uCYPs7VqVlxvpY+fJh9ym/ekT72Jss5A/yIPjXn2rGLw30+8jJ4v1F1bz7MTjJ3HUJaPqmPRTIVo1g+QL9CCBLTXD5osXpIkcRhPjgYDuJotWQ+ZjDwCiCoXz7Mn58lSwJuPvhiwVby+X4+mmEhoHc+iD7oEBJlwSqIPhzP+XAhX4Y+aHwixp42hD7ffCHiN86BPmpLmJIBjX0+DdX2Schvdz5C5IeuwiNzPn6UlLoT128+2xc233JZaT6AmWnL89RjPvwRG62P8l0+/M6bjzrKVT7dwIeTntFSPsfIGIqYr1E+jIRs5OATRT5E/RDarQdNPr7Vg/51J0o+QzPgHoQ7RD5Qe0Ej9l84Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5455\"},\"selection_policy\":{\"id\":\"5454\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5431\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"5ekfiHtLQj6pbMWyQfldPpv+tAchY1w+k74Sw/zGWj5R69RC5CRZPk8hxjXneEw+rYdIvAa/LD5av6ID6MdXPpqs6VT8HGY+d1MyUfZfVj6vUlGxrK9XPtHo9+RHqkw+d8o8jyCzJj7RKyHYzIonPnGCBLmyGiE+haBFeR3XWz61Vi5Llbc2Pl7PDZ9JiU0+bdHE5BzVRj4ZiqIqSrhZPl+JjSltz2E+7RNu9EIsQz602eKxVgBBPh1GvPWrGEI+XUYnsyx0Oz66bX3Lq5oyPgffAHyS0Tc+yXn6cSbDMj7YuvzMo2swPmuEWZqFv1c+/DyYb8TvGT7hDanOrsYmPiHzNFzPjSc+1WU4KY56Tj54Scfn3ZxHPssHQJscSEE+SUq4Cw4BRD5P/aoM05FDPp+LxI1QJUk+OTFbKd1yQD7z9hdHO75CPjX7cb3nZ0Q+Big3yAMXRj4+pduOtBw1PpI6HaGcGTw+88W/DzsXMj7RO7GR4YwHPsMaLAoIhjU+lWK5Rt4sRD7SKmbBMq4zPuuNt4v4+jE+1fPQ59SPIz5oh8VQBof3PWyqYme4H0Y+9vnC7H/cQj7b5/9XVlAzPhv9aSSmmzA+pii+Ik8VQT5VXqdvv7E1PsfSVQP5GCI+iZmSPvtbID487vuUUzEdPn0uMIOiIzI+qMpqr7IlBT6ZIUBwNxZAPgrhxu6H+TM+8Pvn50elQD6zCCEmoZlDPsuYOiDh1kE+CpCBkkE9Cz7kH6Wak6AfPu5VWBUynzY+s3hjfkQJKD4d4M6vFa8zPrYrge72eTA+Q7Thwoi7QD6h7ScjZUoxPlO1L1dPPTk+lHosJJOANj7YWAknomwkPsf3iTMmdCw+3UiGUPNMMj6MRsqQ5As9PkW2JWmHTEQ+7wKg+T7qQT4MrLsFks4+PmFvQpwDI+M9xIP0iiqqOD7ng17+wrNRPjVVqTWg5EM+De6xZuSyRj7jnhEx+zNKPr314QDPxjU+H5Va/qoSPT4uH1V6beJBPhI9ufi6AEQ+4PgZ7cqtQz5ttkZGUqdDPuVNjJqrWUo+Be56qWmfSj44CxKTrE1HPozGOR0e6VM+qUHDfCecOj6gkLBtQMg+PvOi1P7UETM+bfM0JyZNWT41UBGh/clXPpeOwlHg4EY+IpHHRttbTj54dNe8Es1QPp/BQ5lyklE+be4VDMLmSD7XF16ngalZPviuvVHxTlw+QcPt3anVWD5Fgr+nCMhcPppBDVLdOmE+fViNskDPXz5Lg+T7t6hmPqD+sMGRYmY+IsB/6vRvaT6lGFupVGNoPipj8aLmRWo+wYrloiEnbD7vki0oudhwPrMY7c4WTHM+SCJPfRVwcz4YQfCrcCJ3PoAQ2HLSBno+y7z5PRT2dj4pr0RBHyJ9PnpdVW0yrX0+0JiDQEfefT6s0VYjT39/PiP7q3zp+IE+DwPDxzYCgj6wWZ6cBdGBPmjiNhvMJ4M+vFzSQ2cShT60GIuAp2CEPiH9lmKBvoQ+Jo9v0mxlhD6AHCbkUKqEPvzVVpnHLIM+TBib3qzTfT4gL0o9dy13PkHyIPTup3A+LTqu1XwXZj7BElXRDW1hPhfV2RSzBlg+daEJWSX6Tj4njNevfedYPtN/GmWPlVk++9YGTJkVVz5rDkgRJuxVPqzJrLtPbVk+zxrnQTHPVT5RO6F+cfVWPjNkS7VEU08+PQ8rbMbrUD7KJYf3SSJUPkKt8fPx5Ew+SzUvtea3Wj6BJNICLDVVPlmsrmLgj2A+Xk0RkRVcYj6kMTYO6sNlPjyn1bW7emo+YHWoUWz1bz620HmWfw11PsQbxeW/S3Y+NL2hseb2fT4eVJj/6UB9Ph8r9PTvvYA+H+Jb5FMFgz61jGvfi2WGPggh8MeR6Yg++aNTMfbmiz4a2hy1DYqMPrvtYU4Tg5A+0l/VBQ4SkT7mFj7/VzKSPsuEPFdYDZQ+hQSADMVElT5u8/RoSA2WPv0pKpLLDZY+iZO9pInZlT5IN9IyTJ2WPv+FjyhUhpM+J1fIiwqzkz4n7S9g+nSRPrxUEOaAHZE+bP6Yl90KjT6mz+7APNqLPnVEBj8m0Yk+0Bcx5eF+hj7OFj5Z97qEPgK13wmYG4I+CoduNFpkej4LbS58/yZ1Ph7/G0talWU+Qo1mhsKlUj6C6GL3+fk7PklpDn2dnT0+2kCtXWmkMj5NMdW066koPuPLPDUYzCc+KtH2LRPrJj6q5c+X2AYmPpplGKk4yy0+bFD5CCjUMj6EAJ8Njyo5PjXtzs8R6zs+3UbKWtazPj7xPGspf8JAPn6FoOyi7zc+fU4RomR3LD4cvQErEaQRPu4pWxmi+xQ+9z+gvjxdGD6qCPxF1x8qPi4icqeBPi0+GwEa/2N/Gz4cj/ZvDGMWPriuFVMFxzU+lE2i4hoeNz4AxcIwHNlGPl+Gnaw7dVA+Tu2SbryOTz4tf9pd/7FWPrTRvzWLPEg+R9GoBZMnVz78y4t7P1tUPhKU2L5dkFg+gBDWu71NRD76kcCzuOpgPherXwxBWVc+JJt8E2wbXj52Pra/LKtfPgpcoo/53WU++cu8ygYqbD6D9ECyGu1mPj27D6UycXQ+JDbZyWLIbT59VMHhOoxuPig8suHTwXM+seztYn40eD6KEUP4zo17PlK993spm3w+3SgXCtYZfT6VCxFbw3ODPrgly8Phz4A+7FbE4WFzhT52KrIrncOGPq5Lh8t3q4c+LQ/ojl5TiT5PdC4aZZWNPo1tBL28D5A+hA4fDQlRkT7Jq2bCxP6OPkxRVkror5A+gHhKLIlKjj5Now3iJ2yPPhzFNJRwoIw+2C3lhDNEiT4yzEIYCyiDPotoJuqTy3Y+wNIsL0xycT49JPpQhrttPnRIMvtdQWs+6V6vVIxGaD5UKlEYhW9lPgEjTPzk4l8+3Zk3UtP5Vz46BAZmgzxkPln+luxG+WA+DUCmA0HOZD7VG52XVylrPioPeyMSLWc+0SuwQbAzZz4IrSOAompdPgPLV8SZCF8+LtPmu/3dTj5GaSstHUtYPuMb8iywH2M+ES2q5RvuYD6ukHOrNf9hPpxkjYxu0ms+NKVB05wyaj4Q4rQwKDphPnvr2nnHEGs+xFcMnEDBYD6o99KjPAJaPmemutWkQV8+B8Xx/QuMbD4aOCobOnphPoHRll4fCGY+Isn0gMksVT76AEkFtd9iPiwR1LuSqFY+DZRDFDFNST598TYnNNdcPlHxPve9BGo+77//AWbrVj7E0eWXrRlZPtxHQbjvRGE+IUboQOd4SD5C43OHgnRiPkmquolqQ1k+qf6vVByKMz7ZKuz5+8tCPvWEYRfTKDc+4Nk52860Nj7CEm+678wvPswbc2SR20k+cUhS/uzMVD4zi1jmdalEPncr2KlAslQ++Ntpdr2ARz46wEzH1gtCPjKcdiZnLFQ+TDYtYeGnND4hvqbmciliPoCO/FPmADE+LtbGRk6IVT5K8AcnauVVPrTp1TlUVlM+ksz8cS7fVj6FUjAebm9pPpfeQ1d5rmA+SxLJ0h8WRz4Ylic9SW8WPoZW7FOkklU+lQONj6kjQz76TLwt0eYoPlNa0QSvE2U+e/3szZILTT5tAhshjetBPhW72WH5cCA+7ueYEzUHUD76G9oQCGQWPoHypdql1Fo+mmBNiaFVIj42zQi+MAdmPiYTGWnRzEo+HjKRTFJoUT6yS/XfTi9VPgC9f2+LxVk+9hdThBlbXD7WTHGwnkRXPhjU2kp7MEQ+X4hsgYI0XD6qNfcfjP5QPkeOCOew7lU+KBmhbfqQWj4oKsUyMkRCPp4n+opfAlI+OTbO/CgMTz7+vITq39ojPlxuZVavBhg+xPWSzhe+Xz58hHbvMJRdPmGqA2u5OFg+0bimiYLTUj4lNLG/3/5VPqjI7qERT1I+uLf3+q9QYT5RY5CrxqhcPsMjHO+1imM+nclQHhy6WT7InHA9A7RjPsh8jIqzOWM+Ujd+UHrcRT7mvEGFGkVXPpSa9NnaNmA+WexlWHbSbT4A+/daNKxjPvbN3IzlQ2o+3JcKSgA2cD5mkhe3d0htPlXD7FBLCmw+Urz5mX9kcT5j59RCKq9xPhtlAMYJc3A+9tWTLiHJaD5XmPgi7YV0PrQuX254tnM+t0AJHtdvdj7S87LDzqRyPuVW52xaHHo+VHXKG+y5dD7gMmukkyZ7PklDiuEgdno+oH2vvDHGeD7y7coMDrZ+Pqa7jvshM3o+cErxwuiYdj65Y/ZthOh3PgW4jW55t3g+TETpmriRej4Y0Nj6vqJ4Ph3fK8Sf0Hs+oxsI05wveD5QPaOvJeJ6Pl4VLDQnX3c+zvAbdb2FeD7V1OZNDMl7Pq5C2yRUInQ+TEw3V8JKdT7y27xDBIV1PiwPVgLIo3Q+uhrlf29CdD7Wszz7pcZ1PsM3ovYORHU+IgucopG+cj5ZeD8o8VxzPmcArU/n5nA+8NQdy2XwcT7Pwl3FYNpqPvAyoO5xx2o+oBBWiYoRbD5PaQk6IEhpPiDWru2+tms+Bh2qxPPyZT6oSJCGEK1uPoAwS5qmk2Q+7SoLAP7ZXT6+JcXheUJkPpifonOuPWA+00LOoJFFWj5f44RQvgBpPr+VF3VBKV4+9Rjg7WVyVD5syWRmyMRMPryJvoV+Pys+qjEmWJavOz52FQcw/phJPggbzOrOdEg+3jUzHnjcAz6IzMG/KW0+Pm4IOLHu20I+m3fKIb00TD5DnETNGQ1FPnJNuVjfilQ+aWmIXcnOUD6T0fk+gmtLPp6JS19pXEE+XeEqsL7TOj54dgBWeeMyPgwEvQHyE0o+UP4m5BcUQz62XA2qBv1LPn5cLJmRZEs+BTmiBx29TT6ZxTXBtR4APnGDP768ayk+pCrj780iRj6aveM2nP5RPg9v33hT6FM+ZIR8vcvqOD718iTI5ppFPlUhCjbOHFk+BpOPAPC4TT74Iqr5pjkyPpFEiztRoEU+cwFSvIcNRT4rgpu/HQNBPtiA/aGc5jk+NKhokDu8MT4UaYumRVlTPtapa7wGVVo+evyZ/d2sYD6B45/nufFLPsty7gx6EVc+1cEenJRaST59uF2s/t0hPkf4c/zqZz4+508K33WoMz4wIUL/hVFEPpNLSi0P3E4+j6LypWbdNT7tLkUGAIg6Pg9NX27Xh0E+ayIhuzxbXD6LrR9k8GtDPqx3xsu2uDM+efC2nbPGWj4MMm3hHHFaPk/k+q/QWzg+xoT934zqST70eT7wBvZEPu+jqDEZSkc+CgIrFW9U5D1J/di+FvY5PgtHzfEctEk+6HvOJDxNSz5zDqqtOAJKPvzubB2YtUg+Y146chlzLT6e7TW4Qd1cPoUyyVLEdVY+uYZOS0h9Uz6cTH/gLIFQPoW224QPrUw+8ox8TIRSSD5J7+UATChTPuyhfeZXOB0+jkDsVQ5KTz4dLl/yxHo7Pq8vNqncY0o+BDRucpRiYj4ofKV7F7VZPijqPOfHk1Q+CQfRwtPYTj6EX8d+w45fPrFUIa0A1Gw+5UrCMBA0aT5JLb4/7ElZPnoGCnw6AVw+5KqbWmUZPz7lsXSt4ixUPqoRmjHx7VE+gjxSN8StWj4rWJOIcslCPkksIk3VOEM+u6m0RXhSUz7wEvN4oBNdPk0Dt7H2lWA+EkLk6uhgCz4Vpls0E3NQPm6vVsCXsWY+A5334QH9UT4IP1imDqdCPomlAuviBAQ+kj8Jxzj7ZT5j8h9QqX5RPibOuSZjWlY+Zj5/fPwZRz4GvC/sjGcGPoS448F6qlc+zV8vrPEUVT61w/ez6+ZWPlnwBjvwulg+4YOwHwCRWj6yI2qapZ08Ph/hR97IIGw+wdJmZg5lej4tuovD+GODPk3TxCPRi2U+atyl9Yg+hj6DB1n0VVJ0Pmcj4nuatFU+K9wupxgDfT4b5h5FsyiLPh+8YaVoSYw+BSO16bkDlz4yDOMKsVGRPtji4ARE7mU+BYiBXZ68Xz67HDw6ebOBPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5431\"},\"selection_policy\":{\"id\":\"5430\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5423\",\"type\":\"AllLabels\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5425\"},\"major_label_policy\":{\"id\":\"5423\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{\"ticker\":null},\"id\":\"5425\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5428\"},\"major_label_policy\":{\"id\":\"5426\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.14, C/O= 1.55, [M/H]= -0.37, T= 885.82\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5426\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"cbf0f362-22bd-453c-86e6-819d855a4a02\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"66b4dd61-bd71-4b07-9e61-037d3c792645\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 275.23, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8091d7f5-cf75-4048-8397-6bd3d9593416\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"5f055e00-8a29-454d-994d-18442b50259b\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5850\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"1t4x3qF1ZD6zQ0HpJK5nPjlnc5mkx2U+md6n/8MdYD5G3vJNyn9ZPtJ5q4/bFlA+SPr4UHWEST54BDsl86s/PgPiIH9dx08+lgX3s1+hQj5bjs4oHw5GPuIxHn3k0kg+LpQ0OwZHVj539tcSbv9TPgnmXe3w+HE+ZXJ+Ywv9ej6bOv8KFwOEPvI8g5TnAIk+BTeV9DwTjT7g+36gzZKMPq1oaH7kzog+1hFYkIb+gT5jQQZp/+l8PsJbI11UU3U+8t84Nnqzaz7mgt1a+WhjPguNmEcwNV0+w5zUxChrZz4g897T5ZltPmqMGIe0e2U+fDquWQvZVz7G3mLg3bJcPsZmcqzz7l8+4+Y0OoSDYT7AGkGJ4HJjPktR6aUz/Gc+ZphijKOOcD7WPyYG/EptPmOaYp1LInI+ooJI8GoVaD5v2grg7kJwPm7Xy5a81mw+gr9cNMKIdj4BKUV5iSRxPtjFs7nTHHs+uNz8M5KNkj4YaT0lLMScPou2LepQ95s+/wT5i8MTlj67yS76GoSQPgYpIbiM0YQ+5r0PkPoRfD4JjqFIoDpzPt2mPZvWTWw+wUTPAMh/Zj4oE/HwLV1dPgIPAKlQElE+dVN89joEPz6wCT/MzLo+Prhyhfda0zo+5k/TJ45iQD6wfncxzWg1Prr/bMLcaTc+ul+WxPJgWz5lD4aDoQKNPm7Ih8NMIJk+4hbthnZroD6ysiG6vD+lPmJIbze0F6o+RKMacO95qT5HwAo6QAOkPhb8DqtaiKI+EpK1IHVJnT4TkVeFbpiUPvBBajPsx4g+gImJ4qFtej7ZK7jWDD1mPuZ76visJGU+DS9F02GqaD5N8MznW81tPpZWr8ALg3E+dc0HzDPiaj6llmoBugx5Pp884AFAhok+gt288snqkz5Segl2QdOTPnCj104tVJI+IIW4PrKUkD4twFSXG1SNPuWLPjYiZYg+RrJUeSxggz4TR6ebcqp/PiY9GokNX3o+N2ZVUf79dD768QUFYHBwPlHx+YXh2Wg+bNqTduspYj5aZoeJRHJfPk1HxIHPc10+aOymzFi0UT6BVfGxeh1YPuJvEJ5ew1U+QvXE+wTmUD7ETGRiiYlEPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5877\"},\"selection_policy\":{\"id\":\"5876\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5877\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5919\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5847\"},\"major_label_policy\":{\"id\":\"5845\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5848\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5853\"},\"selection_policy\":{\"id\":\"5852\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=275.23, p-value=0.00e+00]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.14, C/O= 1.55, [M/H]= -0.37, T= 885.82, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"5847\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5845\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5850\"},\"major_label_policy\":{\"id\":\"5848\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5853\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"y6R6izezXj5IZ3cirf1hPjJNy4xxpWA+HbLnJpTaVz4CDd0A0FJSPoJhP+zYe0Y+SMUxSWA+QT4/1F8Eh8o0Pm+KlBzu+0U+LMRxaHGJOD7y1CNeeO08Pp7symjDLEA+M19Ww4ZXTj6gSpSGrWBLPvGZMWr/d2k+b3Tyvjdocz5uFAaL6hN9Po6lxLQaNYI+ivFYgfIBhT524SUo9W2EPv701pCnWIE+et7hwvxjeD4v+LS1CDRzPkF+wbFlCm0+llAqFEnEYT7Ok5QfxzNYPhry2iA7rVE+ZBgHrcEHXT7ydRlAGM9jPq59WGs7cF0+vnFk+eweUD5u/WIQpFNTPmgstCb3iVU+th9as9AKWD6sgFEFv0BbPti6jyVt5GA+PGM9tpbmZz4wUz+inIZkPjo+1p5RXmk+5B5iZmdQYD4ONeXz0+9mPvaF4yyFWGQ+4mvL8OGJbz4gkQl9yPxnPtBk2xl43XM+mrwmFB4JjT7aEyTUrNyWPowGxXNQ5ZU+eHfzvfCNkD6eJgXgLe2HPtYyEbK77Hw+IoYJGgm2cj6azKoXM4tpPl3/1WtniWI+uJyekezmXj7aCaRxEClUPowqzttDJkY+YpNqHlU9Mz54HrQo7a4yPh7TikNBci8+/54MOy5LMz4nVHGAwnEoPirUBHf/kCs+Jpjxx2BlUj42vbWn/vqEPqTJhUAFV5I+mE9nqWgkmD44oE/+J92fPuuEx75oF6Q+3BAd2f0VpD7kH7lUgT2gPos3Ygj8Lpw+8nNGRZ2hlT5GRqboi9eNPpa90azWWIE+U1mlk2jzcT5nxXClNZZdPu6E+MiLhlo+6xhawiVnXz7wV3+DKA9kPmE6HAsDtmY+osht7F0bYT5rePaI/0BxPgciI0k0y4I+6gpW4F0yjj7O5EjuymeOPqB0auR6Y4w+oV0lihShiT6xR9OPmVKGPo8ZpSi4YII+OWZXIGICfT4MP/Xde7J3PsAxxrkpsXM+4tL5QqEPbz4C4v5UDfhnPp7OfJJE3GE+lZALoJU7WT66HzAPioNVPpAyE15QZlQ+YF2a880/Rz6Sw+4OeuZQPkzW9QRzP04+/S5Ab3AeRz7OhBSw+TY7Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"Rmum9qeRaT4eIAuwnF5tPkCBG6bX6Wo+JOTb6z1OZD7FV4RNYlZgPuNCN6nK71Q+pBdgLEXlUD5YGgujr0ZFPsyc1nBmyVQ+Fim1swb+SD49MosigqVNPpO7uMiCvFA+wvi9FEliXT6ex2VihU5aPhr/oiXiNXc+LjgFhO9IgT7/anvQOHyJPlbUQXS0zI8+QL7os0OSkj4lC2wM01uSPi7u/LWQIpA+bzQ/vw7Lhz5MxSsO+0+DPmT4ZeF1IXw+p7cjrFXRcj7lu/AlD7hqPv4TK7eSXmQ+qtaSWTgpcD4nONKzWbJzPv3ZhFhLP2w+OgP4uSmTXz4PYDHYCwljPpJQGBn4KWU+6728GqABZz4qddmPYUVpPr7nQib6E28+Ln+mvfspdT4+lga1rQdzPqkVWmtulXc+YOYuem7abz5XGiPG8w11PnMUWgB6qnI+E8lTcJNMfT5yiQW0rkp2PnATxqwXLoE+I1vmXZWWlj4rXyu71VWhPkUzS7CoBKE+hpL+WZaZmz4nAFsEnxGVPqG4OZe7LIs+1foKA/a2gj7FtW0Fp695Pi6nUuUiCXM+JjvPuBmMbT47Dh+4pUhjPr4IGWR/EVc+xAlHZ5BlRT50+uQ3VmNFPvC9oqbK9kI+TFAgMoUfRz5MU7YiuZg+PrDKq+SchUA+p5OdYEIuYj7KMKsvIoWSPjjHiUaU6Z8++IUmubjEpD5IlRt15ZCqPuyFC9j/C7A+rDUYB+Hdrj6qYFwf/8inPmbc7FE3+aY+GVgSfqZ4oj4D/1sWF0WaPiVjAd2AG5A+1ty2mO1zgT7+9Lfa/q5tPlW1WA0UBm0+0qiuYpjQcD5VRA2mx8VzPvyP0PsVq3c+JOnQ1YRUcj5vWu88OmyAPpyrTt2lIJA+j7VO9WS8mD49gu50nXKYPpAMeiuddpY+b1teONpYlD5VHGvPziqSPjv+10OMaY4+cLF94ic/iD6Np6ysNNGDPkYkN6x4hoA+/eItASx0ej7zcoxfueR0PgQUd3l+128+juwhHQy2Zz59Vu+Bf7BkPgWuulKnQGM+IKqAn8rIVz5w5/NUe1RfPp70pbkDZ1w+BtPpv9E8Vj4hV77slXdLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5919\"},\"selection_policy\":{\"id\":\"5918\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"gjOgre3NYD416tz0P5xjPn4aoXaFG2I+ugN16B89Wj646u8Osl1UPpoUIT9LPkk+0BHpCEaZQz7FwXbvYOM3Pmy4KnqnxUg+PPuGvpwoPD4wVtMb6J9APp5wAfr/okI+4xebc5oxUT4DAlF6IPhOPgq+AKxgc2w+zfd/IqmQdT4G037WxxiAPvwzwpJTJIQ+XoEWbNFNhz7PRLcAZb+GPsxw6/5jeIM+LK9zYxyxez452Gl7pfd1Pri+ZosVdXA+d1ra/i+YZD44YIHz9VxcPorWAj589VQ+ZIPS7KgMYT5zj/qOo5hmPtrfuD0ApWA+mqJYxvtRUj49OEhekP5VPvffXZdlf1g+3oL9KUsrWz6A3Df/RJFePofZSjdG6WI+NDkuJ/mFaj5dkg//dAVnPtOT7uqMeGw+COjLHZCGYj4S/1ldWqppPm+Qx1plw2Y+f1onIeSxcT5y7JVlL+tqPtTUZn6V7XU+Xu1AeTJVjz6onVOS6YqYPrY1KXCmn5c+PdGMH2Agkj5ze8r0sISKPh47LXSIRYA+Nb2rNAZgdT4u2CqgPjhtPle7RqYiUWU+quaujgx1YT6eoVdWt8dWPgGGjSk5kEk+65FymYCXNj5pshbPuhw2PpVykOMl4jI+2K4g6S0hNz7KHuQgrawtPrWi2GM/hjA+vVkBUu/zVD4hm/UMHkSHPgk42WuGRZQ+uvva6yuemj43im/MBXKhPhUKTXK0zKU+tv5mdciepT5exeflZVChPizUyS0vtp4+qMPzXHjPlz7y2H8wQ4mQPiqkH8+JdoM+V9Aa0iVddD5G9o50nulgPo8AXIcGA18+7UhfbcZAYj6GeqiCHdVmPiVeyss6N2o+JcxcHsjjYz4vq5aIEXlzPotEdkaotYQ+ytmDFVJ4kD5bmDo+u4SQPradYJkIvo4+NFEEBfbFiz7quPQHHFGIPpbAGQowF4Q+AsfU4UXIfz6sv649Jfd5PtDg+Q/fl3U+70eg+8sVcT69NFGuPIFqPtLw5Dqr2WM+rT64IAtkXD7rSqMzT1dYPpZlZy35+VY+jC/N7t21Sj4+yl+aNvRSPlY990+EA1E+zcGjG4ooSj50vMe76ig/Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"KorDDlYdaD4xnaXdCcBrPvSzRbzDc2k+VTsVC/gcYz7U0fWM4qFePldpxn+RjlM+wOIImaRvTz6Wo3+tQrpDPs2FC8KJZFM+jo2qCHEuRz6Gxsk1VnxLPibzOgDJAk8+eRDOAnJcWz7sa4foy4JYPg1tu4QxuHU+fnY+0rY0gD4won8/Zu2HPuhFRJZ73Y0+VvaJPlRskT54WSMgGzORPo5g5f1kJY4+Fkz27n4khj5HVVGrLO6BPsz43y6TMXo+trLLNmJncT6wVfq7d6NoPsYhlyhyumI+IrbWnKjJbT5mq2EMlE1yPvo4eNBoUmo+XtID7RpgXT6owj6xlbNhPsp2w+BAr2M+Vwxr32JxZT5AR+aSHp1nPg/JhxQhD20+MhQuhUracz6odp6GQchxPtzqTcVQCHY+PB3FwkWkbT5VtWiRsLBzPjYPaOkJdXE+hSSSR6Bfez7JW78/e9N0Pm5bgPoIJoA+wUJZK4twlT5EmhNct36gPrAbGbJ9J6A+wThl+CYHmj69Vfh53cWTPu4WFfyQXYk+S9+5dfdhgT77ry1BIdl3PjFJGkhFpXE+2KLvcoOKaz5ZQsVFUvlhPgRbOb2EXFU+gArDqXq4Qz58sLNkb6xDPm45vQVIYkE+YEgWW4U0RT777XzSQ/s7Pr9cASF6TT4+3LKVG/vmYD7UQQt9kmCRPtNYNhsT+50+56/sF9eHoz4t29Oncw2pPq+GkfyzYq4+0kfOahZVrT4wuy2OGramPhYOOb+dtaU+PrA78rhhoT40SS/amaeYPrbftJdOGY4+VCF8+Q4/gD5sYeE4e5BrPoT3Jq7Wx2o+LRUrOf0Tbz4Ks3gmzWJyPhp+eRt66nU+YmfZvE/wcD4bgj56YqB+PrM0Sr3XVo4+OuH1z0Fdlz5JXNitxyGXPgX4/lBWSZU+puHuemlGkz64Y1qTjSuRPjRXY2IUs4w+CwG/ATbchj4958/8366CPnyZOgI8Jn8+f4QKpzDmeD6WSeOyIaBzPtDxDtEX2m0+gpXLXNEhZj7kwLXvnEZjPoKUEOvS9mE+CkHnocINVj7E4ILJvkZdPm6iKew4g1o+nQm46cS3VD5Ou+RmnX5JPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5897\"},\"selection_policy\":{\"id\":\"5896\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5897\",\"type\":\"Selection\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"5f055e00-8a29-454d-994d-18442b50259b\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"8091d7f5-cf75-4048-8397-6bd3d9593416\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:39.419604Z",
     "iopub.status.busy": "2023-11-28T23:01:39.418704Z",
     "iopub.status.idle": "2023-11-28T23:01:39.423205Z",
     "shell.execute_reply": "2023-11-28T23:01:39.423585Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 275.23, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(275.23, '0.00e+00')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:39.432062Z",
     "iopub.status.busy": "2023-11-28T23:01:39.431483Z",
     "iopub.status.idle": "2023-11-28T23:01:39.434007Z",
     "shell.execute_reply": "2023-11-28T23:01:39.434363Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:39.437591Z",
     "iopub.status.busy": "2023-11-28T23:01:39.436966Z",
     "iopub.status.idle": "2023-11-28T23:01:39.438865Z",
     "shell.execute_reply": "2023-11-28T23:01:39.439220Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:01:39.442771Z",
     "iopub.status.busy": "2023-11-28T23:01:39.442187Z",
     "iopub.status.idle": "2023-11-28T23:37:21.353991Z",
     "shell.execute_reply": "2023-11-28T23:37:21.354357Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:37:21.371939Z",
     "iopub.status.busy": "2023-11-28T23:37:21.364250Z",
     "iopub.status.idle": "2023-11-28T23:37:21.374997Z",
     "shell.execute_reply": "2023-11-28T23:37:21.374655Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>3.900000e+01</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1749.738718</td>\n",
       "      <td>7.082992e-02</td>\n",
       "      <td>5.177324</td>\n",
       "      <td>874.938886</td>\n",
       "      <td>1.589013</td>\n",
       "      <td>-0.391105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>5723.150080</td>\n",
       "      <td>2.470646e-01</td>\n",
       "      <td>0.086654</td>\n",
       "      <td>19.229488</td>\n",
       "      <td>0.123568</td>\n",
       "      <td>0.029864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>51.420000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.986681</td>\n",
       "      <td>822.734945</td>\n",
       "      <td>1.403837</td>\n",
       "      <td>-0.433337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>243.300000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.125971</td>\n",
       "      <td>867.591807</td>\n",
       "      <td>1.503552</td>\n",
       "      <td>-0.416543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>573.240000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.173670</td>\n",
       "      <td>874.701843</td>\n",
       "      <td>1.569575</td>\n",
       "      <td>-0.397023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>968.055000</td>\n",
       "      <td>1.750001e-10</td>\n",
       "      <td>5.237358</td>\n",
       "      <td>886.440755</td>\n",
       "      <td>1.665797</td>\n",
       "      <td>-0.373739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>36006.890000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.319325</td>\n",
       "      <td>916.426575</td>\n",
       "      <td>1.833280</td>\n",
       "      <td>-0.319108</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius    chi_square       p_value    gravity  temperature  \\\n",
       "count  39.000000     39.000000  3.900000e+01  39.000000    39.000000   \n",
       "mean    0.790000   1749.738718  7.082992e-02   5.177324   874.938886   \n",
       "std     0.120018   5723.150080  2.470646e-01   0.086654    19.229488   \n",
       "min     0.590000     51.420000  0.000000e+00   4.986681   822.734945   \n",
       "25%     0.690000    243.300000  0.000000e+00   5.125971   867.591807   \n",
       "50%     0.790000    573.240000  0.000000e+00   5.173670   874.701843   \n",
       "75%     0.890000    968.055000  1.750001e-10   5.237358   886.440755   \n",
       "max     0.990000  36006.890000  1.000000e+00   5.319325   916.426575   \n",
       "\n",
       "       c_o_ratio  metallicity  \n",
       "count  39.000000    39.000000  \n",
       "mean    1.589013    -0.391105  \n",
       "std     0.123568     0.029864  \n",
       "min     1.403837    -0.433337  \n",
       "25%     1.503552    -0.416543  \n",
       "50%     1.569575    -0.397023  \n",
       "75%     1.665797    -0.373739  \n",
       "max     1.833280    -0.319108  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:37:21.382817Z",
     "iopub.status.busy": "2023-11-28T23:37:21.382028Z",
     "iopub.status.idle": "2023-11-28T23:37:21.384791Z",
     "shell.execute_reply": "2023-11-28T23:37:21.385281Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>388.69</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.155332</td>\n",
       "      <td>889.239807</td>\n",
       "      <td>1.435932</td>\n",
       "      <td>-0.379998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>4830.24</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.188583</td>\n",
       "      <td>873.704142</td>\n",
       "      <td>1.403837</td>\n",
       "      <td>-0.407067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>89.21</td>\n",
       "      <td>0.832</td>\n",
       "      <td>5.144646</td>\n",
       "      <td>890.500590</td>\n",
       "      <td>1.704606</td>\n",
       "      <td>-0.411682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>2058.47</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.160437</td>\n",
       "      <td>871.446879</td>\n",
       "      <td>1.737329</td>\n",
       "      <td>-0.433337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>51.42</td>\n",
       "      <td>1.000</td>\n",
       "      <td>5.275563</td>\n",
       "      <td>822.734945</td>\n",
       "      <td>1.813298</td>\n",
       "      <td>-0.325741</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square  p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000      388.69    0.000  5.155332   889.239807   1.435932   \n",
       "1  0.600526     4830.24    0.000  5.188583   873.704142   1.403837   \n",
       "2  0.611053       89.21    0.832  5.144646   890.500590   1.704606   \n",
       "3  0.621579     2058.47    0.000  5.160437   871.446879   1.737329   \n",
       "4  0.632105       51.42    1.000  5.275563   822.734945   1.813298   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.379998  \n",
       "1    -0.407067  \n",
       "2    -0.411682  \n",
       "3    -0.433337  \n",
       "4    -0.325741  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T23:37:21.454161Z",
     "iopub.status.busy": "2023-11-28T23:37:21.439694Z",
     "iopub.status.idle": "2023-11-28T23:37:21.458806Z",
     "shell.execute_reply": "2023-11-28T23:37:21.459157Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"7db4d84a-3432-447c-8e9c-853b572e05aa\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"153dc6f1-73e4-46c6-b691-82b461d7ed64\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"6348\",\"type\":\"Selection\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"6340\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"6342\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6343\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"qYWYP76N4z9xkBzRNDrkP5ygYqvmPOU/EOz+pST06T8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]},\"y\":{\"__ndarray__\":\"PQrXo3BNVkD2KFyPwrVJQMP1KFyPIlVAAAAAAADwYEA=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]}},\"selected\":{\"id\":\"6348\"},\"selection_policy\":{\"id\":\"6347\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6345\"},\"major_label_policy\":{\"id\":\"6343\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"6345\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6342\"},\"major_label_policy\":{\"id\":\"6340\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"153dc6f1-73e4-46c6-b691-82b461d7ed64\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"7db4d84a-3432-447c-8e9c-853b572e05aa\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
