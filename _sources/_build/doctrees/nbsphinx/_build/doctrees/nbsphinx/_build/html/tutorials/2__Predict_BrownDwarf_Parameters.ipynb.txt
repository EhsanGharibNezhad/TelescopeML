{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:33.913355Z",
     "iopub.status.busy": "2023-11-28T22:09:33.912676Z",
     "iopub.status.idle": "2023-11-28T22:09:40.751069Z",
     "shell.execute_reply": "2023-11-28T22:09:40.751491Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:40.757022Z",
     "iopub.status.busy": "2023-11-28T22:09:40.756311Z",
     "iopub.status.idle": "2023-11-28T22:09:40.758801Z",
     "shell.execute_reply": "2023-11-28T22:09:40.759187Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:40.762701Z",
     "iopub.status.busy": "2023-11-28T22:09:40.762085Z",
     "iopub.status.idle": "2023-11-28T22:09:43.517836Z",
     "shell.execute_reply": "2023-11-28T22:09:43.518234Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:43.526924Z",
     "iopub.status.busy": "2023-11-28T22:09:43.526306Z",
     "iopub.status.idle": "2023-11-28T22:09:43.528507Z",
     "shell.execute_reply": "2023-11-28T22:09:43.528962Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:43.535506Z",
     "iopub.status.busy": "2023-11-28T22:09:43.534882Z",
     "iopub.status.idle": "2023-11-28T22:09:43.537109Z",
     "shell.execute_reply": "2023-11-28T22:09:43.537533Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:43.541397Z",
     "iopub.status.busy": "2023-11-28T22:09:43.540857Z",
     "iopub.status.idle": "2023-11-28T22:09:43.973189Z",
     "shell.execute_reply": "2023-11-28T22:09:43.973594Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:43.978010Z",
     "iopub.status.busy": "2023-11-28T22:09:43.977418Z",
     "iopub.status.idle": "2023-11-28T22:09:43.980391Z",
     "shell.execute_reply": "2023-11-28T22:09:43.980791Z"
    }
   },
   "outputs": [],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:43.984670Z",
     "iopub.status.busy": "2023-11-28T22:09:43.983956Z",
     "iopub.status.idle": "2023-11-28T22:09:43.985738Z",
     "shell.execute_reply": "2023-11-28T22:09:43.986204Z"
    }
   },
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:43.989838Z",
     "iopub.status.busy": "2023-11-28T22:09:43.989260Z",
     "iopub.status.idle": "2023-11-28T22:09:43.991061Z",
     "shell.execute_reply": "2023-11-28T22:09:43.991631Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:43.995491Z",
     "iopub.status.busy": "2023-11-28T22:09:43.994938Z",
     "iopub.status.idle": "2023-11-28T22:09:44.051545Z",
     "shell.execute_reply": "2023-11-28T22:09:44.051952Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"b68e2bef-8730-4fcf-87da-39d57ff33f1b\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"efc08178-afaa-4f55-ba3f-a273ddb6bc10\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1039\"},\"major_label_policy\":{\"id\":\"1041\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1065\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"7uwrD9LT5D/I0RxZ+eXkP6g5eZEJ+OQ/jSRBuAIK5T/UYvAw7RvlP04MycnELeU/KQmJtI0/5T97TQ8KSlHlP1vNOuP7YuU/4XzqWKV05T8MXB5rRoblPwlTlEvjl+U/2GFM+nup5T97iEZ3ELvlPzOjHw2nzOU/A7LXuz/e5T/TwI9q2O/lP+er5GN3AeY/P3PWpxwT5j/bFmU2yCTmP9KKbyh8NuY/Jc/1fThI5j8WwJSBA1rmP3l1jgHZa+Y/e9egL7195j8d5ssLsI/mP3SV7q6zoeY/guUIGciz5j9cyvli78XmPwNEwYwp2OY/jUY+r3jq5j8Rxk/j3vzmP3nOFhBaD+c/8UdRZ+4h5z97Mv/omzTnP/6ZQXxgR+c/qmbWUkBa5z+TjJyFPW3nP44j1uJTgOc/xxNBnIeT5z9VUbzK2qbnPyHoaFVLuuc/LNhGPNnN5z+iCRSxiOHnP26I8ZpX9ec/pki+EkgJ6D9JSnoYWh3oP1iNJayNMeg/0xHAzeJF6D/ovwevXVroP2ivPh76bug/gsgiTbyD6D8eF9UiopjoPz2bVZ+rreg/DD1i9NzC6D9eFD3wMdjoP18JpMSu7eg/+ie4WFED6T9FZFjFGxnpPyrKpfELL+k/vk1/9iNF6T8D7+TTY1vpP/et1onLcek/nIpUGFuI6T/xhF5/Ep/pPwyR09fztek/2LrUCP3M6T9UAmISLuTpP5ZbWg2J++k/oMa9+Q0T6j9ZT62+uirqP8P1KFyPQuo/CqLuA5Ba6j8BbECEuHLqP79H/fUKi+o/LUFGQIWj6j95QNmUK7zqP15pGan31Oo/IJijx+/t6j+T5Lm+DwfrP8xCO6dZIOs/zLIngc056z99QKAzaVPrP/Tfg9cubes/G53zUxyH6z/yd++oMaHrP5FkVu9wu+s/9mIoJ9rV6z/0iqceafDrP7nEkQciC+w/FygpsAAm7D89nStKCUHsP/s726M3XOw/avgW1o137D+J0t7gC5PsP0HWU6uvruw/qfdUTnvK7D+rQgOxbObsP1yrPeyFAu0/kElGzsIe7T9eEfxvJTvtP9z2PeqvV+0/xR1v8lt07T9fYizTL5HtP2To2EElru0/A5gycEDL7T8kfVpFf+jtP8iXUMHhBe4/7+cU5Gcj7j+BeciUD0HuP5ZASuzaXu4/F0m70cd87j8ah/pd2JruP3MSSl8Iue4/N9+I7lnX7j9R+dfyyvXuP9ZUFoVdFO8/sf1kjA8z7z/g88MI4VHvP2U3M/rRcO8/P8iyYOKP7z9XsmMjEK/vP8TpJFtdzu8/WYY41sXt7z/0T3CxogbwP9hHp658FvA/vD/eq1Ym8D+DwMqhRTbwP7wFEhQ/RvA/2NMOf01W8D9mZmZmZmbwP2a9GMqJdvA/2NglqreG8D+7uI0G8JbwP4Ehq1s9p/A/uk4jLZW38D9kQPZ698fwP3/2I0Vk2PA/DXGsi9vo8D8MsI9OXfnwP+53KAr0CfE/0T/BxYoa8T+XkA96NivxP13hXS7iO/E/Brth26JM8T+vlGWIY13xP8oyxLEubvE/V5V9VwR/8T/HgOz17o/xPzdsW5TZoPE/qFfKMsSx8T/7y+7Jw8LxP8AEbt3N0/E/hj3t8Nfk8T+9OseA7PXxP2X8+4wLB/I/Dr4wmSoY8j+aCBueXinyP7SOqiaIOvI/sp3vp8ZL8j+wrDQpBV3yPx+A1CZObvI/ARjPoKF/8j/ir8ka9ZDyP8NHxJRIovI/iGh0B7Gz8j/bxMn9DsXyPxGq1OyB1vI/1cqEX+rn8j8MsI9OXfnyP7RZ9bnaCvM/XANbJVgc8z92cRsN4C3zPx4bgXhdP/M/qU2c3O9Q8z/Du1zEd2LzP07udygKdPM/2iCTjJyF8z/XFwltOZfzP2JKJNHLqPM/0QX1LXO68z/O/GoOEMzzP8vz4O6s3fM/Oq+xS1Tv8z+paoKo+wD0PxgmUwWjEvQ/h+EjYkok9D/1nPS+8TX0P9YcIJijR/Q/Rdjw9EpZ9D8lWBzO/Gr0PwbYR6eufPQ/5ldzgGCO9D9VE0TdB6D0PzaTb7a5sfQ/FhObj2vD9D/3ksZoHdX0P9cS8kHP5vQ/Rs7Cnnb49D8nTu53KAr1PwfOGVHaG/U/donqrYEt9T/lRLsKKT/1P8bE5uPaUPU/NIC3QIJi9T+jO4idKXT1PxL3WPrQhfU/D+7O2m2X9T9+qZ83Fan1P3ugFRiyuvU/eJeL+E7M9T91jgHZ6931P3OFd7mI7/U//reSHRsB9j+J6q2BrRL2PxUdyeU/JPY/L4uJzcc19j+6vaQxWkf2P9QrZRniWPY/fNXKhF9q9j+WQ4ts53v2P8wolltajfY/dNL7xtee9j+qtwa2SrD2P+CcEaW9wfY/F4IclDDT9j/boswGmeT2Py7/If329fY/8x/Sb18H9z/Ut8zpshj3PycUIuAQKvc/CKwcWmQ79z94f7xXrUz3P+dSXFX2Xfc/Vyb8Uj9v9z9UNUHUfYD3P1JEhlW8kfc/3o5wWvCi9z/5FADjGbT3PxObj2tDxfc/LSEf9GzW9z/W4lMAjOf3P3+kiAyr+Pc/tqFinL8J+D972uGvyRr4P0ATYcPTK/g/Bkzg1t08+D9ZwARu3U34PztwzojSXvg/HSCYo8dv+D+NCwdCsoD4P4syG2SSkfg/ilkvhnKi+D+IgEOoUrP4PxXj/E0oxPg/MIFbd/PU+D/ZWl8ktOX4P4M0Y9F09vg/LA5nfjUH+T9kIxCv6xf5Pyp0XmOXKPk/fgBSmzg5+T/SjEXT2Un5PyYZOQt7Wvk/lxx3Sgdr+T8IILWJk3v5P3kj88gfjPk/eGLWi6Gc+T8F3V7SGK35PyGTjJyFvfk/PUm6ZvLN+T/nOo20VN75P5EsYAK37vk/yVnY0w7/+T+PwvUoXA/6P1YrE36pH/o/q8/VVuwv+j+Orz2zJED6P3GPpQ9dUPo/46qy74pg+j/iAWVTrnD6P+JYF7fRgPo/cOtunuqQ+j+MuWsJ+aD6P6mHaHQHsfo/U5EKYwvB+j/+mqxRD9H6P8UbmUf+4Po//mDguffw+j9UHXIz3AD7P6nZA63AEPs/jdE6qpog+z//BBcrajD7P3E486s5QPs/cqd0sP5P+z9yFva0w1/7PwHBHD1+b/s/HqfoSC5/+z87jbRU3o77P+auJeSDnvs/IAw89x6u+z9ZaVIKur37PyECDqFKzfs/d9Zuu9Dc+z/Oqs/VVuz7P7K61XPS+/s/JQaBlUML/D+YUSy3tBr8P5nYfFwbKvw/ml/NAYI5/D8pIsMq3kj8P0cgXtcvWPw/ZB75g4Fn/D8QWDm0yHb8P0vNHmgFhvw/hUIEHEKV/D9N845TdKT8PxakGYums/w/bZBJRs7C/D9SuB6F69H8Pzfg88MI4fw/qkNuhhvw/D8ep+hILv/8PyBGCI82Dv0/sCDNWDQd/T9A+5EiMiz9P14R/G8lO/0/fCdmvRhK/T8peXWOAVn9P9XKhF/qZ/0/n5PeN752/T/aIJOMnIX9P6Pp7GRwlP0/+u3rwDmj/T/gLZCg+LH9P8ZtNIC3wP0/rK3YX3bP/T8gKSLDKt79PyLgEKrU7P0/JJf/kH77/T+1iZP7HQr+P0Z8J2a9GP4/ZapgVFIn/j+E2JlC5zX+PzFCeLRxRP4/3qtWJvxS/j8aUdobfGH+P+QxA5Xxb/4/rhIsDmd+/j9381SH3Iz+P9API4RHm/4/tmeWBKip/j+cvwmFCLj+PxFTIolexv4/huY6jbTU/j/7eVORCuP+P/5IERlW8f4/j1N0JJf//j8gXtcv2A3/P0Ck374OHP8/YOrnTUUq/z8NbJVgcTj/P7vtQnOdRv8/aW/whclU/z+lLEMc62L/P3AlOzYCcf8/Oh4zUBl//z+TUtDtJY3/P+yGbYsym/8/RbsKKT+p/z8sK01KQbf/PxObj2tDxf8/iEZ3EDvT/z+MLQQ5KOH/P5AUkWEV7/8/lPsdigL9/z8TDyibcgUAQFwgQfFjDABAbM8sCVATAEB8fhghPBoAQFPL1voiIQBAKxiV1AkoAEACZVOu8C4AQKBP5EnSNQBABthHp648AEBrYKsEi0MAQNHoDmJnSgBA/g5FgT5RAEArNXugFVgAQB75g4HnXgBAEr2MYrllAEDNHmgFhmwAQIiAQ6hScwBACoDxDBp6AECNf59x4YAAQA9/TdaohwBAWBzO/GqOAEBpVyHlJ5UAQHmSdM3kmwBAis3HtaGiAEBhpu1fWakAQDl/EwoRsABAEFg5tMi2AEB2bATidb0AQBXj/E0oxABAe/fHe9XKAECoqWVrfdEAQA6+MJkq2ABAAg6hSs3eAED2XRH8b+UAQOutga0S7ABAppvEILDyAEBhiQeUTfkAQOQUHcnl/wBAZqAy/n0GAUDpK0gzFg0BQDJVMCqpEwFAQxzr4jYaAUBU46WbxCABQGWqYFRSJwFAPQ/uztotAUAVdHtJYzQBQLR224XmOgFAGhcOhGRBAUC5GW7A50cBQOZXc4BgTgFATfilft5UAUB6Nqs+V1sBQG8Sg8DKYQFAY+5aQj5oAUAfaAWGrG4BQNrhr8kadQFAXfksz4N7AUDgEKrU7IEBQGMoJ9pViAFArd12obmOAUC+MJkqGJUBQM+Du7N2mwFA4NbdPNWhAUC5x9KHLqgBQFhWmpSCrgFA9+Rhoda0AUCXcymuKrsBQP2fw3x5wQFAK2owDcPHAUBZNJ2dDM4BQE6c3O9Q1AFAQwQcQpXaAUA3bFuU2eABQPNxbagY5wFAdxVSflLtAUD6uDZUjPMBQH1cGyrG+QFAx53Swfr/AUDZfFwbKgYCQOpb5nRZDAJAw9hCkIMSAkCbVZ+rrRgCQDtwzojSHgJA24r9ZfckAkB6pSxDHCsCQKn7AKQ2MQJAD7QCQ1Y3AkAFqKllaz0CQDP+fcaFQwJA74/3qpVJAkDkg57Nqk8CQGiz6nO1VQJA6+I2GsBbAkBvEoPAymECQLnfoSjQZwJABK3AkNVtAkAWGLK61XMCQO8gdqbQeQJAxyk6kst/AkCgMv59xoUCQEDZlCu8iwJAqB3+mqyRAkAPYmcKnZcCQHam0HmNnQJApIgMq3ijAkCaCBueXqkCQJCIKZFErwJAhQg4hCq1AkBCJhk5C7sCQP5D+u3rwAJAgv+tZMfGAkDNWDSdncwCQBiyutVz0gJAYwtBDkrYAkB1ApoIG94CQIf58gLs4wJAYY4ev7fpAkA6I0p7g+8CQBO4dTdP9QJAs+pztRX7AkAbu0T11gADQIKLFTWYBgNA6lvmdFkMA0AZyol2FRIDQEc4LXjRFwNAdqbQeY0dA0BsskY9RCMDQGK+vAD7KANAH2gFhqwuA0AVdHtJYzQDQJm7lpAPOgNAVmXfFcE/A0DarPpcbUUDQF70FaQZSwNA4jsx68VQA0AtIR/0bFYDQHkGDf0TXANAxOv6BbthA0DWbrvQXGcDQCJUqdkDbQNANNdppKVyA0BHWipvR3gDQFnd6jnpfQNAa2CrBIuDA0B+42vPLIkDQFcE/1vJjgNAaoe/JmuUA0BEqFKzB5oDQB3J5T+knwNAMEymCkalA0AJbTmX4qoDQBzw+WGEsANA9RCN7iC2A0AIlE25wrsDQOG04EVfwQNA9DehEAHHA0AGu2HboswDQBg+IqZE0gNAK8HicObXA0B2ptB5jd0DQMGLvoI04wNADXGsi9voA0BYVpqUgu4DQNydtdsu9ANAYOXQItv5A0AdjxmojP8DQNo4Yi0+BQRA0ETY8PQKBEDGUE60qxAEQPW+8bVnFgRAIy2VtyMcBECL/WX35CEEQCswZHWrJwRABcWPMXctBEDeWbvtQjMEQPBQFOgTOQRAO6qaIOo+BEC/ZU6XxUQEQHuDL0ymSgRAcQM+P4xQBECf5Xlwd1YEQAYq499nXARAptB5jV1iBEC4O2u3XWgEQAMJih9jbgRAhjjWxW10BEB8LH3ognoEQKqCUUmdgARA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1065\"},\"selection_policy\":{\"id\":\"1066\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1045\"},\"selection_policy\":{\"id\":\"1046\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1045\",\"type\":\"Selection\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1042\"},\"major_label_policy\":{\"id\":\"1044\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1039\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1041\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"1042\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1044\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"efc08178-afaa-4f55-ba3f-a273ddb6bc10\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"b68e2bef-8730-4fcf-87da-39d57ff33f1b\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:44.074122Z",
     "iopub.status.busy": "2023-11-28T22:09:44.073339Z",
     "iopub.status.idle": "2023-11-28T22:09:44.263359Z",
     "shell.execute_reply": "2023-11-28T22:09:44.263694Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:44.267928Z",
     "iopub.status.busy": "2023-11-28T22:09:44.267313Z",
     "iopub.status.idle": "2023-11-28T22:09:44.269918Z",
     "shell.execute_reply": "2023-11-28T22:09:44.270259Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:44.281901Z",
     "iopub.status.busy": "2023-11-28T22:09:44.281184Z",
     "iopub.status.idle": "2023-11-28T22:09:44.283743Z",
     "shell.execute_reply": "2023-11-28T22:09:44.284083Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:44.290250Z",
     "iopub.status.busy": "2023-11-28T22:09:44.289766Z",
     "iopub.status.idle": "2023-11-28T22:09:57.598006Z",
     "shell.execute_reply": "2023-11-28T22:09:57.598354Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.2899346113204957,\n",
      "    'gravity': 5.008953189849853,\n",
      "    'metallicity': -0.3341768071055412,\n",
      "    'temperature': 819.5935485839843}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    5.008953   1.289935  -0.334177  819.593549\n",
      "std     0.179715   0.261500   0.090972   41.766467\n",
      "min     4.540699   0.946584  -0.457497  741.893433\n",
      "25%     4.918730   1.135831  -0.398255  786.897079\n",
      "50%     5.035351   1.202613  -0.360264  821.134186\n",
      "75%     5.136033   1.443850  -0.276233  854.183563\n",
      "max     5.276689   1.980834  -0.111861  919.945374\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"3429e012-6af6-459a-9aa3-662a8018aa22\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"c1c8d7b6-6a4f-4ada-8124-f6196d08dd33\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Uqxb7jlOQD5XEYgHRlFDPpK8xLWJAj0+x0f/TvdFQj7kPPU/xM1APrUn6s69wU4+waDMDChzTj5NjByHwWhPPqLNC0u88FE+6utTtAoPWz63Mg24F55gPhXsFDr2Rmo+DRvqAfdicD454kBJQX5yPp+iBmF7sXc+v4XmHMG+ez7Xo8Rm/+N+PnIWY9t0j4E+c9wxZ+yrgz5wGR2P9tODPjUTFECRx3g+plBex8R3ZT7jBLtivrZOPp/c8f09flI+XCy/2uBxUz7qYOH6311DPq+meS+iZkk+9rCuZFU3UT4a45NUyYhhPk3R4VclunA+59LQ70rDej7a40FlkMqCPqifjQDRHok+zsyh7iDwjz5IVH3a4aSTPhnfpP1MlJQ+l42IyEXvkT5gmKWS0NKLPqNV9SwZkYQ+d68o4dfKdj7qptRTTZpQPpXMhMOP4zA+/0f8i2SWOz7QtvfMeK83PoWKcZgdrz4+enFAMuFPRD48r3tnu/o1Pl0shMKOhzc+quI/7Ch6Rz55E+5CFChUPu/pwTxOH1s+EMRPbTW0XT4fET0zu9poPuyaLJJ00HI+EQ5+pDvEfT6sWlBil6eFPr3boU+ZRYw+39hDvsgSjj6SrTgLEZyFPtKSdcG24mw+FFJr+mV6Xj4Ht5+tPh1iPmGUMxEfBVk+IFbofDtOVz7ypGLK4wBWPrqvmqeKGV8+Crfp2EMsZD6+p/LK2r5ZPlHBwgLH0Vg+WcxUNxu0Vj4+TJYcK2pDPpwgMUN72Uk+vzqE41/lVz5oJ438M4VXPgEe38H4J1A+1/vrr1BjYD5AvZKNLHJdPupgPcyvY0g++r6z9wv2UD6OBlKwQXxYPoMMp55wtmQ+yz98Db3ubD5+3dV3oDh1PjKBicNQG3w+UL7o8VuOfT6Bowf0nbh8PvPnqSKNmXo+2XtAQ74HdD6PbtgPA1hqPlqdBoe09GQ+SPZfDHfWST7R7Yv/aDhCPldW4xTxdj0+iC3fmPCnRz6zDhtm+jU/Phkj32WSrUE+A6echTw9OT6uYMCzFPdIPrxHzH5gUkU+4KfN/MxIUT7lHHFKtx5WPv1PM33MrV8+bnzOs8WBWT6NGHleUChXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1360\"},\"selection_policy\":{\"id\":\"1361\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"v2lN4ISMPj41y8isOf1DPmpNrPBWAT0+glD1JvraSj4wnPu7NzBIPh3GjRas40k+twF8EKdDTz6CMhqeYdNJPshHCYKb1lU+Ns0xOALJWz6x+wFnaV5iPj+DkJZDAGo+khZyT7H7bj6o1/tC0ttyPt5kScMT2nc+J7q53ci8ez6Wc/TraD9/Pjn+Ww0nwIE+UmkJOzxXgz5pqUGd3qaDPi0c9zDIJnk+L2qawWsiaD7HeiBi/k5RPuQcti0Ad1M+SI08ek06Sj4tibEHlwNGPhHQ6iOjUEc+3GiQw0/CUD7qbf+ZSVdiPp1l5d+JJXE+hc378MITez4FEOwDukKCPvuJ7sMneYk+k75ePIrijz406WH/sJ+TPtbV+6o21pQ+LF+EZqTxkT5zTKE4G0qMPo9lXpndZYQ+4BALtmlWdj7VPfkRlD5OPiFvrSPw6ik+3lOuZLE+KT7+6zkckM5CPvsU3iApo0o+0kfMqnnUOj7TM+zJ8HkjPtmtjzMF0Dw+0TT2ezMjMj7+vkgklJ5WPjiE+ekwFV0+973dEmxmYD4BYOAO03ZmPnFK3oqauHE+BfGJxUwZfj4RfBUwWM6FPsZj2tr5gIw+5LZ0VApFjj4PVPl0jzSGPl7fYOKrNmw+pwcN2uK2YD6IPP+rgMRiPqu+4dvVi1w+hEUrEBhEWj447ljasVFTPp79tloTll0+mADy+TOmXz4RrIPUhltbPta0BjaZ91E+BV6kvHYFUT7cBZlAV29FPp2WbhVL61I+sXKbY/ymVT7boIr8kQZPPggOKD9ttVA+e/15aaUtWj56bUZICZhaPpMGNns+h1A+06wbc3rHUT5GXgn543FYPhRDXQ+372k+sX/dkRAhbj5SXB/0M5lyPtWVJ94otXk+FT27R0qAfT6DHvw5kOd8PlPqb0KInHo+CB6RRDP7dD5ZuiDcMsdpPtS44bo/JmQ+PZWSKvm9VT6THzAnj0JHPhFDlXKVdz8+01ckhELhPj7AMGlupFVCPmhJvXJEh0Y+CsgvOKmHUD59nyMtI7xAPmJCmd7WmE4+IXXX8biKXT6sxLmR+aFQPk38ms2WSVQ+6tC02/VkYz5loX7AnHRnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1386\"},\"selection_policy\":{\"id\":\"1387\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nYApjICyPD6Vzt7iReRCPgmDu/fW7TY+ING4P3FkRT44HVbocdVAPlKJeJUn5U0+s4qtGXJBSD7Aw/wByb5DPk+cm6mfnlE+oLxLdnv5Wz4ooU6aOlRiPja7HuIVfWs+A80b3s8ncD5lnqosFdRzPhReZkQCrXg+I1W/xhenfD5jfyCuN35/PjXn3rVhE4I+e/ZLGYtdgz7NPG1hi6iDPrDH+GKpE3k++kUOl2peZT6HwilHg8JQPlexrX9dUVI+fQ0JykzdUD6TkuTg30VEPjh0id84oEE+NBxF3JaPTz5K9uZmErJhPs0OP7j+cXA+uMaEDg5Qez6tHQcMYdmCPsQVFYjJA4k+arQ+lmj4jz4jHhd28taTPq/j92AyZZQ+QrDF9ljUkT67ItSeNlGMPhCZvVgN44Q+6vBMvsVVdj7K0kQcAYxQPoe/SnHsACc+vBE6pT8BLD7lbdhRU2U+PoAiDdbbk0U+9l7riKokNz72DrSoIlwtPrt/Tv2anz0+d/1jR05dOT6VOx75R2tXPpPjvdbH1lI+TArXAdGiXD78g40W97llPuR81kr5YXE+F3oYZ9MRfz4ff1OJYyCGPg0E7+icPow+3KA22frJjj6BjO/CVJeFPk5RJ+vJMG4+jpm8HiscYT5HpfnHJyRjPkoLHUWVZ1g+GmGeHETeVz4cjirtPspUPuJgaVPBx14+5nPHS4xOYD6hJpD0vr9YPkpxj6d7R1U+ATDT0FlCUz4YlsSFflhCPln7YQ0WokA+i81djigcWD6tF01aNW5TPmMyyMiIiVk+kJDcZp+TWj4AqSMGDe5TPifGP9tKQUU+EhTbfdhxUD423pQAB/9bPqJU28Tx/mg+2JU/9zlpbj5QNsrxz5V0PmrnV6z7xXo+ikiwwqzYfT7N9Kw4isV8PmfPAej6UHk+fsOsK69Zcz4WruQENpRrPsuTE4E7OWQ+0Ogb0DzsUD6D7qybCbpDPk1x8naSMEA+vytJ1Vj6UD6ysQ8kl+tCPpdqgO6JWEU+JwP0FhPmRz56Q9DdL51PPoUmQ5mRlkk+34/TboKATD6avduexfRQPiisPpZXPFc+HhrIEJTUWz7G0toY3qx2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1370\"},\"selection_policy\":{\"id\":\"1371\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+oUW5Pr2OT4onjSbf6FEPmSLtVbX2Dw+mL9DGAs6Rz4RGC7dZrZCPtJgeXm+NUQ+ZvhMzH1yTD414QfKuM5LPtcvhoPk+1M+7qOQkxfcWj5Wd2V/2AtiPnIAYs/9R2g+kqooEYwrcD60Cfsnve9xPlp4XMVKpng+GCKFtHerfD5tspASAXR/Pqi+MHxTAII+MTVjejiZgz78i4ROGqGDPgMSGFMkPHk+NwHOeDDiZj4ewswSGehMPsrF0jW2LlM+V/Ml6wlpSj4cq+doh4VIPjGNKW8/mUg+r0sB1AUCUD7qpXjNxixjPmePvz/d53A+4JEudDr8ej6D77OZw0WCPihoWxy+HYk+zjdbcUazjz48GmeraHmTPiv+2Sea1ZQ+2NOtYY4Ekj5/8BSOfz+MPvUwxMRhuIQ+XBXqkyr4dj5undXjlNlQPhew0uCEqjQ+4wJppNt1Mj56psZ3nfUwPq2UVY7Ns0o+4tZU7EFTRD7rUP6pULxGPth1Zxy9Njc+fmT9fC61Qj5Q6IfwyjBYPmRI5cP4DVg+VoqlpBkiWT4c4P2KYnlmPjoQRiCZqHE+mm5Wdabifj5xl5a41OuFPto3Dujv/os+S3hBuWtIjj74Uvkt+1yGPuV8ziS/Cmw+XFILPs6XYD5PhU4wOaFjPnBtVbuKF10+ZSgN4fS0XD6bCDbtqIRYPtfl6HpD1WA+9gXw9ZXtZD7HfTABOINUPi8uIg9OO1A+pRzD9urUUz4RQR46/G09PklSfHry2E8+sW8KbNbfUD6wgiSQOUlJPmwWM62IkVI+RGihjJYWXz5hdbKDymNWPjxTgtk7rUk+q9xAAtgzVj61nM8l8SlXPmpP6UX3qms+87siiaUzbT6wWBRP/iJ0Phv9atrWNHk+1N+El8WCfT4AUOnZcU58Pp97MSKQdHk+rjSzQQ+Hcz7atvB+Za5qPk78WENtUGU+RO3naS+NTT7js3u0iZ1EPsqMIMs9rkQ+7CALIXRwST7yqCQjtu5PPgIXFmfWokc+uBzYRcanQz72P/pevHxMPqM2CYIZYE8+kBbtXpyGUz5/tRnAwMZXPpLGU2Y1WmQ+0tD5ncdTZT4EpYMu2VxxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1380\"},\"selection_policy\":{\"id\":\"1381\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"VZYYi7pEOj7MaYc2uTk7PmfQQoJGnDM+4hSOQlUuSj62I4ItDjVFPrupxkcYAU0+aQ7+iIQORD5DgUsgBGJMPow/iECLgFI+juMxxU3mWj4Wy51wggtkPu8Eh61Xjmo+VY497WTvbj4dyLHOTVtzPpskVExGXXc+zYWhM3OgfD6F4W4hRXN/Pr++171pqoE+GD7cbqiigz5Ar20tLJ2DPjB/hNA00Xg+lNVye1KtZj7sBM25RBVTPk60aS4Zd1I+ZzgoMWWSRz7X++jAZ/dGPv2KfPpnK0k+f7lS1x4zVD60OgySBuBiPh4ZCV5MY3A+hoB4TiWfej6zdLbeY8+CPhXy2JZJPIk+84IVwl2Ojz7OpQpAsoSTPqLeR+vpAZU+l5TDc8m4kT7TCaoKTT2MPq2FvTUrSoQ+U8RmZAzidj6V0VSPrgxQPg2wot6h+Ck+KXIdBg48Oj4MvGPZeGI2PloxEJAjSj8+2stAdgblTj4y8yqhHG04PhFg/lebl0U+fmxOwSnCQT4a5MRw4OxZPk/PXx1jnFs+1qToAazMWz5K6+26b+xlPmgAXokcDXE+HPSqdc6bfz4YPDNNBEaGPotFrnEEZow+/AydCM6Ijj79hseZk0iGPn8RXu0+GW0+Wu5dzTlkXz72YNeV9ehlPknu7+gErWA+/ApKXtOkVz429lvYXipWPv6L/4A3g2E+6/qv8Q0yYj6UOGx+HmhYPgwKesteelM+/tax+FGBVD7xt5K+tKdGPqRU3/tcrks+XxgarYYqVT4dpM7FawZIPuocpI732FU+/kw/uVP/Vz4ZxH8tSSlQPjqBfcalPTs+gctskhiyTj572/ZKE/daPiPdUXEIw2Y+talvxeF3az7uetbrDipzPjIWnnRDfno+CF6vOOfnfj4+eMJ3sIV9PmQLIvw3RHk+KYRW/TaJcz7m3jHUeeppPpUW8sul52Q+4OgWwR5sWT6KQwYKVwdKPkD27ki06Uc+OfpPv4/jUD4OvcMqpjxAPlq9INlr0k0+pWOVwGOUPT6AFzUdhLZGPvMzsYg2gk4+V/1yMZGqTD4JTONPTi9VPlhF/F26tF8+mfk22fw2YT7vaQfXFIliPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1350\"},\"selection_policy\":{\"id\":\"1351\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"09gbZgFPOz6lf1wiD1ZHPgUdMEQUizM+Pp+KztCvST4q3lOJz3JJPilwEIReVE4+q0FtOUOGTj7udBHgW6FJPjXQ/xLyCFU+z6vwR85PWT4Q6vbQ5cZjPhwtXI3hJmk+pUzjgoB5bz5oXjow3C1yPu0loxeNj3c+ecV9ZFP/ez73LpalUql/PpvkbGCf4oE+TVWkJCOEgz6xdiiMUbWDPnBDj0tVqng+u6uFKQkaZz7cL/g7WqVNPm0hRNCb+k0+/JWrIxP1Sz58IS7K9N5GPhe5d3XjiUE+X4r+8qf+UT6mgCnlLHliPqMbFPgAhHA++M21cb0rej62aReAI4aCPkU4s3LzIIk+Lj1ayGvSjz5kLF3Jv4CTPsrw9d5/4pQ+73b4nwHxkT7r8X3gj92LPiAEBX6s1IQ+yuuMlFDrdj6mDKama+NRPg1XoFfQLhc+qTDt9KfCJD6c+sXiLm07PrKUa+CGHz8+SXo/zkaWQT47LBANfFE4PiFBtS1dpUE+L7riCIvvQj72ekBzuyZYPg74+2/WzF0+0vhudK/CWz6z4y1RtCNmPnY1AQzrYHI+RNEzFw5ofT6fc7ReH7WFPk2O1SPcj4w+pEOXN4cjjj4qtRbu9/+FPmtYRuBZZmw+6o3ILupcYT4I/+ZGA4RiPgPLdAyF/1Y+J03eoKmGXj4lXsWjX8lYPopiDxxxkGE+x4EgSxq4YD7JWIiWICpdPjerWA3FKlQ++ZVhfallVT6zs4cDMGdKPsBYrIZv4Uw+pM1qtprhUj4SK1Ji3ExcPurBGZZPK1I+3kh/2VoPXT6x2x2MqClRPqIVtid2CUI+CFHuENfATj7nLQHLWEFaPnjLMLwMS2s+sGKd6BribT6lSJT2eKR0Pgx/D5aWJ3k+/9U6P1mDfT7cN0zNh0B9PvoeHbuOVno+wvjF/Hawcj5yjnCyXFxqPt6vhnyt2mQ+qoGZCk4uRD7sNFsfLIZAPg9pKlcTu0U+1VWTlM4PST50IBVC/L1NPg3ZD+Rvp0k+HjJdjGtMTD6LjGgt5lVCPhgJEYnghUI+ZlXjMRQuVT5cfFGn84NLPlExBarXl2I+kELZ8IJ7WT4WjzshNdtoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1340\"},\"selection_policy\":{\"id\":\"1341\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"bFlG6XiEND44OwTfefg+PgFmM/LFZTo+4BCW/iyKSz6gGEmmLG1FPqrUrM/F4kg+nmVg9LeaTz4YPKxXXnZNPtmhFa1zJFY+NL0s3P/yWD7sVuJhBApiPmyOFGSRImo+KjbLRAE4cD6DjPs/hmFyPk25oCMJrXc+ckY6j0x1fD7a/VgwvSR/Pt4FGiYdOII+DlUrLKqsgz5rZWJJMPqDPg61VhCwzng+wsP+qD9iaD6sh5pg8X5QPqrWQLakvlI+oqSfD3xWUj7h1mD8H5NFPlro9TAH6Ec+N61gEmBzUT5y2sZaQ6lhPt964BppGnA++j0+EjBBej7CaOrAMc+CPrtstpSzMIk+htHCu7Kmjz7xa+RuI5+TPofVDSKWi5Q+0Hgbi4LgkT7b52KZn7CLPiHYu9TidYQ+ZJ4tqmCidj7w+73VJcBQPsRuQGE8sSQ+QbCnNd4QGT6vyjIOJIw8PuifsVuk60k+dV9KqATxQT5xprEMuw03Pu93AwYgykA+wTr8q3YfQj7CP7pb71ZYPk8WIMY4PFs+tumg6eEpXT44hjKv7B1oPonwQk24/3E+wqtMKjYifj7sutHtfhWGPqXL3O9/V4w+yQgDPLP1jj6gSRadq8aFPi8D4udRlWw+US9SBiYbYT7fX5h4vZJgPqLusYYLe14+jbfHtguxWz5Ny9jwIHZWPqCsqoulvV8+DPTBlQ/8YT5+hMriR7lUPpIrNpTpyFM+q5vzDK5kUz5kSXTc3M9BPsoeFRmDP0I+zdCdqSreVD5f2z+JUL1OPssBLk5MJVA+UzTyQGFJXD5mlcjAKX9ZPhLyxIGZIEo+7FdrChiwUD4ynGFbJ19dPoyFjyzZxmc+2j7w6/rYcD6t87hLbdhzPsD/o94903k+1UKEaJlbfj5dBR9BcqJ9PmkpR01lxnk+e070HyXGcj7Hok6/gkRqPlFmPN9C9GQ+Zh5Pz5F9VT4kqQC2fAZEPhjMhLfw8zc+vceysf+8Rz5sHMgCOgRDPk3nMWhHaUI+uiFwzNDHUz5wjkU5SOo1PpOTZm1wC0c+UyCyi1soRT6InMsubw9TPsmzIY49AVY+RMjk3W5sUz6DHm34EgJxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1346\"},\"selection_policy\":{\"id\":\"1347\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nezAvL99ND5I3RhsksZCPileAzNubD4+V6O62pIASD4onIW96PhHPjE+lOVQEkc+DyA3w3edTD5Tih3jRxdLPrrVd+EgJlQ+S9ouCJ0SXD7VAxbxwJNhPnln3ThZ+mo+xr15h1hMcD6ZdnpdF/FyPmQjoTF3OHg+kCb8sbmpez6P9k9lXjh/PuDGw+s6KII+Z9i7byc3gz5Yv60wDruDPsUgk5SU3Hg+4EUYRUuSZz7hHENOMPxQPtVkBCN6cVA+jaPO+gP2Rj5foHyCqXdLPuIdlkB9hkw+HFxN98LuTT4AA4+zXrlhPsjL026ddHA+26C8fsieej52qENnmpGCPnHHP7ug4Yg+KltxARDJjz4WRm3fS5yTPrKZIZ/Bh5Q++q3CJrjXkT4oQsd0TAaMPvW5jUX5F4U+Rnq/A3x2dj6enhB/lqhQPqNyVasV5yw+Gkql87ZaOT6SGN7TEEo9Pib4TyQwUkU+58VES4vqQT4/xwvi85EyPjlIO188ykM+WOTcD63TQT6ESr7299dbPi7QWEDIe1w+qgwi0izuXj57Bo4xHSRnPgXA2K1udnA+RFgto/RMfj6l3/JT7T+FPpN5DaeMlYw+PAo/rd24jj63x5NJDwOGPridfCgk0m0+GWpS6UA3YD6jpJzDlwJkPp7OU2Ftfl8+EoJmI6RuWz6hr/T0YxhVPsiJxaStUV0+q2zImDrcYj7vQz3CdJ5SPswuq9O3G1Q+sRi2nH1qVz5qvnpjnGdPPtyTru0WO0k+0EguPXoART6ZPMimTu5IPnl+doLQcU4+s0c41LxfWT5GihhaG1xaPmCtgGUjUUk+LlAet+ezUD6LdwQUbGtaPgEOvP9k2Wg+0NK80t/7bT56xAuDYYl0PpvL8Bj52Xo+F/v+i/3CfT6G3GbKnDR9PqGQcGATxnk+12qj9pqacz442yWWcZBsPkFuz2MXIGQ+P2C2nmM8UD63DiZle6NCPhruqos0BEU+zlQn5IoKRD5OT5MqnVZMPj7g6+cM5Uw+UyMXnxHASj63zJ8XRQQ7Pi/Pnmm1cFE+AdnyY/EUST6knCAY03dRPhChJD8tSVY+ql8YMoKDYT7ajlur8yNxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1384\"},\"selection_policy\":{\"id\":\"1385\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IftL2GaHND5+7vfVLRtCPrUI0apMIjE+4g6Yf/hIRD4X6fEGD8VBPjSgdhG9BE8+hnF4JtrnST6ZvgWkIkxOPriCWGxurFY+TGS/Gh74Wj6I/DwPom9iPr23Y67Sm2k+vx5EbRF3cD4r8mOewnByPpEs4CfTq3g+/DUY4AhGfD4SIF+qaUJ/PoeN/N7XMYI+hs90qhtvgz69XWmToMmDPppxP834Cng++kav5eWGZj4wcFDnrpJQPjd4y0tpDlM+Cij2dbEARz43qlr+fL9DPvcCi3yPzUg+Z3mcFsX0UD71jMP0qthiPlB9xnBZAnA+4qj6jAKlej66S1ni+eKCPlmIysf44Ig+C2fzPx76jz5s1O6fBI6TPkJRWRbfv5Q+yQPt+1ivkT7COwBnYuKLPjALA2JBvYQ+hueutpm+dj5SDirtDu9NPkSKrQjDBSo+hbhB0qUiKz5pai0sz7tDPlnS9LhdwUQ+tQB+DsimOT67MPJjcrZAPpWCQTMs0T8+Ta2O9ruKQT761nUtIuhYPlMlS7B9MVo+F+zMtakYXz7KAkDpRN5oPgD2rnZCvnE+CM28TgwPfj68zXoXxiGGPhTcTSHnj4w+axMxCAAHjj6M9RlrLh6GPufZe+1L22w+hy8EQjxXYD5B07MRhFliPmo92fFmQ14+axVTZxg0XD5RZpnneUVUPsL/zeKw214+C3UPYbuzYj5QLg2JbZhcPnUvfLAGUFU+ihKbLD2mUD7sHnSQMaFGPnDmIBRrOkI+HpvfmF1CWD7qKdnLWLpRPnIhmhJRrlM+EQW1/q8RWj4W711AzFxbPqJRwSzRikc+4msaFiSQUj4jG15fbGBZPtBpD733BGk+fxFtE2nvbT4aBh4jks5zPtFs/lmuhXk+GnP50vzdfz62Egc0Czl9PrTcxY7QWnk+txbZKCutcj57jAo350ZpPgf/wZcMnmU+VL1YZaDGTD6UEjzXwjhHPvYSqUy56jM+YoJqE5L4TD4+mq+dO/BDPvRr83/JjkM+HicLzeaCRD5FAnK5dlZKPlYlcKcDyVQ+dnv32NK/Vz6wzHgmMspCPuFvBOusxWA+FxAyQctTZD629qAr6llkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1382\"},\"selection_policy\":{\"id\":\"1383\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1324\"},\"major_label_policy\":{\"id\":\"1326\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ltb3osLKOj7dFS9yC/JCPk2CvqOmGEA+TaQKSlmiRj7ZbBKL6CxEPpOPQA3HTkU+lvyNW+qfRz6vTtTm70pJPrkowPf3o1M+Ku4c//rKVz4aY2LgP2piPjYKGKbOxGo+k+uqToEKbz5nKzumLu5yPkSNDK9T6nc+GpvhtgY0fD7iqddIpS1/Pn3EYOVlA4I+PO4o+5tfgz48duqQ7JWDPvMYvseAzXg+dSGs5UU/ZT5iD8YmmbhRPqbM3VsrIFM+oc7jbYK0TT5lhqLsfZVFPjmN3JAhWUg+z1ueid0lTz475xHeduxhPuzdiYjsi28+I2FNPp6Cej7NBv3CbJ2CPgUx7v5fA4k+/22+NLJfjz6UymPAMHKTPv8udowHsJQ+T7TbSu+4kT7ln15ECFiMPjq2MlBko4Q+u5ca3HIodj6SVeqpBEhNPt6xYO+cYx4+GsUtjO99HT6u1vsbrtoyPu1ICuaqmzQ+ndYyDEdkST7MQptGayI6PkCaAeaQjjk+Z6KDTOA7QD4ykRz49GdWPnUxhIMm6Vc+Ik/Tp8u9XD5bLlk5neFlPnkiHBbAaXI+95qS83N8fz68JOqVvb2FPtCZvBfBDow+zOT77QK8jj68noAQtCuGPl+g8KTDSW0+Y/0BntSQXj7hCUvuP5xhPqMf2FShuVk++tGaBg32WT51upUkKN1TPu4fc6twRV8+Xeza8ZYIYT5D985ar/pXPixAWf0zsUw+UL+uqBfOVz4wm9SJ9rVFPl/Yb39/RU0+b6FCTB4+TD6Oze2C7XhTPhJm5DJiCUU+VfaC4K7hYj5YIbMV1WtLPl5xCMPSXEo+ovIaj02CTz7FFBd4Mq1bPgY4hj4aVWg+WIAHQ3c1bT5PEPeKi710PsKZDjf8i3s+7y7MYJ/VfT5mRgO/sKJ9PrbyVDkXmng+JMyDfzyscz6Wmaq0Y+lpPlj2j3K2CmU+XraXd0MfUD7xmQZ8iuFBPvzGdxBBWzs+n1y//8nURT4nTpuuY1pLPjGUQcPLQjg++vifX8DwQD4f6a2Bebg7Pv5i/r7/i0k+fRqI3/FeVz6jj3wXP55SPsAP2dioYFQ+dNDdB/tsYD4YR2f9RzZcPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1354\"},\"selection_policy\":{\"id\":\"1355\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"EYJbd93dOz59onKJEcFCPqXVDaLg6z4+3FdNzqRdRj4qyrWFM6k2Pp0u4IQeA0k+4hCtlrTlSz4LXzSBZDFMPsaDj04Nx1M+PooBoVH2WT4ryLErDBtiPl8hVI/meWo+a3rtLyaCcD4HG2Sj20dyPh5ILNZEH3c+1LuqwWp7fD5b9hLQ/dt+PgumJfJ27IE+7XrGyUNcgz6a3LkuUmODPk3l+Echlng+bwCCQ3dmZj7KAYgiW7xRPm0VPRPsVlE+xsPhZmMQUD6hG6/qoAlEPuCedjgYA0U+a+CP+aI8Uj6fT6+YeDZiPu5FuIsPA3E+XJiq0f/Dej7gV68zMXyCPlavLQs/I4k+qRhnMa+pjz5f/PCfDMaTPq6wowjxtpQ+ZzUDFMHUkT6yuz664s+LPpkWbZgxkoQ+9ZD0j967dj7JJSyx201RPieXs7yzLDA+vvbFezoFMz5uADsSItwzPphYycUCHUM+8Tg/srvJQz6UxQ9oS902PqJeeYhNIiI+PDcGUZbnQT7PwwM9TRBdPlDKsVI/3ls+f/Btu0SuXj7YZ83I86xmPt1XA3KaoXI+jKOpNw6Lfj6tB34HVIWFPg6U3ci0I4w+C7o61qhvjj4alSS1EamFPn+thLzDsW0+RzJqNbFzXz6LYE8utj9iPku6H6wTqmE+wNdMGBt8Wj7pNv9fgnJWPopcBKw0o18+Iow6PUu7Yj6CXmbHzVdcPh3ShXHH3Fc+ZvliCQlDWD6kRbPWqihDPgpmYIF1UlA+XbYG3HSPVz5irsICpc9UPshNwUnLGlU+1DfMWMA1XD7yPwH9xDtOPsteqLAUA0c+GFbyy8AAUD572dk1I15cPiYlQkOR4Gg+K9ENawJJbz7sZciItohzPle+PszO0Xk+PpSLgMm5fj7tKsx537x8Pn6e7twqOHo+2j1AVVAYcj7TocUyySdoPkprZXhNbGI+yNwDCIG+Uj77geNi1zBKPsPuPcRx4EI+FbRrSsZsRz5syVaCkyVDPospVS/aq04+DJgztHl0Oz73M8lA7xNMPumqTuLSikE+kRpJRo6CYD6juq20sqhSPrvuYJcRpVo+UwsNnoIEZD6RS4xiVuRrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1376\"},\"selection_policy\":{\"id\":\"1377\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1330\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gPMr2uhfOD5o8Ors1YVGPgeMlGnhJkE+HSIdU1tART6nVe7w57hCPvVriQlRYVE+37eAsrdrTj4kCBb/aw1MPrib86HQR1M+NSxPocw7WD7Yoem+N6ZjPsaQxNgO4Gg+bz3ua5sacD4tCU4JXQlyPqQ9tY93vXc+jYxE7diuez6EgdKqNmV/Pvo5R9GdD4I+qMzVNXxjgz5G6z2NtWiDPoimSRHjsHg+DD21dSemZj4IgQeK45NQPg6f/wvxUlE+Wo6lYQ9iSD6qjuaApsBHPmS+7o/F20Y+3g0qfw8WUD6CYrzH3WNiPgdqPF3Qb3E+erhAa2woez4g7j/7yZ+CPjMvRZicDok+xk1evj+sjz59V9n20nmTPrN0sKl725Q+74QxSxEXkj4ee299iZqLPnhIH4vl8IQ+fMxmb6x2dj62hP6Gnx9PPptuemGV+Cg+cd0WVwlSOT6qMbOjKYpAPhsyyac9bjE+wcGCs8szQD5lMy2bw2MxPhgQ8kiyfjI+5SfBn0z2Rj7DjWRVgZJbPlIY7ByCAlw+urJyQ8KJXD7ql1WFemNnPv/cAOH92XI+0iQx36dtfz4n/gGgDNeFPqFKaMYpMIw++Xup7IzTjT43DcoOS/qFPvPw+s9HGG8+frAoajhlYD5spZ+NGw9iPvopqsZ0AWA+C9RGoMFJXj5i6q+SZQNYPgHRu6cEGGA+J2i7lc+KYT4h4FVQgIdTPi20ygyUOlk+XPbP6G0AVT4Hrup1N1REPrkZ7AB4JlA+WOkrVDIuVz4FdXsC/I5SPnlxCBR70VM+xh5d3fpxVj6V4PrI83NaPpXo6dg1+zs+08/3tMesWT6eTPLjVAdZPhI9BZFO7GU+sGG/ts/Obj7fQ90uUAh0PotoSQ2Rn3k+Kv/bemtmfj7xqe547OF9PsBkQK/RZ3k+Qix4bKedcj7K4VuzgGtrPkMB8pwKOWU++qvwQH2TUT4w/dN8vhtCPo/B3wx/qUc+abALqtGxRT6YJM4tVRVVPraG1VhWJlE+PQhzKYZBRT6hK9s5rsRBPoY8/H2pvkU+5t6xplyVVD5F9X/m09JQPkCas1/7wmE+uRULXUMJYD6TBnTK8WFrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1344\"},\"selection_policy\":{\"id\":\"1345\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uzyrpZb6PD4pTAXwlXFIPlwojDxj4Dw+yP1AgScjSD6w3G9G2jVCPiwNRKYIOkg+3XaZ1y7mST4wk1ylq7dCPsmTlRAAP1U+cFNXjFYQWj4aFc6klIxjPpK8oFCUTWo+5YerkBiMcD6rkqc+jR1yPt5D8BJF73c+wxjAmhsUfT6S26d4dtt+PkPVnwyOqoE+Qomv6uP5gz5v/uHIQYGDPo+C4L9u+ng+8IqkAx94Zz6hBx02oSdRPk/1Fe7ZR1I+CbdVvDo9SD7GZ63sG8hAPp2kMzyNtEM+UpwXw50dUT5iWY2btFBiPrGZ44p+VHA+Gu2Godc2ez74PiyJR/KCPsEXmZhgKYk+pjtLj/Syjz6AXdomnoOTPgvOtnj0dZQ+xdek9MD1kT7wHisrSwKMPiD2nH/pWIQ+XRpfCWsbdz7uLUBWqKRPPtlmfPi5OSc+Iz14KvHPIT63OnKLtj4wPlZzXL4ddDY+s1vet1wSPD5+F+knCl42Pj+yAU2CCDg+enMeIkh5PT5ljKQXJttWPhiq+CKy3Vs+fkpVHlNgXT75dzNVn71mPrmhUlPQiHA+/Y1PqRA+fj5cBZjyBCKGPiCEvbK3Oow+7NU1XvtKjz4PQlFGhhOGPhtKkHStIW4+wkNGgm30Xj6RoFkwx1tiPhCY1PxEu1c+y9HUNm2rVz7mszrTCJZUPnNCL6uS1V4+Pr1KrhYxXz6S9Y8sZblWPlSsNRljolM+M7rYcZd7Vj7+EOCD3GhLPnR6l7zeykE+APQWY4gDWD4tN5qbk5hZPkeQs6/mpV0+7ii5PJvRWz6AGHZBaRdVPrSGTNKHYk8+dwpZ0G1DSz6IV7aAIZNaPvzg9pTmxmk+WgtjOQf8az6qASVINwV0Pm33wwIkwXs+IS0w8iygfj4SDSjRPaJ9PtaaddAXR3o+7kap14sAcz70GYPQ9S5rPn/8hVVgeWU+0gDYUuLBUT4Nah6505BLPhjxMkQ0p0E+BIFw/7c3Qz4usKUDEIFDPlECF1LJLEE+vKlI9iLbSD6QZjkgsNJGPjP+N98rT0w+x3sgXnApUT5iSGKSTxJRPsCe9Cn9OFU+JpSG61MbZj6OWXTsWQpoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1338\"},\"selection_policy\":{\"id\":\"1339\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jT213glFMT5P0fVZXUtCPkc/rSR7aEA+LOHUjWiJQz7VDCzGW3VGPui8Nkz4qUg+Jz5E2ASYSj4QjZqw1V5NPpaBsF54RFQ+GYkpJTpwWz4IzbEqItdjPjXAf5hCUWo+UueNxJAocD47u5p3R7pxPov8PJnAI3g+ScALRCt0fD6s4dxyujx/PvjPVHwnIYI+MSAXZ3xqgz6n6uUndPODPpyYQ+gHE3k+USRHAqMVZj5c+kFPaORRPnVy9ximT1M+EOVAyvwOTz4AkIkjd8hDPo3iKWuzt0I+JsrzqemYUT6bCntyu6RhPvZkVUba4nA+fYuNrZnBeT7EoWRLqtWCPuZkx4EBB4k+2OyW9/Snjz6msgaOrqyTPkKwxElY65Q+Aic5VWjqkT69y714TuqLPuh8FlXh9IQ+Y2VkiSwbdz6Jn5ySwLtQPv2/dWiKpCA+vuhHtWetOD62nLOrjkQtPn8F4y/ZBUY+VrCA2DOVQj7uAhN7S2cwPj17Broe+zM+Yuft/BrdQT62qLqVSlVXPkhhzWFhrlk+nCxwsCSIWz6aTks0l85mPvQNndrmznE+7GRw8qpTfz7tryWfot2FPu8AZc5YWYw+WCQqlBcCjj4YMV0cnCSGPp1PAv6aKW8+lRjYTREUYj4NeZIlENBjPl33wl5Cv18+/+APAgO6Wj6F3XkISeVePreWnyMpyVw+HjsTcWGmYT4E619UxtBXPh2O0X7d61E+2znCQ9uVVT6gr4QhLJY4PgiZ8chxqSo+NpT0X6LcQz7SutLjPyZSPmtm+ctrwVI+q8JSeXjfXT61oEKcjm9cPjEPKNhp8Uw+bazqAaCPVT4NPSS61MtbPgvJVW5TZWc+YCt9pWZoaz5ArwkIW6JyPpLMJWoW+Xk+rj4Jfp9ofT6/McRRgCJ9PhjZF72fhno+/n8W7TXPcz5Vc0XXiF9qPvae2o4kimM+Qr3x+PBiUj4YTp/uoQxJPhw7ZR8KTUI+vi5U7D8NTT5oMggbispEPoYdjnr/tz8+nA8EJAR3QD4ceGT2sl5TPoAi5nyr+0Q+RR8/Xrq+Wj5oHJSl+ZlQPmBb4Vwf2GA+5SQKhXruZD7zfjable9oPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1342\"},\"selection_policy\":{\"id\":\"1343\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"b2J772TvOz6JQl+MLes7Ppoq+KHoKzE+f5ko0UgKSj5dpTOkdXJEPnNQuGoE3k8+Phyq8qvrTT5weGRyOmdLPhFR2Dp3FlE+Jt6xecOBWj6aQctXdsBhPg6Y2EDnD2s+LtyfDWcFbz7uX+ELlYxyPpbtAS1Tsnc+UwAUiP8XfT759pW1Zm9/Phwua9Wc+YE+P8GpVhZEgz7Z++qsY7WDPgO0nC4pA3k+XkMvprmZZT7uKbt3PB5QPghkrJoga1E+o3H0AbXFTj4AsKuwVrJEPhJSRDZDOUg+CreZISpiUT7DbL9xe7ViPs7zEpAGMnE+bbozRBaHez4Ta0ohy4mCPh5OdUdMZok+kly7Khnujz70DXsXzdOTPqZUy+cLyZQ+y9s1f1EBkj51bZOQbeKLPp/ueDxhpIQ+1ixC4WAbdz78sa7M+HBRPvgpGrQLoiQ+cN1eFJQeMD4BW2D78OwwPsmSxDpzpDg+mUBXklBBQD5jHYpaZmE4PqF/ZalfdzU+P68Mn04HMz7VVMt66jRYPjbjUP62+ls+vGgwdECDWj7lpgX02GtoPsWaHumLmXE+aLAIU1Hyfj7XZE0UV8iFPrNBm7CRf4w+Jp/OWb/SjT5Jkqroka+FPlX7w4xv4mo+fHug26OVXj5pOBD3/qtkPjptuCV2cV8+JoJP2KacWT6QCRHK7vlXPuLtPp1UYV4+4nRB7MltYz53IktA/lxaPmitJYzUhlY+z8z6dPOVVD7LWq1hoOdAPsJ6w6gGWkw+hC+31EYfST4s8U0f2GNIPlDY8i7kgFE+/eypea8QVT7q0O4fWABVPn4hPETnZFE+Cv5sG9IJUj7fuHledW1dPiqXAD3woWc+N43r7W/+bz7pTM9jOYtzPoJ+8YbpNHo+xsB8MMShfz4Zh9qqfgN9Pvp2/6W8U3k+WeF8lRsQcj6axr+eEiVsPkNmRzL2YGc+Gjc4kGHqUD75eb4hjo89PjoZBV85ejY+VWx0EIjMSj7FHgCqLjhDPkgW+Woq1Ug+uQEeMF4zRT4gUfao0QI/PpRw9LM9gEc+X8ZcRnxkUD532oQDjPlOPoDVLzOq81k+t4CLiskQbD6arwrNXY9wPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1352\"},\"selection_policy\":{\"id\":\"1353\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"yN7ZjR0HPD5zmbSG4mpEPna/RHmlNkE+cZLoRbRYRT4LuhfjYTVIPk55KUNeLlA+gfOAHOvKSD4rm5yA7NZJPg13Xz8Bd1Q+8DGx2E//WT4XWnvSTJViPoxJhUYjo2o+2IVlATh6cD72G8HpethxPmw47R//3nc+iMblhaI3fD4bE8B703h/PuVAKzDO/oE+qVUVW3i4gz5VSHNxhUeDPl8yz1d7c3g+jQX6J0/CZj7FbYe3qTpQPtgL1WNc51M+BwmP54xbTD7UwvhxPsdCPokR8bNVu0k+hmJXIBv9Tz6epWPC3DZjPkdhDJyPQXE+RXWaYaBVej6zkIizroiCPhYj/ShiM4k+7QHKVWdBjz5IuFOVoo+TPovP1R+a0pQ+cK5pFFW6kT45Mhbc98CLPuS/91breIQ+if8LXzINdz6oni3mxABQPviLAEWzIi0+tQTxFN4+OD7M+wJ21fEnPtfTMw+ASzw+KqI6t3jSRT6MLxXnysM5PvGNrqMhnTQ+H8jXdSToRz4PMG7lpwpWPryizQb4/l0+10YSXBwWXz5i+4vpSy5lPjzlTz9EFXM+XUt+LtJjfT4h3P9XKf+FPo/2a+xPFIw+B1jsRJy1jj7HsGRIiTuGPuYCf5OL0Ww+BZGSuHwBYD5sksC/XLlhPtdCTUDVZVw+OrfsTGehVz5/H0gTapxbPtD7bFYZvl0+vspZ8VhYYj6wAuTKtl5aPrlS4CG+21c+Jv94Q4uLUT4fGsd959REPucg94L0SkI+vaKHBmMCXD6KUatH25hVPtQ3OFtAdVQ+fmkaYKd/XT51qbzwjSJYPvc5VkSswEQ+6tuYtAMuUz5xWTnn02xcPjgXl/Qm22g+rYsbSfGcbz4svRVRH6lzPsHyyMGItnk+s9RvcrIqfT7ZksHu9NJ8Ppilg+UX4Hg+hGO6ueJHdD4J222ktoBqPvTMk8ou/GU+GEBcc4qjUT6lJfynTZ9BPtzy+MtSaEE+O/s4zCAySj6TATdqnIBBPg9rO3EgxEw+Y/5uJbeOSj750mroZZdGPqs/8HDvS0g+qJwyiicgUz4+ABf1vcZbPnxtsFKDU1o+2pgGHUTbZz5H9oD3+W9lPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1374\"},\"selection_policy\":{\"id\":\"1375\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"iaCxfRZtOD6XMMJnEe5FPqmND4naekE+tR57OWWmQz4ifqUQ4UtBPtXRq9gLzkE+uk+5XxetUD496fF9TsdJPjn9YF48y1I+Npfzl8V3Wz4vGOCEfJdiPu4yJLA7Qmo+jyYeOl8CcD4+TVd+2SBzPgFdWkN8i3g+9iFsaOSofD6/JrXJl49+Plfjsed6MII+qG9SJLhrgz5CaocfqoODPnKeF3B5jXg+uvRc9ZYlZz73PU0+CCVQPgZ0oeYop04+GLMz9oYvTz5tOAGUIt1BPlXn/2zcn0c++9BY0QN9UT4N2JQEQfdhPnXy/JLQfXE+j1BWtCeNej6qnk+f3LmCPtavVQ8n3Ig+mrKppPuMjz5J4MWsm8STPkwZTtOaHpU+0xsZHlHSkT7oBXVSAxOMPotYv103cYQ+Fuafn/+cdj4i0m/FvJNQPhYEvXOQlS0+uUFyDBd1PT7B/MQizxhAPptgCWpdI0U+Tvw1LU+mSz6fcwHUhaw6Pjm4aItbviY+crAlEKVqRT7yI3xmccBWPq7voygkCVo+kGMpLB2hWT61uqDbsTloPl7HVEosDnM+293Y8yeefT5aKcqWgcuFPg+Pq/rtSIw+ga9cn7gojj5ut/WfILaFPvMXwiZd2Gs+TuJ4WxgHYj5Jtl5sgGJjPmqdZnIgLmA+ps0GeBb1Vj6KDg232plWPi/5a9ZMkWA+xke6jH3LYD5vxVUilMZYPpb2mrzlSlU+sNCwKdMsUz514QyEaD8/PndtXS8UkkE+6hBY5IZOVz7zanH4ecJSPt9/iUPgE08+4WQ2rpBsXT4R0zKzW6pZPuaNR4M2cUg+OjmlS4I0WD4+EoSGd+VZPmrKpNvyXmg+uQpOwWhHbT5UHAr5q3hzPsRVOGECWHo+jq86QALAfj7uvbda9st9Pl0pN/AlX3k+eSfq/o+vcj6iaH6vbRtsPkiES7+HbGI+zoNKpR2dTD5VkDlar/RAPm2soJPPrkI+3r8JLt4WRj7Qt0PwsOxBPl/LhUrzrUU+CrwbcrbURj4Yz3alio1MPsvoR0bd6k4+5z5WhL0hVD6bXLc/RARHPmAb7ZHCA2A+UIbB8zSeZD7/8SBrfXljPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1388\"},\"selection_policy\":{\"id\":\"1389\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"D6rEPJhbNj4RJPzMD0dCPrxvYlmVvDo+a2yXeY/1RD7uUP2ZAos7Phl/NRFt/0g+63lSAmaZTD5/gzWpB8BMPlZfnaHzVFQ+uVCIcQchXT6ZVFjfgddjPhJtM8aG82k+s6BwGRg3cD5MYRdg565yPmQFbtSoxXc+4tBRIYv0ez7iZ0TPw3J/Pp2Dc/OmEII+1SlQf9O3gz6NX5CpIpGDPv+mhKjMx3g+t9A/LAzIZj6nGUkEfyhRPtzemHyL01M+3wzPy7lEST5/CaPzrepJPqL9vgpHvkQ+KJVVGdBIUD4/Keeq91FhPubUkSB4pnA+BSd463Vtej7KCQfMR3uCPsbD8ENtIok+aVBi3+G6jz4hck/cfryTPp2NLuL4vJQ+wX6LaUPwkT7NojwUtrqLPvjUlpv2WYQ++wDXnPoZdz6GxtMoE1BPPggOw3naEiQ+CcnXQ/1YNj55vUNG0whAPh3MDuTRM0Q+Rm1zILHqRT5v3ztabXJFPgKzqQflPzs+D/Zc5mVYRD5soMaRKpZUPtiAooEPLFs+e/VWLpB5XD7iErtd0VdoPjAhyR8tQXI+gwxHZRl1fz4TZovQ7uaFPq1I67XiFow+C6wmP1hyjj6jUbIzHciFPmd7kIsWuGs+zyYbKXAOYj7S/r85C19hPnocVhLaZF0+1tI+chFuWz4R7uBw62BaPq9ICpWEvV0+6uABf7dFYj6MR/ykQENYPpPkhRQlTVE+kp4U42tIVD6bxsqiYM42Ph8ZdD7Q200+qtSdhreySz6HFe+2l7ZQPnC0FFkQCFM+MLUHslV5WD7MKmmWf/NNPuSr4uxyVko+U+oWwhXWVD6z0xsq9z1ZPpLaziZDFGk+RCtYu3jkbz4P4ilyinxzPnUUIsZMAns+EFPzMvvGfT4T8c0oD359PneocqFeYXk+B6vChR0ccz7gjQrGZ+9qPrOPsCsCTGQ+BS9d0mI1Uj5Jav9dim1NPr3TmIerXkM+k8DOBiUCRT6YlCjkrtpEPgvsXg21wEE+qpfz63RzQD4vqnH1WM9dPsdCZX/R/VM+gyhHMDeVUz577ux0CPVaPiKcmXR16FM+2aA1yNZWVD44ghjDDT9wPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1348\"},\"selection_policy\":{\"id\":\"1349\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Ah/gKhIGPD5i9mWue+c5PqbirdrDzTA+AK2RHcqKQD5Tvg1J16lJPg/AbPVDaFE+W6oHxCaVUD5EfR4DSr1NPrJAvJYM/VI+f+VeyeaIWT4ggGFvVvljPmEbCKH8umk+rFWIgjticD76RKCOYqZyPmi1cRwpV3g+ywgiyJ1AfD5q6urnkmt+Pp0KoXENFoI+Kj+7tZKagz41jxt7U8eDPlWVx49sNXk+OzZLjFlCaD5QTguHWjhSPlqGM3CsGVI+MTWXp/9CSz4ijkVJtddBPt2/hnotP0k+rkEa0S1DUT55VqrYoHRiPiw49AQar3A+htMCOcwqez79F9AcFP6CPm4zzOffaok+4f7P/rbOjz4vfOrBZKiTPrJWuLs4tpQ+a5i5wZfYkT4N5PAW/qqLPt8MCZdJPoQ+R8cNbYm9dj7xnd4BYR9LPiSHsr9UujI++yuRXdEBNj634lwWJzI9PiaaE+qSbzw+mYNKqatTSj7VRcC9LFU5Puaq291YFzU+TOMlktFzSD7Qu6/PszJYPrJeItQ0MF8+LWSMuWTdWz5Cd7Mtb6ZrPptxX06RFnE+voCrJgjRfj48lsHbDYyFPs3tsZawlow+Sq7lJ7HKjT6L4iksNtaFPsZCnix5pWw++VHHGirqYT7YzEzP1odjPhb7XUEBX10+3JHe8sD2WD5IA894HD1VPmGur9CySl4+5t1nAHCZYz4A7PVyr0lZPmVWvZZlx1E+U3wvAmuoUj6lsZhHWCc8PmmaKItzpks+3syPoSN7VT6n2tgY/ktUPsYFZdPFaVM+nfVgMBkPWT46s10Kv0xYPtgfMF0zsEI+XKYKMGhSUT6sMnGgg3pcPj6S5PfBRGc+AD+tmftBbT40Kdd+60h0PiauwJO6Z3k+vWwWv6VZfz5o6MSPfoN8PqeJmJI1sHg+vVfzra16cz7lMozHi+xtPnGl3rr1jWY+S58ls3tNVT7rdRfVj1BFPh40+MVUfUc+KAFaPbpePz5x39NPHqBFPjV84PBgQEk+8n1PrqIPSj6N5uVSurVJPmxr3fDaJDo+qN01jYZbTz5OUCEpThZRPsjorM4DcmI+YsmVoCMbWz7hUpk3wW9sPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1356\"},\"selection_policy\":{\"id\":\"1357\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Q/KMbeZGQT78usEfd/xAPrj3RZqjPjI+B4yuOsg6Qz6RSGCqxuJAPigeIL2Dgkg+pXkLARc2Tz74YhqC8ENKPpdKJSEI0lM++B4fG8xvWz6P9MU0ew5jPjQuBXHC22k+r0fUZJtjcD5NLksLk3ByPjzr1WdmIXg+Ewc2urkQfD45rUXG09B+PrV+yeVgC4I+c8t/vA6Fgz5t4AY0Tx+EPnl4ESXvzXg+93Rxxv85Zj4aNEWIJTxTPp4zotFxtlQ+GmUllj3tVD4nEO2OSZRHPooSFNbCQEg+IkwPfsN9Sz7QN5DnjGdiPm3NKKbqdnA+doGeMxRpej7O7oZetPKCPuEAt9MfK4k+HwWG9lm3jz5pT/pWgauTPjnk+MVQ4pQ+I1hugurEkT5sS7tYpQOMPqA2oI0i6YQ+fTMoD84Bdz5DDgSO8ahQPsh9TI1IHjU+57KFg9/SJj5WOznVpgQuPj+/CYEsE0E+YLVMTza9QD7t1SFWBdI0PssdyQTN0zc+bqm/0LJkQj414HS+ryVaPjswKwtxXFs+nf1a0OlIXT6b2rIIAktnPq8s962pLnE+2fxp71GTfj4/e353pwSGPrR49vaZ3Ys+UTBSEGSkjj7wsrTdzNeFPmN6Iwrcsms+mMSo6AceXT4ruE2xnslmPu68HnajAWA+ZzVgxbHQWT5BrC+VO1FYPuMExYZ2bWE+UdvCFkXGYz54FmNSkWdZPl/D4bYsL1g+lcsiSfltVD41R0JUvpVGPqRjxVjrl1A+gFZGxZW2QT6yGwIDXnVJPkJPFGOn1lA+6QihqXBhXD7QqZXWwehYPsrAQHRQHEk+0872gs4ZVD7+NnZyWtJVPsOfLARXDGk+whdj17L2bD4gkQN77tNyPh1Z2VsbQno+h92DV6DjfT5YnwsHS9F8Poz1V9AxAHo+pzCpsbRdcz41pDCidaFsPga5An8/VmI+3OfuLZcsUD5fJzTt+RhRPidIqNEM5T0+BKwfxx1ERD7XI3pnhHRPPmFzu1DOgUs+w55Y5oN9Sz5DEICsJsNQPtpSPeoYXVE+sx/PVcT+Vz601jK6SB9TPt5fxQl1X10+J3TgkiZ+XD5jSY4nRNRhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1366\"},\"selection_policy\":{\"id\":\"1367\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"O+WLrj+/QD6t/fOjykpEPtq9l2pb4zQ+nK84DiLjSj5Wez47mshDPtR6jwNNeFA+h6tNok9bTT7tf1pSfB9LPrYqez/Br1E++DW0XpBlXD5ZWu9kziphPi2c9LB332c+QSndKg0JcD5h3Ck8D+NyPk+uaQkL6Xg+ZH3XLQYDez5rdrm1GE1/Pg7cG7Hd4oE+gju1ZtuGgz6L3Ra1+c+DPo7POd7yq3g+tMBmljcGZz6Hp3z3pkZTPg8b0t+3/FI+naepN1SyTj5jh09Ur1VAPp0IsRZ+j0c+Elwu8HkoTz6LfZ+K3E9iPoOjNMMuKHE+fXtZWF58eT48iNwI02uCPr9vm9aXVYk+UuZ6pGtcjz5XhmYxIKqTProh5sXxu5Q+OXap3nT2kT6JMqSvpgiMPsNdCP0a74Q+aG+5o42Jdz7dhOzNrW1QPhatNmnZAyQ+XTXwCe1HJT6fxVtaLiYoPv6IrCN/Mj4+NtWTgdIHPz4sVDomgsQyPmM5T9mWajg+HqxzB9UGMz7jJFTCBrdUPvkonrBJv1s+vdffz9T8Wz57dPqt3XdoPhOBaTbAnnE+PbS+ZkAsfj5yubsWY2uGPsDFnREoe4w+R6mRK+7HjT4p/a++o1KGPsWsmYfBc20+0O4Tr9mLYT5Ga4VSDTlkPiLco19R9WA+SITt68quXz67eMAPjQpYPv6f4ctVrmA+OlmdS6e7YD5PXG22FfRZPo/oBGP/w1g+XdBMh5YVUz4hJqeFmRxCPvT493vzRj8+CezJ/T8bUT4ziRfJ+nJePgiSYHUkIFM+115GxncQVT7b1rnKz/FRPvZI1kuzVE0+sHByKoVBUj5jNFYGIQJYPknrNkrOQWc+MwmnFRkGbz7M6SdJzKZ0PqrbF52W4no+DuFkj/nkfD63EM2whUx9PgQf6JACenk+V+DbLFM6cz68mOF6yYNrPqIyfUNmb2U+1Ag5hXgvVT5lfEOaMRpAPp68n1rCakM+ooZtwbBhUD76Eh+LZnM+Phr0LKtoR1Y+jJBXM3WnSj4KJhBbO2tMPsnvLI0lwEo+rF0R7N5EST6sXbidr4tSPqg2Ajs8r1w+yky0/AjERj7sKWD3nUtuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1378\"},\"selection_policy\":{\"id\":\"1379\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YLh7/OrQNT52xu2xr4BFPtjHdL1niD0+nnxsm7daTD7rTzzVgctBPpg1phLUAEY+zOLRQe9JTD4gaR0ACMZNPrf/FLjG5lQ+OQd86zCfWD7MIzuI02xiPlBO74j7h2o+d4BpKxd2cD7xlEuz35ByPte5sy7u03c+T62Q7Sq6ez5VR6CfzUl/PnZATg4QJYI+woF+iC2igz43bBLtMneDPjB//hlW+ng+gDzXj1HZZz57xqgA0uFOPvaNUlcn/FI+nhSwTzfSTz5HnZJorltCPmodMpYmSkU+AOYqQ1FCTz7K5/ewaFViPqhyScR7FnE+kSVgzOFbez5P7p/SN2yCPm9TD90X+Ig+VxsLvY4XkD6/NQAdusWTPl7e5GJV/ZQ+1dy1M1XokT78n614qQaMPnG86j9D7oQ+XVks82l9dj4n43aQOzZOPhCnas5kjiw+hz4dIdqqJT63IjafYR5APmaNDhxunUI+2TjnX5IeQj7bkfxI3Go/Pk1EMPuFBTg+Z4pzPQzvMj5v+Rofw/1UPhPxXS2b2Vs+MM7O9XNVWj4zWUEvO2dnPlw1K8/ngHE+czIWAUcHfj5NWmQJv4eFPtoWAl9Ehow+2Jf/HlGejj6NsHD3EgqGPiMGYI8zn20+QMJOTVf3YT54BiCM+F1iPiMl5Bld4V4+OoUC52Q3WT7q81ld359RPrJnmNq8+V4+nszXdqhJXz7et7ZXGYJdPgWqiTsFGVM+BAgdLM98Uz4T05Vj1RlNPoY+BQ+7sUE+NQU69tHiVT5b6x7lU9xVPrQiPu86D1c+fLyKO/W2WD4PN9ValIlRPoeCLgrdBUg++1sMv9j3UD5IRjdVuIFaPnx1K8yl3WU+pyP7sQbubz4kwNB4KddzPgpylqB6Pno+zo7OdzXIfj6sTmCwDah9Pv6JAvNqY3k+GOLXq4jncz7qpB1lrNdpPr5d4rj0imM+yaCqcMIxTz6c1par0yFKPnTIe/CrZkI+HfHBSNkWRT4SDilwAJBMPnlhPh9Xg0g+dGIgsGZOPz5Nfgz1RKc3PpktPGVvjFE+X8FZ0elSVz7523q1rwlTPkoiu40w12A+H/3ESLS+aT6Hr7n/tkB0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1364\"},\"selection_policy\":{\"id\":\"1365\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tlkfRDqmOj6882NbwLNDPr0SO09emzk+06Yyr57CSD6ovXCyMftDPlR58B6pzkM+hu6GW+dfRj7aCLjwJ4tJPnQKe5Wx/FQ+WUxYxN3NWz6YYh4IL/dgPoAMnUmEeGo+tjaMUHuBbz5zqRoCfvJyPjZPgHHDmng+28DawHHmfD5EC2xnMHl/PhPhdr273YE+hIF1vROqgz6a/Q5opLaDPjvbGPVU03g+TWLzzbRgZj5IEhxIqXRQPihtDTOyhFE+/kwElunrTD7VsFF3UbtBPqVUHbIe1EU+iHHseNheUD6lrp22fmhhPqR8OvYo5nA+RebFvDmJej5rxPIrhbmCPl4mDTrUnok+iJflDT2fjz4zFWATr4KTPv8LE8YBz5Q+jKMaHqTQkT5JAkwyru2LPiWZrI7P34Q+9c7P38wvdz5SdG3dgVJRPrYPJggZ8yA+TcUNv5EdLz6nI89reqYzPhaqHsqRGUc+c8aMvin5RT5/6I85nvgiPpKQswMNgzs+lIlpB+jrST6htYNRdf9aPvRW/f36lVo+5zp30+OPYD5Gsh9ZSclpPg5lX0XUwHE+bthUt+pbfT7smjKPWqKGPkM6pMd1AYw+DDBen57sjT65VksVRQiGPnFltkTRNWk+8CYDfu28Xj5PzO77P2piPs8SS6UeOGA+2b4CbkpfWT5zUlTDbXRUPrK5fOvV+mA+R1xn79wwZD5ug7BT0+9YPswYL2LPVVM+ymsYd7rHUT405V90YE5APsPCIH1sckg+jOpUTgXQVj7XANsUT4FRPhN0h4TCE00+DdI5FazBWD4/vDwAlwFVPiphdqXHt1I+Zmff80egUj78ZdGJkFJaPmJ/bLiQpGU+GfQXxCjObD6XGnIT6OR0PvoVk1JgPno+DpcLYWRLfj59+P83xD98PvVq778Sknk+aJ7m9kszdD78cUS7LWNqPhvkO7C+W2U+e/gklkODUz4S2AnBVEFDPt4RV/z3PkE+C+DPptLBRD5BenkBTXVGPvR6zcPG4UU+A7npSK7LSj7iG4hb6ds4PlKvITeVJVE+qCCjanrqVD7YmyQDVjNUPvsJDhpYUlE+MbrGx4UUZD7aRoDzSIFjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1358\"},\"selection_policy\":{\"id\":\"1359\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"SneYcVAOQj7VXaGnBcJFPoZ/VCBpsTc+ijAIEDzXQj4RqC0N/CNJPh/9bwbLnUo+hOjjAHDETj5y8JJNGkZIPhPhsK3+EFQ+drz5K3/fWz6LOzhXw6hhPjjP2UIW22k+PdUEoOGabz4XK+/BTZNyPv+09QAHOXg+2yjczrB7fD6oNOKn7A9/PpbqF1sAJII+u+nQyi2Jgz5CzkXDN6WDPllbtUfh93g+qfJUq4/pZj5bxLBnq3pQProKyADzslI+a/oHqOVXST5M3cYWHStFPjBMPN/1XEM+RLmgArhdUj4oAlcgQ9BhPhTFj45bwm8+w7VNkMwSez6niFvxMIuCPsQkkej5Y4k+050F6iWjjz5cfg7rd8eTPviwg11w1ZQ+REqoSJ8Akj61yrArvdmLPlHgKX9bY4U+RZCPnK2udz5UFViDMapRPrqTkUD+bhs+SzsLnQveLT4zVm1jFpxCPiUgphRkDUQ+17054q+uPD7J/nds+owwPmGgSYjjyD0+F3tMDMDXMD6BUPDr6KlVPizWYyD66Fk+orSEp/4gWz7p236bROZnPpypCXhjwXE+47LrIHPJfz4/V4JVuS+GPkMU9Y74qIw+6ktCMpQ+jj6BABXUi52FPrJIeD0cAW0+A+RJV/xMXj5zHuMCC/JiPlmhFGt3Q2A+ZqGCUU7KWj64+whzYmFXPvgb4v069l0+UIOank/nXz4zVbxYm2hYPhu9GMX7jVY+rtnmRvIqWD5ZqZarf1tEPstPdTO5sUA+kTZCkRW/Uz5fSWQObZNVPiX+wy5Kv1o+j6c5RniLVz7O+kFgZaFMPnCfsoLb5k8+dACbH0LDUj5/bJmg7RNcPvZ43YRQaGk+rLKCbBNecD52awa++9RzPj42jzVV4nk+WB7g4tMhgD7+ey6F/jJ8PjejDwM0D3k+SAjKo94ccz6Yh4HhskttPrJECI7b/WQ+HXWXmuuKSz7mCh2OD2JCPt9bumi9rUc+LBfRiCxRSj6//VHsVA9BPjvt/t+he0c+6TeuzzNBRz4E6kzJI/5BPhkFa2BzbEM+jUwSmGjxUT6m9uLfj99XPk0w7cpAQlw+s3T4UQDlYz7edUNMUOlmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1372\"},\"selection_policy\":{\"id\":\"1373\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1329\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1326\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"sTPy1HTCPj772CQba91APrH0+hDbJDc+xBXb6yfIQj7q0AZ3K3hAPrdeBaBOGUo+LrppwzvQUD5jcHDEI8VPPhtCR8oOk1Q+GvPZW916XT4n8ahkkUdhPjhcSIFMqGk+bNdjLCS+bz6c1hzJNoRyPp2pnHqzpnc+jplvHwMwfD7urNQey2J/PvBjhmC5vYE+1af5V1Qqgz71CfsBRg2EPliPzI3umXk+iBIusRs7Zj4T6pAezXRNPkkND07sZVI+EXeD+tU5TD7BNjWTiAxIPiaUeoZeAEU+nJfpbFClUj5J5BWk7u5hPrTn9539lnA+/M53IUcFez7422EDe9eCPltEknA+Aok+oTpJiwQCkD4ZTrbLs7WTPtpHLGA8sZQ+nNDwkDS8kT4TrIhird2LPsBKdBk/6IQ+FaVkb8l1dz7+tOEIG1dMPuR3HyQT2iE+fgATtC8eEj7hDxGBXYM0PgJuE9MtSzs+pPATThZyTD7wAbz7yZwxPqqUL0wgBkE+m1JMxlB5Oj4FYkmAvNdZPhsK6Uyqslg+0Y37WcTyXD42tnKlSF1nPghORf/jYnE+pFG3D3APfz43T/0Sqe2FPq4ZPyTgfow+JjeFcuZAjj6GEvY8UK+GPmFo8Ic56Gs+gV81tHsRYT4pqwDVJRljPgkO9wsPElg+PuihRH1iXD4SIepjKxVTPpKVxjcs3Fw+HJbMjJYNYT695sSjGhRdPi8gN9PThlY+DR6cJ6gOVT7iukh8z3FEPmrLV9m3Pjc+faelzFoTVT6DyWXeKixaPvApLkVDuFQ+SP9yT+uyXD54kbk0Ad9PPlG1L31/BEs+7yyisCNdWT55VFiUwf5bPjE48aQtKWg+5s4etqmLbj4CQFgFDtNzPusc9e7vdHo+YC90440jfj5m3BpLyLp8PixAZqdvKXs+PCZiW5/4cj70g0TfchVrPpQjGkWPUmY+5dd4wlmJTj4wqjfGMI9APld3IezPMj0+RLhLq5WYTT52AHYHgpFNPngPrZm+TEg+SouARgDnVj4H2+AvOfBHPjMf8QgecUk+JUgEqW26WD7m83iaP+VZPkdIBCL0fFo+DBKbamNjZT7ao2V3tFtxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1368\"},\"selection_policy\":{\"id\":\"1369\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QYvZA2q3ND646bm0tVhFPj5XhUaggkI+Ip4XoReFSD6jguCfbetCPg0TndZlsEY+5mJKPPMtRj7JpzpxVBxKPkqUjy0uE1Q+jjgfisQHWj4k6wgztW5iPj3yvOG2G2o+2Ho6XedHcD73Aq6xHx9zPirU7rXzkHg+BUWpJ3ARfD5owyW4XXx/PjUmrPxYfoE+Mms39cWPgz7Q2cMjnBmDPm2T18mM53k+iv+lwP8BZz40f41RompSPhjzSdTAPlQ+ebRz+RROUD441IEv5ilMPq9eEtcG90E+lv2VBKzpUT7/Jqrk0gFjPhKB+grMjHA+ki28ql2wej6MBFEE3pSCPpLNR8PYWIk+QF6al9Hzjz6C1cq7wK+TPsX/4DkTxJQ+TX5YLPARkj53ha+/ctCLPiAMY4MU/4Q+ZyJraOsjdz7p+ChYiEpQPqVor5ftXB8+KYjiNnN+Iz5N/r/GVtknPv/C+ZiJqkc+VhrSuvKoUD6hhT5UZgA4PveST0UMNT0+RZ+LChIWQT53Smc8ZqdYPludh50+YVw+F6/zC7rKXT7t/4YDbD1mPrPi5e9ZJXI+3N+mZpznfj5S1MlokHuFPnbFk+0Qeow+O7pMnx2yjj5Xn7rmeCKGPr/D1GJWFG0+pph9goTIYz4TDqbf0vBhPi9Mr3Bsrl8+mR5StPxNWj79nbT8R9dUPiC0riW8gVw+TQKKiBRLXj6t/zb2ZR5XPj+Q2Ee3UFU+TyAYsVxNUj78pJLQvdRFPvq2kJLVM0U+TPEaFL1VVj47wTWSvLpSPmdnJhePXVk+S6wDc5isWz6C9e5KefRSPlRERp7Xjz8+0D+Z4X0PVD5RaADpAvFaPlv7NwdJ3mc+Acqx6zB/bD5uvTOk8gxzPpscrh2BSns+kHlseseCfj6CEbS4QvN7PpMEC5VZY3k+8EzkLuGvcj6f/QxzkFpoPkqsmbfyQWQ+Ld7ei2q8Tj5x8hU32/FBPrCcLdhv8Eo+0GhXmEXORT5/5a5o9z5LPio2htyXKk8+Lwhj9PJCOz7m6Yf4Jgk2PqfkyBDNZVQ+ErD78QVYUz4j3cGjnQpTPrvkjWMQflY+z01KJC3YWT65ogdFSmNiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1336\"},\"selection_policy\":{\"id\":\"1337\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"ticker\":null},\"id\":\"1327\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"kZFg1mf8OT4dE+/n/NdDPmBBcaeIrzc+iHDxFHM8SD4ja+d2gpBBPnkQAZNhZEw+DfDN1SyDTD63ufmzRqhLPugjllEDZ1U++GEA5Ny3Wz41s3068LRiPoo37RbDUWk+yK1oEEgRcD7SZ7cs1fhxPvoxre5CAng+PUzVDOSoez5UEu4E9iZ/PlhCaBVW5YE+ClGDEFTmgz7ebsvdQtuDPt6UHlJSR3k+lH0cdSsBZz4Gc3blvnhQPt2C3L9FWlA+tcO2eQzkTD6CBQKgOZJCPvrVYP0iUEc+Y9m7JwldUT5Y3wZ/BpJiPjrE5iTDWHA+de001jXAeT5QwqCf/7yCPm5GOvigtYg+GU8W/y7mjz4RoWCR7KmTPopgIq7O9JQ+D3fj37opkj4VEraPoA6MPvcgbABOoIQ+jPKnpaUidz4QZvkUpslQPry/wuDyMyY+08viTaeUJz5mWQN9eg43PvJPmS2m4kc+LBKRWGW3RD6X6Z360uksPvKJ0dueWh4+Hl9mczZCOj5PQGPEgFBXPqNY0Lcp2l8+RwLMWRG0XT5fXxoJGfJlPnG/ZHTt4nE+cPSWR/LzfT4X2eO1iwmGPjwmPjUGRow+FTUH8ZMTjj6wMgzEGJKFPue1OWfrEm0+KeHbNu6rYj5mgSZ1+3FjPitYZLG74Vw+7nOuYP+KVD4/aEJV5GZUPhvWMmjnr2E+G+TDwIqRYD6p2QWMc3FZPoGtPmQ12lk+8iw3XjJIUz78ualGVlRNPkt1zuOn7Uc+9yyDmWRnUj6arDVWKTZUPrPrqpHf5VU+yqlpJwsGWz5l5qeZmDZQPqDblu3Dz0g+BE8q3xsyUT4Rz0aZcmlXPrS3lsLWbWk+UaSp8GFzbT4CWt5j4W1zPvqzAG3u6nk+uewWdMxqfj7G805+RPN8PkrDJmVeD3k+oEaoUoKScz7WOBDu4sprPiMLNAPwPWY+h0hMEtn5TT7RVGOKcJ1GPnzgdjRA/UE+4geTEudfRT4byCBRYVJEPskjPbkABkQ+UGW5Aj2DRT6jfaS0FyZAPnO/l/YKv0o+AwWLhTViVD5PgJuyGyxZPgjsFGg3Hlw+s2P11guBbj6NUSwlUzRwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1330\"},\"selection_policy\":{\"id\":\"1331\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5uQc5O5cMj5BQJux4zhFPi3WA14/1DU+ruyc84n8SD6h233NS145PryK3L6A70Q+UvCPHxY7TD67/HFYqMFNPisfqkEMsFQ+n13ZQEmfWj7I8F0pZ9xiPl/B9cgW/2k+CB/SR5H3bz7XnbdTW2hzPthGTzuac3g+Ifu4ZboVfD7pweNHi/l+Pn5GFalx8IE+AZ/MUZWwgz59rBoDaFSEPle+udTCZ3g+GBGwneqpZj7mYViX0qlNPqhy4BOublc+uyiDMnO7UD4F/AbksENKPh4PqDTMiEc+eUj38YN+UD4CajtvsRZjPkIUctSbpnA+ZjdWnc79ej6CzZMr9MOCPnzhC5VBLok+thTTu77Hjz67b49IB4WTPk7pvhKB0ZQ+2OgnR3LmkT7nOUvwthSMPpw5XvaMX4Q+DwjyngVUdz4EVAzKV+9QPqKmMFIAtSQ+SxCD9dy8IT62KywEoRRAPpvLLqnMrz8+tShIINMDST5NL8csJqsrPjwyaVNfTDk+Pdy/JC/eNT6PXTeW7qVUPqAhzyoXEVk+eDBQvP9LXD59TmAkoN9lPsGK4sd/fXE+4tPK/dVzfj6+SxehNrqFPqDWRm6sgIw+lNVxrJp1jj7hhfjSC1KFPsKBhbP6gGw+N2wkrozDYj4EP1gdgfliPj46Acz1BV8+XhRGY3r6Wj5QqhroMWdXPvrJLVENIF0+kOfN9qetXT6E0Cr/hNNcPpJ05wMPklA+q50QKQfGUj4dneOnXP86PuweRvkK5kU+8MTZZXaHTT5YmzgwIkFVPuOR3dm1+Eo+bNXqhsHOWD79LGTW42VUPkihicURkVI+jz87+HpvWz6CNHoLD5FaPrvU6Yd1lmw+sBV6STfzbD5OV/EMdXxzPugB9kSw/Xw+ZdsnUjbffj72pRJLbxN9PkAIND3nvXk+RvME0MWqcz7iUWlpcq9oPuPfY4wv7WU+fCYEbaPrTT6rTMDmD58+PjtFz3tNkEA+Q2B+AYITRz5wg6E3qUZGPmgAymyFsEg+Sc/Lnz4wRD5kU0q1gZRCPuCIMGNB9Uc+qbKIY40mUz5esX+YtoxRPuGJn1C24mI+aaFf//RcYj6tr88Lcp5gPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1334\"},\"selection_policy\":{\"id\":\"1335\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1324\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"xeDfllD8PD76pToIOX9CPjfI5cQr0zY+C+zUi0fERj7VgxUrXGtIPs1aeKj6Lks+D2NSxa23ST5RwbIWGfpKPgPqBpzV0VU+fRY7zH13Wj5P8eli/4liPsN1w/6Zr2s+U/XSP04ZcD7GKCKxVVhyPvdRA1cWqHg+fvtLtaWAez7S2RImQzV/PoWM5Gc+p4E+YBwlMpxtgz512G1OIsqDPtcHEBdV/ng+fSSuvaBYaT6wqxhvZyVQPhTsDyAzEVM+uguAVScmTD7uRanXuEJJPmBijzarfEc+KjCzCPOKTz6T8FRjrcJhPu77EsUenXA+LmxMjOk8ez5xVvzXfmeCPrIzSlfRHIk+OE8HcC7Hjz76pzMqgNCTPozJVXEFx5Q+7RfhrVzSkT4RPOTTfXqLPrl0txedzYQ+G3J+O/kIdz4YAprI40pNPmDnYoTeVyU+/UGF8xSjND4KXSnmHWU0PrmBrp/TR0I+peN9fzUjQz4453ggybkTPjMoB9TTuzI+Wj+vgFMsQD4Lu9ZwnGtWPi2AhV8ulVg+/nOgFa1WWz49ASfiRqZoPkjGgsF8OXE+1XS5SQFXfj5hGQL5P9uFPptbNl+o0Iw+6bzpuvzqjj4SGVkhWT6GPkwuhRv0rG0+goq8SVfuYT4S7kNrtWBjPtlhL4qqx18+j1Tm9G+AWT7bV9Gg7rVSPgcMh1sV/lw+4Sj9ERqpYD5IuIa3joBdPoYomIElj1E+/p8ek4IiVD4h43qXaYZGPq/PBMVGM0A+2i3Rt6OTUD4CJ+iba2NRPnzD0HPQIVQ+oqFfWT/OVj6U0zFO/aJRPgxCuFuMekk+N51iAXC0UT52BH5gpMtfPoeaNbX7IGg+QqZMGGUeaz74w5PmhnxyPh7KbtG5Unk+iYOVwHk7fT5zMqZLGzR8PhClcH7sJ3o+3C3ps3CvdD5q8l3LQJlqPrlvz9oOy2I+BtieToJwSz6Qdpj/MdlIPoFbvBVf9Dk+kLcfVE+nRz5KEN1PUcI2PtbI4FRq3EU+LMNPL2H0Sj6frv6nTk5DPu4TAe3PnE4+mwk6hpaaQz66v8BJha9fPrPwoSzIk1o+3QxJr/FYcD4qLpupu/trPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1332\"},\"selection_policy\":{\"id\":\"1333\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1327\"},\"major_label_policy\":{\"id\":\"1329\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+B3J+APiOz7JUmBxZmRIPu6KLcYTIUA+EW1o8gIgRj6KYQnezu40PrcvePJV1EY+svWNWq/rSD61TK3JcyZGPuSBsXP+JlQ+PWUmUTtYWT68aNnCgZxhPoh9vnb2hGg+emacA3qVcD5paRpqk51yPkwnfLG87Hc+CFr0sLrnez4q9Q0t0RZ/PlqzuEmW44E+/DMB3zsfgz6bjUc98GKDPhrwB3+Do3g+ZZGNZAevZj46g2a7KIlSPmd7QrJ6fVI+vsidPnAOST6Ei5tu34FAPrCK9wKh7Ek+yeE1kKhHTD5doV6EoXphPkmubAokE3A+PvJSnfp8ej567WTa+G2CPl3q85oEN4k+hvpScfH9jz6MjQVQlquTPt6YI3TAuZQ+wdH+jlS5kT4n+j6ioQaMPuyp7iYMuYQ+N7HDb9mPdj63EQ0OqEpOPjEXFio51hk+P7dMarRlJD6I6zCtgJU/PufAwMHTsjo+S5S7LBtnRD68Q6omnWBHPuz0e4OJP0U+ha5X8s4yQD5Quio3+3hVPlYEtqClXFs+y09geL52XT66dY4OunJqPvZEu1ONAHI+nwwGkv9Yfz5TSAvw8JmFPvsIw7kuQIw+OaBz04rljT7rypZXkKuFPqW2/4S/Dm0+59OqEanyYD4zAOPMmA9iPkkXdlBtiFk+x2/4zcEZVj5ztTCZ+0hXPipTimU2oVs+ffsXRI14YT4Es5UEyOFTPl+mRPL5AlU+8T3yALwlUz5QrWQ75Dc5PhELvaXKc0s+XUUtmPQkUj6Zf8jhteVJPuDYkOF9WFA+/qColXl4Xj66gb5HIwFKPnlCRQO7T0Y+nGDcjROXST6al0sIaFFXPsO+7qk2A2c+B+WV5tbabD4i6nwwvEt0Ppbseti+PHw+Y30CxZ86fj4jVMJRF7V9Phf2WQzHHnk+4QNBr8Gacj58+CzHx4BoPrdMnUntOGQ+lqjMydViUj5zbEBhtoVCPt+FiUWJqT4+2CSGb7e4Sj5+zCU6X8xIPlH1bjnAs0U+gzMuxBkvRj4Le88mN8Q5PhnuFek+j0w+o/BcxqcSVD6K2Ue2+wtWPtZ8+HeT11o+XKE2EaSpZj6hRwfBNnBvPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1362\"},\"selection_policy\":{\"id\":\"1363\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"c1c8d7b6-6a4f-4ada-8124-f6196d08dd33\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"3429e012-6af6-459a-9aa3-662a8018aa22\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"92ac0e7f-6d30-4b33-b6b5-1a8b8afd3046\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"f9c258e5-96f0-4e08-83bc-084035f1beb7\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1767\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1767\"},\"major_label_policy\":{\"id\":\"1769\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1773\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1772\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1773\"},\"selection_policy\":{\"id\":\"1774\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{\"ticker\":null},\"id\":\"1770\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1770\"},\"major_label_policy\":{\"id\":\"1772\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.01, C/O= 1.29, [M/H]= -0.33, T= 819.59\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1797\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1769\",\"type\":\"AllLabels\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cRs+xPJWUT6OAlkRoX9UPomVV/0lPlM+3C8ANOfxSz5TFTxACHFFPhd8ysdpTTo+qEDnB8A+ND6fPvP3U0YoPtcqyKUyWjk+4QSwTTRCLD7eSuQY3aQwPhdbSciFxjI+dWpIECWGQT7upCKwsqI/PvXO7gkiO10+NgIMsnyJZj60q+vUvy9xPhJwj17YhnU+AlAxTmHCeD6T4kLq26R3Pj+i+PVNl3M+tBIpyfShaj60QbVQ2s1kPulpbuRkcF8+XRTZYcbLUj4I+RBxWmFJPgJRaqhfX0I+RFjgzITUTj63xQiBcZRVPhXIGmoW308+8KjalV6vQT7b7ztjFx9FPuGe8E703kc+VYNg71w4Sz60QBEoczpPPul4C/cjtFM+lzKq68VLXD6ln0y3CMpYPnHKYF4SDl8+zMkmoHxVVD7bZx30xJ9cPne0VMHaf1k+j6unFRTtYz4ekdiNiYtePrQzzpDgPmk+J0lf6VIJgj41loue25qLPvcDGo5qsIk+MxMIDYi4gj65k3i51Id6PgHjtMXw8G4+grJPQEHKYz6Ooqes9PVaPq/HoWxhnlM+Fl3AW2WsUD5UflD1q8JFPhyz3vBAEDg+EuMOXA5xJD5Qu1U3AWEkPq7mVXl1QiE+lzx9NHPiJD4YxXe9Qi4aPiXFV9pflR0+lK9D6ft6RD6Q4aL5pEJ4PqqO+XpLRYU+QDX6GajDiz44igMYBWySPgajXSs6qZc+C2ujalTTlz6eB1L6lQiTPj0ItGieeJA+YQJ83KUFiT4038sOYkSBPoUilAYoCnQ+Pn8qhR+cZD7jiktxbQFRPruyZyW5A04+wM7ou70YUj5kvTG4XXlWPm+KkGDwTFk+3LoekzpRUz5B9oMokFFjPuB4Tjoz+XQ+nwtG4O4ygT5umwesl0GBPrK5JOUgDoA+UHJhU8ndfD7UzPYqcPl4PrmsbGnKeHQ+gMkUPf4ucD7QNdXYkplqPmhvrkLe92U+6e8sXo4rYT6OT/4OVGdaPo90vYGZmVM+rZpQZ9lSSz447944EalHPkpYGr+keUY+RrYwl1NPOT591u0zDSdDPgZr6w+YUUE+yKKDMa+dOj52ogotjOcuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1797\"},\"selection_policy\":{\"id\":\"1798\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"f9c258e5-96f0-4e08-83bc-084035f1beb7\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"92ac0e7f-6d30-4b33-b6b5-1a8b8afd3046\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 86.41, p-value = 8.80e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"82743b62-0077-4401-8f0e-df8567630b18\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"b7ab2e65-9bbe-44ef-b1a1-fcea0a6ca46c\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2065\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"qVShrD8kWz5tj0/7bjJgPiUcco82uV4+B/MbjTOuVj7QRN4Dgo5RPicOPgFu30U+cTpM5XIEQT4toJ2rD7I0PktrfWFaNUU+cDhCPII9OD70XEk3qIU8PiFi6mZNFkA+/De4iV2JTT60pfNVna9KPu+QPD93+Gc+DfJ9GyM4cj4dqCob23B7Pry5C/IqDYE+xKfzEsGLgz6Rg1tw/KmCPmphtOYTFX8+OtdgKHBXdT7lmlR5+MRwPgGJR0OwMmk+0PQBHfHHXj6ecY4AJvZUPiy/pQ55gU4+YbvGpl1bWT7kKnLJ0mBhPsAaAKRWmFk+DiIOGtGTTD77nv002x5RPoTAjDnpVlM+UPW9wGYUVj7k4Qo0p1tZPqWpD43JHmA+3k3MRqQSZz4wASQBQLxkPg4Vr8uzBmo+Ci/loNODYT5a5hzbNSBoPq+a29vDbWU+3F0mAzOrcD562kii3KhpPhvsHA2GpnQ+X5q2HAcmjD6sb5GPIxGVPoF6tLjOhJM+xdLMm7ebjD4tgu9+RGqEPqE6RzMkL3g+dP3EsJVfbz78+2R0pn1lPhLTV2HUcF8+1GVd30aOWj60HNuq8GpRPoN/7/e6iEM+bwmA92DzMD7hAejNIRsxPvtOxBSKWS0+UYph2mq+MT5NFct5liwmPgZzUAX8uCg+70xCBsV8UD4qCOEbMRqDPgxUAhQappA+6aKiOaublT4J5BCUrGGcPnkSO4eCF6I+CaQm0bgmoj7XRWqkRtucPhVFUUnnO5k+Nb70rt9Ikz6z4uwAidiKPglMiTrqr38+LaiFAs2acD47iTgQLR5cPqfV+lDjGFk+/2w5+0D7XT6CFRDs4QRiPgckobU3VmQ+3DfuD3sUXz4Qc40L6mBuPhsvRXdBUYA+dvovPWzuij5G92ZaxgiLPkyngnmRJIk+ug2cOTilhj4mbtQC1qyDPmkY6+LOKoA+h1lrQYuMeT7hrMEwqfR0Piysfte3TnE+fiXWHmX5aj7C8W4LcLRkPtJ8HBXAul4+lmn0gSGKVT5hW9SDkqdSPmJWTU2GolE+rBisVbkKRD5TXcl3J/dNPu0+LvR2LUs+5XC75UEDRT4gcZUFFcw4Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2023\"},\"selection_policy\":{\"id\":\"2024\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"2023\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=86.41, p-value=8.80e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1999\"},\"selection_policy\":{\"id\":\"2000\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1999\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.01, C/O= 1.29, [M/H]= -0.33, T= 819.59, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"Q0y72NcCUz6BOcfEaUVWPrKNULEPLFQ+33OCiEAYSz48ks9CYu9DPtxye+sOuTY+ExqpAu6qMD4zU7b9hXQiPnHPVNHnlDU+q6ClaSJNJT4Ol7tkVH8pPs4667xK+yw+4RIV8Q6PPT6UEW4Ka/86PpNE5wiMpVw+EoWQ/qbDZj7sLbHffi5yPr7GU8NnUXc+8Zk2MMAcez5e/jeM/s55Pt5kerhk8XQ+Wq/GLaSUaz6DJN0PdjRlPpLzVG9bb2A+nmWLnHSlUj4bY4tZYH1IPtf/uB6E9UA+xIh5g64vTT4Sc4k5WgNWPm6kGJLQhFA+XNkTdjolQj6g4SVv6z9FPnoqJfHq4Ec+mVdXToccSz40eNEJpLVOPmqssU98olI+TXDYuxQqWz6B64LqFDNVPqz7A1xEglo+cE7BLThGTz7XHQc/E1VYPoBL8f9J71U+HTpdxGE2YT4evzs8kUhaPoIKnMJJ8Gc+OJfinILTgz6009iuMvGPPjunMHMkgY0+uPburdKBhD62BGGnOBx8PgLmDegbWm8+ahdS/ZtMYz4TKX2l0llaPprgl6gczFI+XZ9S+PXfUD5iAQHHCPBFPhYUXH/JwTY+FNaT4j3/IT5RiWYBFzkhPj4azP0vLxs+0+bpabU5ID4AxbDINBoVPsZrkkY5vRk+UjYrmfTFQz57ADD+m714PlvOp++cMIY+FMCJgDEGjj48mfT5/52UPkyu53SVcJs+NikHDrc0nD6cHvVLH8OWPt3GHuJBpJI+TtDzJUFAiz5pc/x7qAaCPgmClL2IdnM+b24kRdibYj6Z2ILybmFMPnY/ly83Q0g+3grdybZJTj7BYvnN8/9UPn09/SU8YVc+/1NFXGv6UT5yUjR/qw5kPkTPXkUgNnc+PEr/IqPHgz7gb7jg1yeEPmn7AZ2U7YI+Dy850pL5gD4+jGebW+98PoA+1xyiS3c+5+IWsN41cj67XRo2685tPkGV78IxgGg+XMkXshX9Yj6gUx0CUeVcPlTJ+rvGOFU++39iRAefTD70OqGMTKNIPg5+x/OooEc+Xr5LZyhfOT7XmNAfg5pEPsaIgsyhaUI+vjJQT3TBOz5mQtBlOwUvPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"iK5DwNOiYT4agjsUKUJlPkzVybYuo2Q+Hqz21UbQXz6CwFTmUiVZPnAxX0YqMVA+2OdDyW6zST5gCzAs7hRAPt5uUNpAoE8+RdDYoTnqQj4wdxoe0yVGPo71mR7I7Ug+RPNyzZklVj5PIViTwu9TPsq/Aj0Uz3A+kaGzt3IOeT4nEVKrm1mCPhmQbQKicYY+kALMDSKJiT7zB5uaeWyIPvsud4phnIQ+x1beOY7kfD6Io7rqte92PjgPnYsC+3A+AUK8zjZ1ZT6uMVfUm61dPkA/Sf+2BlY+MFnoBXIPYj4/nB92+L9nPonI81ruVWE+YDUE3zOBUz4mTWiywJ1XPsvrhvpcvVo+1D5Q2omaXj7Xg5YxPq5hPhV9RvJU7GY+yzHWFx9IcD6gjAaN9d5uPiMWrrQiZnM+eApaNhk2az7kHlsL8QpyPp6Pvrfi428+qh4eJDW7eD6y6jlTuBZzPvXS6zjnVH0+w05FzkU8kj5+dbbHrSmaPmSh0DcLSZg+aVfVRM5akj7/gS6qbMaKPiDBQzmdWIA+v/Ebske5dT5uYwuWY85tPsXiCw3GCmY+JhY040seYj63uDXy3N1XPvv0MDCRsEs+1Ce2/SLnOD4avxwbuJk5PmxIURW+jTY+OCHO//pfOz4N5J5HCeYwPhTYq7OtSTI+tf7uv48WVz4WEKo4lNWJPurAMLDlM5Y+yGUAsz00nD5rlxaXrBKiPsxNAlS6dqY+d7NJGxYzpj6Jtm/+tnmhPk3Dg7CM058+Q5Tvyp7xmD7+qO7CNNWRPgQLv9ul9IU+Ihl54q3ndz4V05dT0QVlPsoFFYUVCGM+SCrCSNNoZj6keSPxyYlpPlCpQ1jR+2w+3I3LYUUXZj7XSfNLlFl0PpT22styB4U+WFWwq5oKkT5Wvwpq2vSQPi9TA1aOW48+Zez+oN1QjD4tFvU3/uGIPpKRarfMr4Q+FOhf6ZtxgD7kKnbG3AF7PriNhc1WXXY+0EDKRdp6cT60Oc+VN/ZqPigYH7dcHmQ+LpO3Yb/EXD5IGVjBfv1YPr3ttiC4dFc+KVKyd95lSz7oEOHn5alTPor67A2m+FE+a8jOo8klTD6GYCEsxgpBPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2065\"},\"selection_policy\":{\"id\":\"2066\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1993\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1995\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"5NJDAwobWD5viFbHM51cPqdXGSKWyFo+wMduUiZFUz4wRzXRGHJNPpMBFYSh8kE+FekR9b6MOz60iQHP0GkwPkaiXyCEUUE+quTFW3MqMz4m/5+T2KE2PjXecuU1kjk+o/6/urIGSD74ZU/fB8NFPhhM8X1EXmQ+KKfE3B5Vbz6vjdixv/t3Pjhk7iFjE34+HtKdXi5PgT7iZuAiZ4OAPi3BqlLVS3s+HfVqppmFcj45vIQ16+5sPgTt68sD7WU+RVos9vU/Wj7+bUJR6LRRPsUtkDuEckk+TN5olm9WVT7Ki7ZtfP9dPstK7224NFY+riUBSpquSD61SQRR12NNPhyB+86Ck1A+mDw095PlUj7RSzsnbJ9VPtBrvsH3KFs+B/F86GmHYz6Hhx+kXvNgPoZWvkTTQWU+EMsxv9zJWz5JjxWF9qhjPiU7nAm9hWE+mm1Kx/hQaz4qa0mwQPxkPrKpR2isaHE+bZDjvHoKiT706McEBCqTPmVUVu0pvZE+ozMZ+E+ViT420ojETQqCPtRci5TUAXU+lxWdQmXdaj6FZxUexGJiPjT2xCg4uFo+t9ZEwtvwVj6+eOdf8wROPlhHtogefUA+tfE9tm32Kz7ONbx4Qd4rPkYID0Q9dyc+fpuNo4VLLD7UP0IHhtUhPj6jOF3uSyQ+l3Yc+ZQLTD6rZjciq5aAPib1WLdjJo0+FtajSCUlkz7Rnp/hdnuZPk/O0kaWdaA+ICU7s7yjoD43S8F5tJSaPtNYZ965xZY+WFbkJecrkT5w1ZEWbo2HPrYmeIxiH3s+RtoLeubBaz6YjirHz+pWPmc2WMhyQVQ+zHABvuhwWD5eQh+qOGxePro4LU+lG2E+0chyug0wWj7Ot6qzSIZqPsGq1UG2HX0+D8bX1stCiD6rO55vO3eIPunfHdJ70oY+c1MlgyqHhD5LumPmBruBPoSgiZKP9Xw+Y1qdGAnPdj7p7hz3LbJyPiFQ0vKY1m4+rr5YeQn+Zz6cIRfKUl5iPnDwd7XjLVs+QZ39aBnXUj4efmS370lQPgaI3FEn7E4+HHufyYtLQT4COwu9O3hKPkGryZGa50c+rrNwRThZQj6Ix81ZUlQ1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"btb+VXUtXj6j2vMSRBZiPlFwZX7rVGE+Th7Jx0AXWj4I5iGf92NUPrsaZ346zEk+V4APUIZCRD6mtjmITvo4PlA0m6IwGUk+Noy+HJFQPT5hXXntuzRBPidVG9t/Y0M+qjhYLASGUT5w5ZfMMpxPPsbVhwCqkms+hpCZyLbFdD6LwnyE9uV+PlxBIFOkEIM+an1Jx1PIhT5AoNa9kdCEPtMAXz0pb4E+V7lWqkYpeD6u1+ZXexJzPv4ko7pceGw+rcfrIfanYT4+ddqvYzdYPkmo3fA2yFE+dpgkt0tgXT7jDwlc58FjPrXqENr0+1w+N48N9YM8UD4cGXnByotTPuz/HaRPGlY+CK5HijlDWT73d9pA4hddPmIdQDkXqWI+taobpd6daj7ZeiheIYVoPpbTn1KUy24+jHgx4rgiZT5rPSQxdZdsPjn6Gq7KVWk+64Snoumtcz7KSUiUeFVuPoQu8rFf5Hc+UaSJfJNBjz5k9loaQ/iWPp2gEoRzTJU+53GAPx+ijz4kMlY5O8qGPm4YA9JzXHs+qXJ2D+PwcT5zkLTKiJhoPvhX9Uy4FGI+8fR1/LErXj4JfcKlZ9NTPq63KGdXlEY+AxrhE4vrMz7b6HHfIkc0PtjKvHLrnTE+40b84hJXNT7G6lPspoMqPs5CaK0JJi0+kl72j7/zUj6pqYoVt52FPoUtWEwCuZI+vG+hKjESmD5BKYJG4kefPqNWo8duuaM+8iIS77Spoz53QBPP2CGfPlcxO7QUsps+EiYFONhllT7270froyOOPq44TfQ4III+N2MFyKZUcz7vQaMsxahgPud0ndlT8F0+mbQ4nMzCYT7ViRCDp9NkPlQPFRzKkGc+dNO0MnT8YT4pF7ixxR1xPtWIn82nE4I+3S6IowyajT7hsi9FUZqNPq9u5yCndos+AcgS8EXDiD4BIkUfpZ6FPpBgkfzV2oE+q1g5ag1KfD7ZamZqJDd3PkcwlDUjMnM+ToxTxMD0bT7owcZMjQpnPpqEYDrOI2E+6zXrmik9WD6kOERQNQVVPsForPH4zlM+PLa44ebJRj7Sv0OZCbtQPpnSklZTc04+HC4GhkutRz64Gl2x10M8Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2043\"},\"selection_policy\":{\"id\":\"2044\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{\"ticker\":null},\"id\":\"1996\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1998\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1996\"},\"major_label_policy\":{\"id\":\"1998\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1993\"},\"major_label_policy\":{\"id\":\"1995\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"2043\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"b7ab2e65-9bbe-44ef-b1a1-fcea0a6ca46c\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"82743b62-0077-4401-8f0e-df8567630b18\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:57.603197Z",
     "iopub.status.busy": "2023-11-28T22:09:57.602544Z",
     "iopub.status.idle": "2023-11-28T22:09:57.607647Z",
     "shell.execute_reply": "2023-11-28T22:09:57.607975Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 86.41, p-value = 8.80e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(86.41, '8.80e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:57.616013Z",
     "iopub.status.busy": "2023-11-28T22:09:57.615484Z",
     "iopub.status.idle": "2023-11-28T22:09:57.617634Z",
     "shell.execute_reply": "2023-11-28T22:09:57.617956Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:57.621308Z",
     "iopub.status.busy": "2023-11-28T22:09:57.620791Z",
     "iopub.status.idle": "2023-11-28T22:09:57.623820Z",
     "shell.execute_reply": "2023-11-28T22:09:57.624227Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:09:57.627732Z",
     "iopub.status.busy": "2023-11-28T22:09:57.627248Z",
     "iopub.status.idle": "2023-11-28T22:10:06.550076Z",
     "shell.execute_reply": "2023-11-28T22:10:06.550417Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.570425Z",
     "iopub.status.busy": "2023-11-28T22:10:06.569895Z",
     "iopub.status.idle": "2023-11-28T22:10:06.572541Z",
     "shell.execute_reply": "2023-11-28T22:10:06.573343Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>212.790000</td>\n",
       "      <td>0.433829</td>\n",
       "      <td>5.029226</td>\n",
       "      <td>813.426389</td>\n",
       "      <td>1.382072</td>\n",
       "      <td>-0.355403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>194.755328</td>\n",
       "      <td>0.526757</td>\n",
       "      <td>0.110122</td>\n",
       "      <td>31.481079</td>\n",
       "      <td>0.136233</td>\n",
       "      <td>0.032636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>25.210000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.799867</td>\n",
       "      <td>765.712524</td>\n",
       "      <td>1.210143</td>\n",
       "      <td>-0.384851</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>49.415000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.011594</td>\n",
       "      <td>805.384928</td>\n",
       "      <td>1.294594</td>\n",
       "      <td>-0.383365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>128.220000</td>\n",
       "      <td>0.046800</td>\n",
       "      <td>5.069672</td>\n",
       "      <td>812.951681</td>\n",
       "      <td>1.383960</td>\n",
       "      <td>-0.373751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>379.445000</td>\n",
       "      <td>0.995000</td>\n",
       "      <td>5.090953</td>\n",
       "      <td>815.970154</td>\n",
       "      <td>1.465089</td>\n",
       "      <td>-0.322160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>478.380000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.129950</td>\n",
       "      <td>872.610352</td>\n",
       "      <td>1.561037</td>\n",
       "      <td>-0.318166</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000    7.000000  7.000000  7.000000     7.000000   7.000000   \n",
       "mean   0.810000  212.790000  0.433829  5.029226   813.426389   1.382072   \n",
       "std    0.144016  194.755328  0.526757  0.110122    31.481079   0.136233   \n",
       "min    0.610000   25.210000  0.000000  4.799867   765.712524   1.210143   \n",
       "25%    0.710000   49.415000  0.000000  5.011594   805.384928   1.294594   \n",
       "50%    0.810000  128.220000  0.046800  5.069672   812.951681   1.383960   \n",
       "75%    0.910000  379.445000  0.995000  5.090953   815.970154   1.465089   \n",
       "max    1.010000  478.380000  1.000000  5.129950   872.610352   1.561037   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.355403  \n",
       "std       0.032636  \n",
       "min      -0.384851  \n",
       "25%      -0.383365  \n",
       "50%      -0.373751  \n",
       "75%      -0.322160  \n",
       "max      -0.318166  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.582839Z",
     "iopub.status.busy": "2023-11-28T22:10:06.581852Z",
     "iopub.status.idle": "2023-11-28T22:10:06.584939Z",
     "shell.execute_reply": "2023-11-28T22:10:06.585280Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>128.22</td>\n",
       "      <td>0.0468</td>\n",
       "      <td>5.129950</td>\n",
       "      <td>814.262044</td>\n",
       "      <td>1.383960</td>\n",
       "      <td>-0.325734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>72.39</td>\n",
       "      <td>0.9900</td>\n",
       "      <td>5.069672</td>\n",
       "      <td>802.330139</td>\n",
       "      <td>1.389018</td>\n",
       "      <td>-0.383903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>26.44</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>5.018910</td>\n",
       "      <td>812.951681</td>\n",
       "      <td>1.561037</td>\n",
       "      <td>-0.382828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>428.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5.094483</td>\n",
       "      <td>817.678263</td>\n",
       "      <td>1.362060</td>\n",
       "      <td>-0.318166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>330.89</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5.004279</td>\n",
       "      <td>872.610352</td>\n",
       "      <td>1.227128</td>\n",
       "      <td>-0.318586</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square  p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000      128.22   0.0468  5.129950   814.262044   1.383960   \n",
       "1  0.676667       72.39   0.9900  5.069672   802.330139   1.389018   \n",
       "2  0.743333       26.44   1.0000  5.018910   812.951681   1.561037   \n",
       "3  0.810000      428.00   0.0000  5.094483   817.678263   1.362060   \n",
       "4  0.876667      330.89   0.0000  5.004279   872.610352   1.227128   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.325734  \n",
       "1    -0.383903  \n",
       "2    -0.382828  \n",
       "3    -0.318166  \n",
       "4    -0.318586  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.625128Z",
     "iopub.status.busy": "2023-11-28T22:10:06.624260Z",
     "iopub.status.idle": "2023-11-28T22:10:06.628014Z",
     "shell.execute_reply": "2023-11-28T22:10:06.627662Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"a8a14991-c397-4cbe-b017-561879fb8c0a\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"4e3c1e52-6a64-4952-b8a7-4d45e196affe\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2297\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"hutRuB6F4z+oDXTaQKflP8ovlvxiyec/MJb8Yskv7j8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]},\"y\":{\"__ndarray__\":\"16NwPQoHYEApXI/C9RhSQHE9CtejcDpA9ihcj8I1OUA=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[4]}},\"selected\":{\"id\":\"2298\"},\"selection_policy\":{\"id\":\"2299\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2294\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2295\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2295\"},\"major_label_policy\":{\"id\":\"2297\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2292\"},\"major_label_policy\":{\"id\":\"2294\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2298\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"2292\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"4e3c1e52-6a64-4952-b8a7-4d45e196affe\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"a8a14991-c397-4cbe-b017-561879fb8c0a\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.632230Z",
     "iopub.status.busy": "2023-11-28T22:10:06.631639Z",
     "iopub.status.idle": "2023-11-28T22:10:06.633590Z",
     "shell.execute_reply": "2023-11-28T22:10:06.633915Z"
    }
   },
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.638397Z",
     "iopub.status.busy": "2023-11-28T22:10:06.637761Z",
     "iopub.status.idle": "2023-11-28T22:10:06.639759Z",
     "shell.execute_reply": "2023-11-28T22:10:06.640084Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.643777Z",
     "iopub.status.busy": "2023-11-28T22:10:06.643047Z",
     "iopub.status.idle": "2023-11-28T22:10:06.708201Z",
     "shell.execute_reply": "2023-11-28T22:10:06.708536Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f150abf0-92c3-4750-82a0-eccc75940547\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"7d1e3a2d-34d8-4a66-bbea-d8724a277c69\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2650\"},\"selection_policy\":{\"id\":\"2651\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2512\"},\"selection_policy\":{\"id\":\"2513\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2506\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{\"ticker\":null},\"id\":\"2509\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2508\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2650\",\"type\":\"Selection\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2511\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2506\"},\"major_label_policy\":{\"id\":\"2508\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2512\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2509\"},\"major_label_policy\":{\"id\":\"2511\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"UnionRenderers\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"7d1e3a2d-34d8-4a66-bbea-d8724a277c69\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"f150abf0-92c3-4750-82a0-eccc75940547\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.731296Z",
     "iopub.status.busy": "2023-11-28T22:10:06.730466Z",
     "iopub.status.idle": "2023-11-28T22:10:06.770645Z",
     "shell.execute_reply": "2023-11-28T22:10:06.771041Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.783835Z",
     "iopub.status.busy": "2023-11-28T22:10:06.783193Z",
     "iopub.status.idle": "2023-11-28T22:10:06.785469Z",
     "shell.execute_reply": "2023-11-28T22:10:06.785934Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:06.800912Z",
     "iopub.status.busy": "2023-11-28T22:10:06.788951Z",
     "iopub.status.idle": "2023-11-28T22:10:19.612813Z",
     "shell.execute_reply": "2023-11-28T22:10:19.613207Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.1184629221757254,\n",
      "    'gravity': 4.673614454269409,\n",
      "    'metallicity': 0.8364852925141653,\n",
      "    'temperature': 936.3563130696615}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.673614   1.118463   0.836485   936.356313\n",
      "std     0.192046   0.173836   0.097667    47.305719\n",
      "min     4.329649   0.903499   0.659681   785.908386\n",
      "25%     4.559331   0.991262   0.761532   911.270569\n",
      "50%     4.666154   1.111463   0.826492   938.874084\n",
      "75%     4.803601   1.159680   0.888646   964.329666\n",
      "max     5.078780   1.545974   1.047284  1029.495605\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f47729e1-7e19-4878-8c82-22fb27551b70\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"c5616e6d-43a4-41db-ae00-bc1a2ad5a36e\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LPqxFpPFQD4ZRs88ED84PrDoFX+n+UI+duUm+mxXRT73gPRHfHU5Pvkqf1TnhEo+FWiXiftBRj6OzUZLMJhKPkeZ+tlDTFA+Ax4To0WMUz69fqA9P+JaPr1of2ZZF2I+AYGTY2CyZz4PRyY4ea5uPtfP8NKlO3M+Wa6zp1zFdz5oFPxLbsR8Phydb7jNXIA+yVX3vN7SgT49IZAp1VGBPrOZg9GRanQ+c/Hcb0pDYz5B+ht+Z7xRPqYszLxUb1I+ni8Om3gdTD7VZbfCHoJEPvTVAy5LCUM+mVPyD62aST4zziFTOkpZPheDMX3U9Gg+vIIb+3MqdT4xmorV86eAPtDQuIE5pYY++e3o+dfrjT5+sJPimDySPkcYU/BVHpM+GCIVUa+cjz6D44RxnkSJPqzN63GnOYA+WBXozaXUcz4xzuH5LypRPm/I+lmM4T0+oUc5227VSz70uV2izCxDPtFGLDbwy10+0KiqeV1zTj7rX8gfGcVKPoUOjESiZz8++zqYjanOTz4EcNQWrCpcPvWFljn5El0+erryq4OTZD6aKISrBn5vPtqi2blX0HU+VTWr6kj/gT7ISLbE3/eGPvyp/SnTYI8+ddHykMGgkT7iTk75gk+GPu1I7BPqA3A+AImzodnAWj44673Ws/xjPneXeoybgVo+wRPzMt+kWj4wsSmOFPtTPoT7R7fHdGI+E65JN9L3YD6pUlNkW8hfPq9CTEztImU+A3ITJR27Vj5PRr2UWodcPmFLw21+U1k+VSpE0DPiez4aQI0GtgF0PufBZ2V1F30+hqO31ELCbj5VjRg1vGZzPlLSLlzLw2A+Lm0Jp4BXZT5K5ywCCNhuPrJaIzseH3I+pBH6j9CFez4q5hCpFBCEPmjUwNDAwIo+uRzFzS3+iz5OxqOWwMWLPlFpbIljGYY+uIwXeipMgT7tIZmcHgR3PvB1EGNfsXQ+OkbOjrGuXD6TEnsem6lgPkEOKjC+KFQ+YTIRN3CsTD7ZzAOI4R5YPtu2QJFNj1g+b/hZBO0RUT55VA0J7xRTPmjM9qYvYlU+djJgyxH8Xj6YVOKNzrlwPkQmtWcXnmw+8uT/QS9jiD5WVMyaGD6RPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3049\"},\"selection_policy\":{\"id\":\"3050\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8oTKKlpAQD4MzFDO+EI9PqvhcjqXZkE+xKYvpvgBRT7zD5DLkUA5PpfhKn4aREo+dNp7OY6QST4CaQpIf55KPgZabn23xFA+d7YajwIwVT7jvbEvs2JbPgozS1ECIWE+JO7FlWDYZT7XDJ5qh55uPgh6jtcNUnM+0f0mF1/Kdz7OBR0BQCN8PneD+T5vSoA+3JDKi24wgj5aqojh5kaBPk4oY2E5HXQ+moVUbtwxYj5Db27wiAFSPrnxpqgjU1A+oq4A+01XSz7sO5jESZNBPnWovGglMUM+LRSHzDacSj4sNxT3Cl1ZPiYwFEZdqGg+N4NDNdmGdD5xnTcUb1eAPoZrsyG3f4Y+MF0r1mzhjT62Ux+SQ1aSPphbJUBmZ5M+IKJPVPBNkD4XzNJopWSJPhBbIoFSKoA+OVkQm9Uucz5GvxNsOMRNPrRgdp3FVzI+Ymp5sszwUD5+5llvxX5NPoItHoQgA1M+StdiUN+6Uz7HYMsy8T9OPhkCZ9jHBUQ+6iHxPS7vTT6AmA9UVopXPlCxo11dMmA+KfNojfl0ZT7QarE4eftuPhM82SP2dXY+pjP8j+IJgT7344zIcc6HPkxZQ7Jmq48+0cQR27FukT6WHCVGWNWGPgOmyPKrVnA+gL00blQXWD6kOQY89ZhnPhskNhQYP18+ZoZQLlLgWT6yJLEt63FUPgdl4qTMn2A+qgitQMS2YT4WwyBuVANfPv4sJkyy6WE+DKAXhVBZYD4KTJq9pexdPmFycpzXvVk+gU38FRF1cD7yvSw7OlVsPuql890UV3s+4z5olnjzdj4N6abHeodxPhPhyjWqG1s+SXAWa9pcZT75NvEhZuBxPi4aUAltrXM+fXOePS/Rej6y4WYrwyuEPqdBxMhKL4k+qS+mBt2iiz69kTtlCieLPgrZ5f4buoY+CXBm615KgT4aqgwYrNN4PvwpL3rtF3U+o/lGrzEWWT6IrQAtRUddPoT2WCN1pk4+smdNVUaCTD7jg/JRKipRPvpUbdnr4Fc+dpNYsZlTUD5nnHSDoDFgPj6OnkeBaVg+GFiZ7VC1Zj55HVRj4JNlPtIJYwDnHW4+9S/MN9+viD7+WtKw6A+QPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3043\"},\"selection_policy\":{\"id\":\"3044\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2rdnzgmFPz6ARI1kAes6Ph7N0aXAdUA+WU6gt/tzQj4UPt0mH/hBPlWYILa/p0g+cIeDOrcvSz5pZQG5WHFLPsETyuw6elA+nwWaEtjmUz5H/ufJjRtcPq8e5Vmk0WE+99zmz085Zz4VxJVUcZ5vPhsiklWVWXM+ghibK/KNeD5BD3lrPTp8PtxX8tEtVIA+bSuYbHHngT5zwiA1n2OBPosPR35iZHQ+ByucOYvfYT4t/ANjOqtRPhsely/zbFQ+4uAbXtvbSj7yiQg3CwtFPicIAHbx5Uc+OHubL38KST6ZXiNRwnlZPr7f4nHHeGg+RBCVUQf+dD5tZdcwzMKAPupiOK1RhYY+S17Mpo7ajT77lNCgWkSSPt6EoU7ZPZM+Y0TEz023jz6LTx8BTceIPmXwwNVVAoE+HvplGnSXcz6zrHrH0OpRPgtbm7KFIzc+HLPe3aYhRD6gV6boKohQPjZMEtRUCVM+h8PmVR2+UT6nCIbRo95TPr7FQ2BEeUk+/gsGx4BPUz6HXtO00P1aPiPRwFc1J14+BcSBuATsYz4kcEBWLwBtPpBGWpbJMXU+EKki4os5gT5TtjPPuduHPgILjDoY9I8+02+OjLyJkT7mRN+qO9OGPs4U+6AyV24+QRzYKi+KWT5CYx4+zGtjPrIQZ0gchl0+HmG6ZsuGXT5Fss0u51pWPgseF8D5omM++cz9jx5SXj5KEck5Zr5ZPuNRGGBXh2A+fwIxed6qYT7vUFxNFQlXPvrx5Qa6VVw+eLYHsFe5fD5kPuW2z3VyPszKyod4kY4+kk+uId9EdD566bXXzFdzPuMByaMDQFg+g4DeLYTBaj7ZWahiP7RsPj1eNA4laHQ+O+IEfNK0ez7pbkiAIM2FPk+jbEVgnIo+rTqg4ezziz4KAZMlEvSLPuFnpT+16IY+WzXjD4ysgT5noBal+VF4PrX4JLLv93U+a+7tptI7XT5Bkl+fE1FdPhjGZ9a9I1E+XKNFbv75SD5WOzsWFZpSPiCqGEeqsVY+ZxLjhOogUD7Uo0Cn9mFSPsI96lP/RGE+y98HTQ/hZj7gUB3pfFJtPnT4ev68WXM+LjH3jYg4ij5WJlKxJJ+WPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3037\"},\"selection_policy\":{\"id\":\"3038\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zKqORwFSPz40mLU5sQo8PtIveXXGZT8+cAB09nsJRD4wd8Axc8A3PuOseUqlSkc+Xow84l0BSD4RG2TbanBLPhuSPzNghU4+Sh33tgPzUj6eObAr+eNaPr/NllpHwmA+7L1T2+EcZj4pI4Xyjq9uPrVxLGPS3HM+asfKZNa4dz6RXUglEW18Psazqi/UPYA+m/RBsejegT5mxc+5WzqBPnUVgsly23M+fTiHIPVwYj41S9vFIXtSPisMCNBN1VI+03zVUD1QSj5Hhp/609VDPujJOEP8j0Q+lfkfcLMnTT4OPXLn5+JZPpf/tvFntGc+jcxtv8PBdD5AbBOHSj6APoWRsgSbSIY+CD/1wOuujT4x1HpvTGiSPut6nfR2VpM+lnxFOpeajz6oLKXxDzqJPutXJT4KOYA+SOiDt3gKdD6RiGzfXKRQPsBjRd0wZCo+L799aS/rTD505jJ/3mdDPmTC2IiQZlQ+TeakCOrqRT4AlFnbCdZJPuCKfigbw0A+q2SyCFfKSj4IAeZLZGBdPiR10T5gplo+nahmy8u8Yz620DCITU5tPiy+OKavhXY+xYKSJFbzgD6eP97vzDSIPoVLzzcMoI8+C2zkUwAdkT5vdJ4GryaIPhCRmwe8YHE+hJoGuUYeWD5frEfOR41kPqpvhe/xgF0+U/UfO/GUWz7ySIzUvs5VPvSt4/E3wGE+DFAALSfYXz5+/Ej8/DZXPvi1fbxI2mE+A3O+HU/5Vz6QH8jxCO9kPq/7lo2+U18+uZeH/OwqhD5eLAQY4YxvPjAyFT40UHg+tZ9pf1NIdj6+ZH8ym8NwPlzFZHgJQ10+2+WODre0aD6MZJCalv1tPhAoaYu7M3M+O2FnevlZej7EJAle5FSEPjxvQxzbaos+5CEFwEsfiz64y5Ahi4OLPvPZWvfSOoY+/idvn/5ngj53NIVO1uF3PgscJplg1HM+mBBee6syWD4QT/j3QjJbPq71wcm3SVU+VaGNhsBdTj4gVFzt8TdUPr8JjEyJnlc+zZ0tk4kdVD4epeN9LUFYPvT5XKi5zGM+bDlNOZo9ZT4ZnWgMwX1xPnKHk53bcXE+c5XvKQGkiz7yzrM+gIqLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3035\"},\"selection_policy\":{\"id\":\"3036\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"n6FL1mQIQD4KDeROpfo6PhYXkEKgF0A+RCSxcIU+Rj5l9xerViU9PozpnGomtUk+sPsidFBUSz7ND+9egQ9KPofBltPt3FA+gO5ElFFCVD6rHTzmzndaPkk74hcj8WE+83CDy/6tZj4lNBLqRH1vPkxOx1Fyr3M+fP5xBvDcdz78AURhQi58PrmRgG13cIA+C/H5D7sKgj4vRtuHKBSBPtBpjti4SHQ+lavFFjLtYT5dv48RbnhRPjwMOXxkM1I+RL2nmiNGTj75g21f86VBPh6RN/G0/UY+tScHmKY/Sz6rkNOpBY1aPjy2RYQD8Wg+j4ICBVd3dT7a5wMnIXOAPsPV5PEM8oY+IH5qVdbPjT6oRTJsrBySPhupyybiV5M+/dDXADAFkD5wA8Iutc+IPrLN7XoF2IA+kdHnzEfhcz48H3Wp64JQPleBX8WrjDI+zluorFc2Vz5ZdkpkDARBPg40nayddlY+567k2RNBUj78l5Y2Iy5GPoVhBiBpjEQ+6kW4a6WUTz6xcGWX2BBWPgfTO88mvFs+Bq+eegHrYz4ogx3ZIeZtPoaKZZ1oXXc+aTD39oKfgT6yw4/oooSIPh+E1SrYn48+L25kwGdqkT5VzhH+GyOHPrFoYVQkf28+1S2N9cveVT7KaqsJ43pjPv+l3dLZVVw+l9nvLCVQXj55zM/rB3dbPpNP07XeK2M+g3CJ+FjEYD4XrLGhflFYPslimKtP3GQ+CAOFRrXUXT4/OH+hkcNVPsutUqLhbGI+iChdA+N2eD6Jx16z5xduPk285aBxyJo+s28EolIVdT7DYcTGP59tPpNHPPPI4Fs+3lIaTLUBaz6HW+gNXPtyPoOsYEbUoHQ+FAgZ0GZmfT6HtJuvkTmEPinrfrhfPIk+zwZL/X+/iz65CG8IvuSLPu9C/b1H+4U+Lqr34hMigz6bRcj05vZ2Pk1XbjTTznQ+uuJgJB3MWz51mrQHXJBhPj+W1DM801U+tIARiY4KST6/sISjIZlSPsXl/R6qcVY+TI5L34O6XD69kL/8w15YPpL2rpRBd2A+qDVS1y4SYD4NutOp+rxnPqVTt7y7QWo+JO08bNGwiT68VV5g2ZKEPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3079\"},\"selection_policy\":{\"id\":\"3080\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"OR4KBLUZQj6HhDypDEw8PllfYn9roT0+AItgFVv9RD4q/+iK9MM5PjeiP8IPtEc+AVyi7o6gSD78qxWq+4ZKPnsKdUCS9E8+rPWalipJVT6S5FGD0C5bPsyQpZrEqGE+cqh8DLL8ZT5tTAmvxsduPgthj79DrHM+2aGF/LThdz5oGjVV62Z8PkBusGXbaYA+Vnfui70Wgj5A2g0+hiaBPgx6yJDxL3Q+jKuaQE9oYj540dy0R71SPuVYdJAGEFE+8MTIBM/OUD4lQrHoxvg8PiZ0t1YZrUU+ycm5uHDbSD4vCxrwAC5bPsj3ZtpOkWg+KUr/whmHdD5MpufMgjaAPl++dt4fdYY+h+gMExCzjT58WGComHmSPhRanV/gR5M+uoUAIBKdjz4sJDvDH6qIPifSiSp++4A+Mt5foW8mcz5lJP3hmzNRPnkfjLtOOi4+LYMPFr4bVT5MPOykBOtIPtnJ76XOnFQ+f7WFZW3yUz4fTmItoy5KPkDL0Q0cdDM+cPcVdFQvUD7qE8g4CgBbPvN+FwvOpl0+qhvomOkcZD6rwhOUmftsPgU5T0F5LHU+9LyUNkHjgD50RMZ7beaHPi+NhItEjI8+VC45ibelkT774fFY1cmGPhR8TmKoQnA+x/IOxAVcWT4aNrXWjkxjPt4DG98y/2A+Y2s+GGXnXz6d37TcKqhZPtMmLCMebGI+Ywpc++hDYT4QxsreLvdaPpRyiaLM5WQ+lJ8zbW7aYD7eEKSBh8FXPmJkkGx2kUk+XueXRgrQgT6rJd/OPJh3PllDt54KE4U+GMyKX3fPbD4U1bUys/poPr5QHIxIXVA+Mp+0AUIZZT4XSNA0XXBtPmG9IhtMbXQ+8ngVobKGfD7ZJEgTY7qDPtdDWwl/c4k+6KzUv1Iyiz508TMi7S6LPg898bv7EoY+l1Wk0rwtgj48F9LWpRp2PvPTXhzyf3U+lqv+jA40YD5IqyCJ1UVfPo22ndlLxlQ+cDxmDb4XQD7YiUgHq6RTPsSxRfk5t08+zdnB3Dg0TT6r7H9Es6NSPgq70mHFcVg+nJkqVauMaD6c6graBF1sPiJXAun9ynU+x9F80Lm5gD50tuzl64yTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3041\"},\"selection_policy\":{\"id\":\"3042\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"aksvWyeBPj6PAnEZtkk+PmWT1WzW/jw+1KXDvlwIRj6OVmqV20g+PsmxKRJDUEs+UF/VntvDST7QUR778EBIPsrquyatn1A+/MhpraeXUz5YBi3wL4NaPvXTm83qW2I+WjY1Rf7FZj7eF5vDeMtvPtb4zh+uiHM+f9JwzO8+eD6cwRL2BRV8PlI/1n8BWIA+5v58kQG/gT6d1ZhcRdeAPs2IXtWqq3M+J6ryyMaKYT5SS2ZkBNJRPvW2ob/ti1M+O6S877z8RT7XBn/zwpJEPlmauKrzY0M+H1zL9JScTD5Hbh+AJ7NaPq3dQkwSGmg+572t6KXrdT6Vq0ht2EiAPu76N7KoZIY+SSAuJPT+jT6gML4NiHOSPmgjzmFsoZM+2CJGoIT+jz4B6Iny+DWJPtshXIQW3oA+f6AwHSv1cz66WWLbBFRPPoadqX1UaS0+WyaCXx45VT6DiKNYC2FIPlHhO2fQzlc+L3km2nSWUD5iymaCeVBJPiXvK01jBSs+Bf+aVMJnUT7ES1BjDi5XPjyOO6mpul0+iKxGcBHJYz4zIrUWQQtqPqUMdp8KZHY+6S+Q5PPjgD7i+6SHSM6HPsTN4g+tK48+xDJzLQVNkT5D8i07fD6GPhTeFhyCqG8+ngo3dtmuWT7wrbcul8ZlPixTUuvBSF8+3pU+WBo0Xj4PiPCkqNtLPpl4v5GZdV8+7fQvntfyXT5lq+LZCW9VPgpD8tjeVmY+pebAVPeEWT7wyHlYZrhZPuVq4IKiFF4+hF9Nn6/MiT7sEyVw3Pd/PsugNWX3o5o+Lxw0pAgpcD68PdTK6jZqPq/LtqkXuVo+uTjrh7EBaj4oa8OGJopwPkQYMEbPEXM+As0rQAlyez7Ge/SLlUuEPpsO4s2meoo+Dt7brWxAiz4pENQr6QGLPtGF8/L734U+36gV5m4Ngj43vWh3X/V3PhF3zmjvu3M+4LbbhACHXT4JNwvvSYRdPr0j/MEH/lY+YAX4N6Q8UD78J3j8sW5bPtLm7ePOp1U+1g3XpDcmUD5SARi0H1VUPo5KK7wQQ2A+XF7RMAxEaT5AwHh+Eb9tPn4YH43fzm4+pWXw7kw6hj4Tta5CT0mXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3081\"},\"selection_policy\":{\"id\":\"3082\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3027\"},\"major_label_policy\":{\"id\":\"3029\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"u+IxDaaCQD7mb0yNReA9Pqux0FdnxEE+9KSApgPART44kN/rERA9PoRIIcWaz0s+YRhnCobKSD6lU6KwzOVJPjFGUveTD1E+cMIgsTuAVT4JfFAu62haPlp0hlLrj2E+Q4hgzTDEZT4ieFJpTq9uPoiwTg31qHM+o+V68DSXdz4R33/agYp8PmpYrNnoaIA+14oJdvQYgj6uV+39XC2BPgSqFNUrAnQ+l5K0fFRyYz6ZNH8w+1pSPjoMQU3ZFVQ+gcF+jSSHTT7BEPPj1ENCPn1iWrwJj0A+QS1q3wi1Sj6vZW3wQBZbPtqiJzGHjWg+CgAVhdhldT7NDe2G9JGAPhnr6pybpYY+lQxr2iLJjT7v4oxL4HKSPmItGZN0oZM+CfHoWrM3kD6mf8k/BkCJPj1Y3Q2+qIA+BTtOkGaGcz5C1MaGxlRQPtLyL/ySiTg+dkRAdLLRXj7R/q4kd2dTPvQpS7dd8FA+gcv1RUByTT4fkKT6U5FIPoOwManU3T8+2jKbBkMaUD5hY8qAf7pWPnNTC8JqfFc+YiG090nhZT6ICyNl2qdtPu1xAG2sl3c+e1iLeuVKgT52OZJWP2GIPtIwpEqzGo8+oP7WictVkT4YZpdzkCOHPi+FikPK2m0+kYtVM3v/WD71Bmuw47FlPsGhfPxCJV8+2NKaXfxtWz7pEjy97ClSPlO8jpN/cWI+QD3z/sNfYD4OnTcso9JcPvSixqV2qGM+ATi6p72aXD6unKhbyrxePpy6QT13n08+i/BNFjqciT5KR0Kxfh9/Pk+FGUelDJA+mmLQ4vcscD7fV32MflJzPmX/Qv5HBV0+Q0CxXTKXbD6qRv8PlINwPp0P1cRl23M+QRHoqPX6fD72TLurp4GEPhy30WIjRog+YiNbcxWJij5N0hPwmJ+LPgct/I2mqoY+2iIBeJvjgT6ktqaq7013PgKrHo3FaHQ+mECBjk/LXj69gsKibR1fPi8iaOZSZlY+RzuFsJ5xQz68MlpzGXpbPqmQPi4EYlE+0YoYR2uLTj7V2ebMLiNZPljJ22gX7Vw+UmvcWthhaD4KGxuiSTRrPneHDY8TM20+fMRygZfxij41wqn9J2aSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3087\"},\"selection_policy\":{\"id\":\"3088\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"qAa1mEmoPz6ZjDMZrWM6PtvO3PnpfD8+EEApLUpoRT5ZhBGftTs2Pj6TKW3++kY+GnRhlmIxST4zi1YmYmNKPiyok43yr1A+JR+EF94VVD5MB3ePkrZaPtX/7Fd8zWE+sgZCV74GZz73S9u5ZgZwPnU5P+7ZOXM+T1a8wxcheD4ioAooWlZ8PjX+qj0/YIA+9tZ6kBqVgT7cdZO5YAeBPi1TnrkSCnQ+SgEuV/LxYT7c6ic/a+RRPkixUUpBYlQ+FjCGP6e3SD4WmGx4xyJCPsjTzQL5TEA+aSgSOeoVTD5vsdOZJlRaPlvxRPd1/Gc+abLWXsUedT4f/Niw+fh/PirixEqRs4Y+l67xihqejT6bO8DW5VGSPg1QsUEDEpM+1KSfAb1+jz79Fn5OM4KJPgZC7RMS5oA+EFJFSMm9cz526mEmSOlOPvYl8A6QfkA+VFyC0Qq6Vj4vgndmjbRJPgB3/Eq/3kw+dkGB6O/LTz5DmwXaeyhSPlZ7WsbO3Do+qNBQvPiBTD5j4/pFwe9XPgR9VwgnGV0+6UWCjiuYZT5ANlWsrXBqPh1pahdFAXY+LGvrt4eFgD5Sha8+o4SHPljJ/oCI5I4+4ILMaAYKkT71LrTDEIWHPjWQVvBhu3A+vMk6L7wIUT5fxC8qss9gPg+7Y1tIdF8+sD/5VrI2XT6QOF8HAQJaPlK3/rHG9GA+A0A1wwzhYD7v+AD+nehZPrisnU9PNmI+FbAG/xNLYT6c5RhqXSdTPpas3Ju/aV8+1RNxKykPdz5t8O5tlfiDPq/BgnP82Yw+SQWo+3Brcz4qz2vz9r1sPvxhRC6VIVc+NFsuqTyRZD5FBnc0yhFvPiakVtgfXHQ+Oh/292+JfD5wThPjun2EPpXT/Zo+LYk+fAsFo/Cqiz7uJFSn+veLPuNi5KZdnIY+3h9omw1egT5EZN2qV5B3PkfRwd7bvnQ+0JQ8aGFcYD7cHCPQntxkPpHSvbfnelE+rrGDXYcKRD7cp3tyuk5TPrzErZEe7Fo+3ak9gNSQVj7/Qe1OXtRbPo9Df8ao8Fg+/xr4H6ckYj6b4lDtP4NqPhJm79ahZHA+r7vBbZWRfz4rSbbNZIKSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3045\"},\"selection_policy\":{\"id\":\"3046\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"3jYBSvgXPT6V7WkjN4JAPs3afLx0BEA+oDhI2f+MRT4xnUM460Y7PkuryFLXvUw+PbrzVG2xST7l7g+l2qhJPi4M112hhEw+B1FS3WBpVD5G+2/GuUZcPvC5OmDbrmE+INxdttYsZj7Yc+B2EtpuPj/xNuv0yXM+e6XuVXjIdz41vxxjALB8PsfZgcBxQYA+t0Cm2/MTgj5v/40majCBPoGAMlOBWHQ+IB9YiCRpYj4UY8sG+ghSPgiT3PBL5lA+fPrrj8xwTz6PKKkV6fI8Po8wWHsxEEU+18rojP1WST5gbgmWVy1aPvZGQ0XMGWg+Cik8D0rtdD64TeTrtkaAPrO/N1jHXoY+3E9cdF37jT7+OHlWaoCSPu2LYKEmy5M+hriElXcwkD4J9xdGcGCJPhGZfzQCAYE+qiSZgH9jcz4Pp2OR6HdRPoBuMMhuAzY+eYxRJ7jAUD4F1HLBid9JPuz5kuCdKVE+kRbdWMsbWT7HrMWkxn1EPiqQBTfkTTk+Boj6hBOPSj7yi3YiEx1YPrQHZz3Bw1w+m55xnPanZD5NCUY8HDNsPiO8C8rXJXc+qBueDsSggD7J5BZ7MJuIPn6LNTYV6Y4+iefUTWankT6zN1xIrMGGPtS7b+mXrm8+ABGLyD1RWj7+H/4xs/hlPir7+gXkW1w+40Yx2ufyWz6SJ1aCK1FRPkpBvPjhYmM+2gvwVy7HYT7Luwu73KVYPie++6nsOWQ++aaBiBSmWT73g864tSVgPo0dv33BAWU+dCkZM7rQgT4zCTJoxeN5PjcayPHoqYs+Waktk3YheD4DTFwwznJjPosod3frjF4+xlyyH5F6az5fNdQRrX9tPqyiNd73ZnQ+YV54F2ccfT6cNq1bUHWDPmrwmGNkHYo+Kmd5xseniz4JNsof8RGMPvPJHayDI4c+ofGzUscpgj46Y7hUAbt2Pj2Z7jvvqnM+X6R+IcKrWj4u9up4Zm5kPnKUnn3soVc+pl0+nGuQSD5QJKpinC9bPtQuW8gkQlg+goptGU+YTD7zHu4d0XlXPsDkib18tVc+qOrx1G8NbT6erAhp025tPp79agx1kWs+eLq/GD9Liz5lQk3od3WXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3083\"},\"selection_policy\":{\"id\":\"3084\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3030\"},\"major_label_policy\":{\"id\":\"3032\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9HeluT3qPD53ryjAog84Po+ac2JrGjs+pNJdiIEPRz7Mp6Vu0Pw5PrjvsAh5WEc+NTp/779ORz7X+WCxi6ZJPvgrSHawlE8+c/nYEYhLVD7TSo0py1JcPliG9RUHWWE+VplFit52Zj73DhY4VQ9wPhKONrVpQHQ+UVM9qeqydz6qELAsBaB8Pmd+iVINYYA+IYKlF/Uhgj5zDb6S05mBPl5EEK7AoHQ+unWSvFlTYj5Nm2bDiqxRPlmUDhOI408+GJhWX6SDTT7j8dCWly1IPiiClM9UF0M+spOOIOyESD7NkomRERJcPsC9OaNR8Wg+eqjqAB3bdD6QH6wy01uAPhWXL+APrIY+I/F6VRABjj6MUpilFnySPuJTJ9ezY5M+e9LbnWZRjz41UnZZ9xSJPj/mK0/z1IA++yjuKLoIdD6zEWvHPNpPPi7wqU2WgzE+7GESiNxuRz63ZyK3ynFHPkkop3NCb1A+viajyYlaTT7t/izqkiFMPo4J8evMXDc+lf+HmlWrUT5F343N8A1aPjXD9g108Vs+zcvxDQ9cYj6+Y0xaSehrPrCaJA2os3U+R/hEoIM3gT4y5tbQchyIPq/fFWty7Y4+mGd7HsaikT6fDucV36GGPrzvCKYxDHE++LXvpBHVWD5Drr4UeDVhPhqfLd64H18+qRH+jifuWj4l0FdWt11QPk18V4g1q18+OJzMmcNyYT58ZRgb3cpYPqJLXw2qxmQ+FSb5D2sxWz5bK3+AxoVfPpc1tds20Fw+qwoDuDb8jT50proeFwJ3PuoXfRcdX3U+yN9pjGLvcT7BIdyImphzPgUY4eJ6f1w+s4s/BVKRYz70kgkwHoNxPn6/76c9nXU+uAUImHQufT6YmKs4ETKEPllOmST3hok+bqTt5xjEij5GiLd8aseLPhYNrn8AmYY+wWSqIvZUgj7LYdlNN0h5PubzPBP6mHM+jztqqFd5WD7XBCM4hyphPmKAPweYd1Q+bsRp+fVTSj4MrWflVrpVPowkICJHY1o+/TgpyKSkUz5LFm6zQOtQPpOXIeh7U2E+++/ryAQ6cj7WT+7Zz1ByPgaR/NZ2XWs+Zxkd7/Whiz428f9Rv0+QPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3033\"},\"selection_policy\":{\"id\":\"3034\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"vRv3akRDQT6CDKumW1I5Pv7KS5Ke6UA+fbHLTZjzRT4RdZ8A9uA9Psg+yZHFJEs+Px3njzaOSj78xnXMMDtIPlnRjIHoWFA+faalmIukUz6dtABxWbdaPix9TrY6z2A+xOO4GZyhZT4K/GdPK+9tPseTzFWZB3Q+Gmps9/34dz7X6ebYKWN8Prj974GNN4A+ti4g2GMmgj7Ffftvy2GBPgybh55cgXQ+nxfg8Eq5Yj4k4TgVIxZSPhRioWYlFVI+6a5VT4igSj4eoxEiUdpCPpO+JIpEqEo+booS7xz/Sj4uFD4D4SpZPia63bANQmk+sPVe9GjEdT4l2DHt1CaAPvOrxigDfoY+snGrS0gPjj4MGWtipaqSPkQE5bL0PJM+BWkusL+cjz4PakrQbpaIPlntlRT/3YA+KgNhqtR2cz4mVh+K15RRPpyudCtxHDA+w4+Fj+pqXD6XCwC6ENtIPjXomac1hVs+NCcWkNElVj5zyZ7xk4NKPlN0YR2VaT4+1iQGQLUJRD5p2JWtLftUPl8+g3srK1k+0H4macvHYz4kUKUPFetrPtJgfftIVnU+X05JEr+ZgT7tO18khfyHPhLaeOi1O5A+NnZrHXaOkT5PcLeSS3+GPo/7Csc7OXE+HUb26e2zVT6LpSMJ+CxhPnYmi3vV0V8+e8tSNdlBYD4BDvvsPG5PPoRqpbTFY10+s9l48uLZYD5xCa7XyYBaPqMzg5finWM+7cb1mdkKXj79iVAVaP1XPk2O6pnQBmI+VD2q9cDGcj6u2qwFcZ9rPt9rbcl6GIs+xMU3jgK+dj5mydGkjuF1Ps6VFeCRdmE+JJcDs6azZD7eWfCcAGdvPvCK8MOQ9HU+nYFl0EHlfD7ch+GHQJKEPoNm1uyOg4k+fG2xuetriz7rDDqUtNCLPuI/7QQZmYU+4D24Fc4Egj7MekGzRmB3Pt2Nb7IPA3I+XTU5VSZRXT5DXRy9voxfPjNCEoywgFA+MOe0tlTXUj7TpWPGmoJYPi98CyxFRlM+Ncv37haSUD6RVOI3Zi5WPknZ7MIy0FY+FT5Wo29qZz7V+Duz6QZxPtpG60jHC3I++GikcfiwjT6Mo2HjigOMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3039\"},\"selection_policy\":{\"id\":\"3040\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nb/UhUShOD4NxFHcVfs/PmiIj1EQRT4+eOicXWYPRT5AFFZPA/VBPmO+G9949Uw+ELglXwHKSz66M8LPcKdKPvDJXnCIdFA+fUvrfN+UUj4zMnmrWQNcPpAD9J4x8WA+ViVKwETuZj53x2jUxcpvPrUmHk8DTXM+eQVYJpV8eD5AS/CT/nR8Pmnqzh+FV4A+G1nyOO3tgT55EKGlASyBPpoeTTadLXQ+1VIZhSNWYz40DSMBgixSPuaUn8WL5U8+B8apMKPJST7TUrk/aEc4PlPXRyQYxkE+cb0RBRWLSz6vAzPbhF1ZPm5g/VfcJ2g+YUJZUUR7dT6MFsFAyziAPkd9RrLXnYY+YVylgcmVjj6N+3soikKSPsJmdCy5mZM+ze+14w0FkD4iZbOZZSuJPomf3yAtJ4E+sFBLkTz0cz4yaNfq/GVNPlcSCtVsxDU+wJjKrTYdXT7IC4BpOF5PPkNQi1yAzU0+MLl2oBcbQz6EI9NY7/1PPr7UZdDmNzY+ga7qQnXhTD58PYd+sANTPrDVYO5Un1o+6s7oZn8MYj5Pbdstdj5sPjHGGO6hsHY+Yc04eVlmgT6YOzBOaviHPnpgclS5Eo8+mPzNmc+jkT5sKJ07oiqHPjTD8K1QZnA+jZ1MC6rkVz484yh7O4JjPvDylDg5AV0+lgxKHLigXD7tvUh8rRdaPj/9X2UkYWE+g+lOi0j7YT4gz9lVxthZPn48P046gmE+hWr4KIBQYD4t9DtUG+JdPrUQm32Lz1U+CrjHCKyKgT6T4fN480pyPn9oEmbo13s+O+cf0UMpdj5LriUoJ8RuPs+0q00vs10+Ej4xrXgiZj6U7lQ4JqNwPrmr3IO5gHM+QmB4L+ddfD6zy0jPCamDPlWcM1PSdoo+7jPJSeHUij5w+mVrV7KLPm9B0wOVLYc+Ty/rmt6ygT4cWdYWsPR2PnIIROBkVnM++8a8ln3DXz6ChzUa2SZiPuvCuXd2zVU+kNlbCTZ4RD5CpZ8yJjZVPmHwHnWD8Fg+q0RTHyg5Sj6l8n0KJDdOPtvhQyZLqF8+fsfFBk1zYD7URIDhlxpyPiPsRopVj3I+84irPchaiz60ZWB1a3yPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3085\"},\"selection_policy\":{\"id\":\"3086\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"DQ6SSUPHPj5Rc5tR6CVAPgRw4MgugDc+43l1So5ERj7p2yWg735APgKA/MDOf0o+c02Jj2ZBTD7l0V8IqK5LPnSV2nCFSFA+6u63am2EUz5Gklg6lfFZPivc0DqPumE+kQ2DkzpZZj41BH7aH45vPvr0Hd+hSnM+WljTEAQjeD7joWFyI8F8Ph4F7TY/RoA+EgSX2Hj9gT7KEIeWWG2BPq/prB1NNHQ+telrvP0jYj7BAeaaGN1TPt9lpES9WVI+E7xVc+u9ST6BKdldYBJEPsezOPCBukM+WPe62xllSz4YrUfVB/JYPvtOxa4OWGg+hMICjg6wdD5gDdjSkHGAPsBZhMT6pYY+F/71uU3TjT4dAK1a4UuSPhxOqGnXwpM+R/PEbGwokD56SPEfFxyJPpxMEfHndIA+5A83nxMhdD4X6tl+P1pPPloR9K192zQ+a6rcBfYNWj5NsuGCZu5SPlO59CpW8V0+CwuxuHFJRj7t2R/Wn3NJPk0eyJ6WQEA+Dt/MGzmDRj46mpxowYdbPiHlN1iyOl4+V5TdPnOrYz4hwmhnNdtrPj69i/3dIXY+pUtNzr/vgD58CL6boOmHPtwIkiVdgo8+TJ7TmN5RkT7YUTQ38BmGPlnk142v524+WtzL+LjXWT4uzzbptfNkPgV9FCWKiV0+fwy3XAjGXD48UIPRhEpWPuZ03NhIKmE+O6sr2AqWYj4LR+SAtJRZPnz3axduqWQ+JDNN7qPyWz4y1FaP76lePqe9AGRl5GA+vDkba3k/jT5+C8bjCW53Ptp27HfaipA+KtVB/9lEaT5uzgupdmBsPreRvVhmn1c+u0GV5phqaj5+fy87nZVvPmisBbyeFXI+cgqr/lZ5fD5EfdshlnKEPg9YJGAVZIo+6W8YhWmoiz5hfE/TehmLPquNXHj+TIU+0R1ZHDelgj6n7SMZqHt4PrcZkQF73XM+besCx3WkXj4VrgIIY8pgPgbSNlitflQ+2wmYbW35Rz7hQnLKQ9VbPj12hz+m3lg+HiB/dTlYWz4bhismjBNVPrDg3JySsmE+43pHBtveaT4skUcgU4VjPtiyLTCenGg+dJaZewqqhz4tgxm0moeSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3055\"},\"selection_policy\":{\"id\":\"3056\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"vRZgZ3TuPT7/Vcdn20Y/PvOv1Cs5HEE+lFrxcHXSQz4qnskp+C0+Pi6iDSed7ko+AzF9Ign4ST5Yo1e/BW1IPl6X32iR8k8+v6tkK7ThVD7U5WxGwataPoyfQEXAy2E+A85A7D4ZZz5DeHON1SBvPjLiMjt/fXM+teym+yqwdz5LqoOpNFZ8PmzjT8e4LIA+eQvYXnPtgT42sZFjFUWBPv4XSl77THQ+jKAacja5Yj71p7ahCkRSPverszkocFA+8hrc95vrSz7sxYodFhxCPvi/rVBRbkA+yPuOngYzSj6ngJTOnRdaPm8qGR/592k+EbOMwDPvdD6Zx9feGV+APlVgAuU3gYY+zqoLPW8ijj6HmR9adlSSPux8QbvaIpM+BM84EYk9kD49BZFDQxWJPqNZYXwNJoE+xHrQ5ZXgcz6lfjnNsRROPjualVKjeEI+AuEHrP6YYT49vGSfVBFSPvYkwCiBK1c+r0b1QIr8VD6t1Wkse4BRPlL4orMzyEY+ltpHK8G0Rj4L1pi3iXpZPo7owFYlL1w+4qhy265EaD5Zjof/fdlrPg/LClMeL3c+qGYvBBQsgT79znsxl1aIPvWSWq7XmI8+IgUOQRLNkT4IsLsZLsqHPsponix24XE+stNPQc7qVz4ZTouQyyVkPnD2GW2XjmA+Hr4WmSkEXz785vicmNlSPqj8I+MlRmI+DoGFAesDYj5veCSm0RBjPivJGOGMP2I+xSaPMgAuXD6bvg2G+8NePikL/AeB3F4+9Xc9pRmSdz4tbrXlh911PlgSLHjxYXs+vfZ9+XsMdD6KkTyP8/VuPmxnmbr4klk+EJA1ZJ1ZZj509Yx+S0pzPp0VrpanPHU+/DU4xo67fj5nwiScrZeDPj7VzsddoYk+lgjQOisijD7nK63u3G+LPiKRvI+hwoY+5T0cOdrigT52osNyLFF1PmuJWR87TnQ+SXrZYlQHWj79Vb5XsHpfPtUFYbN60lE+ji/Bb4ixST6tfbLVlYZdPhBJn9qcr1g+wBsVf3rPUT65Wz9rS99UPuBtnljja1g+dinJoFvdXD4HCHk0xONqPgU9uwUKrXM+uMf9PSdggz4lbtv/PQCUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3047\"},\"selection_policy\":{\"id\":\"3048\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"eOXyzzB+Pz7O/4BD5K89PtUo5U6mJ0A+NVzj2D8eRD4z3T00NPE4PlgY4HW6Tks+j1Pw09yrSj4AK6usokJKPixZP+hcQE8+hjaOOGgOVD6nP0b31+xcPsS8L9SUUmE+iH44GIQkZj4nU/A61axvPmufwQem03M+6Ko9uLyzdz5TBwabz3F8PpecXmbYXIA+GDZyY7LxgT5Fu1WjYbGBPmu67DPzN3Q+nEUHSXlqYj7dW1vWg/BTPj0muIaIalE+nHcHcXTxTj4CaIyy7AlFPkrqyFvM50U+3Z/+jXjRSj7qsL2pkd5ZPmJcQqSMLGg+7CX3brdddT4Cndm23UCAPj+6vjR5V4Y+xeM1q1l/jT4FmqvX/UaSPjnwgZT4UZM+1+QyDAEWkD5pF/XwIo6IPodbcLB2wIA+aonzOkCIcz5I0Eipr1lQPkCtuk9uzjI+3uWQQv8xXT6+BnKp2PxTPts0qLA1VVM+li5vrS3CTD5xDfZfbbFQPjEVPom0Sz8+93ah11+MTz7zR847GuFUPiB4htqCtFk+f5C77+VFZz63RJgOu7twPrRhawa25HU+S5lk5oRhgT7gphe3eC2IPi2ZKl7sTY8+cx+hwxmhkT7HKFnn7pWGPupo+GjqgXA+ZJvLP5sEWD7i+dHk5INjPhCqyiS6910+8AO2BwjWWj7MX9LhWE9RPsA/PDwZU2Q+omWNjkrdYT5Oz/tQ3mtaPjMagqJUqmQ+H5fzN9QtXz6j4trMQopiPrmVx7Sk2Vc+FnFpDMIGaz7M7QxvdVhjPvrHr0sRi5E++Yx2JLNKaD5ke2n/XTdsPnN34N44i1s+3rYgy55BbT63NOsVNdRuPnWr42bkQ3M+VubIQGU4ez4bEZBQzcyEPpbs2YppLIo+14Hghk39ij41Bvy9WwSNPtezZaCOrIY+kD1SKOe9gT52uBVRdlh2PkHC0E9Vk3Y+6EHbQ7/JVj5/gCKElapePk3gBCGoql0+0gwigmt4Rz6pHufyx9NdPpcZ+CJk9FY+USiu95VhVj4kmHqMO6dZPnV8YQsl/lg+ptC6u+Tsbj6MD+nprZ5tPrTj53JBA24+OdGJAKbhgz78QQTtS5+SPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3053\"},\"selection_policy\":{\"id\":\"3054\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"/RRFu9F4Pz7XEMtZJ5Q8PuNLYWGfj0E+s76LvhzgRj7RYw3tS8s7Pow6J7y+vEc+S9OErLhUSD7XSCVlvmpJPh/G+1l29U8+yQ4JdG2TVD45NAFElUtaPuMUQvptP2E+IeUxy92lZj5vZ3EahCRvPu8M/A83tHM++UuS8QLpdz4vx6CaRKp8PvD4MDapZIA+QYd2b1pdgj6oGE4YBFmBPsXfGc344XM+9Xz7GugUYz7Q7cGASvNSPusUb0ZWAVI+DHBdCidCSz4CX9ECYiVBPlb9ZKyGwzk+96oQQM+uSj55zTCBjT5ZPpz3PWWzMWg+IKHdJjaFdD43Fpux+IKAPqEFeF0It4Y+5QrfsOjpjT7u+rL2C3CSPrgap9Q6VJM+kMMqqOkqkD5Md2wF4CeJPi5QBi4MFoE+F3Y8e3FKdD6/28JyhGNQPl4Z8pmygTo+xZfNbUouWD6fmdE9kiRHPg1oWjEkk1M+rXJNiQEhUD6914vXgOVQPgSlnaFI5z8+WbHVNtksTj7LaZ4y9oZbPnRaANQDgVs+SL/HSbWJZD4+zEu4Sb5uPkN17OkbD3Y+mMlcKeszgT4IlEHNTRuIPh+OEKZMBZA+w78XbzZpkT7KIqk8U2mGPspLDKLXInA+nScYlmOeXD7ArEQAOCtkPjjEQQEtEmE+MyhKs95CWz7911/KsOtUPq6QX16XHGE+XZhlju7LYj7JzkyULbxcPipBD1uy92A+q8HehwOPWT5sAvvgBVNUPgBwx0DIrmE+67iy7L05hT7jGIcGn3hpPlsHZCdhAZA+YZ0/sNJoaT7EPoLU0fFwPvsY5HTaalg+XBRjcJI/Zj7cOrg3ySNyPuU8DAgRx3Q+conkyeyffT6GfNQNyl2DPqzg7FYzIYk+ovsJg0eYiz4rgUjB1nSLPo8XacjyA4Y+7uB5Ti/WgT5Uon/8dHJ3Plze8EjwMHU+ZlzXn9v3Vz47M4Er0XhhPi4EvQaOOVM+P9DHPsq5XD4XetNBBQBaPgprHVhxDlY+XlEbBhs/Uz5FJTV24qNOPiyPPGzyG1k+i0uf7DbFaj7le4njo4xxPkz4feGQAHI+xRMKcYi+iT49IOarvp+UPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3063\"},\"selection_policy\":{\"id\":\"3064\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QQNGvWs7Qj53yP5nyRs+PsxVs3aVB0I+WzcwPMEwRD6l1OQoEzA4Pi2wONb8N0o+VPmllsbfRD6wUw+d1WZJPqRwU6KZBE8+GXOTnpIoVD5CAGQgJYpaPu7eTc57zGE+LyPIa92nZT5y7ZKDiTBvPsXkREY133M+3jMurL32dz6Hn/XWxit8PsGFcATfiIA+ZSO1skLtgT4N8gAjWR6BPobuyu1hVXQ+oZPkWfQSYj6wbUFIIElSPn5QzGcg/VI+VwC/2iBBTT44LXHW3DM/PgaVTUtRg0E+4vFmf4KmSD6ZfWwKAAtZPoc5AHyBP2g+Vqyvz766dD6OKh4Xy4yAPq9vlObEdIY+ma3FMGAejj4k7W7MEW2SPvyNbHbBNpM+8TLVcQcVkD6lyjSWffyIPpOtTGCMmoA+eq+ZYjDscz5azBPyNJhRPn8ukC4d/zY+ZS4EsRiGYD4rLDKVy548Pm9jdWRM31s+a+FxvxrCVT6opC0EfdJYPmh9OkC1T0E+LST9LHR9UD6to/M0rQZYPvwPhz/MVl8+obhrQXzGZT4lpwwVAdtsPlgKwNiVFXU+7JOt0ts1gT4mZEniYVCIPuwiajUdDpA+lUBYQA0qkT5lhe+xXgOHPn9+yhe473A+SR/gtFZlWD6d/0TZl3VkPl1LyM4grlY+1482BJ5lXD5E/3PtfXpUPn3z/UacfGI+Q8BbT1ocYj5olyQUWPZVPhIJ3ngjwWQ+74n9XnpfWz5iNr4HQ4NiPnv81ON8B1Q+G4VDH8zUgD4S6P1zxmd+Pu3x59codpE+BS+gCHmuaz6R6P37EyZyPkLOY3Ky71Y+wNsISykwZj6n6Yz+TUduPgYoMvQiSHM+X0EsFSB4fD59hvGX3w2EPnPFv/Fjr4k+m3nT6v3dij4M1vSgik6LPl3KhenSmYU+uF9/ij1GgT6PbYPCvJJ2Ppsx91YtLHQ+8iF9WojyUj6IxnCNd9NdPhHGUWAholk+VD01qt6mSD4yvbS+C25UPsCGYwCUfFk+3bIT6IHfSD7ub+8CktBUPgYX1J72LF4+my+hvX2uZD7kmnTwpY5yPgasdE4MUnQ+0atUo7Urhj7OYTtyCcaVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3065\"},\"selection_policy\":{\"id\":\"3066\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FOWMzPDpPD72vRAQviw5Pv0kXX36wj4+x+Rc9wNWRT7fB7eh26c8Poks2zQy00k+Y/RAsvZRRT4VysFGb7pLPvZ8OZcvjFA++sQr045hUz6a34yhN6haPshdLnv0cWE+ufco1lEsZj4uO5MJeW1vPh3h9IkF1nM+CUxyfMUFeD5P+7HztXB8Puwjl6IeV4A+nWK3dzITgj7/gDLmWyKBPs83YTDQ+XM+wYLUz9LHYj4q8iZXMTRSPvW8QCod8lA+3IBtlkw8Sj5xbs+jc3hDPky82tTNRkU+U92g9Av1TD4p4jcjsxZbPrCcZ2gBPGg+oGx5J0/5dD7rAa5I0iqAPsTAaREuW4Y+JoaVRZbPjT5XHYZcSh+SPmUxZfJvYZM+vhHpsdDxjz5TH6joO12JPtSEbqaA84A+OSMTTrrpcj65/wq6Z5tOPqgIgjQZpTo+grxe++MmQD7HGPxGme1MPr017vMH3lA+TyxNVuz6OT4IL2di7pdJPoEzJftbDzc+qmzN1T/bRD5TrabP1adaPiYh0wUEtFs+BAw/mCtsZz79DY5gHhBuPg8SEkke2XY+3ivNeeKagT5//PeSzB+IPoZJLr5wsY8+EPJp6ICnkT57Wn4TQsyGPneCQcqNlHA++paTUu4mWT5NrSiA2wBlPvGkxap9410+FfFLGXtLXT6xRALLCSFVPtYgUOt062A+OvAja5drYD587MwQ94hgPlys6WqptGQ+Dbo0ayLPXj6t1patg/ldPnHCVJ+DMWA+QnZyyoV5dT50L5Y6LBF5Pg7L50Qo/po+RtGlKv0Ebj4cdXA2erNzPnElFiWA51Y+lWwJpnFjZz5Nk39naf9wPnDVprMyXHQ+rVaOJOnpfj7ZsHqgyoqDPhuyzDOZIIo+DK8ee6tcjD51V1O1NLKLPvjBhzW9I4Y+SOpw9zZOgj4jP4DN5p12Ppw4lHAM6XU+QUT9zAq3WT4KCD8deTlgPqnccHKLM1Q+aZ6jUpC8TT4JKzNZ4xtVPk5Srp0UJ1Y+tL63nH78RT5UVCpyhmNbPsdg0kxZNWI+7YeBqa7mYT498FFJhUNxPjRM624uJmw+4Da0hYZkhT7aJxEgPwyOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3077\"},\"selection_policy\":{\"id\":\"3078\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"bewMHWDdPD6yqPv3cLU8PseA9TUa+z8+l1ho9fEFRT5HLzfaLko9PsxPPxPANUc+3LxMF30yTD7Ld61RtXxJPjnH/4vlolA+UBoCCdxlUz7cKX43+SdbPpaE7TEM32E+X65QMNyYZj4jCu5ErVBvPtKsMP6t/nM+IZFJNeQDeD7qh+g0yF98Ps+ZoLiHKoA+uybmeeCtgT5uJOqy3DmBPsCac8yITXQ+YUui3w41Yz4pkFVehTJTPtSHIZuCOlI+JfFHY495UT7CWWBuMINAPqk/knM4SkY+qf4w8yI0TD59abyxRy9bPnY4Iv3tN2g+8kDynvwndT7622UNu3qAPgbgjnDRc4Y+UuneVeK1jT6BbPpb3mySPmuqaVqntJM+1K9tdAm6jz6yQzIDp32JPtYN08djBIE+4YxThiiQcz450nR7TkJPPhsAeijPzDo+gpxDTlCtVj73cnFtt9dSPlIbeHoyH1M+BA6ERfL9TT6KMtL9capTPslW1Bswtj4+LgKEkV6eUT592jUpSRdUPlqMP2mLj1w+/3UuaNLQZD6zRIl4bclsPj/V+OMw/XU+F+wRSv1tgT7n2dfFCJeHPtleiems2Y8+oP5ko4J2kT5hCcVIBACHPoBC7ItEunA+vCuf9FEvWj4xQLTRdcdhPqOPLpofLlw+xtf6eE+CXj674yeR2ExHPvFlfXSKOl8+fAvakIX7YD7F3JvWJb5ZPvc1TJ/d42E+KgBtiVt3YT6j9PGfbPddPvhpHs0Vglc+82OSWm3aez6yEZyB9elsPpRAy7WcbYA+MW8cLJdDcT5fWKSJtc1uPj0lB0dgbmE+gQUOrIy+Zz6jHe74sR5uPvVmEIK3fXM+hdmS/5+6eT7HFoGxm3eEPuL5Q24hFIg+nSzGqLv4ij4iKVDi8eaKPrloCiKkmoY+kTl/E2lrgj4/kV7tbNF2Ppk8U3kYFnQ+EpvbnheUYD6IVRjaGnZfPkxPWcIn7lQ+pRWhMFwxUj4fpP8F8OlUPpPQlg8XHFc+6Ioe8tKoUz6aHZuWFw5UPhiEurS4O1Y+HnFtJHtFZz7jqOByfhJvPv3m39wHzG8+GFwJeL/Yhz6KixxCpyiYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3059\"},\"selection_policy\":{\"id\":\"3060\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"TVOrFHArPj4R3aHE7dU6PmCzqSTcW0E+VrpZe25pRj6NSJant7w+PsLeLUs9yks+y0gYOtR6Sj6GajzH01VLPucb9P6AE1A+cSOe/m4UVT7dhyWPrPBZPlcgho2NOmE+BjozCaGwZj44ObCLt25uPmSp/90dsHM+42YgHyAyeD4qDX/CXgl8PkZ3t/m/SYA+chmX18PPgT4vub1IagSBPlmW2qxqaHQ+xZVnnMbWYT75nVRZkDdSPrw1R8FRu1A+Vpyk2hDqRj4wWsRm+m8+Pj7bql7HREY+T/SX/1ZXSj5y72YPY9JYPq/GsAsHHmc+T5qd/MkmdT6C2CGcbDaAPocrmswfjIY+R3bpmv48jj6VMYpAYZOSPiwDRXK2e5M+Mi5x1ToZkD4wDy6/mfWIPgMYcnt+eoE+tyR+IUzKdD7Va8XvXE9QPpwvFhr6PTM+wycZzvehSj5Q1jUXflxPPr+l28XymkM+3iV9v2VQTD5Rm4yoZklEPsoBkJVZ0D8+Wer5nO4sTz7RyubRE5tUPtybkzy37F4+ejOegwHhYz5Xfu0+8clvPja3i9XVc3Y+xxwb4Mf2gD6s3JB1NDGIPs4flNp12o8+/fqmR4tvkT4TThZ/9d6GPib14PN013A+FBZChBPeWz5L1DSnJ9VgPmnOaZ3Rdl0+zhQZOcLXXz5+jI0i18RVPplXrmyA1WA+qdRgRiU+Xj5DF1w0dtRYPgd1wuc0SWA+TS0kqcJOXj4i7m9Hj/5ePrrU18kuc18+U5KnFqPqdD4cjowDSkdwPhcCZ8ikym4+v34jqDZ4cj5zZEkNV2l1PkXZE6eb0lk+MoBBoiPcZj54dAMD/KtsPriA27U6y3M+z+qxxzU1fT40CLmSpISEPgrrbGs1loo+Ijj8a3Cxiz509xZDS1SMPv45at4UAoc+LsIVqo2Egj50dedCSbB2PvZH1q8dWnM+q4wJRJ7SXT5+PQeueEZhPimQf0RTIlg+kBdSOEXyRT5SEMve4EVQPnbRpd4CWlc+FKQHiSXrVz7PFML7hcRPPmYYvayc2VQ+kewVsxxCZj7sp+jPBThmPqfStfzcKWU+hysoxI7mij7B3wefPPCRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3057\"},\"selection_policy\":{\"id\":\"3058\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3027\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3029\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{\"ticker\":null},\"id\":\"3030\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3032\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2HroToBlOj6EbVQ5pr49PqmXBbMphkA+L54gflZlRD5DaOdA7w1BProrbDFvW0g+xwZT5BEfRz6XsDuwKYBJPpt8MKS8700+FCfkSXHDVD4WIhyjQu5bPokOBQXDHmE+1i7eFwYAZz7YP1/bXAZvPndZjFIGqnM+S9aEoHc2eD52VM3N1w58Pl9jSTTmOYA+ydGgdlKpgT4bxEjpXzuBPliqizZOF3Q+4TuiDr0dYj4NoKUDAD1TPmn9RO+I1VA+/naAVyEcSz6sFGAhcmdDPr9WqMafSEM+pGZKQHBnTj5BzfEM471aPu8qOo/cZGg+3dQtxKJFdT4y60MChoOAPpEL3Eu6d4Y+8so4GAIGjj6tmqHbqgySPuedWVHve5M+ehvZyYAUkD7l4R0B/YSJPvtGLDSM0YA+oodkuFhlcz7RuORzFndKPoUcxNBLhDI+N7XBS//qXT7LXhonF5NIPvkG25HG4kg+7ES9fC5pVD6VQCBZxudLPqytbPgrlkI+as4wDa4iUD5pCMHoZxxUPsgb84rB718++DZLSi/wZD6ATp/ieENtPlvepJdlinY+vCtwlagJgT5/KYtWvC+IPrVJwC8AEY8+1vRp1ouYkT7Spj+HPEqHPtiOtTqu2XE+Bdu90y17XD71tM/vG9VkPhw5Mo1h8l8+mLTdonADXj5UBFxCVtdUPg88PNUqMmM+rZGxVQ0hYj7YPaqNuZJXPt8mX+RRK2Q+V59g3CgWVT4bzcKxwbhjPkfaOKyXol0+TkDweEkgjD42SscqPBdnPrrznNpSx3E+sGZ7U2lMcj5c+Y7wiu1oPjcDamAbmFU+F2O4LVWqZj4mxT0mNktuPplNRuEurHA+Af7X23Yjfj4JDuH+kkCDPlPYBi9NwIk+QFsvnI7pjD4lbI2jskGLPt1vCiYQoIU+RgVUfZ24gT7eHP94v8J2Po/N7uIdM3M+4/08SX41Wj55v7EIjMNdPr5S4GKN11U+2NdoLM9uSz6dmW46KdpVPsLGn7gDuFY+pJKBKtZVVj4/L7I//3FVPrTmig3jWV4+jnc92kQOaj7sLzfraSJtPtBq5hfjaW4+Gy1PECwgiz4MpQVmPa2RPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3051\"},\"selection_policy\":{\"id\":\"3052\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"xoK9/uX1PT535tWuSzA7PiwX6FXExD4+UdimIg6yRD5Vz+Uk5uI8Pvwf2w4JPkg+wjvzNg21TD74CVhMujdJPr/z2QQ3N1A+6gP9ZvhnUz7i+J6DXBFcPlHTikdxYmE+9IyGgiX7ZT7DHcGbv6BvPszaoHExUnM+Wr/AgqT8dz7RYjudAFB8PuN9DGFFPoA+CmDcNSsOgj5EqM5EyASBPtVRSOEvT3Q+Xzco5Z41Yz7+a7QShNJSPu8osaRz0FM+NReJrnQqTD5dFxYG+MU+PsNEFGhRq0k+xJnNd+t0ST6tAOkvzetZPv/bHg87gmg+nxkJqfV/cz6ijQLtgwSAPn6tLGbTZ4Y+01qhiQXxjT5uDy0ngmeSPjW5RIlZKJM+eJ2I8U8ZkD7GikeWTfSIPsm5SgIbh4A+MmiW6DWdcz6FJugJeAJSPsdf+o86MjA+RO6iuozRXz6yjTYJpihUPjEq2TJeUEE+qnKxTTnlSz59MkF2jSdKPi3KiJxLtk0+V3A2m/ilQT4erP1PXehZPuIh24nbv1k+etczenoXZj4RZmpzIZJvPpAY+Hn3p3Y+1UpXiVl0gT46kkX9VrmHPtJLEyS1So8+0dpaAfI6kT4ViiM8kkyHPq3LFansQ3A+LQZhW1L8Wz6W9hAyYA1kPumpAliVlF0+Z0ST1sD1Wj4JMH7OZwpQPpM0eIbHdGA++0WZqS6cYT4+E20lFgNbPl4UdhgZcWE+EnkQlva+WT4uKgfjPuthPpEGgKqeA1k+J1sJlYdjgj4D5nYNkwN0PvGcJuQ+W5A+Um0boenRcT415hiDYmptPpVTu83vwFc+hD7MfpVeaT52Xec9YhhtPlBorNqGPXU+yacIfu0Wfz4uOMEXpJaDPoj73ISwlok+UOEYbrhKjD5yIC+MmfGLPjxspjTKMIY+fLkz/oAigj79mNIy3gh4Pu16/R53l3Q+kptvGV6IXT6rH86fLddZPuSXM2HhM1k+zzOj61bnOj75e8fOQ1BiPuw5cyQy4Vs+3mpG4mH2Tj46qpBpVdpSPhYwmRiFkk4+cXyGvutOZj4tPHLQ8RlzPsPMEZiVYnE+5hkKi6t6iD5Z99Yjey6TPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3075\"},\"selection_policy\":{\"id\":\"3076\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3033\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"kYNaIdL5PD6uJz2yE0U6PuJr0L55fEA+b+iQSUTMRD5CaUKxQsI+PnbC+3P290c+T+NTyV84Sj7HlhFnz9BMPo888ploMVE+PB3CBS/gUz5NQBDaaYBcPlhT1D+iAGE+f5HaDcmkZj5KQs6rAllvPnFZ1VTwWnM+NSEt1lVteD7lVIRFvn18Pmr9Fb1nPYA+sKQff40Dgj6oZ7QuPEuBPvBydXUZuXM+kiZ4z1CNYj6eBOzrJOVTPsVI8ymiG1E+I53hT375Sj7YpoGJ4FVCPvgOdoEoBT8+E58hnnI2TD4O5ey/ll1ZPiEChJ/0rmc+GuvprAL7dD5HK4vWMFiAPmzt4Dqem4Y+69vvUfoBjj5w+rYx01mSPslg/KRVUZM+CILFffi2jz6wHMpHdYeJPlniuPXOIoE+uTN85xzzcz4sxzwW1phQPg1iTUCTFSo+bJBxmEqdQD5n+4DajMZDPlIWa2wbFFs+mz/nq2JuVj704WGYlVFLPuUe4rkAfUM+iK2/eCbZST7IKIKA+NdePtnmP+Tt9lo+h6pyjfpmZT4UhQJkdlVsPsy8j2gbl3U+S1NP+dOGgT5CovJ2fVmIPodZUP16qo8+hv7DEzZPkT7Ru9BvRtyGPvqQi3TloHA+apBMFpBqXD7zFeKwwM1lPg0HpveEi2E+YzASh+A0XT5Oqq4Rg/tXPrVGSuvJo2I+foO7tDTpYj7kWYMGlJNaPvmCLw16DmE+W0G3eRxZVz6UOAPtyZJWPgtV/zZ1RVg+tOwJB0Nocj5UUlbHwsV1Pgb2oIcjcYA+loG797s8dz67QhtVxIpxPnq60/CRtGM+kiXGdaNJbT4vgSq3uRFwPmgUayaaT3A+s+8KLAb1ej6enT01f2qDPhtintRSV4k+zF3gwz3Viz5Tg8dCz32MPv3F4SKxhoU+yYDgJX2Ogj63yJg7Yod2PjS7FAOJdXQ+lD4oacGeWD6G4T7zTNdjPgw4P/PDmVc+nWFwXY88Uj6jzaIkU4xRPsKA+djOJVc+g1bDpFKyUD4d7Lpd5gFRPqI4eV0LnVc++NVay2IbbD5vQrBFqBhkPnx7rXbOi2g+rdLUuXIOhT5SpQkPPhuRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3073\"},\"selection_policy\":{\"id\":\"3074\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"znTHyxH2QD5ar21Q4ew8PvLZ2qMKuD8+2/EeBoepRD7vOkMbuUw5PgOPYcWJ2Uc+Kbf4Sw3uSj4OqccSSRpKPvbHw6mPik8+q1C5VXiHVT77c3729cdaPs8QSrLoRWE+c6hzgEueZj7EMo4CCslvPhiilxfh8HM+Em1iD/K+dz4Toj6PdFF8Pua4K5SOQoA+u71o2tjMgT6gv66H2R6BPlRS90UvQ3Q+D5gIc4KWYj75A/SkE5VRPloAWoNW8Ew+qlFRZ4boSz7L4WFOrJdDPu83VoJ6sEY+0RP8kCSdST7Ncs/OF9pYPj9QljvyBmk+k/nN1w1mdT54FOsoWDqAPmf4j5RDpIY+WXpel37/jT4XC5BXhkGSPsyZr5Z4TZM+7ZfqlfEbkD7CWM4o6iGJPjkWK4ip5YA+aWjpY2wPcz7z8r7AAUJOPuKJajV1GT8+k9qFjnHsVD5bpsnXMDdUPlpRKzuwZVs+uiTQpV3gVT4oAIiIT/9QPp2tSToubDM+t6aUUj2BSz5x42T9f9JRPt295817MFk+Yuex+XL1Zj7y4rNYp+ZrPlxZp4Sxp3Y+bMEOgW8ZgT723xcqwNyHPt3D7Ehw748+A69pnjhIkT6CYNzkJ+iHPkcJDS/Gt3A+gf1/0mj4XT5OsXn9ySBiPk2xSgufsFo+vpf5uivGWT7lWTn7YrhUPmYH4Xutr2I+q6P+mDTeYD5GjoQ0zO1ZPloPo9mMZ2Y+LzHPM/SsWD4yVdeHMhRTPmWA+remvl4+qcRYbrQDaj6Dt7pJedZ2PiINQ7EPS5U+DEIVl1fxbz6vgwg698hzPjyR922L+1w+ZesmKoTSaj72MNzbI+xtPg0OgQAc73A+Iiq1br/mej5EECC3/yOFPuZMRjog0Ig+424YBPgRiz6SnGELZa2LPm1PcEJH9oY+/0bBnfJGgT6gjhFR8515PjcMUPQdznM+1XIA8w/6WT483nmJrhdiPvVtPfslilE+Y0ormVELUj6fvQqIHvdVPgUtkjql51k+3RHBuRoFUT7z/wtOqF9bPhY1Tzpfr2A+HtiLov0vZj7J93YznpdxPomc9MXphHE+TG2G038thj72ZrjK6ruPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3071\"},\"selection_policy\":{\"id\":\"3072\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tpwRv208QT7EFFyLI3Y+PqwMBGfOlkA+1hm7yUIpQz4Nszikda5APpKCt8jWZEs+g3WpN/xvSz4qFOfE+Q5KPrkEWh2KFlA+8wYqFNySUz7dsbd7kitaPsityLHVDGE+grFMbIwUZj4Vwk0NGNBuPtfI48Mkc3M+WvXymQv+dz4oZr+IGLB8PnMDHdiLX4A+vhRcFlE5gj73FMqioDmBPtvucg27DnQ+8lOIHUghYz4kI1vtAaFTPm/5RIObtFI+On9EmB3ETj6zCQ8wX+ZFPol5UKi9AEM+Gp5FonptSj5sZjfbjxhZPtAGNjR3WWg+auZ5ViopdT6+YTRy53CAPtoczs1gYIY+soMo3OgEjj5CRsVb+7ySPkWdy4lha5M+AcZCOysdkD69AghFk32IPjQy7q3HooA+st6iMZY1cz7KY8Bm9hJSPiRZNfzJXjE+1uESv/YWUz4xzyJWSjFVPqBUar9SsEc+EWqIVl7eQj7j09YtYW9OPvOuyT2gST8+Av6rvOd9Sj7+KTBKI/pVPji9sa79C10+klgQM2kbZj6JvFdvGLNvPsVDKNKWwHY+z67sDHL1gD6/9OhOURuIPguuycpTlY8+meh8KDyJkT4sDVkYrXGGPnZNIxtaPnA+z171pq22XD5sfo5Zo51kPtlOBkLBDFw+NZow0alKWz52JLwtd4BSPj7mF+Np9mE+5H95yS+4Yj6Qfez7Xk9dPp0xcYmoYGU+11OBm6jhWD4eX87ZMtNQPk3wuVNakV4+3ar2XqHbjj6G5YKucg5zPgVpdYlkf2A+Y5V275gccD7hM4vtXLhrPr3yNmJ1SlU+V3/JqljxaD5+HKpQkxdxPiG4gFTeWXQ+y1GssagyfT5s+MwJw1aFPj6wMhTqPYk+v2Yy8qvWiz45VV6ilY6LPjKDTRi5t4U+PvelLNiagj6FNupozWJ4PpOYCWRQ3nQ++9s1qgVLWj7SElZt2gZhPorUcCERS1w+4idHesJBUT5cNnF42MxXPseAdxyNQ1Q+q5ZH4zleTD5s5VZt42FWPoBaJgvu4V8+jizPpAdoaT4Aab0DRUZlPi0k1CITP3A+U297+MVXiD7OnOzPgtaNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3061\"},\"selection_policy\":{\"id\":\"3062\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"DEHRYoOvPD5bU6kvWsM7PjJYvLaLAz4+0yGqmoCSRT4h3TYDCzQ7Plw2OopOrkk+Txf+7Aq3Rz7Ca7aWwh9KPvvaURwh21A+4pIuwHaXVD5ampokF9FaPp7ZExCOEmI+z29oCD59Zz4rAOJjWV9vPg+orFJQcXM+JMkR8c8teD7BuKxVxcB8Pp0Efe8bXIA+MP9RIDjugT4JhKmcVjiBPnYTEn2EA3Q+FnzdteDbYj6nVrMbxTZSPrhA4fAqnlI+CO9HykQFSD6cun4C6lZCPhhFypaHjUc+q/PWftNMTD7ZlSL60JlZPmZjhKn3ymc+f+ro0AprdT4Mj2XBNLaAPhetj2tco4Y+BUh3gkscjj6jbZjGmluSPo+aHsB9kpM+JHNe5yMFkD7LX9SwOeKIPhQrsfVA4IA+po3xzozBcz6NpVMjs5RMPuCe/8Gt7TQ+x8fdqdBBVz7i4EWfGkxRPs9j6UihckQ+NJOBUFS5ST5vw2cjxHBJPgq9jLIe30g+lQe1SBriUT7SsXNPv/JcPuGRxiTkBF8+jZ+RbrFOZj5P/KcrhL1sPn9fSaHtNXY+fA6QZWr4gD7A5hmLwSqIPq2ffKlyCJA+YOAloLx4kT7/hkxXyuaGPrHCxD2f524+nLz3LyUZXT4lS2NsFnFkPkn5iX+IiF0+TEsxYDVMXT4Xi1lLa/BaPvcffQenJGM+kA6ck4LqXT5bGUQ23elbPgrdcNJBT2E+sxlbivLaWj5d2NdmVW9hPgafGAZ6JFg+mW3im7qCcT7/9YegkL5sPgDmmxtNA3M+/kgUvir9dD76K8gr4u9wPnP+xizRMGI+a8JTPRKjZj4xMIogt7RtPmNI/BDoEXU+CLYOuBuvfD4sXlm0Rn2EPl11JAukxog+NpzcMwrQiz4d9P9nsnaLPjjjXyVANoY+ZzBn5PzNgT4JKSyo3Ux4Pky1SbcfM3U+Bpedlk5BXT4wOSrGQ6JiPszLyvCaZFI+moxoQk9gUT6X/ivx0WFRPt7BfqiqqVs+M/bF/nQ1Vj4zpMRO52pTPt673t8ddlA+OZTmiWYWZz42+nq9IyBuPokUvZUW3XM+OvlXGQJPjz5W9Pwmo1+KPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3089\"},\"selection_policy\":{\"id\":\"3090\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"R3M571XTQD7bqRLGX1k6Pn4cWlQDfjw+6xjzsiIZRj6iOknBG+M3PnRTfcxWdEw+/2/rJVySRz4Hc24+8GJLPp36M7CuZFA+LeReSb+4Uz6Y812E8HBaPnwtWu2TGmE+ojsLbxAbZz6NEY6LyJ9vPstNpk9CX3M+m27SUPkaeD7qMBUxAGR8PpZ+3EPwUIA+jx8boioJgj7Tkh+BuSuBPmpAso2YEXQ+OxUFA9+8Yj7lugS+Mz1SPh59Tg5Bd1Q+kRAkruXfTT5KRVay9AZBPhzyaPNim0Q+0nkfyAu4SD49kYwq2uVZPh2K0z/FiGk+E6SDK4IwdD7ftefp4Y2APuEWWpp/34Y+Xtpxifcdjj7ICIm1uWeSPuldfNiNHJM+iz2FFZz0jz4YraMlFE+JPo30KiH3kYA+o44/Sdp9cz4Tl9fjXnpMPvmZ7E77NDc+t22POs29PT7aTrpq+VtBPgf3ev3UEVI+TAPAqTXzVz7POakg8uVGPl5aRzbl2kc+kCr9PpfmTj7pQuraSdNaPj+1lTpgmVg+AiEsWVseZD6PYsKVmatrPpkUEOs0hnU+GWty0Zf0gD7VKd16Od+HPnyHDDEkWo8+ZUrjhwu7kT5F4kQJPUuGPnfroiPJqW8+Ixf68VIwWT4i56aLBGxiPog2W61HamA+pgapJrsPWT7bCkdjZURVPhcllAba+mE+yKyEANbZYT50LJP2jRxYPgNp+6LKA2Y+Ij+puSIHWz72nvFmfhtZPv011JJbNmE+gu/lCeLQdT5ASBAE1ph3PrdFDLZcfng+onyanFHMaD7OusxRY69rPiM5OnJLu1s+nE2GvFGQZj6OyQgvR4NvPgA1cj8o+3E+AkLKOeUYej6rFtPciuqEPkDMffxOOIo+GVs043oVjD7nkyY9Ln2LPtnujhy/q4Y+Km6V+og9gj46plkFzoZ6PkKkEFSEmnM+UKf+6nC9WT5xg3Z4wRVkPqFq8gxQXVk+4I/M02R5Tj5YYgZxRDJVPo2XZHS6uF4+C0Gbvjc2Qz73Z67/1c5YPozXU9SewFo+b0nylkf8Zz7AoesEoLtpPl99IasXPmo+t2H05VABkD5sNJHI2UOUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3069\"},\"selection_policy\":{\"id\":\"3070\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"J8zB98mKQT5Ad4WK5tY+PgnAzNzXO0I+nzSvgiphRj6gjbtVvLA2PjIjTbwpdko+ITXqzEz/RT6suF6IZ7FIPs7jjm/I0lA+Pc5LqdfWUz7/EH0boDdbPsAqRo8jM2E+yNxsdymYZj5LAiFlCSRvPku4iUEes3M+qf+AN8kleD4QumgAhWl8PnDi4+WJRoA++onY7Rb8gT7hUr8WrQSBPpqYhKJwJnQ++4iyzdOcYz5bqe7ZCnlSPqkxpfRsy1U+xLFIkFwxTT6Y2t69Mt1LPgW8VSOPG0A+pYOv0mnOSz4ngryZieFaPluqG0HWNWk+pFLFkfnZdD77+gOl1qKAPkUU6eo2lIY+oKK3ItIcjj4TTgrowF2SPp2vE4O6PpM+4c1R9FcvkD5iI+j101GJPgwMMU5ztoA+k/BPg4GUcz7CwGy+QlFQPi//Rrh4diQ+U8K4QxFyUT6Iiem2FghEPgPEQlhc5lY+jXXTNECUTj59B2o/Ed9SPrQ0n2aMiE0+7uYiPRQiTz7kl3jXY5BaPv7OJgU/v10+7mD73JEJZT54P4ILi91rPrs1cEtO53U+q9SbJCqvgD43T1s/G3KIPuoLh0+FkY8+P7Xb3QUgkT5567edUxaHPvZ19TuL+W4+b8y53W4CWz4FHAp2iuRmPnXrUq7NE2E+42bGjqmzXD43ecFVub9ZPiRCBwtHtmE+Z5Ae9yOXXT4vP8JxFKxaPptBvJG2QWU+NzaVF0wZXT4S4gG2JbRiPuyX5ELvB1w+KVqLHykKfT5XFKhN+bF9PkEHBM/xZ3o+3C5JM/ntbD7xbT2pHR9zPnnOfCR/hF0+XB1b3gefaj6Pu13ZQ1NvPjvmrFmkbnI+hzgP0lRsez5Z6WFnBS2EPvhGjhx6+4c+nQY5RkS3iz6TVPVTdgGNPvSI5S0ZzoU+55/5hGSCgT4XGYAXjA52PogtEBhxcXM+TamFNgmmVj4XJYkVJ1JfPmWst+AAslQ+mMdA5s2QTz5fAuxIyplZPjUphMK+5Vw+5uYJ2WYAUz72NqX5dLtcPsdhqb4/Wl8+aWUi0j36az66RfT+k+NpPs0Wmx6mgm4+UKaoFU8Chz6z+lvrLbyVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3091\"},\"selection_policy\":{\"id\":\"3092\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ADs2UMLAQD4bzfGyvFM5PjPhpHl3fkE+gHwIBtnxRj7LjG2YoNA+PjZjA+nyU0Y+4dkx0cKLSD6nwgJKjSpKPj6R/ZhRW04+U/27sloJUj7zuf7LHe9aPlemWIftImE+m34XUTcuZz4EFH8DNiFvPg2mHoliP3M+2jnQNCpYeD6k21yhMFh8PvqyMHaWFoA+jGiAQ6UCgj672TavxEiBPr8oTr0XWXQ+jeWY+FGTYj4ezAbrkcpSPinIjie+DlI+A34NcZ/SSj5MoC54bQdFPtT25Liaf0I+QEa/STnmSz4zysLOZo9aPg0s5Vs3Omc+PxTLxBM9dT51TjhxHkiAPlyQttclyIY+J/6LB+cTjj74MKXgS3OSPs4znKHusZM+DmdDOuoTkD4Ox7lW+zuJPhrDStTj3IA+uWQvmmn3cj4/81W60fZPPlV1bW952i0+Qd+hPlFPWz7DvpY9lkhTPszGhwTHeVU+9iyNRG2WTz6R+dfois5DPnWxPg3WjEU+c3cKmWHLTj7MRoix7yVUPn+Y0QY1fGA+r69/nGRzZj5lebdhzrlsPraLdsi2qXU+lb0k3W6ogD4L8Tnn6OyHProtahBqSY8+r1JpdiCKkT4lz7kJgnmGPjtkVSS/kW8+1oqq5G/AVz6+C55crJtiPqZN6gi02Fs+NvngDmIrXj77zLrQly5YPhXP0ddrpF4+MiF95wl5Yz5ITZVlpP9ePjBVwrCuj2E+FBnn3GedXT6Az50h11daPgWbm8kXTWQ+Z+8jG4fBcD6kOeoC/H5rPoNXWBsuIWU+qc4WixS9cj52Sw22591wPuvbS/xzhV4+9BfhonJ9Zj4IWAEhUClwPiFxmLJE+3Q+Hwx2MJ2xfz482HR5xGODPl6XRkZO3Ik+9XiZWXIMiz6HwbFNdA+MPpjNc7qjnoY+AqUw9Xy5gj4sXNEm+UB3PnT5YGTuwXQ+rc9j699uYD6iuupC/kZcPqbLnw+AUlQ+BBduV4aLQT6GLhGoX8NUPm9xH4HRm1I+TL/H2Us+Uz53UcM/YFlUPishYuOSGGE+BAGEcji9aD70NxdrIWdwPtXJbzzYDHM+KowoLwgTiT6SjVT+uYaTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3067\"},\"selection_policy\":{\"id\":\"3068\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"c5616e6d-43a4-41db-ae00-bc1a2ad5a36e\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"f47729e1-7e19-4878-8c82-22fb27551b70\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"1590d8ba-5c40-4fdd-9737-44951f50570c\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"694d12e9-86c3-4efb-aaad-5f10ecabd43e\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"3472\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3475\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{\"ticker\":null},\"id\":\"3473\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3470\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3470\"},\"major_label_policy\":{\"id\":\"3472\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3476\",\"type\":\"Selection\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3500\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tXWxcFZtRj61yQuzVUdIPgrsFIDYnUM++jI1cKUDOz4gTOyBugI2Pkm/KqhvEyo+cNoj+9c2JD6dEQ2D6yAYPivbzff1jyY+jdxhmwecGT4ATBBYWXIePp0KjtkV5yI+/oATGH6EMD5jnGw8lF4tPpMBpWx40lE+mlvVRmt9Wj6glCAqODRqPn3543adbnM+H42SQf7Bez5oBlY48Ox7PkxumN53Onc+PJxXtBDGbT6NvMGtsWJmPlwBqlc751w+ADMMVNsmUj52B5Fgy8tGPmsQJCqD+j0+YqbDTbSyRz5z0nygtLpNPqYjj2OV1kI+zl74SVmtND7WovT4aWg2PsaAKfoMkDg+rMTQ2RD0OD6SD40+7q43Pua3vsZI2zk+aIphBd7YQT7ttm6CWzU4PrsYBMTDtT8+/zrTOR4/Mj4AD+UmWp88Pvgekwwbvjk+ZQjazU4aRj7uVbyVRAJBPkwkYARnGVA+7LWIWiVPcT48QXHR/jWAPr4zslbICn8+wuy01oMSdj4LfyCAc91vPiMAewsDmWE+EtMRfryYVj4iBcPMAKJMPunCJ74hlUI+PfiEJn4jPD511tDBcAcwPmCSljGaICE+OF3TojUtCj4bvzTf9bYJPhkg3MPpCgQ+w5gIMZxWBT6fQuvYXQ8CPoogJjvg5Qc+u/k9OLFHLD5MabSEX49jPrI+vAyNQ3Q+sSQ9v6c4gD5jRiKODWqIPhW/PorSCZE+YYAc2m4Hkj7nHDbznFOJPvMZ/f3yfYU+c7H8mvBAfT6Jgsv0JltwPqP9pHRAq1w+WJSPnujLRj6d5vcqGpguPkKZfWjnay4+hBkx5fJTMz74xnbnFag7PnYgSMd6J0E+0m/AI95rPj46MGI44QNTPng1Kpk2xWQ+dUsAmfLCdj7AjNf9/ih4PjPlnUZ2f3Y+767Lv5Xocz6JmnCXjHVwPjYv9aMX2mg+H+WJwzatYj4emn9kncRbPuD0hizhT1U+mT5mcKemTz79qsdckcxIPvXpUgIAa0I+fREuXhOyOD55899tNdw3Psi0YBCeFzY+OMKZ/NqnKD6tyiM7aRk3PlQjYM70FDU+9papGonNLz6ZFVDJoDAhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3500\"},\"selection_policy\":{\"id\":\"3501\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.67, C/O= 1.12, [M/H]= 0.84, T= 936.36\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3476\"},\"selection_policy\":{\"id\":\"3477\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3473\"},\"major_label_policy\":{\"id\":\"3475\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"694d12e9-86c3-4efb-aaad-5f10ecabd43e\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"1590d8ba-5c40-4fdd-9737-44951f50570c\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 131.68, p-value = 2.98e-02\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"371ea896-cbdb-4455-a215-de692b2ac4e7\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"68aac31c-94ad-4a45-aa0d-3d2d29902226\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3820\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3814\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"dIuC6ZLhVT6CmYnovZVXPirZzQw7+VI+4AOLeZf/ST6gK+30sStFPkR/IpBhGTk+MVd40h50Mz6zmB5tFE8nPhXlZMhIfTU+BhQ0EMSYKD4i1L6EMRwtPnsd9FKeEDI+7AN6Ep9qPz7eLHSKt+w7PgK3NOEWAGE+6+WLGDMzaT62UP+DAVd5PkaMX8QQ/oI+kTO7jA92iz5iobN7Z7mLPj7Y/1wuAYc+DnNYujhQfT7YWmNNqO11PsetEsevTWw+ZZHjbSiuYT7u74gYtCdWPk7RlJdP8Ew+eWQl7gDPVj7mTxA+EJpcPjjWKq1IFVI+IGiXmZ/AQz6NycxRIUBFPoeje0ovP0c+NisGSe5tRz6kS5jssA1GPjBpl0Sp9Uc+EHj2Nb+JUD59D/VJzTtGPvI/tWANRE0+/dVu6+DWQD5m8SW7T49KPkTcVwyF50c+dPd2EIiVVD5bPHLG38RPPhLXL9MOZ14+4Hr+/lrMgD486nbgUvSPPqgdvrvsx44+l0dnhQG8hT5ylBfCrU9/PnXskLv6LXE+fvdNy4bmZT4qvRRh+qFbPmwX1fitxVE+lDI/4yO6Sj7zkK1rZTU+Pg6X6UtsxC8+oqDh7hoCGD55/9zgK3YXPg2ICAKiMRI+hLhzsxhMEz4zLNy2vIkQPnShI0QJTRY+cNUOjfN8Oj6MrBCrq8RyPrkcBphdr4M+xPSONbr4jz7IG0rHX1KYPgFp3Ju6GKE+e8WjC7knoj4fnmhZQmyZPvyz00H1VJU+Mc7hGFTLjD4jzf9woqp/PrbFcAWCA2s+5HTFaG4WVT4tH5QbePE7PpLp/OInDTw+iR9ZYRLnQT55g+wP6t9JPtVd5w45IlA+BZ5PP82uTD7v5aDqTG1iPrvfE7InSXQ+QtD5YThlhj7dg3e4+dSHPrZyGFcYNIY+QSq095Wbgz4Khqq57iOAPqRzIaUXL3g+JIiAK38hcj5wvSRuEN5qPj4mVFLolGQ+Spc1wxmMXj6P324S5PhXPro3C7GZ0FE+PANtrNC0Rz46zbh1NuJGPtBD6CkQNEU+GglUAkx5Nz7QCrKn+1hGPmvxpqR5QUQ+mq2XEBFKPj7R21EnbTswPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"Xo6hP7alWj66b+4dgx5dPpZlxk4m7Vc+YuNAnYzNUD522BpOsndLPiw0CN8qiUA+nWa1oPj/OT7/wnc7llkvPgPOYU+hCT0+UC5C0+a1MD47fIDzaeEzPt0aWwI3ZTg+/NS1qUEjRT414FQpjdRCPiRR3pulGGY+eBbntQ2YcD7+3hZMqg+APkLGgPpiaIc+TP31bh5zkD6kXqgfBIqQPhpqtQFtqIs+abuiuSP2gT6ecwfMPlF7Pr5v915oe3E+bxuoq4dpZj66zVG8r4ZcPkFgaaQYxlI+z40REEWNXT6BtxSlICtiPmRxbp4Y91Y+INbb7vQ1ST4vDcmfW21LPotplvpHMk4+EuN/f8PGTj4Yma+Lwq9NPtZU406cnlA++NOSIWcwVz7yokswyIBQPkVRQ/jZ2lU+oy8Kl0cjSj5ZsHNBLvNTPgOBW6M7AFI+NPND2mnNXj5OYgZv8XxXPsHxDmxok2U+/nmAqfiYhT5o5lNhYGGTPkrs6xIXd5I+RVUzbdiJij498OaGskqDPn2dmCq6rXU+pBozGJkQbD5OqCLyeNVhPqguweX2IVc+tUpZ7GteUT7PYg8Di9VDPoeRDsuTXDU+MItXDLN6ID7+0qXZd3sgPoWmb/VY6Bk+DqykbXLEGz5XbosZju0WPphVVn48dh4+pJzXVGzxQT58M5Das5d4PilrWGesH4k+JtHoOszCkz5+hxdBsVadPvWh/xA+MqQ+Regr9k4bpT4TKbIygmudPp6z1exejpk+Tl/6FJOnkT5SajrqyiOEPgpSRtUYQXI+xEHF51bbXT4Y3d8clqNEPn1si5AgWEQ+F2l5GyOnST6KA4w2hK9RPpV9+2wa2VU+Zuc/hx9MUz6xnSoryWxnPiHsHReG+Hg+aBSgmabgij4ZOtNGUFuMPmLBb2NvVIo+k1l6A6RThz4WUqLWv2WDPnRkgguEjX0+nhLjlZ5Vdj77b9CrybBwPuTXgMncv2k+UaiuXZ4hYz6/cVyROAZePhBlGlLeVVY+cBJiYWMuTj5g1MO97hRNPoKhX+er0ko+0uenjSpJPj7mkrQLg4RLPlNNBL+uM0k+9ebVtFEhQz5DJlkCYvg0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3864\"},\"selection_policy\":{\"id\":\"3865\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=131.68, p-value=2.98e-02]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.67, C/O= 1.12, [M/H]= 0.84, T= 936.36, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3816\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6QySlKRDWD6eBDyDIFpaPmAfyq0wc1U+UmUGWljNTT4LAoQhslFIPs5zGafbFT0+596WuQu6Nj7ZLUtUVVQrPoxZ4wt1Qzk+Uzhc20gCLT4m8+9awTcxPiycp6rqOjU+eWt5mUhsQj5Se0d3dGVAPhOEiT5ejGM+bgktQqcxbT5ZhxYOK7t8PkQpcN85M4U+FJdTNSYujj5VL4Ldt2aOPiyhWq/NVIk+eHpnCyBPgD47Z7WMc594PqHGgEJAom8+atbFDNgLZD7UXm3qMVdZPnTkGTggn1A+JHkb/yIuWj66bw5iFDxgPs6jzKUwhlQ+IJ85REp7Rj5e68p4vlZIPokGiaK7uEo+JAdD5FgaSz5e8iO8ud5JPm4JL/FwmUw+BKbEKxPdUz6wKkbVrp5LPp/4TlRwPlI+0II8QRR9RT6GVIMPa51QPiVvhyn+800+VHVd9XixWT4+wB+psK9TPqVu0+p3Y2I+b3o/1Kkygz7DrcfoxK2RPo99ZbiG7ZA+bk5N+ewiiD47XfmzRHmBPvnEFHPabXM+EYnA8Y/7aD7jBq0idqZfPgojS2/Sc1Q+/+P43X27Tj6kFXPcHnhBPoeugfhknzI+gVvIg8B7HD66UhTKjTYcPkkXvHv9DBY+STKMkEWIFz5FzTNopbsTPob7POGiYRo+XAdfG+YvPz4EcNDCL651PvFDr/+EZ4Y+xCXYqpTfkT6j0TCEiNSaPnsFblZ8paI+4NbnAIShoz6ZYw1G4mubPs2zVBeqcZc+M6O1kJ4GkD5yKF0RjvyBPuW0/tfZwm8+VFtFqOJ4WT5X9lQVKU5BPqPwBEFaL0E+UERpvhrHRT5GRYI+eZ9OPrVt8b2p/VI+NNtzE8PRUD7QweUKC+1kPu7lmOTWoHY+VfLMfe+iiD77XqX/JBiKPgwaRN1DRIg+6kGX/Zx3hT4QbCZI18SBPgzsUdhN3no+Yc2x4I47dD6zzuLi0R9uPhF/6o1iKmc++7mkn9UzYT6nqOVRjv9aPmXOkgE8E1Q+1ornBprxSj7NUL6ZkvtJPqnyowheA0g+dvj9RzvhOj7bTrNZv+5IPl+f1TGUukY+4d6QHi0jQT4KgdWU55kyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3844\"},\"selection_policy\":{\"id\":\"3845\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3844\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"3817\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"ePB3GtnhUT40DA5jCfFSPmz4i7fUok0+5hAT55WdQz4IrHhqX8Y/PgRCynz4aDI+5dpcqhTsKz7ql2EW8Y8gPjKEaU//Ty4+jUzdvWAxIT6oJr/teiwkPgV8ieDLgSk+0gqKVDlONj780Vw+i8EzPrx/dSkRc1k+RSsaznh/Yj6UZXXbL6ZzPvhe4YJlk34+bLCgb/3lhj62tafkaTuHPipS1o+yGYM+x44AMovEdz6Q8UU3JmhxPlKnb6oKt2Y+vGxo8ZJrWz4ojDPIRM9QPsZsnzUzt0U+9N4Wt58mUT6eAidOohxWPrBUvkFS+Us+iRvB63NYPj5a/XLxcBFAPoyZLKR6akE+HCKEo91DQT7WKLPNW0w/Phz5BQuCLEA+dgkLelrqRT4fdBaF8WM6PiVezeehJUE+GY0Rv1MTMj4+ABJMALw+Poz2kh02gjs+63Ov/3sFSD6IXVmPigJDPhapr02vtFM+PtlqdAiLeT6KDKP8YT6KPmfyeuwVn4k++hLV7yO0gT6iCHk6pzV5PqjsPfhEz2o+w21tWny6YD53cMfcIeRUPltPFQCZjEo+Zhe2yowBRD4unsHwiUU2PnHWtyovkyY+HB9TTad/ED5j//MoC/oOPhg+rO2YcQc+XPkGHZhhCD40qoXNfVoGPriTHrdK6A4+uSXdqFiaMj64WXDwUMNrPpbyBsJePn4+zBdQ4gCjiT6Y+MCtzByUPh4JcTfn/Zw+ouWLLYlbnz4BE2BOuhGWPlckH0qgyZE+i09dbPxThz6rVMNroHB4PkC7hDsaDGM+9lr81Mt1Sz62Cp20ScEwPm346hnUcjE+de16zMjMNj4KNaNgJehBPhPQRR2prUY+hvBNx9JdRD4gNHjBj3dcPh1yhe7aWnA+m+FFcH+igj4QBILvGQmEPhT4ocDMvYI+4QQ90sl8gD5C9XbqrdB6PuWsJNTqrXM+RoYn6DQ1bT6ciEYr+2ZlPjIbL3DqPmA+j1OslukSWD7gepIC9+RSPhjT3nk/C0w+Y08kEBJGQj4ShTNv6q5BPlUQgQwJfUA+iBbDzSXCMT5Z/HR/ggJCPvZfAJMYG0A+DlR+EvqZNz7tJD3Ac4MoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"WimsDnClXj6E/rTRm+FgPopCzv/2FFw+39x8Zo3+Uz4J1+VGGmBQPsxStGhf4UM+XFD/HQ1+Pz7kYRrJXAwzPoD4CDh1r0E+DJJtfJhpND74UgA/RVk4PlZ6CmXvtD0+idGtiHSxST6mjWBPI+pGPkhIWOgzX2o+zPMf2+rxcz6P1FsgE+iCPgyjb/3AHIs+3j6DfSe7kj56VC7rAsmSPi7w3s7oj48+jK3Offq7hD7m3CTiwNZ/PvjySO26RnQ+dnbXoOZhaj7AmFOGj+9gPoUSZNWmYlY+qgmQI9OaYT4lXgmd12llPkQduiq4D1s+fLCSklrKTT6xbBEABk5QPsO5clB+A1I+FvaAEmp4Uj4oKLfIogtSPuAMrOsvg1Q+TceDGvnEXD6ojQB0sgVVPixCt7QP6ls+ih94UT/4UD78KAIM1otZPoKxIqJwE1c+WZhx9RmwYz640ZIKHN5dPr8Izy6Y7Go+P4hJbs+fiT5B1T3TWDyWPuqBjXqCC5U+4onFAraRjj4lNrbKtVeGPp6TCmoSdHk+MNKJxFGecD6oTkk0ZTRlPmaei15YoVs+TNideLe6VD4xXIXAeM1HPtZxp1sy9Tk+88se3ew7JD7hUtf/CngkPsMHUUCXMCA+8nNKid9vIT5wxaTpC0ocPphWdTOQpyI+gHTwxrniRT4ss2gNt3p9PpcOW57ar40+oj+I5Kjtlj5XVVAtIsagPmeGIxEFzKY+77oJa0OVpz4YWt0eBWOgPkNDiuSzGZ0+oJ486z5jlD6Optjsy8CHPkVXPLrMPHY+lkQGs2+bYj5TZ1tQrTtKPhBlFHVKpUk+84hKi+gTUD7BqjCOZqtVPmDzP+1+pFo+Jb5Aw5x0Vz6QaQ81Tp5rPr9ZrNrS5nw+DwNUi1+jjj7zXOQHmBOQPgQ85vm6yo0+837xKHByij5/XRGbVyGGPpqVP25YB4E+n9dPTYPceT5lij9NVGxzPvDipavaFW4+LkrzczZeZj43a5zQEo1hPj4zNkbYIFo+JGPV/pDOUT5EjiRiHSRRPv3UxgSziU8+Mm0cYSgAQj5dofEz/NpPPsjeqtAPWk0+u5PiM115Rj6eb4xJFfI4Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3886\"},\"selection_policy\":{\"id\":\"3887\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3814\"},\"major_label_policy\":{\"id\":\"3816\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3886\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3819\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3817\"},\"major_label_policy\":{\"id\":\"3819\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3820\"},\"selection_policy\":{\"id\":\"3821\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3864\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"68aac31c-94ad-4a45-aa0d-3d2d29902226\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"371ea896-cbdb-4455-a215-de692b2ac4e7\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:19.618029Z",
     "iopub.status.busy": "2023-11-28T22:10:19.617551Z",
     "iopub.status.idle": "2023-11-28T22:10:19.622793Z",
     "shell.execute_reply": "2023-11-28T22:10:19.623250Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 131.68, p-value = 2.98e-02\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(131.68, '2.98e-02')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:19.631721Z",
     "iopub.status.busy": "2023-11-28T22:10:19.631060Z",
     "iopub.status.idle": "2023-11-28T22:10:19.633056Z",
     "shell.execute_reply": "2023-11-28T22:10:19.633382Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:19.637051Z",
     "iopub.status.busy": "2023-11-28T22:10:19.636355Z",
     "iopub.status.idle": "2023-11-28T22:10:19.639202Z",
     "shell.execute_reply": "2023-11-28T22:10:19.638802Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:19.643561Z",
     "iopub.status.busy": "2023-11-28T22:10:19.642791Z",
     "iopub.status.idle": "2023-11-28T22:10:29.694905Z",
     "shell.execute_reply": "2023-11-28T22:10:29.695251Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.712982Z",
     "iopub.status.busy": "2023-11-28T22:10:29.712411Z",
     "iopub.status.idle": "2023-11-28T22:10:29.714915Z",
     "shell.execute_reply": "2023-11-28T22:10:29.715308Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000e+00</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>338.241250</td>\n",
       "      <td>3.737125e-01</td>\n",
       "      <td>4.693704</td>\n",
       "      <td>962.382772</td>\n",
       "      <td>1.153001</td>\n",
       "      <td>0.839662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>540.157979</td>\n",
       "      <td>5.112164e-01</td>\n",
       "      <td>0.073614</td>\n",
       "      <td>30.916547</td>\n",
       "      <td>0.058764</td>\n",
       "      <td>0.053539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>27.040000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.603487</td>\n",
       "      <td>910.735372</td>\n",
       "      <td>1.076813</td>\n",
       "      <td>0.775600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>74.385000</td>\n",
       "      <td>8.325000e-12</td>\n",
       "      <td>4.636010</td>\n",
       "      <td>952.471425</td>\n",
       "      <td>1.094720</td>\n",
       "      <td>0.793944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>182.625000</td>\n",
       "      <td>8.350000e-03</td>\n",
       "      <td>4.692364</td>\n",
       "      <td>977.565145</td>\n",
       "      <td>1.176246</td>\n",
       "      <td>0.836890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>242.415000</td>\n",
       "      <td>9.842500e-01</td>\n",
       "      <td>4.727601</td>\n",
       "      <td>981.300354</td>\n",
       "      <td>1.188713</td>\n",
       "      <td>0.866695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>1656.420000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>4.817902</td>\n",
       "      <td>987.585022</td>\n",
       "      <td>1.232455</td>\n",
       "      <td>0.934184</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius   chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000     8.000000  8.000000e+00  8.000000     8.000000   8.000000   \n",
       "mean   0.680000   338.241250  3.737125e-01  4.693704   962.382772   1.153001   \n",
       "std    0.139971   540.157979  5.112164e-01  0.073614    30.916547   0.058764   \n",
       "min    0.480000    27.040000  0.000000e+00  4.603487   910.735372   1.076813   \n",
       "25%    0.580000    74.385000  8.325000e-12  4.636010   952.471425   1.094720   \n",
       "50%    0.680000   182.625000  8.350000e-03  4.692364   977.565145   1.176246   \n",
       "75%    0.780000   242.415000  9.842500e-01  4.727601   981.300354   1.188713   \n",
       "max    0.880000  1656.420000  1.000000e+00  4.817902   987.585022   1.232455   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.839662  \n",
       "std       0.053539  \n",
       "min       0.775600  \n",
       "25%       0.793944  \n",
       "50%       0.836890  \n",
       "75%       0.866695  \n",
       "max       0.934184  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.723128Z",
     "iopub.status.busy": "2023-11-28T22:10:29.722555Z",
     "iopub.status.idle": "2023-11-28T22:10:29.725018Z",
     "shell.execute_reply": "2023-11-28T22:10:29.725402Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>280.02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.713708</td>\n",
       "      <td>910.735372</td>\n",
       "      <td>1.169630</td>\n",
       "      <td>0.791811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>135.84</td>\n",
       "      <td>1.670000e-02</td>\n",
       "      <td>4.603487</td>\n",
       "      <td>987.585022</td>\n",
       "      <td>1.186658</td>\n",
       "      <td>0.838050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>229.88</td>\n",
       "      <td>1.110000e-11</td>\n",
       "      <td>4.671021</td>\n",
       "      <td>916.403219</td>\n",
       "      <td>1.182862</td>\n",
       "      <td>0.794654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>72.21</td>\n",
       "      <td>9.910000e-01</td>\n",
       "      <td>4.817902</td>\n",
       "      <td>980.243652</td>\n",
       "      <td>1.099082</td>\n",
       "      <td>0.934184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>1656.42</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.640432</td>\n",
       "      <td>964.494161</td>\n",
       "      <td>1.232455</td>\n",
       "      <td>0.775600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000      280.02  0.000000e+00  4.713708   910.735372   1.169630   \n",
       "1  0.537143      135.84  1.670000e-02  4.603487   987.585022   1.186658   \n",
       "2  0.594286      229.88  1.110000e-11  4.671021   916.403219   1.182862   \n",
       "3  0.651429       72.21  9.910000e-01  4.817902   980.243652   1.099082   \n",
       "4  0.708571     1656.42  0.000000e+00  4.640432   964.494161   1.232455   \n",
       "\n",
       "   metallicity  \n",
       "0     0.791811  \n",
       "1     0.838050  \n",
       "2     0.794654  \n",
       "3     0.934184  \n",
       "4     0.775600  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.778724Z",
     "iopub.status.busy": "2023-11-28T22:10:29.772153Z",
     "iopub.status.idle": "2023-11-28T22:10:29.788034Z",
     "shell.execute_reply": "2023-11-28T22:10:29.787649Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4dff3adb-b856-41bc-8b8b-09785b3a065f\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"d252ca79-3a0c-493d-8ae8-f21db5d4fe5a\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"4236\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4234\"},\"major_label_policy\":{\"id\":\"4236\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"4237\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"Iuc+u4DY5D+mIec+u4DoPypcj8L1KOw/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]},\"y\":{\"__ndarray__\":\"PQrXo3ANUkAK16NwPQo7QNejcD0Kx1JA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]}},\"selected\":{\"id\":\"4237\"},\"selection_policy\":{\"id\":\"4238\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4233\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4231\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4234\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4231\"},\"major_label_policy\":{\"id\":\"4233\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"d252ca79-3a0c-493d-8ae8-f21db5d4fe5a\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"4dff3adb-b856-41bc-8b8b-09785b3a065f\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.791881Z",
     "iopub.status.busy": "2023-11-28T22:10:29.791107Z",
     "iopub.status.idle": "2023-11-28T22:10:29.793317Z",
     "shell.execute_reply": "2023-11-28T22:10:29.793646Z"
    }
   },
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.797234Z",
     "iopub.status.busy": "2023-11-28T22:10:29.796710Z",
     "iopub.status.idle": "2023-11-28T22:10:29.798332Z",
     "shell.execute_reply": "2023-11-28T22:10:29.798691Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.801881Z",
     "iopub.status.busy": "2023-11-28T22:10:29.801283Z",
     "iopub.status.idle": "2023-11-28T22:10:29.879207Z",
     "shell.execute_reply": "2023-11-28T22:10:29.879562Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"0f1e228e-ad11-4572-930c-cc52bc9eff81\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"cd03b105-c2de-4deb-8c9f-12952a53be00\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4825\"},\"selection_policy\":{\"id\":\"4826\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4563\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4566\"},\"major_label_policy\":{\"id\":\"4568\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4825\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4568\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4569\"},\"selection_policy\":{\"id\":\"4570\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4563\"},\"major_label_policy\":{\"id\":\"4565\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4565\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"4566\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4569\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"cd03b105-c2de-4deb-8c9f-12952a53be00\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"0f1e228e-ad11-4572-930c-cc52bc9eff81\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.906612Z",
     "iopub.status.busy": "2023-11-28T22:10:29.904743Z",
     "iopub.status.idle": "2023-11-28T22:10:29.950636Z",
     "shell.execute_reply": "2023-11-28T22:10:29.951243Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.964712Z",
     "iopub.status.busy": "2023-11-28T22:10:29.964098Z",
     "iopub.status.idle": "2023-11-28T22:10:29.966476Z",
     "shell.execute_reply": "2023-11-28T22:10:29.966867Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:29.983339Z",
     "iopub.status.busy": "2023-11-28T22:10:29.982712Z",
     "iopub.status.idle": "2023-11-28T22:10:35.142477Z",
     "shell.execute_reply": "2023-11-28T22:10:35.142819Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.441921865940094,\n",
      "    'gravity': 5.17663836479187,\n",
      "    'metallicity': -0.3928470253944397,\n",
      "    'temperature': 888.3514770507812}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.176638   1.441922  -0.392847  888.351477\n",
      "std     0.114065   0.179763   0.023484   25.165476\n",
      "min     4.973636   1.136231  -0.427622  853.099609\n",
      "25%     5.123663   1.311045  -0.413888  873.081131\n",
      "50%     5.195235   1.486497  -0.384705  883.205902\n",
      "75%     5.258809   1.590699  -0.376060  891.550323\n",
      "max     5.309588   1.653443  -0.362571  931.457764\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4431fe3e-78a4-4e11-a1d0-cc47e79e4fd6\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"078c8426-79c7-40ce-a60f-b226abfb30b4\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BSqxTX6DRT6q//7xzZxGPgElerBggUY+cVcwhyYXSD6wtMRNJxQ6PsO4nxVgL1A+LNUOoUd7Sj6zPiz+JbFQPpn1yY6cRlU+ih8VCf2AXz4+SRgNAs5jPnwEJfYY1mg+27iDRUImbj5pL7XU9ll0Ptct8+vfJXg+cjAgYjZifD6WQ8k+7+OAPtdxXt98wYI+Lje/dBoYhT7DoUhrFqmEPlZP1brrqno+FtW6mxJQaD5nURGs6OlWPl0mdfkyelY+lCa5raOhVj7wsaUX2RlQPv34dw222FA+yQwZFFp9XD7K6Ssa/qJmPsrr0AuZ03I+/FJ3VRHcfT6mTH+36CuFPuxb0uuHI4w+0fUXLmZZkT7A2dDzNiGVPoRuQpTySZY+A1Y8A0hakz4M9Jf+5hmQPgAAkw8Z/YY+4HXtd9jwfD6Ko784JSRWPrkJZr1VdjI+/t/2/ArxKT7qyCn9IIM7PpKTu6iRMTg+RMft4VK5Jz60CT7UTVQkPrShp3mu5jo+MpxQlClSUT6YXabVB2RVPimoI6FcklI+olLi6GFsXD5TUDa2piZsPiagNGDyq3M+hgrGnpFQgD7EyXifiU6DPrchmaiY/Iw+eg7eNk4TkD5xEz+33rmGPpTt+N7hxnA+IVa5CqmpYj45M4LpFyhkPomefFLx5l4+JOKUDJ0kYT7k8aaO2k1dPm5Z7ss1L2M+iPdOjA6uXT5bd2OmBGxhPk93RDgY1Vk+y6r9I98UUT4YZSvFA0RTPnpZDqujz0c+sp4Ba0oFUD7Q/FGDcw5SPjfb2OJp0j0+f+FaNelSWD6+zDiN58pdPmY7OV/roVQ+fgJIxBu2UD4CYZjJA8hZPqP284BPNmE+bfCXaAQtaz5+2MmcB7VxPvcaj/03HXc+xt6hivnJeT5Y5EakRex5Pk27W5adWXY+jdJBBktucz6ttgNLc6NpPuCDxNSWimI+WW/ORTmzSD5C64JtRRdQPhmY4p/dnj4+t0HltMC7NT7wWC1K73pBPhH+vyHOMEw+27mYk3p4SD5/j3DGOBVJPpcdkSfG2VE+FwbJwBNKUD5vIxcO2PpYPpvlShiySlg+b2Hd3lDJXz5/OjAkrbNePg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5226\"},\"selection_policy\":{\"id\":\"5227\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5220\"},\"major_label_policy\":{\"id\":\"5222\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5223\"},\"major_label_policy\":{\"id\":\"5225\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"Selection\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QtHze4a9Oz4CUxgxdIFBPug3F/oAIUU+u3Is4iQRRz6zNjkK8ZtBPuSnwJtJVE8+wnvDxa7iSj42ireDSh5PPmYYQXYCTlg+gCulP7bgXz6/SUXETCpjPpHU7vQoN2k+jp5Jz6b1bT7oAaGsoHZ0PqjMQwandnc+U7HrUf7TfD4/+tbo4eCAPiZVLj+g+YI+OGa2QLCdhD6rPFvKjWyEPtwynF7e0Xs+nrMWbUWVaD7aCUofqEtXPkbwcMzRm1o+dPhvbaYLVz7yTcTBz1dSPhSTUvRUd08+dpeC1atnWT4bOwkpjW5mPl+X1WlDnHM+SYFNCQ4afz4asZfNc2OEPtDZh23sTYs+q9iNv49BkT76EXO6iIOVPtHrry82ZZY+WsAXkSaTkj7qRHM1YraPPgZncRF3loY+9k9hWTUQez4Rfq7k7RFZPjKTMUImpTI+Twol6vF4KT78t/qlaZJDPqIRle2wtDc+Mim3cCuuPz6sE0ZyU6ItPpTaUK6NRzg+wnPQPhb/Tz4DqSJUMZVVPjFQSfo78Fo+M/I459O6Wj5IXkXqYTxqPjVRXBmX0nM+/hPXqLZVgD7AmH8EzVaGPmWa7O5hT4w+uVlaK6nojz6ANqqOMmiGPhNJew9vbHI+ylwdHUEiYj5Cn4yh3ddjPuKieRLKP2M+FgOHnTk0Yj4smPazcsBiPvzuLgV+r2I+0GIdInZ6Xj6WqzmQxdlePqZgxlLg9FQ+28F+g8VFSj6SqWefyYBQPvRv7yXUGFM+h4HvRHMuTj4CssiVmZlaPm+U0+OISVE+7HuTFd7tWD7bdau95M1fPg79S0L7V1A+PSj38xuESD4SMUkhMbxaPhUaxZ4ctFw+1/RhJWYWbj5v8lZs6ZtxPqzhYVpp8HU+HO50dYCeej6omxjBNet5PmD4/zezu3Q++rtPaAMUcz4AxMo9/jhqPiQqJNNuM2I+YwOgU0CcUD52J2lH1b5VPmW6UOETwDc+ZT7zCGhMRT6NH41/DcxHPgwXQJdDlUE+Ap1VNmdkSz6Vuz0XyXRFPoTGlFkeH04+w0Kp3oqRSj5O4RbBxTxLPqdeM0oYw1E+4gdyttOZYD5k7mouPm9iPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5242\"},\"selection_policy\":{\"id\":\"5243\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FnfGu8WKPT5srTqZ9IxAPqR23mbXOEk+pMQeaSeRST7cL/LN8+5APvczdPQ3VFM+/NvVRFY4TT5V0b6arrdLPsH2DxSbnVE+NFJNZJuhXz6l7m2nmjJlPmdcdBLZ62g+bVq1Bn2DbT48m2SaTS10PveCcH3awXg+UgJ0bJzTfT4OXLKzaF6BPkmo5T3bCoM+qV8UcN74hD7zmsqdnl2EPgPVCA7phnw+973QSExqaD7tWzVDVCFUPkZEOKKlmlc+DTnz4U6SWD7+iDA4Nu5QPmsm1ks6AlE+VYoXJo91WT4qBtuBBrtmPsoqVV4Hw3M+74ldJLXUfT4VN3DAjpeEPpN91l4RtIs+nuBJ6+mIkT5sscVjDgSVPgEmNMRMDJY+7U4qrB08kz6M5zCDxYqPPqru7tRtSoc+fryoHirRez49209c0KNUPlZrsfEYxDM+cYfLrR2jLz7xvMsrvQ89Pj3oY3FWcDc+Uml1bUpmOz7wen96TW40Pn3zy2yH1zk+JsO7f+ObTT7zov/KBNtUPvjUpGignVQ+sI3Uxd44WT52DtREMUNtPsQ3rrtW+3Q+YedwAFfefz6og6DH+qKEPv/5sifjaow+ZDx6sQEskD6na2LY4HiGPoY8YSe36m4+sLiIGSnvYj7icxHgy3liPmxSHGTZI2I+2zSWqYvHYz5gZ3bfdBxgPhsa4x73MmI+PFhY5AoRWz5Neurw04JgPrpaXqGSp1k+ITRoDGmrUz6EqJmFTG1SPsNEO07H5lQ+b4wooJPaYT6dxMOzOqFOPh+kJUgUE04+Yu2Iq0fsWD4Ifzq4xr9ePpsBvNI3vVA+9rmS86CKSj4cYiECEhNcPqn+WvWic2Y+kKV3QicybD4ciqXbGcxxPlpXQGnbDXc+awGI+vsfez6hIE5NU716Pr6n9XH2vXQ+hg8KuT/Rcz5lU2LXXFlqPnKsnPTy/WI+hf0ycw1RTD6/gseIyPBLPro/52y7Z0M+8WL5e4wgPD6/NZ34CVU7PrRDmW1SGUI+NdsoI15ySz4WewgXhwRKPoZP05W8DlA+mzgKKN+WTD4QiXpAYVlgPmPwICU5tFM+owxEGK3uYj5+2w+6v89pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5228\"},\"selection_policy\":{\"id\":\"5229\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"T2QsHfE7OT5x9PQ9U1tGPtHCcVWt6EQ+8UiizDx4Sj4VX1VS9OhDPl6al+5w7U4+VlEs9ExgSD6bKCm57/NQPo/tWcPpWFY+wJVisN2tXj5W9/H6OBhnPjzv1BibnWk+yrC0M7oKbj7NArwJxuF0PtqSFW8vO3k+sHoKtXTEfT7DWmYvheaAPh7cPUVsVII+aZsoRNHThD6ZF9mH/KKEPkDcwBnJPXw+CdPiprPlaD60Cyo+ydpTPs9l1Zzcglg++aJ7zy5yVz6ZsjkOQgZPPr+W39+qM1A+BxE3JEqbWD7mjK7yHSFmPqx0YwBAsXQ+L3otj6ZRfz4ESgHcFOuEPkihtrsKCIw+THIAkxwrkT4YVUlVMQGVPnghIWtPG5Y+0QVy5SDbkj4J/FtqD12OPsyK58YIH4c+NGk3Yc4ufT7PQ5XXPdhXPmDU66jCXTI+OpgZNImQRT4ThbRLF9BAPkSfrTTKGTQ+I7OYWSn4Lj6ZBbVP834zPp+fM23p7zQ+yk1hjzNiUD7n1F9oOV1RPsntdhYnoVQ+/TXthq7nYD795ZxH81ZtPtVB4HHTwXM+8ZCaOXZIfj5OTyh2T4WFPl+Kr6rB9Iw+KCcnqnjPjz4Wdq/X/9yFPnJvHZQAsXE+cly14ly9Yj4TWfFc3bhmPvDSxeIoBWE+WMsSm7qdYz4yMp6cWVRhPlHx+2/4RWQ+FKOMQLzVXT7Onj3pNQ9dPsM9RLGoZ1Q+0lxJ3KUZVj5y5yB7gz9UPu5EsPkXH0o+QNaPCLkGVT5G1S+/3ORLPkxMbV05kEY+bZKN6f6JVz54xwFqXvddPhqjy/OjxE4+dLL1Sgz/UD5sln8iko5bPhsLKdkfKmE+33hsLJM7bT5vwRIQHsZwPiKgcvTUd3U+EHEBIDEAez6jh9iFlw16PlOxa5Zg1HQ+mpOTg01Gcj5HwHK/DzVrPjuHfLt+RGI+FRCsrQ0QTj77nml1d85NPnGkv23S3UU+y2l0rArOQz6MP8msIVtHPvfWMgn0QFE+gGTQYBaDOz7oZafvvt0+PqpMFciV5EY++el2DgegUT7PVaWmxLxbPmMVs5Oa4FY+78mx+B+0Xj4afKBAiahpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5234\"},\"selection_policy\":{\"id\":\"5235\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5222\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5226\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"WbcQn7hQNj7vu7bMzzJCPjKh7NIDcUg+jmq9JJZ0TD7m1uSHo386PrFx6gOOrEs+V9b3l+PoTD4WFXD1SClUPoK5ETMm5FQ+oxy7E48WXz5eKMIVq6VkPmXH+tjlNWk+j89fPK1Gbj69F7RsK510Pmx9eddmFXg+i8rsDQFFfT4IkMAK3rGAPry9l/lVxII+VanTMip+hD68m5PO4myFPkkM52Xk5no+HW2z440haD6rqzvpoGxTPvFZ1nci/1c+f1710X2GVz5dUAHrO3pLPmGQ8gn02E4+ndF7ZgjnXT4jpWPqwsFlPt67ALi/uXE++HTzuX9OfT7iHGGn7y+EPiVhiApfZYs+NuBobZpJkT7o/j887j6VPgWJUNf6TZY+WQiDslJ6kz4YtiHTUNeOPnTxEfnLzIY+rBvO13AKfD65XMYfjGhWPkYslloeiTA+hrReSmc/JD5KJPuFJWxCPnxLZNlZejo+n1IrGkRPNj5PORz78CIiPv+RBj4AUTM+pdoSy6ASTz6WDwwfzm5QPq4nKnYrylQ+jjYPY/XmXT4bR7E0riJrPmcNNCJV/HQ+x136V//vgD559bWC6dCEPsezlvF1VY0+HMvyPoA4jz5FaFASREGGPrDyghX1XnE+HbBm3MsjYj5Xbm+pCmljPnVRK2u3XGM+5vTxSsHJYj5tHRFtGD9hPh47hqIi72E+i2ao2xZHXT5lXGlZlzJdPhrx7we6h1c+j0b2UY69Sj49X+qRH6BLPiRZ4sLEJFE+FWdTEmQpUD5XUxzzr0lNPlHnv5TxH1Y+ztV8+RIgVT5JTI0UhphcPuBW/oVCmlI+ci4cUBdxVD7oa3dXsL9cPvSyYIsR/2M+KUPaKtQ7az5OaADY535wPtP6EObSinY+fl8Y3yYkej5RADpbOlR5PkD9QnmcjHU+xuqLdlyjcz5wLKkvvjtqPrA2kWRm7WA+vQTRpBhdRT6EHhLqQXVIPn8/nXvVE0E+sdFetzG4Qj5xyrnyZz9APhp/J1F8TUo+mYhk7iAfST7D6eJ4VlRLPkn4EeBNC1Q+wvD1tKJyUz7Uo38ypZdkPjiGP37uV18+2pxlRatQZD7JPcLNbFJYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5230\"},\"selection_policy\":{\"id\":\"5231\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"AzddAFkpMz5joShgZmpEPp81OZPViUc+W44/0J0pSD6eKek3XlI/PiUKidGwYlI+sExSaGTLTT7N0C0nEXNSPqhVW+Ike1A+urqz6BC7Xj4gSbCnHMFiPpP4SPLmU2k+BQxyH/yFbj5nWkpP7wR0Ps4FYpGpEXg+do6z5FUBfj6wQpY5t4uBPk8CCIVrdII+ighp1coLhT67knAn2ZiEPozGYj1skXo+xvjqFspCaT76d4FWkgtWPke+Je4oYVk+nEL2b1alWD5jEQLc7UVMPg39Mgse4E4+HqmFDGx2XD4aKqImz/BkPgg3C7sYo3M+zasZT+J1fj7MIKcyfVOEPlrBTxliUos+TAY9J152kT7EG16yjIKVPs/wdWMHX5Y+oDpgJM3Ikj6yB9LaROWPPuQjZivZz4Y+IJ3r9wkufD4c6QXzcPtWPtzH2Iq6KzE+X6tTTnMqOz56wt1NIFVCPiQBQ4qKOT4+ER513WynKj57A5o+jr45PrqGfm+Eyz8+rSHFllneUD46qdVw9WBVPu7Tt6XZRlg+jddhDLV0Xj6EMNw8+1lrPst0BgU6h3M+AECWm9ewfz6YLSqhyeKFPncdE5Dmrow+iLeNDRU3kD70VxsgJ6OGPvZjA5ve43A+m7SdAvWcXT6bgtl7IyllPr0KzvNSimE+dsi7p3YkYj54EGUtIkBhPvvP/iM8LWM+1rMFt9R/Wz40GHts+z1iPuzgz4hbt1I+/0ADom/VUD6CJQAuliZRPpndmuo8m0s+iOlgnkKLWz7YKR7RIutEPtAF4/ttn0g+AmZN+i87VT7f38JJrMlXPnwom2jxUVU+Xb2S4mDjRT4HvIQ6duFaPjSuaVSR2V0+aYICv5Uubz4yGt44YvRzPk1lOaBP03Y+zl/9mXy4eT6BOiCCLZl6Pij7fmMUFnY+uNW3c1oldD4RB7lZD9hqPp1iBppj/mI+XDo1BeDzRT4Edda+BZlRPn9QUewTMjw+POeidNTNQj7ty7qof/lEPhy0MRbuUU4+qppSyzldQj5Z4H4y3C1DPtazOs82Y1I+wkI8M1i0Uz5V7nfFYhJaPiPm/uWwWVU+/MgE4TH0az4TGgP9xUpiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5236\"},\"selection_policy\":{\"id\":\"5237\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5220\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zSwZyhOFPT7RlypjiB9DPvHg1u0C8UU+cGGC6ELcST65IY6sha09PjjjHzd8zk8+ndnoxcx2Sz4opyqPJZ9UPm+qFNcWsVU+cy5KoEi2Xj5i0LQEdS5lPsQ1A7Df2Gg+VBIdL6qTbj72L+NCIvBzPgAzSIgco3g+ctyZYDdRfT7TjaenXF+APrJ+h4Fn74I+6n2PTEaKhD5wY/Sl0ICEPrb/sWP6zHw+wEjoPpynaD6gyZ7oAjRYPmKDDAQ1m1k+NE5cp0rUWD6eXsRP2qFPPuNxjKcVi1E+Z5Wc4gz1WT5wFtILYa9lPpgmuGiiMXM+z3j4hi8Rfj5+t5JWMOCEPs5WzWt6JIw+//n89Ix5kT7k3Q91cuKUPnPuwqAv4JU+8Rwro/09kz5dgeEyqLCOPmsz2jkucIc+vpreyJ9Eez7vKt4RRUlXPnnj0MrexjM+23e6GzPxMj6DZ0DNgrxAPq/SpkoIoTg+he7lZtd8Lz7VqJ3mY44cPmKOv3pMcDs+rk7v4pu2Tz43LiRGXQZUPsEWycCeVFM+8SRZU6ZSXT4JklyWGgpvPuHaNxB2u3I+WVRr+HV3fz7lmBmrCeGGPpsGoE4e84w+DoKoYyAikD7KFHfymnuHPj0f2U7DnHE+DeaZzhdAYj7x1yFRvVplPuGDgsSPK2A+xR2mPQVdYj7YK+oWOctjPgT8xPCgVWQ+fkfHDq7EXz4lDFs/pV5hPoC7X/zX9Vk+2IWkPvpjSj5YGeqkQxtDPtYRb+tF+U0+CQVi3+F5VD4MECflwMdJPn5JiqJQtlQ+QEtZRECiUz4e3qXzvoxkPmwrK+uf/lY+4AGi4Bp+UD5/LSgNzTxcPrSJRwhjG14+OvtscsjGaj6hz0OoVlhyPgw+HklQznU+QTGPeJO/ej53BUwvr7l5Pm5JDnYmlXU+pTtW6LOGcz5OhElivBNpPq+eKcSVGmU+hbUYaFEnTD4MDP3kEtdHPo7sY9nhnzs+QUcIScbmOT5QraPNLKFCPjbyf6NvUUc++yZi4B3MRz6ItcV+jrFKPrAhxew1BVE+k5VSZsveRz7epNdde+9WPg2UF7N/OVw+HSre6v+tYD74aQv0xFFnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5240\"},\"selection_policy\":{\"id\":\"5241\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"5223\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FW/88PC6QT7RElaVrDRBPvD3zwESQ0Y+iUSXX039Rj6UXguZDIs4PhZAIx13J04+7XzI5iHhSj5bq4knNz1MPn43+scs5FQ+Kz5P3o3wXj6GcPD+sKFlPgVtb+M/Vmo+4geREKu0bT752fzdqMd0PirxQ5eeXXc+vbmapkpcfT6Po1Dw59OAPmgwJ/B0qoI+pS/9yRUlhT7RKgWoYC+FPsXPL6uA+Xs+z8/SahcraT629hV2VfpWPgzkdkbrVFY+wJ8dpIekVz6FM89w1NJQPqE/P+XWDEw+EmsSip7PVz7xyius5LlmPnlitC1CbXI+L0DR5zbJfj4CsSAGkXWEPiXthxFmdYw+iyVKw3fvkD5nFhGOYhyVPpMO39CT0ZY+lz2KJWYjkz7njYKiuaSOPk5Dlcsjs4c+HgQpIoDOez7EafB2yExVPvUNllZVATI+5gvew+EFNj4bnFPM0AY4PoDlKNmk/TA+TlKDGgNMNT6EzVzrWBcjPg4BBOJCpj0+shRCQ888UD6JYhTCh7hWPv5+FC9kkVo+hY700QZRYT5Ybj6kxaBrPjvVq/HkenQ+1fzhRfyzfz6EQhArB3+FPoZ6fOkTvIw+xFvEqu0YkD4QhK2dm6uFPpfdslizBHE+mi/llc9XYj7Rrzl8nq9lPi3dcNr6P2A+sKNnx4aCZD64E7kFFpZjPnPJzZASdWE+Sr+1jZ1qXD58I3IcgGphPh9DVs4M/lg+ZsY5Ea4pUT7Hw0KirSxPPk8fCY4e/04+pzJctb+HXj7zaVfMGQdQPmh/Z5tWBlk+6rj5O6UdXD6C7q866KJePmHLZaGVVFM+HRArf0YtTD7+B3A6EtJaPpiSh7OTi2E+rmz3Qjosaz6dYayUkplxPiRAxGNYnXU+sHbUqkWfej4lHgdIEkR6PmqD6t1T83Q+6aefp8f5cj6xOu2mdrNpPnMI/PaC6WE+BtdqDCBTTD46R8O84jhJPuoy6pjUfD8+dQGWdw6xQD4ATyf0d1w8PjGf5k6EnkA+kwdv5a4vPz5Kb0nROY1HPuuJoYy880w+YP54rS7eUz6ijim5Mw5cPtp0vbfI41M+J+HQJjOBYT5JfIF46xVpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5238\"},\"selection_policy\":{\"id\":\"5239\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"DuaC2OsbMj7iiip4qUw/Pvl40H0iGUQ++awn+sWMSD7MqDhqBXU/Ppkm2lvQ/lI+03T/G/gDSz4LM5CHE/FQPg0AdCF0j1M+lu8ZFOjRXj5wt/Bg8FljPjo3KQv+Kmk+24nshOjpbT7NRpFjsJF0Pst3RvO2UXc+BPXVBgfRfT7WRKOsDoiAPhHcBpiLl4I+oVYvZzW9hD4AoWkWR6yEPnYDdzO33Ho+PsgYreYiaT7z9EiIQ+dUPnKXU7/T6lk+o5xnUKB3Vz4IFp6JRpNPPkdx9M1QkE0+6dPAbHsPWD6LJqxX8xNmPnMwJQj243I+tWRXiL4Efj4BfwVtiPKEPovlcn7974s+q0wC53fJkT4F5KA0e6WUPhbV/XB8mpY+r+RVjvNnkz7RhaxW8zOPPi+ftJo814Y+4KnVd5vlez5Ehal1WetVPvgXD0wrVjI+pLn0nVGQGj4x8J/MMMg1PnGarmA5zj0+QOSP1/N2LD70k3tSiyEnPn1/iizyGjc+vl/YtxhzTj708bB67yBOPkYn68sUA1c+CZmK/9+iXD5ij6cF0P5rPuq8ftja7nA+hfm0KSQtgD4NbRKx6XeGPvSgyPBFe4w+rj2a3+HAjz488kS06PCFPq5Gdgd6ynA+kMGKShQlYj62X7v/ROJlPkSYjsBwYGE+YLdgEm+8Yj4Cr4cbk89iPlP2FpNPXmE+iAjQL7VeXz7bSXNhGwxhPqJu2rc4lVo+g7KvtzpjTD5sy2B+AZtMPrgmvbtQkU8+eKd7SQz3UD7rVrobpGJJPuqgVjLbgEU+leQajUEOWT4OrUJ9JctYPolT2EzQUVQ+wLV8dFhCRz6Iho77b45ZPnptHwN/DmQ+t5LgmWlsaT6KDMl0g9ZwPsFMMUbxgHY+DCROzo7aej5VyfVovTl6PsLTEmbzpnY+T0lSECWBcz65dAHeshdqPmRBL2dMjGA+JJB0NlDgTT4oj9NwVPtSPtCfSvqK7Tw++H30YeIEOz5123/5q+tCPk+M7vmOskk+V5x+mIQYRD5cXUumVRxPPueuhF6oTDk+2Bj+6MrVSD5HAI3hpqlUPmycQq11JWA+nPzNuKqcYD7Y9slIzzlpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5232\"},\"selection_policy\":{\"id\":\"5233\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5225\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wo9hMd+uOj7+omDH3pNDPvAnjOwAG0U+rqZBERTbSj47CDpSQdVCPhIWcC6AW0o+XPLz74UXSz69vEZZmPNQPng5I5MQhVY+oyfRkBgvYD7jUIx51s5lPrMlZB0y12k+vT+pslDSbT7OkLkozq50PqvOT8kiLng+95FV2LNrfD5HAgfR+PmAPqDQ7lAUuYI+0Yr9QqHOhD7nk4jqlqWEPpmzCliDV3w+IEeyMlEJaD7wRL342/NRPspnycMeHFc+yusp9j7RVj7yD/IFxBhRPrPRNafFcVE+H8wNZDyDWj4/nqXO7kFlPsmZZADhOXI+fYqSnaB9fT6sXhEYT9qDPvtgVshkn4s+Al+Jr4WikT5n6J11GjmVPpfJ+LvVS5Y+RkJoJDu6kz4UM43VM16PPsl4k4vnGYc+XcE8a6pdez5+sZheTkxaPs9eP9OmvTI+ofryo6IkKj6WmLtjAJlFPjArfUqBzT0+TX7iWhmgOD72PTUGa5QzPhsuWxiurDM+zaies2RqUj58b74Q8rxRPlfdW0Ws6Fo+Y2E4Q6lFYT65M+RBzypuPogJ2EXAhHI+7gPmuSSNfz5WrIU6ZiqFPlKTJYkrZow+nbOEFVKHkD53qGnh7m2HPogxo0skwHA+8OJodgItZj4TwCEMPnxlPq0GN1Vtb2A+GXZB8CkqYz7x27dc1y9jPml7sbDxumI+3SV8fDdcXT7EG3o4/ZJhPqfvO829XVk+zS9gqxm7Sj5bVIKOJJRNPqOKG2ui+VA+RTDpSUgxWT7buzd2IWFUPikBu1c4NEQ+gJgVUrglWT7czdlBv4FbPkUlo11BYFA+IZCSz2uhRT73UcJJUMJYPoH5YqZQmF4++EMxgwe5bT7yd/hAdzVyPgznQkKqNHY+BblE8LZWej7QOEsj76Z5PpEnx/s1JHU+hLFVCAQ/cz6j7EP1esppPkhwTx/rhmA+RHgHkdFvUT5O6XkhBH5RPpV9iJyNrDs+6yNfjawhQj6X39uL271HPgG1JksxE0k+YGzXMjQpQz5hgpucd0xFPqiRjy0bjVo+mXGT9xlYTD6+htTUEkNTPrahujyuhEw+rGHpo7uQXj4US+9z6D5gPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5244\"},\"selection_policy\":{\"id\":\"5245\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"078c8426-79c7-40ce-a60f-b226abfb30b4\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"4431fe3e-78a4-4e11-a1d0-cc47e79e4fd6\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"1b330ae2-aa1a-40a1-a3bc-f85941d1fd4e\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"3b6c24fc-adb2-4fd8-a5c5-346c8070fa82\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"5453\",\"type\":\"Selection\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.18, C/O= 1.44, [M/H]= -0.39, T= 888.35\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"5426\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5429\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5428\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5423\"},\"major_label_policy\":{\"id\":\"5425\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5429\"},\"selection_policy\":{\"id\":\"5430\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"C2285BTcWT7QIRwxHWpePorEaGI/l1w+eDw0XP1mVT56aJki0eFQPhm8TFkxeUU+6OP2Agr0QD5CzHkFNyg1PhxiWJuaP0U+3phB5QUIOT7gp710pnQ9Phf0VSpDdUA+77aesTSaTT76EoyZlpZKPv6juVRTO2c+018odYxVcT4dIfmBwEp5PjL3FA3+Pn8+IHVJNVDxgT68nKq1n4iBPlSHr/WmWH4+rVJRQlD1dT7N6Cwt34txPvQ9N8TkDWo+wpEsVjatYD5stbxxUjFXPtruwJF7ZlE+pUcUo5L/Wz4Wuvo8HwZiPkBFC3ExZlo+KKwOQoE2TT7wO/6Xg61RPrs+fq66vlM+0AxRMuP+VT5/Qe2q0OhYPjoEg+W6QF8+gi+anGvMZT6mLJP2rMVjPtDNT3/iemg+MXB3WDp5YD6AuBx/fCdmPq0cDzKqjWM+VG70a6xhbj6WEhBexS9nPhab8S+CMHI+36s3MpcgiD6LmhJpTUaSPiB/rNNEmpE+IsOCrayfiz7+1aO+0IuEPkHT5Choynk+rCtxMp5CcT6hus2gOaRnPoompPilcWE+ckqCXSH5Wz7Sqj4kyFdSPuJKmZU4KkU+XbT5t8I8Mz6dy9KiWxAzPrFH1G8CqTA+tBtDwM14ND542TxNDvQpPpsahUQ7KSw+6bT3M+UdUT6VI2RK+HOCPkvX75Dcyo8+DHO2qT2GlD6WUDHQVWuaPhrFh9bBMqA+wNHTd6q2nz6U5SAFPjmZPnxz6lynFZc+Y8U9ly5Ekj56wvlFdu6JPgTCIf9AkH8+SI9PCh8GcT70ljM3iRtdPuQpJUXkBls++UbejneJXz4C6SIXCN9iPrb8lfKAvWU+NFRuZNl3YD6aMvoFZKluPiYsIa0pnH8+rugpvha5iD4eXkLIj5OIPugNEeIhuoY+XEXbvRWKhD6zWTNgeR+CPmzhRNh7MX4+8uYxpxD6dz58ejmR1p9zPkJHsfMXVnA+EgAOmZrqaT4R3puoHS5kPmLOS+UCZF4+gw5ZSHMSVj4rXdRMhfZSPj7C31iazlE+Br1M5DctRT6/KfEF2htNPoYMPqYCSko+9kW+DdluRD6ong9pa9U4Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5453\"},\"selection_policy\":{\"id\":\"5454\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5426\"},\"major_label_policy\":{\"id\":\"5428\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5425\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5423\",\"type\":\"BasicTickFormatter\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"3b6c24fc-adb2-4fd8-a5c5-346c8070fa82\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"1b330ae2-aa1a-40a1-a3bc-f85941d1fd4e\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 864.28, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"da319165-a79b-49e6-b531-4bf1dc9f5ee8\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"90cd6a51-5330-4bed-86cb-9bbb38caef86\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Y1CTetrUZD4x0IqkBINoPpqW31EIF2c+zfkZLj9aYT6Njy+bqGtbPt44wsLtfFE+ddlBPt+xSz4p/wDQh1JBPjRnlLYkS1E+z9fzTzN6RD6hf4QtvBdIPkBZmnbM70o+3eY5jwUeWD44SMPB86tVPq0lTiXk0HI+xsY5LqATfD42lYeOsXOEPvOyyBEvOYk+1n5TLEXujD7CkzC6DkGMPvGen9V9c4g+lltgbkq2gT64jsXo7FN8Pp1WjWUuBnU+GLjW8CMGaz43Qn1N3tliPrsL1SBNWlw+3PDjXbHHZj7QV9531C9tPoEQxZ2kX2U+KPsy3JexVz5+OLX/bbRcPutbHJzsCGA+fXXQphzdYT7E4kQqajxkPtHwRgX0d2k+NRV5lzzAcT6+110y1i9wPnzy6V9XEHQ+xmE4s0snaz6kVHxHzClyPppJsoZCC3A+/Myi1vHteD5yKTll8QdzPrCShY3LuH0+A7OSql6Jkz4qGbWkLHadPmCB5zJmXJw+ulYJf9dHlj4K3eiERJqQPmCL6KZA5IQ+4luDVjEJfD5ed2kauTZzPq6zpU/tXWw+wuM4v421Zj4FWgPnxMxdPh1k+eyDPlE+apTuVQ15Pz5wLR1vBFA/PraxJ16fbzs+qsEOvPPeQD5VVNdvh2I1PjZYfzTUHzc+rex646/tWz5osTkAwgeOPusUMIXyz5k+izIMbzugoD4lTabmvVilPnh6WVwUIao+LvMBNKOQqT7D3ZEvL1WkPgJDUsZzpaI+boLjJZ2RnT46dTS9/QuVPpoGvBiiuok+g/ITOMTdez7ukw1ZSOpnPjokLYklSGY+3n2KeMv1aT66WojLFuJuPpM5yLnq0XE+w7oyQGEEaz5mtwr9wgN5PlPJwfFArok+1ZeJazEIlD5uM7kdEOiTPlnX504waJI+lLrxDiWlkD5TByQGYWqNPhWjtl0TiIg+1mA0d0p/gz4TiDwjN/B/Pvb4yA/QnHo+kyDa7ikcdT6axC9IxHBwPi6BFnd5xGg+EtHD6b4CYj4ABDR/5vBePm6q8oMtBF0+z3oZA/JMUT4i1mqjMqxXPjGbbpqFYFU+qKOzsB6hUD5jR32G70JEPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5875\"},\"selection_policy\":{\"id\":\"5876\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5875\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5895\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5851\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.18, C/O= 1.44, [M/H]= -0.39, T= 888.35, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5848\"},\"major_label_policy\":{\"id\":\"5850\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5845\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5847\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"7uAQgarGYj7Yn1dL8UFmPik8UNC0E2U+Wp61bpNzXz7NWohuNaFYPmIxp884K08+MP4tunJsSD4Wc3x7K00+Phb/i1Qrqk4+qdVPPEfmQT4/pAFtOwVFPo6F/Dc6d0c+zsabsn1GVT5R17nz/SNTPoWEuDy1wXA+Ib+C7aUieT43/Y7GvmGCPg4kkoQZqoY+NoAidkPkiT6GMW66ciGJPuM8I51HhIU+teyjZD+zfj6EgivKpFt4PgE5x3OINHI+H37OtoXgZj4RTkwT2JJfPvfG1SkyfVc+pFeNLGoWYz5AhpooOC1pPgP2VpmajmI+RzSYxRuKVD6QZ9TX39xYPlTh2kWd3Vs+oI/gOd9bXz4MfkXFq+1hPt/+jzWKrGY+zNrMF9Dmbz5qFv7xa+JsPlogRu+s5HE+xNT4Y371Zz4CgeumPzdwPsQ1dsgupGw+xFy5xHw3dj7fUTfgIPFwPlaWplwC3no+kL+MM2YNkj5gVeZzpkCbPnIquvpw9Zk+jfwGpdb6kz5vqB7CZFWNPpuFNJ3qGII+xozySeLxdz5hAsVM62JwPntvsmroHWg+k2LrwjmsYz6uDqFitdJZPvnir7t8cE0+kiPwi/JsOj78qUInvUs6PgzKpLKj0jY+Dm9/uTMMPD4SW6TET4MxPpCm5fhAGDM+tnN9fRg5WD4nvuJivdmKPtO+ZojvKJc+apgvYMfSnT7zDiTuU0KjPuIK/h3h1Kc+xNt7vQ+Hpz7ZZ38fbdmiPs8rWHpd7aA+ZZ/pYUKPmj4jePh3UdCSPg0UdLFjyYY+xn24InZ0eD7N/tLs/+ZkPvXdxeAaDWM+aokqH3FUZj6jo6Cky9VqPhxmohsnim4+x4GsDoMJZz4HvgzzJct1Pp94donL1YY+YfgjRn8Wkj6Q/kbD8QaSPjakWUMLtpA+oUlAjc8wjj7swHlHdIeKPmhDChxiDYY+OBvqCr+AgT5sTGiwv7F8PlBCYpZ83Xc+ZSRMlh/Ucj4+i6+uLydtPgR5njoI1GU+Qh66/BdTXz4Dno9d79paPsw/WbX5Slk+0IGj02COTT4Yq8lQC89UPuO/oFWryFI+VmwvXJwcTT6oOaKzSIpBPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"2L8VdArjZj6KAL79F8RqPgvxbtNbGmk+bSTZpLT6Yj5NxNbHGzZePgvZsB0/ZFM+urRVwkv3Tj7HxEPieX5DPt3O4sIzQVM+9dmXYx8ORz4DWwfuPCpLPvIsOLVeaE4+7AbYa431Wj4fucyP6TNYPtXG4w0T4HQ+a87wbpoEfz41LYBWpIWGPthB/55EyIs+dn2E4kb4jz7+9fK5qmCPPv8AHA60Yos+0sBuKvUShD52za+DGiaAPjl0U1fU13c+EfLeKsIrbz5mXVSRUOplPj8o6gu0m2A+FIo6j/h4aj6wFJFjOJlwPv8qM6KuMGg+CcLN8hPZWj62BMsT/kVgPixHS5UKI2I+KqOwsEkMZD58R0SPKItmPsPi/dRdQ2w+BL0LIxGNcz5HpLxrdu5xPp7EjdABPHY+yO53AhlZbj5GKA3oWBx0PlJ4KaltxHE+ND2M6Gakez4FATvqwR51PoVHMl/KSYA+dqaYIVcFlT703IPVsqufPk7YFGtbw54+57ALWdiUmD7dZcKo1omSPiWRnLCWr4c+fxWKMUAQgD5b7A3ohgp2PvB7TBr5TnA+8WSGu+G+aT6u0rI1auNgPr7WGnzJxFM+oYL2D5RCQj5y2HvbJSpCPrBM1YRNBkA+zctdm823Qz6YTQobv0E5PtwJGXBnJzs+pGV4SUeiXz5UUshO45qQPgNr+YH1dpw+4ZgALhNXoj5XiyjfJ2+nPg7qtJpHbaw+mAqIqjaaqz6tU6Q/8dClPjVaTBKKXaQ+vLLu9PtJoD5RcnACqkeXPif5A4Dgq4w+QGdvTRJHfz4PKUjFkO1qPn9qlDEwg2k+UnLq0SWXbT7oCDj5MHdxPhhAv+XBXnQ+v/O4cT//bj7FsAgHYDx8PgcaDVq2how+STfvkOP5lT5MaCt4LsmVPnwKdlpVGpQ+V1BDV+Ixkj7dJmfipiaQPsICY5/EAos+dKZ+49V9hT7dYQhLV5eBPpyvL4kjXH0+wRxoRzRkdz6Vwwe58E1yPliJjrPqtGs+A5Mq1fFbZD7/NGzQboNhPogKRqmwXmA+tjRhnLPSUz4sAQz2WYlaPn92PN9f+Fc+JZFPM++zUj4eVVhZlvtGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5895\"},\"selection_policy\":{\"id\":\"5896\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"T/h9Tkv1YT59yCx1UlxlPv3/gfmnRmQ+RUMmqycoXj50+Lgw7YRXPqAZ2DBpp00+bhxK8jsfRz74iAqNvpI8PuQM8ZOgGk0+fgWXXrHfQD4DelufR8xDPgTcX2WpFUY+KKxfAAElVD5HYTKTKiJSPs3AdzPh328+IprBIQn3dz61w1B54I6BPuIEIndwpYU+hi5SHbGuiD6w5SncR+OHPpI/4a5eWYQ+zw1ToAzSfD5Oo8r0Qsd2PtNxSvdiFXE+MFTHxBk6ZT6SMW5zkyJdPrZ8k5jDjVU+DndaAUmeYT587DsxupRnPuR+Gyizb2E+aubGsc5IUz5Jqa+hg1VXPtwjyXtgMVo+w/EqMOCeXT4W36OmnAJhPg/0fdTfj2U+VL+tsBR4bj643mBa/n5rPuEuqPiSB3E+numTXBawZj5wM4GFv+FuPvSqMwEZRWs+Ro8LCikjdT4vt+rjUhxwPiYavhQ6u3k+2W33IjV2kT54H6dHoF+aPsy8L1O/AJk+3QbhzngQkz5mYr3EA8uLPoPJUxpI/IA+bpBd7ydRdj6daDV01IVuPnWIUSz7bGY+Ii5tiux2Yj6aXfBYnj1YPmwHmvYtbks+lUETedBqOD4wFGtIuEw4PmYk4dW4/DQ+qKJHVy3IOT6UBokgzvEvPhJVEU3JfTE+xRA+0aW/Vj68tPrN1pWJPhfStSXBGpY+tgB5aYt1nD5CM86/rm2iPuyKwhfV6qY+WmrARYa3pj48nn+0UUKiPvBsVr5APqA+sG/dgbtcmT6nbLn22OyRPqe5pcernYU+9htlYvgYdz67czh8GrRjPiOaJKsFxGE+ErfOJKbiZD7CRiNWczlpPlqtPhmegmw+4Ow+yBl0ZT4GiJMVCIN0PlTgClLws4U+3tAvUXZQkT4QNCltgUeRPiacF9dLCZA+FUvBKhX1jD7LAtjxbmGJPvqbNTvWEIU+wspHRZm1gD4rxPWZTWd7PsQDyHShxXY+RagUSrvrcT7u7Iq0cqtrPm1W1POhqGQ+HRT/v6d0XT4jcpPbvTpZPoszwVixz1c+QspkEnuMSz5e10XaUatTPlAM1xmFwFE+/geVTS92Sz5tbdtyFXVAPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"d6iopmm0Zz7l1+jTtqlrPjctPapo52k++NGghmqgYz6mJqYFZFJfPuxkGO0mJlQ+PsscRUEiUD7WuXxZsFtEPvZHMCP5CFQ+IKpQQbUUSD4/ha27MGNMPnzW1IfvyU8+kiEUHgoXXD4pL1TwvDVZPvNq4LDXsXU+tflYnRsYgD63Zr6jgliHPgRhb6ztzIw+k2eqneyWkD7qoBvMak+QPlD+XfycjYw+RDCXjI4DhT4RPWBuS/CAPmc70NP59ng+AA5zDhdpcD6la0PhciJnPmBNi1Rrk2E+qmptuhnxaz6SYUBfd2VxPh6ibhOWT2k+5g+fBmEaXD7aY90urAlhPuglVPoo+WI+GHKLNcnqZD5y5uWtN3ZnPpPtDzYIYG0+wEqb1m5EdD4gQIs3LaByPhe2K8cbGXc+7tncCYGebz6QDzjMuOJ0Prq9yoz4c3I+sgo6o7q4fD61m4fmj/N1Pp2FJoMu24A+LfgtMoiclT5uieGAXEagPvRFnxINuJ8+l6YxLzZ/mT7hCHMnB0+TPj1NfTM5zIg+q5PUXp3ggD5tOrj6hyp3PnTvfLlvJ3E+YpkE9C70aj44K4u69a1hPoTEpd7wxVQ+n/NkGaVDQz5Yo+dKqClDPoMfN/NC8UA+ALJ5zNDZRD5gJWrPJ8w6Plpb7RvfwTw+SuTb+tyNYD4KVzyZ1jyRPr9XquQjhZ0+u+RbKbEFoz4IZ34NzUOoPgRq8KBTV60+AnxDIsBprD5KHaSqDGimPhQZTs6mDKU+lsr0ZD/joD7Nfa+DIiuYPo1T0mmY140+iGThBkhRgD4htOI1diBsPlGuNWdFzGo+qkRGzPAIbz5Zt3YgXUVyPnkc8WaGYnU+U0QTXFRKcD7G5oHkfYR9PlKyeJGRqI0+zF7jhey/lj7MMknOnoiWPowSuMYUx5Q+ns+CiL/Pkj7tBTiNqbmQPjCqN4BQ/4s+6vYgqftIhj7+pUFWkDyCPijuyar+c34+4Zifk5hMeD69Eho2zwtzPu+rWPpQ4Gw+FhiI8ylLZT7vSmqRh1NiPqgQktdUHGE+fZAAfabTVD7m1I9sE61bPhIqBhuGAFk+UcOcuiWHUz5ZIR+ayRBIPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5917\"},\"selection_policy\":{\"id\":\"5918\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"5848\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"5850\",\"type\":\"AllLabels\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5917\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5845\"},\"major_label_policy\":{\"id\":\"5847\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5851\"},\"selection_policy\":{\"id\":\"5852\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=864.28, p-value=0.00e+00]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"90cd6a51-5330-4bed-86cb-9bbb38caef86\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"da319165-a79b-49e6-b531-4bf1dc9f5ee8\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:35.147912Z",
     "iopub.status.busy": "2023-11-28T22:10:35.147329Z",
     "iopub.status.idle": "2023-11-28T22:10:35.153322Z",
     "shell.execute_reply": "2023-11-28T22:10:35.152912Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 864.28, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(864.28, '0.00e+00')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:35.162570Z",
     "iopub.status.busy": "2023-11-28T22:10:35.162038Z",
     "iopub.status.idle": "2023-11-28T22:10:35.163924Z",
     "shell.execute_reply": "2023-11-28T22:10:35.164349Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:35.168560Z",
     "iopub.status.busy": "2023-11-28T22:10:35.167614Z",
     "iopub.status.idle": "2023-11-28T22:10:35.170090Z",
     "shell.execute_reply": "2023-11-28T22:10:35.170435Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:10:35.174044Z",
     "iopub.status.busy": "2023-11-28T22:10:35.173482Z",
     "iopub.status.idle": "2023-11-28T22:11:23.741858Z",
     "shell.execute_reply": "2023-11-28T22:11:23.742194Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:11:23.760404Z",
     "iopub.status.busy": "2023-11-28T22:11:23.751408Z",
     "iopub.status.idle": "2023-11-28T22:11:23.763688Z",
     "shell.execute_reply": "2023-11-28T22:11:23.763315Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>3.900000e+01</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1595.325385</td>\n",
       "      <td>4.364902e-02</td>\n",
       "      <td>5.205372</td>\n",
       "      <td>873.250444</td>\n",
       "      <td>1.578193</td>\n",
       "      <td>-0.387196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>2989.867878</td>\n",
       "      <td>1.925952e-01</td>\n",
       "      <td>0.087200</td>\n",
       "      <td>16.114451</td>\n",
       "      <td>0.128222</td>\n",
       "      <td>0.026554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>62.970000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.027182</td>\n",
       "      <td>840.391520</td>\n",
       "      <td>1.376399</td>\n",
       "      <td>-0.431248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>209.635000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.146911</td>\n",
       "      <td>863.941264</td>\n",
       "      <td>1.480652</td>\n",
       "      <td>-0.405815</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>485.400000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.210447</td>\n",
       "      <td>869.632975</td>\n",
       "      <td>1.543045</td>\n",
       "      <td>-0.388768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>970.475000</td>\n",
       "      <td>1.230116e-07</td>\n",
       "      <td>5.264151</td>\n",
       "      <td>885.348765</td>\n",
       "      <td>1.634171</td>\n",
       "      <td>-0.369870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>13906.450000</td>\n",
       "      <td>9.990000e-01</td>\n",
       "      <td>5.462181</td>\n",
       "      <td>912.148641</td>\n",
       "      <td>1.922767</td>\n",
       "      <td>-0.320493</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius    chi_square       p_value    gravity  temperature  \\\n",
       "count  39.000000     39.000000  3.900000e+01  39.000000    39.000000   \n",
       "mean    0.790000   1595.325385  4.364902e-02   5.205372   873.250444   \n",
       "std     0.120018   2989.867878  1.925952e-01   0.087200    16.114451   \n",
       "min     0.590000     62.970000  0.000000e+00   5.027182   840.391520   \n",
       "25%     0.690000    209.635000  0.000000e+00   5.146911   863.941264   \n",
       "50%     0.790000    485.400000  0.000000e+00   5.210447   869.632975   \n",
       "75%     0.890000    970.475000  1.230116e-07   5.264151   885.348765   \n",
       "max     0.990000  13906.450000  9.990000e-01   5.462181   912.148641   \n",
       "\n",
       "       c_o_ratio  metallicity  \n",
       "count  39.000000    39.000000  \n",
       "mean    1.578193    -0.387196  \n",
       "std     0.128222     0.026554  \n",
       "min     1.376399    -0.431248  \n",
       "25%     1.480652    -0.405815  \n",
       "50%     1.543045    -0.388768  \n",
       "75%     1.634171    -0.369870  \n",
       "max     1.922767    -0.320493  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:11:23.771955Z",
     "iopub.status.busy": "2023-11-28T22:11:23.770954Z",
     "iopub.status.idle": "2023-11-28T22:11:23.774384Z",
     "shell.execute_reply": "2023-11-28T22:11:23.774783Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>1557.43</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.115832</td>\n",
       "      <td>877.337972</td>\n",
       "      <td>1.466824</td>\n",
       "      <td>-0.387304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>5232.93</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.298470</td>\n",
       "      <td>852.526489</td>\n",
       "      <td>1.543045</td>\n",
       "      <td>-0.369860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>753.66</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.301957</td>\n",
       "      <td>855.631144</td>\n",
       "      <td>1.541724</td>\n",
       "      <td>-0.369880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>485.40</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.167655</td>\n",
       "      <td>871.424418</td>\n",
       "      <td>1.588005</td>\n",
       "      <td>-0.404678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>95.14</td>\n",
       "      <td>0.697</td>\n",
       "      <td>5.261045</td>\n",
       "      <td>866.037048</td>\n",
       "      <td>1.736593</td>\n",
       "      <td>-0.375708</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square  p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000     1557.43    0.000  5.115832   877.337972   1.466824   \n",
       "1  0.600526     5232.93    0.000  5.298470   852.526489   1.543045   \n",
       "2  0.611053      753.66    0.000  5.301957   855.631144   1.541724   \n",
       "3  0.621579      485.40    0.000  5.167655   871.424418   1.588005   \n",
       "4  0.632105       95.14    0.697  5.261045   866.037048   1.736593   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.387304  \n",
       "1    -0.369860  \n",
       "2    -0.369880  \n",
       "3    -0.404678  \n",
       "4    -0.375708  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T22:11:23.847620Z",
     "iopub.status.busy": "2023-11-28T22:11:23.824557Z",
     "iopub.status.idle": "2023-11-28T22:11:23.851582Z",
     "shell.execute_reply": "2023-11-28T22:11:23.851940Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"a9d971af-d395-4008-a2e2-e23ee0fc8e03\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"6ef1c3d3-04ae-4296-a066-0c0c9ef2fd13\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"6340\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6340\"},\"major_label_policy\":{\"id\":\"6342\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"6346\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"6343\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"cZAc0TQ65D/Uld4ZcJDkPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]},\"y\":{\"__ndarray__\":\"KVyPwvXIV0Bcj8L1KHxPQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]}},\"selected\":{\"id\":\"6346\"},\"selection_policy\":{\"id\":\"6347\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"6342\",\"type\":\"AllLabels\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"6345\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6343\"},\"major_label_policy\":{\"id\":\"6345\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"6ef1c3d3-04ae-4296-a066-0c0c9ef2fd13\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"a9d971af-d395-4008-a2e2-e23ee0fc8e03\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
