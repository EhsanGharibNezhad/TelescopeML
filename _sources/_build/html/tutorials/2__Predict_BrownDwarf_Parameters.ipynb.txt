{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:08.049932Z",
     "iopub.status.busy": "2023-11-28T21:17:08.049155Z",
     "iopub.status.idle": "2023-11-28T21:17:14.833648Z",
     "shell.execute_reply": "2023-11-28T21:17:14.834009Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:14.839844Z",
     "iopub.status.busy": "2023-11-28T21:17:14.838835Z",
     "iopub.status.idle": "2023-11-28T21:17:14.842208Z",
     "shell.execute_reply": "2023-11-28T21:17:14.842521Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:14.846173Z",
     "iopub.status.busy": "2023-11-28T21:17:14.845649Z",
     "iopub.status.idle": "2023-11-28T21:17:17.300815Z",
     "shell.execute_reply": "2023-11-28T21:17:17.301205Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.309577Z",
     "iopub.status.busy": "2023-11-28T21:17:17.308953Z",
     "iopub.status.idle": "2023-11-28T21:17:17.311381Z",
     "shell.execute_reply": "2023-11-28T21:17:17.311832Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.318252Z",
     "iopub.status.busy": "2023-11-28T21:17:17.317678Z",
     "iopub.status.idle": "2023-11-28T21:17:17.320016Z",
     "shell.execute_reply": "2023-11-28T21:17:17.320360Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.323344Z",
     "iopub.status.busy": "2023-11-28T21:17:17.322809Z",
     "iopub.status.idle": "2023-11-28T21:17:17.752598Z",
     "shell.execute_reply": "2023-11-28T21:17:17.753004Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.757406Z",
     "iopub.status.busy": "2023-11-28T21:17:17.756749Z",
     "iopub.status.idle": "2023-11-28T21:17:17.760158Z",
     "shell.execute_reply": "2023-11-28T21:17:17.760570Z"
    }
   },
   "outputs": [],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.764584Z",
     "iopub.status.busy": "2023-11-28T21:17:17.764028Z",
     "iopub.status.idle": "2023-11-28T21:17:17.766154Z",
     "shell.execute_reply": "2023-11-28T21:17:17.766548Z"
    }
   },
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.770249Z",
     "iopub.status.busy": "2023-11-28T21:17:17.769674Z",
     "iopub.status.idle": "2023-11-28T21:17:17.771465Z",
     "shell.execute_reply": "2023-11-28T21:17:17.771927Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.775689Z",
     "iopub.status.busy": "2023-11-28T21:17:17.775133Z",
     "iopub.status.idle": "2023-11-28T21:17:17.830276Z",
     "shell.execute_reply": "2023-11-28T21:17:17.830677Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"d988d108-6b25-43ac-945f-2b4cb446d156\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"065fb1ee-75bd-4448-82f8-df7799d0049c\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1041\"},\"major_label_policy\":{\"id\":\"1039\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1066\"},\"selection_policy\":{\"id\":\"1067\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1039\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1041\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1042\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1044\"},\"major_label_policy\":{\"id\":\"1042\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"1044\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"7uwrD9LT5D/I0RxZ+eXkP6g5eZEJ+OQ/jSRBuAIK5T/UYvAw7RvlP04MycnELeU/KQmJtI0/5T97TQ8KSlHlP1vNOuP7YuU/4XzqWKV05T8MXB5rRoblPwlTlEvjl+U/2GFM+nup5T97iEZ3ELvlPzOjHw2nzOU/A7LXuz/e5T/TwI9q2O/lP+er5GN3AeY/P3PWpxwT5j/bFmU2yCTmP9KKbyh8NuY/Jc/1fThI5j8WwJSBA1rmP3l1jgHZa+Y/e9egL7195j8d5ssLsI/mP3SV7q6zoeY/guUIGciz5j9cyvli78XmPwNEwYwp2OY/jUY+r3jq5j8Rxk/j3vzmP3nOFhBaD+c/8UdRZ+4h5z97Mv/omzTnP/6ZQXxgR+c/qmbWUkBa5z+TjJyFPW3nP44j1uJTgOc/xxNBnIeT5z9VUbzK2qbnPyHoaFVLuuc/LNhGPNnN5z+iCRSxiOHnP26I8ZpX9ec/pki+EkgJ6D9JSnoYWh3oP1iNJayNMeg/0xHAzeJF6D/ovwevXVroP2ivPh76bug/gsgiTbyD6D8eF9UiopjoPz2bVZ+rreg/DD1i9NzC6D9eFD3wMdjoP18JpMSu7eg/+ie4WFED6T9FZFjFGxnpPyrKpfELL+k/vk1/9iNF6T8D7+TTY1vpP/et1onLcek/nIpUGFuI6T/xhF5/Ep/pPwyR09fztek/2LrUCP3M6T9UAmISLuTpP5ZbWg2J++k/oMa9+Q0T6j9ZT62+uirqP8P1KFyPQuo/CqLuA5Ba6j8BbECEuHLqP79H/fUKi+o/LUFGQIWj6j95QNmUK7zqP15pGan31Oo/IJijx+/t6j+T5Lm+DwfrP8xCO6dZIOs/zLIngc056z99QKAzaVPrP/Tfg9cubes/G53zUxyH6z/yd++oMaHrP5FkVu9wu+s/9mIoJ9rV6z/0iqceafDrP7nEkQciC+w/FygpsAAm7D89nStKCUHsP/s726M3XOw/avgW1o137D+J0t7gC5PsP0HWU6uvruw/qfdUTnvK7D+rQgOxbObsP1yrPeyFAu0/kElGzsIe7T9eEfxvJTvtP9z2PeqvV+0/xR1v8lt07T9fYizTL5HtP2To2EElru0/A5gycEDL7T8kfVpFf+jtP8iXUMHhBe4/7+cU5Gcj7j+BeciUD0HuP5ZASuzaXu4/F0m70cd87j8ah/pd2JruP3MSSl8Iue4/N9+I7lnX7j9R+dfyyvXuP9ZUFoVdFO8/sf1kjA8z7z/g88MI4VHvP2U3M/rRcO8/P8iyYOKP7z9XsmMjEK/vP8TpJFtdzu8/WYY41sXt7z/0T3CxogbwP9hHp658FvA/vD/eq1Ym8D+DwMqhRTbwP7wFEhQ/RvA/2NMOf01W8D9mZmZmZmbwP2a9GMqJdvA/2NglqreG8D+7uI0G8JbwP4Ehq1s9p/A/uk4jLZW38D9kQPZ698fwP3/2I0Vk2PA/DXGsi9vo8D8MsI9OXfnwP+53KAr0CfE/0T/BxYoa8T+XkA96NivxP13hXS7iO/E/Brth26JM8T+vlGWIY13xP8oyxLEubvE/V5V9VwR/8T/HgOz17o/xPzdsW5TZoPE/qFfKMsSx8T/7y+7Jw8LxP8AEbt3N0/E/hj3t8Nfk8T+9OseA7PXxP2X8+4wLB/I/Dr4wmSoY8j+aCBueXinyP7SOqiaIOvI/sp3vp8ZL8j+wrDQpBV3yPx+A1CZObvI/ARjPoKF/8j/ir8ka9ZDyP8NHxJRIovI/iGh0B7Gz8j/bxMn9DsXyPxGq1OyB1vI/1cqEX+rn8j8MsI9OXfnyP7RZ9bnaCvM/XANbJVgc8z92cRsN4C3zPx4bgXhdP/M/qU2c3O9Q8z/Du1zEd2LzP07udygKdPM/2iCTjJyF8z/XFwltOZfzP2JKJNHLqPM/0QX1LXO68z/O/GoOEMzzP8vz4O6s3fM/Oq+xS1Tv8z+paoKo+wD0PxgmUwWjEvQ/h+EjYkok9D/1nPS+8TX0P9YcIJijR/Q/Rdjw9EpZ9D8lWBzO/Gr0PwbYR6eufPQ/5ldzgGCO9D9VE0TdB6D0PzaTb7a5sfQ/FhObj2vD9D/3ksZoHdX0P9cS8kHP5vQ/Rs7Cnnb49D8nTu53KAr1PwfOGVHaG/U/donqrYEt9T/lRLsKKT/1P8bE5uPaUPU/NIC3QIJi9T+jO4idKXT1PxL3WPrQhfU/D+7O2m2X9T9+qZ83Fan1P3ugFRiyuvU/eJeL+E7M9T91jgHZ6931P3OFd7mI7/U//reSHRsB9j+J6q2BrRL2PxUdyeU/JPY/L4uJzcc19j+6vaQxWkf2P9QrZRniWPY/fNXKhF9q9j+WQ4ts53v2P8wolltajfY/dNL7xtee9j+qtwa2SrD2P+CcEaW9wfY/F4IclDDT9j/boswGmeT2Py7/If329fY/8x/Sb18H9z/Ut8zpshj3PycUIuAQKvc/CKwcWmQ79z94f7xXrUz3P+dSXFX2Xfc/Vyb8Uj9v9z9UNUHUfYD3P1JEhlW8kfc/3o5wWvCi9z/5FADjGbT3PxObj2tDxfc/LSEf9GzW9z/W4lMAjOf3P3+kiAyr+Pc/tqFinL8J+D972uGvyRr4P0ATYcPTK/g/Bkzg1t08+D9ZwARu3U34PztwzojSXvg/HSCYo8dv+D+NCwdCsoD4P4syG2SSkfg/ilkvhnKi+D+IgEOoUrP4PxXj/E0oxPg/MIFbd/PU+D/ZWl8ktOX4P4M0Y9F09vg/LA5nfjUH+T9kIxCv6xf5Pyp0XmOXKPk/fgBSmzg5+T/SjEXT2Un5PyYZOQt7Wvk/lxx3Sgdr+T8IILWJk3v5P3kj88gfjPk/eGLWi6Gc+T8F3V7SGK35PyGTjJyFvfk/PUm6ZvLN+T/nOo20VN75P5EsYAK37vk/yVnY0w7/+T+PwvUoXA/6P1YrE36pH/o/q8/VVuwv+j+Orz2zJED6P3GPpQ9dUPo/46qy74pg+j/iAWVTrnD6P+JYF7fRgPo/cOtunuqQ+j+MuWsJ+aD6P6mHaHQHsfo/U5EKYwvB+j/+mqxRD9H6P8UbmUf+4Po//mDguffw+j9UHXIz3AD7P6nZA63AEPs/jdE6qpog+z//BBcrajD7P3E486s5QPs/cqd0sP5P+z9yFva0w1/7PwHBHD1+b/s/HqfoSC5/+z87jbRU3o77P+auJeSDnvs/IAw89x6u+z9ZaVIKur37PyECDqFKzfs/d9Zuu9Dc+z/Oqs/VVuz7P7K61XPS+/s/JQaBlUML/D+YUSy3tBr8P5nYfFwbKvw/ml/NAYI5/D8pIsMq3kj8P0cgXtcvWPw/ZB75g4Fn/D8QWDm0yHb8P0vNHmgFhvw/hUIEHEKV/D9N845TdKT8PxakGYums/w/bZBJRs7C/D9SuB6F69H8Pzfg88MI4fw/qkNuhhvw/D8ep+hILv/8PyBGCI82Dv0/sCDNWDQd/T9A+5EiMiz9P14R/G8lO/0/fCdmvRhK/T8peXWOAVn9P9XKhF/qZ/0/n5PeN752/T/aIJOMnIX9P6Pp7GRwlP0/+u3rwDmj/T/gLZCg+LH9P8ZtNIC3wP0/rK3YX3bP/T8gKSLDKt79PyLgEKrU7P0/JJf/kH77/T+1iZP7HQr+P0Z8J2a9GP4/ZapgVFIn/j+E2JlC5zX+PzFCeLRxRP4/3qtWJvxS/j8aUdobfGH+P+QxA5Xxb/4/rhIsDmd+/j9381SH3Iz+P9API4RHm/4/tmeWBKip/j+cvwmFCLj+PxFTIolexv4/huY6jbTU/j/7eVORCuP+P/5IERlW8f4/j1N0JJf//j8gXtcv2A3/P0Ck374OHP8/YOrnTUUq/z8NbJVgcTj/P7vtQnOdRv8/aW/whclU/z+lLEMc62L/P3AlOzYCcf8/Oh4zUBl//z+TUtDtJY3/P+yGbYsym/8/RbsKKT+p/z8sK01KQbf/PxObj2tDxf8/iEZ3EDvT/z+MLQQ5KOH/P5AUkWEV7/8/lPsdigL9/z8TDyibcgUAQFwgQfFjDABAbM8sCVATAEB8fhghPBoAQFPL1voiIQBAKxiV1AkoAEACZVOu8C4AQKBP5EnSNQBABthHp648AEBrYKsEi0MAQNHoDmJnSgBA/g5FgT5RAEArNXugFVgAQB75g4HnXgBAEr2MYrllAEDNHmgFhmwAQIiAQ6hScwBACoDxDBp6AECNf59x4YAAQA9/TdaohwBAWBzO/GqOAEBpVyHlJ5UAQHmSdM3kmwBAis3HtaGiAEBhpu1fWakAQDl/EwoRsABAEFg5tMi2AEB2bATidb0AQBXj/E0oxABAe/fHe9XKAECoqWVrfdEAQA6+MJkq2ABAAg6hSs3eAED2XRH8b+UAQOutga0S7ABAppvEILDyAEBhiQeUTfkAQOQUHcnl/wBAZqAy/n0GAUDpK0gzFg0BQDJVMCqpEwFAQxzr4jYaAUBU46WbxCABQGWqYFRSJwFAPQ/uztotAUAVdHtJYzQBQLR224XmOgFAGhcOhGRBAUC5GW7A50cBQOZXc4BgTgFATfilft5UAUB6Nqs+V1sBQG8Sg8DKYQFAY+5aQj5oAUAfaAWGrG4BQNrhr8kadQFAXfksz4N7AUDgEKrU7IEBQGMoJ9pViAFArd12obmOAUC+MJkqGJUBQM+Du7N2mwFA4NbdPNWhAUC5x9KHLqgBQFhWmpSCrgFA9+Rhoda0AUCXcymuKrsBQP2fw3x5wQFAK2owDcPHAUBZNJ2dDM4BQE6c3O9Q1AFAQwQcQpXaAUA3bFuU2eABQPNxbagY5wFAdxVSflLtAUD6uDZUjPMBQH1cGyrG+QFAx53Swfr/AUDZfFwbKgYCQOpb5nRZDAJAw9hCkIMSAkCbVZ+rrRgCQDtwzojSHgJA24r9ZfckAkB6pSxDHCsCQKn7AKQ2MQJAD7QCQ1Y3AkAFqKllaz0CQDP+fcaFQwJA74/3qpVJAkDkg57Nqk8CQGiz6nO1VQJA6+I2GsBbAkBvEoPAymECQLnfoSjQZwJABK3AkNVtAkAWGLK61XMCQO8gdqbQeQJAxyk6kst/AkCgMv59xoUCQEDZlCu8iwJAqB3+mqyRAkAPYmcKnZcCQHam0HmNnQJApIgMq3ijAkCaCBueXqkCQJCIKZFErwJAhQg4hCq1AkBCJhk5C7sCQP5D+u3rwAJAgv+tZMfGAkDNWDSdncwCQBiyutVz0gJAYwtBDkrYAkB1ApoIG94CQIf58gLs4wJAYY4ev7fpAkA6I0p7g+8CQBO4dTdP9QJAs+pztRX7AkAbu0T11gADQIKLFTWYBgNA6lvmdFkMA0AZyol2FRIDQEc4LXjRFwNAdqbQeY0dA0BsskY9RCMDQGK+vAD7KANAH2gFhqwuA0AVdHtJYzQDQJm7lpAPOgNAVmXfFcE/A0DarPpcbUUDQF70FaQZSwNA4jsx68VQA0AtIR/0bFYDQHkGDf0TXANAxOv6BbthA0DWbrvQXGcDQCJUqdkDbQNANNdppKVyA0BHWipvR3gDQFnd6jnpfQNAa2CrBIuDA0B+42vPLIkDQFcE/1vJjgNAaoe/JmuUA0BEqFKzB5oDQB3J5T+knwNAMEymCkalA0AJbTmX4qoDQBzw+WGEsANA9RCN7iC2A0AIlE25wrsDQOG04EVfwQNA9DehEAHHA0AGu2HboswDQBg+IqZE0gNAK8HicObXA0B2ptB5jd0DQMGLvoI04wNADXGsi9voA0BYVpqUgu4DQNydtdsu9ANAYOXQItv5A0AdjxmojP8DQNo4Yi0+BQRA0ETY8PQKBEDGUE60qxAEQPW+8bVnFgRAIy2VtyMcBECL/WX35CEEQCswZHWrJwRABcWPMXctBEDeWbvtQjMEQPBQFOgTOQRAO6qaIOo+BEC/ZU6XxUQEQHuDL0ymSgRAcQM+P4xQBECf5Xlwd1YEQAYq499nXARAptB5jV1iBEC4O2u3XWgEQAMJih9jbgRAhjjWxW10BEB8LH3ognoEQKqCUUmdgARA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1046\"},\"selection_policy\":{\"id\":\"1047\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"065fb1ee-75bd-4448-82f8-df7799d0049c\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"d988d108-6b25-43ac-945f-2b4cb446d156\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:17.852241Z",
     "iopub.status.busy": "2023-11-28T21:17:17.851764Z",
     "iopub.status.idle": "2023-11-28T21:17:18.051290Z",
     "shell.execute_reply": "2023-11-28T21:17:18.051621Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:18.055818Z",
     "iopub.status.busy": "2023-11-28T21:17:18.055259Z",
     "iopub.status.idle": "2023-11-28T21:17:18.057687Z",
     "shell.execute_reply": "2023-11-28T21:17:18.058082Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:18.070396Z",
     "iopub.status.busy": "2023-11-28T21:17:18.069336Z",
     "iopub.status.idle": "2023-11-28T21:17:18.073023Z",
     "shell.execute_reply": "2023-11-28T21:17:18.073310Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:18.078486Z",
     "iopub.status.busy": "2023-11-28T21:17:18.078025Z",
     "iopub.status.idle": "2023-11-28T21:17:29.963891Z",
     "shell.execute_reply": "2023-11-28T21:17:29.964265Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.3353090445200602,\n",
      "    'gravity': 4.999029366175334,\n",
      "    'metallicity': -0.3622271716594696,\n",
      "    'temperature': 823.8054361979167}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    4.999029   1.335309  -0.362227  823.805436\n",
      "std     0.154479   0.212535   0.072530   28.191407\n",
      "min     4.702549   0.961603  -0.435096  773.174072\n",
      "25%     4.876162   1.223360  -0.411810  799.316055\n",
      "50%     4.982525   1.295366  -0.395370  819.093872\n",
      "75%     5.112027   1.410740  -0.324092  846.787048\n",
      "max     5.322156   1.996904  -0.175348  880.848022\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f3217cab-de13-4a9e-ac91-7762eacca633\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"9ba2f775-e0cf-43cb-b133-2112534d3fd3\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1329\"},\"major_label_policy\":{\"id\":\"1327\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6XvOvGSxOT6c8VIBw29GPrmywUHJej4+2dPsz6RERj6HBOD8DJ5APrreXlCpzU4+VsTsPSG8TT4TcrDzHuBHPg31hxXdslM+EPI7i14pWT4CHPx5dB9iPiBS/TmMe2k+5LEgLAi9cD476qb6Qd5yPo7EVsqIoHc+nJ5u3bqLez4BZP/zjRt/PkmxxjMMAoI+DXIjKkWngz7cT6La1GqDPrtuNrpAoXg+F/O3/BSeZj5gZnLd8cBQPuPH/sc9AlQ+tzSv1oE3UT54P4Pzlf1HPlPb6UMNnEg+Be+DKUdZUT6NxcPl7T9iPp6uespxPnA+/IIDikInez4dSeNcZY6CPsl82YnHMok+b00tiWzqjz58czyIzbqTPqsQjiZOx5Q+clO5FXfvkT7qLq0rXIuMPqfwGxwC84Q++HyedCXHdz74Gq047xBQPsjL+6SUEiM+Temcr3/YKj4gMtmR9WcxPo7L5ucqc0w+2fugDKnJQz5EIX48gdRFPsY5jrESPjI+CgHUJCgxQD5U2AJVrdlSPntcoT3q510+xnxYlSsRXz6Okg4f7gVoPv43tMP7xHA+o1Z0zlEwfT56YyDyT8eFPjrpnhTGRYw+HKlkIg6Pjz7KeskFyRqGPgkvhp4wV2s+9D++Gq3VXz4GTf954wxjPiGgAEbq9l4+j1ITPp2QXT4966d37ghaPuuP++M1rl8+8ZsKGo54YD6zUniho1tYPo91Tx3OU1E+jpkDj5eRVD5+Uv0IRj1EPjMBvdWIvEg+TjtFY0qvWT6qeKYF8YFOPnzl5EfSHVE+SD56v109WT7ANk0UTxBVPtqfrfHF80c+nsy0749vWD7xX+dRskdWPq/UMv2JFms+cL25BPuNbD6wy7W7P3h0Pu152DddvXo+roHiuoJ2fT60OkX/SAZ9PtTK8fJypng+Gk9RPpsPdD4uKIg0/uRrPoeq4nLe3WU+H9/XKJUPUD4SbcGI+dxCPrvT9Yz1e0Y+Ih2D4ZYsQj5W0okcgPtCPlEKyXszo0w+hC3y+WEbST4eq4vz891FPiETl+JSX08+h8og7uFrUz4fFw5rXLNePhh91eXdeFY+G2Vji+nJZT7gM2UFPPNhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1345\"},\"selection_policy\":{\"id\":\"1346\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"p3oKF9djQT6x3vHlRVNCPmgz2ZWiAz0+N0nuVEf3TT4YKG2fr5FFPnwZmUvm3VA+VitkbpIRRj5m2FeYf09NPhXnGu2nWFU+El2xh7ZtXD5zugmvL59iPiwtJ5OQkWk+0sdIfzclbz7vyWWMLdRyPuQuN/kjBnk+57xCsnq0fD4DgsTYyEF+PrAvomb254E+Sjhmxw/bgz7c1ZebD9+DPom3aLeM6Hg+YkU5qIVTZz7h3OimJYZRPkwrGq0kqFM+CkIdjdZbUD7QZblb/xRKPhsNJMaz+EY+/u1w25X+UD7g3dfgrBdiPtmqok1Sk3A+G04SCFAjez7SBdLpEdCCPgh8W5DFIIk+cAJ+aIKJjz6spqG9dZyTPsw8ns6+xpQ+B0POIDnZkT7Dazh406mLPg3RuxxVWoQ+ky+76hDKdj6IfVBiOJhOPs0xTxJ9TCI+shOpgBslPz4Vu5B1b8hMPl7cVH69l0Y+hxaBVJLrRz41D85bYNMqPqhEIA8aFUI+8d6qsWxgOT5OnCwK4RNVPhXqWgtmD1s+QUDwR4TnYD6HtgvAdDRoPqcVKB1VBHI+Jtnr1eWLfj62ouqitfiFPib2X6/hDI0+2okg2tMfjz75daNaCg+GPqL7HbfLpmw+8GXvt35HYT4Z3fqCNkhiPmQxAN5CE1w+iFYz7kOvXT6ltRPGZstXPtvpu+oCL1w+PlSCvkUqYT7y4fn0koRZPj/N57pdx1Q++5P7MDclVj5qd3DTZLdEPqe+SbkK6UE+4vklDSNmVz4oNTIK6JdEPthLcj83j0c+xBYJ4RT0Vz4DhLyQCUtXPmADUjo8lEw+myd6tH8eVT4EtoABrh9XPuKtvJ6tb2k+BBbZ4EnDbD5guSSI+NJ0PkyIQfKZc3o+BrHkWp8Xfj4A9ELVUAx9PiF2uqMZP3k+zCUULhMOdD7lRvo+UhBrPnQUqw8fX2U+AQob0M4sVj6PGYZLz1xHPrymSl4ookQ+oR3SDa4ORT7mo1eGTEdHPk83nj8swkc+RTQAEaRaQj4eZvLakU9GPhRfR2Fnq1U+kyxTm9nUWT7BEHgJFIFcPn2B88d4nl4+3n0WyntdZz5aIufhuzFlPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1379\"},\"selection_policy\":{\"id\":\"1380\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1326\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tmIbsB1iPT4yJztOVZ5BPqYJuZrhazc+UewcI6I4Sz7txmD/NrdIPugGaObBoko+ulOWC9AzSD5U3HxkDHlPPjB32vyc61A+F3i2PROBWj43IzEstfBhPmnjZud7Kmo+OqjnGsTabz4tK9Cd069yPi1yN1rBnnc+DtyICmK6ez5EWaaw3K1/PvP0Mtl+BoI+A3EJp1JTgz7eAlWlkOODPoZSkxMW9Hg+ldZELcgLZz5xEfIwFGhSPogD3KNX6lI+v4zVPkIuTD6giC7VscdGPgL6WOqg3UU+BgTRQ7UzUT53o/7hJUpiPo2UcUoC3XA+CMsF69EZez7x94BSVGqCPhZzuln/Bok+Y//vrySgjz4wPexWW+KTPobDmsg25ZQ+BocO2jS+kT7H4HbGOwWMPk5p8RzqJ4U+OeKiSP04dz6v2zYHJ35RPlXtoAXNyiI+9GZ4QJzdLT4/bbTRLpw+PmHjC580Qzs+dD8wjcBBMT5MIbRp2hAxPq6SU8bmHj4+9PcQxw8iRj7ES7m/ff1XPqVlauMQZV0+7ZtulScbWj5lMc0SsXlnPmp/aWLhVXE+OEa4ij3Hfz75lxvhLPyFPmknGaESa4w+wgx6Umiqjj7okwsjZ+2FPsi5rcyyCmg+BZ3r5hs2YD6VCqT6ZERgPiqEl/hz7Fk+xJJDLtdXWT7fal/7k0VWPoGsasedK2A+Btg3wsrEYD4VEkCiDKhWPnz6aDLY/VY+dEXeMVGvSD5sERv/tkgyPgmgpPfB/kY+YGqD/2NKUD5elgsbOd1RPiuMJY7Rd1U+VrBxs7r1WT4AG8hloFVaPn0xCV7Ub0Y+oKueL7vTTj5dm81D739aPhULopUdMmo+NIQy4ZNLbD74cv9kULJzPlTKgAoxqHo+xdBwMkaffT7cfU5/hzt9PrKeOkACRHo+c8oKRJ6Jcj67tVWnWJ5rPva6pXIllmU+a+d9Wd5JVz4iF9p8jwpCPhcFbZtqrEA+xNgUMzOLTz57E0SKzpJFPhOhlXgvpkY+8jfogSNGSz4UQe2NbVxTPt6dms4nHU8+tNshDO89Xj5W0DABnwNRPg/xbjDlx2Q+Q6ohbWh+Xj7CAsKNwiBwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1355\"},\"selection_policy\":{\"id\":\"1356\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"V0AQxUjpRD4mQyx8Nmg4PtWPfDJV9Do+uEcopshfRD4I8Dhq649DPugP4Q8tNEo+enChSlPASz6EoD/ba1RGPidZmVDTN1M+XWbgIEBOWz4Nk0mUnV9iPpGMNKfLW2o+tLcs9lZNcD5/1ljIeJVyPq1b/5gFiHc+zBjU13IgfD4NjuLi0B5/PhL+RXLIu4E+jaUvsHuNgz6Kx/0qc4WDPhEtvnx1x3g+QbUejAW0Zj7uZyrR0SJRPq62fOePdVU+G3n8ZMKUUz7zc8LqCiJMPjLtNoBm2EY+GJQCuHaIUT5dSBpKh6tjPsEX7l9OXXA+qdHKq4x4ej5hV9ARBaqCPr/evD2HXIk+3EW5QwVSjz5t0ySDuJmTPvrDTaHu0ZQ+9xLh6ATCkT4BlrGbZJuLPs1s/C0t6IQ+kauKww/vdj4tTF92R/pOPkCBpCz+bEA+p1WhUC1XOT69PDMolbY6PnysFOmEYzw+aygD9dfAOj5yceq+dGA1PpPs5Yv/0zg+LcE4emm9Pz6aKYvDd3NYPiXovVY7cV0+uuI+Bl4KXD7ZB4RanY1nPusQuao2JXE+IiUE3Novfz4Ww7hVShmGPoN4i69Ge4w+3L718j23jj4cYGDAfQyGPpZCJME1TG8+XHLIDfhVYT4HQLnUa7piPvt4iFKyy10+y/z4MemgWz4+s/qpKgxaPrtAy90wRF0+nsRA4mknYj4+VvaMYe1XPt2kPC+fOVA+zvMz4rzcUj7kIQnQykVHPmO9OJ1TrUg+TqdvwcuPUz51ql4iJbdFPogwEjql7Ek+zLq7TAEnWD6wg4tU0GBPPoe0tH+uT0Q+cS1YjOwAST7nux9iTzJaPvWEqGV+yWY+NxDDmIHxbj4wUFZYN0t0Pqhj2Worxno+ca8ePTI/fj7CnPE94Ht9Ptfbvnyq43g+63opqqkgcz7RegTVf2hqPnnEPzPw+mI+XpyB+r0VTj7Q7Qer7y1KPgFwhbt6rj4+iFNqGrJCRT7aBk1tOmlBPhhnD9cw4kg+NwnGrLmYSj73bHboVURNPtbwJNfDOk8+7eipLoDsWz5CcqUauw9cPu4kCHDuSGU+p1orsdlrWT740pQORV5lPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1361\"},\"selection_policy\":{\"id\":\"1362\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BkXO3t7xMD6zZmHwLaRBPokhUJZssjo+yHZy6xKrRD7t7eejrB5DPpS8dER9EVI+Cxk8N+oCTz4mELl2LQpPPiKhO/ZApFM+K4RZIt3zWj4RayRth7FhPq/e9CeylWk+nXR/mcIKcD6FvYj0DxdyPk1/evm1nHc+DRY0i69aez79I16VNw9/PuOGZ9z/8IE+ZgOx4Iyagz7fZ2KqoN6DPvfzsTDVy3g+X8uG0ChRZz41SiSkr39SPhBn2nO71lM+HURGNgI5TT4Wt4fe/PVGPqtnveyld0Q+v95WCAWAUT6z5stO5jhiPq82yGdxmHA+TfIoHHPJej5O2yzR14mCPiNmRkQu94g+X6Ikv3DMjz6JqMQRBbGTPoiVhERy0ZQ+S/UkmE8Rkj7Np/Q4jqSLPmQABaV5w4Q+Bo60rbRVdj7GRGD4GP5QPiVz5TL6+Cs+a6PSHB1gMD5Pu6SnNg9DPvZ5/sjjoUI+zeaRebEtQj54+0hNzGEpPjNzG65PiDQ+i0AeOVoJQj5UOwLRd0JZPp6eeSs6glc+M3mXEyVjWT7O8UksrE5mPkeuF9WXnnE+jCytavfgfj4wU4KCNdmFPuHDuM6gpIw+jPR8RfOPjj73de56v/yFPml/qyxkPW4+ZgFyrgPuYD4divc0G3BjPvQ9/scFqmE+917pNp9+WT5YrcbPIL5aPpxDzG+y2Vw+Rg4pM296XT79v+g1NuNXPrbCleI+kVc+/gscT4oIUj6seH+AmVJBPuI/iSS+aUc+0QzEXIMqUj7yPYNQkkBVPjmRidFjd0I+vqVodaIaWz6M0vIHFWVbPkmtJuN/b0c+1GsuyPYUUT5JxIIVNiZYPg/EnMmoAWg+mhlyEhkScD6LIvKMdht0Prk2mEEVNXo+7iY+XZSgfD4L2TAPHqx8PvpX3KNjCno+1CStBSZSdD72H/MLZolrPhGfvrijS2M+27Hw0EjXUj4aDAZFQRVFPsJYHXgYuEg+hCKeRNZxTj5SfMrBUWw7Pjt2N6SzSks+eazx6Z3yRD7yPLY7Hv9LPvHpKKv42U0+hvbttOHqUD7TGkoU4RpWPu57vuBBBWM+Aa4JuvTaWz4+ZdfuuZFwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1353\"},\"selection_policy\":{\"id\":\"1354\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"s5XucnfYPT5LVAn4EEdCPoj+YXwoMzc+vQu67psNRz4ZhN7ym4lEPguJyTbJ604+OsusPVDwSj493jgGX1tLPuy9c1V6W1I+6pFVUSsNWj5yL1/6m6liPqz7ckCKr2o+J2NjuiHkbz4YGUzN2GpyPmvpdI0AcXc+dXcO9GJ6ez5rmVaj6Dl/PubYmQrP0YE+w24axi9Egz4M5LwQnKGDPiDCzEKsTHk+1E0RCAjRZj5clcBFyvZQPjosJNXntVI+6zlJOQnGUD6hpD3QYstCPv1ymBMBXUI+v2QxwPl1Tz4k50bCso5hPsKR8orXUnA+sBwit1IMez43ykG84JaCPoCrMxlUI4k+EbgsMAedjz4B+LTmiLSTPj1tYMRl/pQ+72jMB5QOkj63/romX9iLPqrHzbIkr4Q+3iTXMpkhdj4nMcaNGfxRPjeBlgA7eCU+0FTIQnKJKz7zYhovzsYzPp044zRUCEc+8zslrYwGMj5EOiogdrk8PoGbDnLl8Tk+sB+jnasxPT5B4xp0pstWPjkTCZJ/ll4+u1A4f5MkWz5axNpPVwZnPhoCxIcQfHI+69qcMJudfj5Fqb7IJhKGPquzUoH2h4w+y1WMVno1jz424PjW6M6FPs4s+wdDUmw+PzjNv3OEYD4ROYWJT0tjPipZWl26sV4+X4w/i0hhWz6ZBLj44M1cPokTKezHv2A+MdaXgAQWYD7JveuBKJpXPmKXRcledFg+Z8Map3wlUz4///0O1ndQPv133p7WT0U+ttBpZ0toVT561UvOUwZZPr+TRzE4fVM+rZ7CMlbbVj7icWdU77tWPqnCL9IzwUI+Zo0LvJixUj6TlHV5+JFYPi2Xco7ET2k+Rd3mypfpbj7IxLPNb6Z1PgaTC2MzRXo+kIP2MU5Bfj45BzaYwlh9PnqywFtBhnk+FapimvDKcz67zvJzMMNrPtoldHUWuGQ+VSaXlsVHUj5WaaK4jCxHPgU6ldD/cz8+NPhDwKJhQD7IywUGqHFKPoDqiEnQklU+8SFoW8NOQj5LPempRqdBPhmBSqi7a1g+PHM8sGzKVz6kjiMfOF9PPhAtxsPsyFA+dyrT18P1ZT7MH1bRSO11Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1351\"},\"selection_policy\":{\"id\":\"1352\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"bimXQrEfPD5DScBm1gZEPsmMj5HZXjo+q4JPnXFDSD7JD31Ty7JCPhV7eJpwEkk+a9ZPnDh1ST6CD1dZdZREPnmfLFtVBlc+375io22DWj4EiTHamE1iPrW+72lyoWg+8ui4FfQNcD47ShuQvrhyPojAqUJJaHc+7sjUFd8UfT58cXrb9rx+Pkgf/rlM2YE+2GkkL7fggz4sCgg9Y7iDPsEbFLAwZnk+ykrvOeyGZj6sfYzEtD5SPkvKgc74TlI+bzmRDfivST5wJioDJulFPttKDv8makM+AC3D3+6EUT6z3R2fpO1hPlNF5F7/HHA+2SA37a3Yej6oklvr0tuCPr/VC2bD/Ig+8QEM6IWgjz5aSjwddLeTPg1sMle3KZU+oF0TO1TRkT4rjfISyvqLPnHYx9E424Q+TRarvAz+dj6QqTNXvaRNPgXa1nMyqSQ+eza736m+Mj4/XAiWn9sjPkt8horU1UA+jIEtdGZHRD61ffKHb6xDPnglmYSOCzo+eom8X/FIRT7Uvtu4mOdWPtiE1PJs6Fo+5HM2vM2nXD6FcPRI4v1pPveYPnLE+HA+LJuKASd8fT7A/3xzUT2GPkepm4KmNIw+YbhSH1DnjT7MRCQVsI2FPgFaFsi21W0+/Azru2tQYT6ZN5R+FEdjPn7YCFG6UFw+iUqTEBonXD4qVwxO4jhaPjQPlACVQFo+GOACu4fUWT7QwhbwW2tdPp/Zuf6w3FE+K7GyBZbAUD5bIFeaH2BNPr8laB5cMlM+vbCKPVoQSD4yNxQ5rTtUPn+CtzfdplQ+h5+d2fgfWD6MWWV5ItVUPpyQgnlu70k+msHN4LG+Vz4TeE5MwDBXPtj7oi7MiWg+zWGya9ECbz55P/z+jqR0PgbTbgmK33k+E1hcqVmifT4xtBIiWTN8Pm0k8HwwDnk+Thd4upPycj4OzRDNswJqPjOncjGu9WI+qp0HW0ubUD4Fan5UnTpKPsVdMcjLcUc+mHvGQF+WRj4zoX9hMFhFPiJOlJORBkU+ly+LDlQAQz5K20H01EVHPpAyGoYDc1U+In/O6hUDVj7kwbeU/llRPraw2sWkA2I+QMVQum+BZj7z/0wqE5NuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1331\"},\"selection_policy\":{\"id\":\"1332\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BLsTBHJZMT6Ugf+NQt89PtXILo7fPzk+Srmt5VQWRz4dZ1GzKTg2Pigcm0uZmEU+duUTjz5aSj7s0x31LQVOPkrUEFdAWVc+PvWELZ4EWz6X7cU+8K1iPknjkofKfWk+zqOw27/3bj7vHNCAtbhyPrseuTB8Zng+U2L/yoX5ez446jaiMqh/PuI8idfoUoI+Mwg8cauigz6VTYO58cqDPgrGLtvcJ3g+gzBK7WsOZz4k0Tw1mzFRPp65/nfQ2VQ+7eCtCLBdUz41h9UEdxBEPvU+N64zJkc+grVQe5ZbUj76QAFb3h1iPqhKkQUGq3A+B4YQaiwAez60FiQO43uCPhiq0fs5P4k+s5m1FMz9jz5nHtAzGrmTPqT9RpbsFpU+s7wt7A/VkT5S3+3jmx2MPnHORcDWs4Q+jxEo2oibdj6sFKY/IoBQPtIW2tNSNA8+rQyPkv6hPD5x4Sgux2E/PmWs2gJj9UE+kwDkWWYYOT6A0fVI8r04Pu74mXmAljU+QgRjG+XQRz5orI0o/MtWPkY8ah8k2ls+yfBnZ5v4Wj7B2PaBVABmPiWNjkjJuXE+hW9tKl1yfj4X7IolJpyFPiGsWnh2jow+VfW0vNRkjj6hmBG7wmeGPgbJGoZXzW4+shgvJwOXYT6jJXp6t8NkPvO4gVHgL2I+4eHsDXfuWT7eFN/eD0JcPgtBUxrc62E+Q3SjaWr9YD7Rm+puPSVZPv0Zk5qyy1Y+IHF7zPsSVz6vjTQN6lRQPpzS8z5mWUU+Cb4S2QktWj6SyGwYaZ5OPkzvYIGmB1M+KnVWJV/GWj4fk9b0rK5PPtJXj2w8Mzg+t3Y+bZ15Uj59wbztmUxcPv1AG2WtMWo+jviA449RcD76W17YGMdzPubx/wO+XXk+XfNivJEdfT7HybHpKkp9PjXNMQRbing+nMs0V+RNcz5tfyJ3t1xsPsiv8AdSU2U+N7sAvq6lSD51IWI00dBCPq6HsLmaKDw+P1kjq/y7TT5JcRlE4RtEPg7Lx8byA0w+O0ou5ENrRT5+zkkBlKVAPnizUGvhjlY+yJIOq7mKVj5miWm7PL1aPoGG0q8vwGE+DKwwLWblaz40KhzkfudmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1343\"},\"selection_policy\":{\"id\":\"1344\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"qQ2Es5/MQT4vB8MFE/RAPukTErn/oDU+ClyH/XIhSj53ybMrdaZHPoot5HzEA08+i5kAK3LvRT5rHTViNiJLPragYVghVlM+CxtvMweXWj7GoJl+sadiPt4pr+uDcWo+tQ1Inz37bz51b3/0exdzPnDUYFrxcXc+04HZ00h6fD54nCj9OzR/Pu5gNmV68YE+CGa1er+Ngz6pURv/atmDPltclz+54Hg+97vKbZLPZj583YdenNBQPlS/LtFhW1U+os9jxOCmUj4vpFnJWndGPl86xXizXUc+x7YZ0XYJUj54BWSmyVBiPmxgWPFdtnA+9kUFrpnsej6dfTt5jBWDPtb2SW9DPYk+olUt5aK7jz7QgahBKZOTPpGPxn3oz5Q+H8OmjZzekT5jAUDkAbyLPjlWeVyNvoQ+6zyG/WaMdj4G+NbhddFRPoGymifYzSE+zsyKwIYcOT6q9RfKSlA1PnSzCAL4xUA+Zmv6pQtIQj7i0/XgyJtAPk3c212yGjU+Abbj1M4KRT5cQCDM5XdYPkof1mFqZ1s+7ZDpbGsmXT4jpUeghtNnPrcofTM8OXI+0cxBmNBQfz5fUyNfgWWFPhXYX0bY24w+vXo7RADcjT6GXNjig82FPsTyDg2+7Ww+yRe8qHnFYj5qyE9iYSVkPsGblUmk0Vo+15jK6Hv2WD5Gun0+GjJbPm/Sg/VRMV8+SEPA+7fFXj5f1hLUW+FaPtAuEvHW7Vg+VBDPIbhwUj5BsRLQtqZBPoIse/lTSUc+9IV9Q/onUT60mIpdhNtVPrGqDZBK90k+uZnYdft3XD6bjniAcmJWPgY4D65970o+dMJaHphwVT6O8dAunCdWPgbO4RT0g2Y+FZXGTOmSbD4x8pJlLip1PjfSYbVIwHo+ow3AkDJzfj7xDDbW91x8PkqMGeDlN3k+fRqn6hYLcz6p9nNACphqPlPG9AJkoWA+9um607bFTD467QUr9YdOPptp3Hu+UkA+XkAKz2AETz5yb4PfKMBGPt4Crly7gUE+4K+lINyQSj56affDLCtEPj3DCmHP20g+xdZIJfMiUz52PU8gR1ddPvomlXf/f1Y+LvQvu++xaz4zG2BsVsdzPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1387\"},\"selection_policy\":{\"id\":\"1388\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1326\"},\"major_label_policy\":{\"id\":\"1324\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LaRmhXkcQD5OXeFl995DPnjAu/xDBTk+0QM6xPs9Qj6kjRvymuFDPl/Jxcyu91A+tCyOlYadUD4jN41IMOtKPvpTszRRIVU+8FnOOM4/Wz5mP1jkJPliPrp45nrP9Wk+6XpJUmJLcD4JMUMUdN1yPm8Swg8G6Xc+l4iLmOt/fD4SpRmzBSB/Pj5v0jZd64E+LE24DiMagz4i86uRkJmDPiSUJ1VDvHg+hJsBso+eZj6D8VWiidFNPtJbNezmklI+XzJ412vFSj6zFRUMBi9JPutuWkdA6kU+9fqdvn56UT72NJrobvhhPm7gNW3gsXA+6BIvpUW+ej4EJfXFXmWCPvx23jIpVYk+cJt84q2ljz6rLE1yH6GTPrHCs3BM1pQ+24LmdXqakT68hMKjjp2LPoBtN5ITroQ+Ob797Juhdj7H/LSSsxNQPu27zZ86Uy4+91UnsnDAKT62FuAVh4QqPjcG20JEQ0I+kNAqCCJOQD6vZmVF9pEsPhTcr6RfJjg+UinZX5/GQT4goocx3DdYPp2nJivorVY+rK9EmvZIXj4cPvCViqxnPkjtroKf9nA+gT86tRDmfz4E8MZ35imGPjc6DFn/lYw+MsQaPj1wjj5Lb5egWWaGPk6nrm+dxGo+iu2jNMmgYD4lOAExH05iPu47Zu8zG10+hKBRyXWtWz7+WGQvuwlZPiCdD8tNtV8+XBRkmyFPYT5/pe7XR6FcPjcgKK+u/VY+IX5qJPg7Uz4XvLHftbtCPpnvX12wDD0+mP+QUlbiUj5WH7C/qLJWPtYrFoN4QVY+Hj8t2cuLXj4WsPrTsHdbPj8FaviJX0c+g5Eoqu7bSz6hxjr4GaRZPlfmF9plfGU+bwVKRyOkcD5C6cp7cKNzPrgJfV8fcXk+5N3eGoXmfj7kTR+Jypx9PveTRRhQink+qnvo0qJtcz76ull9I/BpPrJAqsK9R2U+I/W+z1kmUj6n5oZC0ZdAPsjZlH0IE0A+Qws6WCVkUj7Gl93li2RIPtlKRQ1NAEQ+yz7VS7IWPj46VnZn/BJJPjRZ06Jn4VA+evD+YkrPSj4ZG7B8Vq9XPuYF1l4YXWM++6jU5liOYj7mZp33FthpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1381\"},\"selection_policy\":{\"id\":\"1382\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1324\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"yQrnkOtjQD4y627BUj1DPkJjjuxCAzI+IA8OBTnbRD7xfRf4OKxFPlKM6a1gD1A+xnCRewNmTj5IzQ/SEadMPoU6onNMMVI+C4N+VeasWD6X37SjbcZiPgBO9qewzWk+xVcgK2F4bz48Mef4LGByPgj42bVxO3g+12jLZSUPfD71HiqoJqR/PizES+QQOYI+ZmNU9miAgz7Bmld9q6+DPn/ytzI4cHg+YzFxcR7jZj5exwEKcONQPt3OFi5XP1I+LrQOfkj8Sj7I2O5tM489Ps6qcAktl0M+pkw97smCUT6JnrOyKJtiPmIIaIwCT3A+0iP0okf5ej45wy6kcY6CPmVAjQelC4k+05gcfh3Fjz5PFeJpd6eTPou5vxmqy5Q+PQ8W/VqykT7TT72NQN2LPvgTimv/5IQ+1CRhYUmNdj56qrv54mxPPgRCRp8ZWTc+n4sFuRViOD79hIe8d+AxPnOnl00dmT8+fhAobvJIRT6XIDQAV703PvLP9d6YyEA+bPSaSeUeQT5zqJVMnYBTPjXX7vV8clw++ZPiqcDuWT6ibnz5WuBkPtvM9p4XKXE+21Q9Bywrfz7l6FFzyDeGPrEhRRp8f4w+c7FmaTQAjj4jz+f2D8OFPq/m4KiuYm4+E9rw6iuXYT4BJrJKTOhkPtEom+JStV0+W6ps0WeEWz5kVMUQ9nhTPtCUx7OCRF8+Xf5mp+0TYD5UB+kNTHhXPr1C6bSkdlE+u3nMsu3JUT79cWox21A1Pq94mGY3cDo+ytfzmh8ESD6uRdwHXyFUPgSQK3+MpFI+v23Ix6q6VD6BIJ4O0Y9PPqrreHTlpkI+sxoclUgRVT5T4Skct2tXPv4LpO6h1GY+9Ea11EfXbD79RJ28k7F0PmXvrpU99Ho+xo2EeO6ifT4gpgq9xmh8PtduM9xHNXg+mI3gycNkcj5JzbmXi/JqProWWZUiVmU+/oZRmJmdVT6/r5HxXmpMPiORFzW+ZEA+QYdWeIVAST4pQ0GHe0dAPhe4twMi5UM+87R6CcxtRj7tzszC6OxOPk7YyWHydUw+5A/ktaWbUD6uTjKtnPtQPsG2HXEvM2s+6lLmEs8waD5Xmj0wkFpvPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1349\"},\"selection_policy\":{\"id\":\"1350\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1390\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9BwCFHtoPj50LE5OG4U9PqqvsysFkjQ+CazDn/fFTD6V74gvItpEPsMy61vnA0g+RfThifFGST4dlsYXBWlNPrhbb8JxzVM+O244J3i5WT4ano1fsnthPjXaZbt2g2k++c8d8Whabj5vn42q5ctyPq3Z4AuUfHc+mr4tWodDfD5r9qRv68B+Pj9zPQ402YE+MiiMyAiggz6ABhkGvq+DPswFxTpp+ng+tvwFYeJQZT46HIyX3RdSPpaUSLDe7lM+TUH+zpJFUD616bRHr65CPrQ4yMsBz0I+SkmEWqB+UT65//qFbTNiPtH/KWDe2XA+8Cw8XJ85ez7N/sBUVvmCPtBsUmGhook+CtmdO4gVkD5u6/qkwa6TPnj4Y8el4ZQ+xMucCI24kT7CXtohYgKMPmwoYsYOvYQ+3uMejFKMdz5DHab023RPPoYFzAe0+So+/N03zYZ3Mj6TrsX69MEyPqag/7y7kEE+bJUipdmzUD7QUA9NDUI4PsDtM9VfhS0+qNdtJ2qpNj4fGbx2ScZWPnBb5aDiQVk+jDnMYlViYD7+7gIgEF5oPiP6VqTLSnE+/z2bCgYkfj7k4dMstXqGPl0dEfR6pYw+xvc/a4HMjT7bRk40leyFPv+tsB7dNWo+yslB00ciYj6eBfBAyHpgPpZ7tb/UxmA+Bgg63y1wWz6Vca4mx0VTPsqo6btvWWA+CrUIgGtVYT7lNTX7LbtWPrzT1jn4/VM+KvLtXh/kUT4Fxbmep7RHPt32cDr5pkI+S0eGEGhXST4bVaRjM+xSPv/B5NHUS1U+LYRgYb6/YD73qFtA9s9aPhKaYzOQvE4+tVP9r2KzUT7r6bSHCFlXPsUQlmM3DGY+swY8VcSGbT4Y/l5iS/tyPvOkoR8Dgno+6IFPk8JzfT6THYncvJt8Pn7J1qgugXo+9sXhnkPucz7o/yLx8zhqPmQ5sRRx3GY+VqNbHoUpVD4aMMjbR4NGPvCfPcvuQks+jZhBk2QCSj7Pd6OBxzlHPrmUyFmZTEo+5pt1Vs5iRz4hmhRVH0dHPk2HBmNja1I+aQ7ZazRCVT4OBhWDVaxXPmBJuTyT3GM+DKGFOIb0Yz6uXLPDR3luPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1347\"},\"selection_policy\":{\"id\":\"1348\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rhg3lPdRQD6nuJHQ0w1EPtSl8SF39Do+XcIMH755QT4CxScqPsZFPvh/rYCRL0Y+DrcBv9F8TT7kL2D0URpMPlUZoSBmylU+r16hD7LQWT5WswOrjQljPuq+Kmg0/Wo+urBHkRgEcD5zX73kahFyPlE3mfjoPnc+HaL/66sbfD5zF2soHwR/Pi8+Q5eJAYI+Wqf8krjNgz6VMf6Tzx6EPgv9Mh6xU3k+enDG49yTZz7Vm5ooeedMPi8ybYtbjFE+oh3IjsJyUD4rieHCNj5APsTLE6pOhEY+LvVETKg8Tj4cHFQDS1liPr64X1eyaXE+o4PRs1a5ej6cYRy5bHGCPm3UTx+DE4k+iec2D5ehjz5TK7uYYJWTPrgkl9BEv5Q+6EwnLv2skT6d+ARL0cyLPjERmjGsCYU+ddRJgNQfdz5GHzOIaY9QPurHJv/88hg+SHywnG6oMT5y7P6ec/QjPggZY+KTWDo+TDjg5jJtOj5e1g0Ugaw7Pg2KcKcSdjw+3OA3RiJGSD7S/cD6NsVUPlmv7awZpFw+PijGDJMdYD6glSPf3+1mPqOggls5vnI+S9rQbxI8fz5TmUZy3/+FPsh/4mHCJow+v0OeTtAWjz60HpXQPvuFPnMJMqJ5L2w+9kMcB0Z2Xz5S2czFWMBjPiJu8GQTGWA+aocN2RLxWT7X/aeqSm5ZPnef7V1n7V0+1dFIHxVAYT7JnuC/1vpZPs93aNB4FlM+pdZp4NMQUj6YSa9S02JHPjtiSOMwTEY+ypDiuHI3UT64nAqn1H9SPrMkl/si6k4+UsF9egNGWD45EzZIU3FXPsIMi7CZOj0+W22WWMlZTj7x/57V6K9YPvvzMpIORWk+jZMFIGNZaj4E0dqey/dzPoWu32seoXk+hthnlDEvfj5+A+yZQ199PtgdUo22OXo+5vGMX7Sucz66TqnNIwhsPtVC4rMC7mY+IrvnQJgoVD43HcUjKv1APlWJpafa50U+ARbpry0iTT7TLHstlKlBPv7JwOG2FkA+WcJLfjJRQz4cZZZuOnhSPo9P4MXhg1I+p1fzeXlqST5DN7tvMABZPtTML88PFV8+MIDvPtINXj6FQkGoTA5xPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1389\"},\"selection_policy\":{\"id\":\"1390\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6OxJzne8PD4gi7C0phpDPs9QQ3Ez6Dg+Q7u9aMZYRz5/1VQcN34+PkCKs66ZyEo+8tG1vqvqST4Ubb541+ZJPm5CH3yirlE+hbsmnZ4aWD7sLtnOmUFiPhsZnSgoPWk+d0LN6ouscD7l5jYTDXhyPph1bMDVR3g+qZikuIfEfD522brhYyl/PlI36RLg0oE+EHhHexe1gz4dNE7+MPGDPncQ9BK6eHg+D5kvKZw7Zz4QN7l6n+lRPoHo29t2z1A+s+ERFERzSz7tS48CtX5FPo2TVbKKhkk+Fz22ouuNUj6wdLxR/YpiPmIwyst/3nA+OKOQU/0wez6H/UX5aYmCPonBdCi2Mok+M7sxNEPDjz77kmXIH8STPtgdJWScvZQ+N6B0ZEHlkT5e911MuQiMPqqDakUG0oQ+glnSifP2dj4QXOzPZK9RPrnlOKl0eyI+At/27YkVLD54FiGRVdNCPmGLv8y99kk+bgx7TpAOQT698jkJZkI5Pkq6QO6yuSc+OKK1RkgzLz45H26qp5pWPmCJyzWfVF4+krqKCoqmXD6IwwlEmDJoPknNG65i9nE+0ryTtMotfj4wG1kqRPaFPrg2fWa7pYw+w5YT+cV6jj6UZ6MnvDaGPhy1AHRAA20+62szRvBvXz6Dw4nXyk9hPiI3rQpUZlw+ODknl3ktWD5BDI1eiLNQPtYSRbCI318+DNSLYvh6Yz4g11hCsKFXPplAHkKYoFg+B3Ej2eAEVD4jMgYWixlBPrXj3+GwAkY+d5wW/y07Vj4qEiKEsOdbPvqbdBAc0Vc+qTxbQs3CWD56HYKqZuBVPs71Ghy+oEo+KChpfNenUj5tso9SGQNcPjG1iJuto2c+RTgJhWg2bz7zIuGH9lVyPlxbSRlRNHo+8J4tzqxpfT7xgz+8KKZ7PrnbH43CWXo+MZwzutOYcz5MFzjMkNBoPsAz+f7JOWQ+/9QJLhlYUj7NNXs/K19LPjQ2pttXdUE+hdrphbMBRD5C8T6WGa5HPjtajtr9vjg+MBMBmM09Tj5CFR+K0PZJPs4wvDh3/FA+fj2HBLg5Vz7u/Y8f2jRJPsO/CiikwVI+o1Tvgf2FVT6WdZ7t809pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1377\"},\"selection_policy\":{\"id\":\"1378\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"mraYa+0BNj6IR5UOaYtAPry/s6qa+0A+EerKL7Z4Rz4UvD8pDm9IPmgG/8/R2lE+4t94KO5kST5UfgnkcJpFPupbLSXW3FM+tG12Ke/YWj5cx00z4Y5hPtDgvHwGO2o+4n/8HZi/cD4oGvzUm6lyPt+ayrRE9Xc+LULq6rNpfD6oqynywrp+Puy3tSDUzIE+d+YWmztogz6q1DT4meSDPjEjufQSPng+uasCMwBWZj7mvojZ2BNRPnY84Ehf1lA+vROst3rASz6piK4hnVBFPrq3Vhu81UE+JuLX1I/RUD4+KrG93HJiPgSWwXNlV3A+J8E2bGJeej56aWYeJEmCPkfo/89j44g+92VlO8LBjz5L204CvN+TPmooor+L0ZQ+A6UibYXfkT6AA8lGh4uLPq69wyfZGoU+CdRRMGqudj6qJ1KR5YxQPm6U4i5vAR8+gfv67YvcKz71HrwPcH9JPn/tPSM5Fj8+4pe+YLDdRj5gIixIkw4/PvpjijISmkA+XjnKQQEYOz5a+N3EnCxVPhGKjODkI1o+BKpxmxgoXT5D9NCaltJnPgwv+1OgBnI+udmHjyfsfT7qiKzDWGaFPgvCjl218Iw+pGRisuPJjj41B992KH2GPmS0ZMUbvW0+ckn8C5yAYT7UbPOg5m9kPig+r+pbU2A+8Wl2gk/iWT4B1Lx8l25TPquhkKZew10+CqKRCzf7YD7CHkedrntbPrtuLNZYXFM+O8OTysjGVz4lXj87bo8vPg6EnwVdSE8+imBp7gkNTj7muo9yb2JEPpfLgFPK4Uw+bZjezouAWD7/WKvjG8tRPgrVqK6zPkY+XVY4CLs1TD5wi7D0DbpXPhPyR+Nox2g+c/Vc5lx3aj5+iIM9w0F0PiHPVG59vXo+J2RoDEMgfT6zioj6ljJ9PuS6/1epaHg+/h5laBSVdD4CWED4noBtPkc80lNIcmI+mM6QPIMMTj5dxa21OfBQPo5sy7Z380M+w0KiUdxdSj7kBf3x8rJLPp0o/M8c2jY+W3lT5Q55TD4Plot4Ig9EPm00IlivaUI+UJjTdvnxVD58NWS9hJxVPl86Ap9m2WA+zTU0l856Yz4IT+fOMFNzPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1365\"},\"selection_policy\":{\"id\":\"1366\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6JU8aZdgQD4uHaNPma5BPqpE9pAuvkE+M5+qjeC1RT4B4rmfUtU/PgOkvgphvE4+9vCRzeATTj7FpdmphhxLPnWxF/4Z/E8+0h9qTOGiXD57rC7eH61kPgdS5MSnh2k+k3xsPC+mbz630eECq/VxPrWoX34hY3c+v8THlY+GfD7PrWW6UKV/PnpRSw7T64E+cPH/2Wa1gz4OChuYgs+DPhpCmHfUmng+fp5y/WdXZT7hGCE5X1JQPovQPGAIxlI+Elc7aKJ4UD7MmppnlLs8Pv6FZaQRukc+wHHTRUFAUT4/GeSsdEZhPtKgxGjHknA+6MDXdaJkez7x3HvlssSCPlvwvwKYP4k+OiZ8jlCgjz7AKJ6jQ5yTPgiMUkQT0ZQ+6htq2U/hkT6KPHWBBMqLPnYbaaQYcYQ+0a/KJHZ5dj7t+AD/GoVQPnoBp7dTMiw+jI4PpcjtMj4aAEBXW7Q2Pnc6rdVPzkU+6uBBs04dRz6g1G9rka84PlXFlpSmKDQ+w96vPEYzOT4ZVGJ1K3pWPnd3xQbBzF4+q3W4ehSrYD5/9+Y7PfRlPmsJj0HAwXE+pAK77r5Yfj7XEltxaLeFPruE4Q1udYw+mlDfpPjVjj7DRUckC1GFPl/k/NEghms+MlmRvEz9YD7Mna7ZIp1iPmsskPgdTVc+P2pZniERWT4/7y2NeDZWPmKvaY44Ol4+Pn4/rWRPYT5PoB1ueyJaPmHdqxjOT1g+d7y9FCWtUj5ZKWg/fhxHPsk+YUUGp0Q+BGrYHBR5VD6hWtSzuoRMPgcmdNJjKlM+7biIBKm7WT4GRYgBaotZPh6W8EEKj0c+0gvcHF9KUD4+g1OCcL5XPmq0SrNk/mk+4BIYvw6tbz5zvHAfO/pzPvYJtLRPHHk+DSnNwvGsfT6you+sbod9PlXMARjUj3k+uGj2mkECdD4qr8K5Ti1pPlA3sf5okGU+AUfAq5JqUj6YV6RcdqZEPl4zPlol6z8+ToC3E3IDTj4phtfQf61EPhMb4zLsQUQ+A8vcrD1fTT6H9ds+IBdJPnUtIdBRpFE+lbq7fvuCRD40akYxPJxQPuMlyUJDaWE+NDRuLLipWT5OV2xW8VptPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1357\"},\"selection_policy\":{\"id\":\"1358\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"s1EAlettND5e32OPf5xKPsZogRecwT8+00BSXIz9Rz4nFbjzrARGPshmd5L6NU4+bt2JFNjhSz5vwLZpqw1GPh7Bk2JWUVU+F96IuGBGXD5zE9Iu8gNjPhqy+do10Wk+jW78gsIecD7ZyqcCvqVyPnBQc09XxXc+y1mfk62NfD4tQLKA+mJ/PrX+JM923oE+jeRaUOo2gz6xpocxefGDPl+jYjcsQHk+Co9K05qNZz4NL1Jf6VJQPke7C9jhOVU+Gm4arqu3UD7TGWLPMmJFPn+YJ2IOmEc+lbDVoEEJUj7byIn/jxNiPqL6y02FoHA+WvLYTGm4ej5FvtZCGeKCPk7L+gBN34g+4QxRTC3Ujz5FirU5YcWTPhruFj7ViZQ+KYraruXckT5bElbcG6iLPsSvUARy2oQ++RQG6h2fdj6HkTSCCoZPPgtQVy8PAzE+svkcscTNFz7QzEfH04pAPil3EE9mwUc+eZEM7m1iND4GzvwAHx8xPoNVApFxPzM+cA7TRVmSPD64h88PT7lRPsMb+SlLkFc+RC8IuB/YXD5nNc4uxJdmPqAcjFn4V3E+vL4vzwrKfT6BuWThvM6FPm4i40NRAow+idMShJvkjT5JT7bXJA6GPhLpWBaxeW4+bYVQZoN2YT6vqjR/NINjPrhmgi4Tu1g+n8Ns2XqVWD5/bRc3s1xUPkIx7pcX3V4+2xT8PLTHYT5kYwbVLAFUPgtAn16S1FI+nzfoXevTUD7cfhNJb/hLPlQ5NGDLKEY+D1S5CGYFTz7IVsUeibpRPmqZIWjcTFQ+F7OnRdjbYD7pQrgIHXtHPmZ/JKE1VFg+3/wOUYkpSz4kiDv7oU5cPljtIr6Nw2c+AIUJnID8bj5JoPIrvcdzPsW/YoCCOXo+KS9XXJKHfj7vxTr5QaB9PnB8oVAHtXk+1jDa4a7wcj6hBfNAvIdpPldPjALx+WM+giiKvPI2VT6PVQvINwFSPuwf2azvTz8+nvQZ4LkqQT6kJlcjJm9CPn6BleW4UEo+sxXOX39qTT7qHE6lqhtMPpxhGXuozFI+DCSjcqfJRz7qMfwPKOBTPnP7jnO9/Vg+amIAcHSyZT4fdqpDTCB1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1375\"},\"selection_policy\":{\"id\":\"1376\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"08ePCqTtNz5O48nbJ0dBPuyCJgcVQzo+aoPJX65UQT40fiHJjONEPkjqq3ExWU0+1wU9si1wST4NtxwA70JKPq7JVyYRqVM+qElR/wUnWj6x86X8DcNiPk2xvTOhxGo+u253vdwMcD7gw6SMryZzPgh42FFyoHc+CxzwIW96fD5m5ZUZaSF/PmGPlFDJ64E+zurqsB8qgz4KcK1pJcGDPkR6S4mh33g+sZKhp/EwZz6UdmhUoZlRPkgbYKgPeVQ+NKm/kh62TD6AmbObxCxFPh2by+lTqEI+lHBzS+ZzTj5SutcDKQtiPso7HxOJdXA+mpKa/PSMej5SWYobFJOCPqTL1kjVTIk+6+3agabSjz4aC9sAMZWTPrFPM3PT0ZQ+n/IloJbykT5NkTrHyLWLPh0+jkJqYIQ+GjI7KmSEdj50XEbj5khQPrjnwjae5R0+yv9u+Tn2HD4O8ohJdOA+PkiqnQFqIkk+SrIl2KTvQT5fLF2jtc5CPjmfJ5Z0nTo+0uQExP5vOD5s96Upu/dXPrIiuAt/W1w+MH5SIlCUWj5XRQ7i3H1oPi1YtKwpTXI+E7doFC2Sfj7SGYpyH3yFPrvCvH5kVYw+aOaRMi6Zjj4PV3qHAq+FPrdhIMPqS24+7Lm8f4pUYT40YCeKjPdhPpkrSmyW0F4+PTWFNvn7VD5xCz0rG8pTPsqc8tvZPWA+5hGW6FzwXj47rICQSC5UPrtQ4qfyZFE+F1krGK4wVD6WlspuFk85PjOwdQ82bEQ+8fD/eU+8QT55hfjxevBHPrBqpwCx81I+fqKCCSdtWj7lojdOMFRYPv6sfZ1TI0w+S4p8mO35VD5jRgORk41WPp5cGWibEGg+Zl3Ps4YJbj5LnHLcgnV0PvDd1JCb9Xk+wBcg+Malfj6BUMigpa99PtLcxTtj93g+6YnvUsYwdD4XelNwWE5tPkhM2UQ3xGI+rho7xUrpTT75Cd+KNtxDPnyyxnKJS1A+KZiLlE74TT64MrxVFMxJPnfs7t9z8Uk+KbbdMKCQUz4vZrIzhqpBPqHy+PxlAjw+tWb1ToKxVD51Qc52KStSPvX2DSiekl8+cKBxm6HFUT6siXNrQ0JiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1335\"},\"selection_policy\":{\"id\":\"1336\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"HQkRIYHRQz4s/8bzikdCPpe9oTPtQjM+oHfoh/NRSD4btYFcPqNGPgulBCTbhVE+qMQXlieuSD7po8Df6fVFPt5NgseEtFA+Z6l8Y7NmWz6rQe0wdqZiPmzMJAgcB2o+iPsIAcNUbj7HhJa0rspyPteDeAe71ng+93KYtht1fD4Sg1BSNEN/PmXX5HKI9YE+k+YY792Ugz470fKTc+ODPj/J+1RdS3k+Ea6d/W3FZT4NyhdPOr9OPquayv5Yj1I+R2Yxg4vmUD6pjod/pJRCPnWtRkoXp0Q+9Ipd0zxPUj7GlnPQMIpiPpDQYqlhT3A+Vv79JmWrez56kQQp0teCPgx0Ou5hNIk+rJsyhIe7jz7ZLzINKKmTPr1D9TE8W5Q+bbEbALzgkT5K10h9O6iMPgDVUNytuoQ+SZ/1MG4Rdz4cLHK3hTpOPlf/pTzu1So+oJ2gNkCqNT6MbaoCgZc6PpNV69DhbTc+WhcrQ6ewRD7JBuiQo9k2Pv+7n2966DI+cjtKxYP2Pz7vAYy0sGlUPod4IexUYVo+gomgaM8vXD7C94XLed9nPuVoVezRnXA+aKKoU2KffT7bg4fNhiyGPnxa3VtYZow+GCe6u2hzjj5G+xpdceaFPrBVML26gm4+U0K4EfXmYT5h+O4cIm1kPvRyh+izU2A+gKFBygtsVz7qJg1oA6pbPgSUPPvkEVw+NW15Y9kxYz4bBBAjwGdXPsEMskp7I1Y+GAHGSqf9VT6hhDMAAnAyPqAuhPnOSUc+v/Eh9xQyVT7865+lHtRSPgOQgMJZEVI+PQ3ASUyEXj5xaHrKCsVWPrp8h25hLEw+94fIzsxGUT6jAd06iEhYPsGpXLjwn2g+DkLLjouzbj7XRJpF/8F0PkwJdbZNNXs+sP2qMHBpfj4hyteFOEh9PgLTunzM1Xk+3LkeV+HPcj7i5idk2fxoPlRM/unvG2U+7RlvJ21tUD6zX/wAdcw3PnITAZ+caUM+Tj+e//SzRT5JF7R9iaJCPjbkilAAwkI+rebOEqo6Tj4FAy16ErBDPh7sxbP2MFQ+GfZvsUiqUD6jKaWjfglXPgzzc2pIlV4+lmRQ+FjEYj5pPpwmwzpnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1383\"},\"selection_policy\":{\"id\":\"1384\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Y+s77OyzQD5W3RFO3aRDPiVpoYSYTjE+VMivSpvpQj6GL6H8/DREPjGLni4ixE8+7F0gSsrPTD4puF4mj0BIPqYAVqZEuVM+pQGUoCWbXD5stT1GGOlhPkkANYJcemo+Ty9HsCLgbz43J5zwHB9zPkb0tF8jS3g+HpIiDiohfD7H3qYLhKV+PrEeoM2C2YE+gELCD6Nigz7ubD9hCcGDPt4JlRTW53g+Or027x1oZz5LUZUng1RQPmOD0Dhi0E0+HGknRo6dTT7Shv7UwQRFPkSY/nAOrEI+ukKfz9OfTz5kzEKsPPFiPrvBBmDurnA+vVTddFm9ej7AEYrNp4yCPlzg3ywMsIg+dov7lwGijz4r903ij4KTPhs/5mDAs5Q+hysiA+TXkT5o/OdqV5qLPoMb5UQn34Q+5VDUUyBkdj5h+Y7Tmv9QPoaBSmKSODw+p6JZKfKnJj5FjIeSHEw+Pr1q476t00Q+0anRsH95Rj4wHrbMeqorPlWPflYhcDw+D3ManAoOOT6nmfBRd3NVPlmHS4EvtGA+ax2pqLBgXz65eCwbOQpnPr1ozCrR5XE+KTTXRQqdfj7vBPFdpAeGPqZ0w4bPq4s+i68lF/WOjT7JnO5U0L2FPgXCqwji820+NEH+VpLGYj4u5zT2EiJkPh0bwOiHTls+7k41AgKHWT4XBAwDt1hZPgp7o/NnTWE+UdgNx8qGYT6GWEAmaJZUPhturljYTVA+EP5SQrO8UD6V6bzcvVBMPgEMGDhbk0M+38+kSmCmST535mTNU+BOPp/jbhjz1Fs+RsynjofGXT6BBcAVichSPhVcg2M/gVE+XWiF9arBWD4DVCAIJjdUPpstKeh1D2k+rLwrO9cfbz54zvUakKF0PtvkVKQ8aHo+8TVK/nn8fD6Y1ztqSaB9PmqHXzOjEno+vtpgAKgJdD5jB5HXuoVqPnbg6j+comI+wzfClXElUT70KeAVfcFGPqI58RxKRzs+v/due/7vTj5apycDh7o+PmUpd7TQQU4+fHHVBjW6Tz6RrY5BsFNCPiyiKmfGK08+X/vAQ2f5Xj7UmLzVP4pWPp9ppCgVFVI+3q9BtekBXj4Xo5nVXfp7Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1385\"},\"selection_policy\":{\"id\":\"1386\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"ticker\":null},\"id\":\"1329\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0giLM5rBQT6wsUr7XnJDPhmUS9+sdzY+xNCgCMNJRz5meEcDIx9APpw7j6t4sUc+tvd1gEbzTT5dGleNTaRHPp6usiNsBlQ+2WYAfgCrWz7nZRadeEdiPqulfyHwhGk+KGShX+j0bz7+lgJ0vNByPpdN7mEnPng+vCShuyl+fD7AbrVFDJ9+Pl22dId32oE+KrkGnuBGgz40vRKA+rSDPjGalPRg+Xg+8iOncnWLZj6UU+CIun1RPoYBTVZdEVQ+ZD5ZhRthTT5e7zUy/+83PokfFTf7IUc+R2vyMNjXTj7SYoEYVa9iPn5aMjQrmHA+JXju5L5Nej5ioMmhDK6CPjQd2H72FYk+YdjK472Xjz7G3h1Do66TPjp8K73rKpU+xqGNYB7bkT6j+dj7zPeLPgEZwDWzuoQ+NXAd6Uzwdj7K8ywb5w5RPnWdo/PszRo+u/ACwtl2IT4RK32uA/csPpa7zFppDT0+GkzfRGtGQz6xovAzW7kmPlnJUNBfzj0+NpMZ+EuvPz4Xaqvyo8JYPr6My0tyElk+HqjsfB9JWz4oMre4PWVnPlq1mTepnHE+aBcmXVQGgD6MZDrks8SFPrf0uEfN64s+D9PjZubDjT4SSemsRb+FPkv3H0E4MGw+pIL9YDogYT7L9JcCzyhiPm6K5n2XEl8+8oFTUpPlWz4NBpfLFxBZPu0QCmV5y2A+smMbAsvTXz73aRJJyAlbPpTuQsmkR1k+Ca2UqHCfUj5cwUr+wB5OPpxoiYn9ikU+L9GpfbtNUD47BLkVf09VPqlMOmv7EVE+P14JqmMxWz6mZC0nBm5RPpGq3qYZRUg+MIEpqA4TUT7vqnsjH0ddPlrIQ7JF/2U+IFSZLM9taj5d58yK9Ip0Prt0duVi0nk+9IOA9By/fT4DhDaHHQJ9PpmMuAuvkHk+DRWZqLOacj4s/hsJHT1pPpbDKisdW2Y+KhiiIucjVD68+Cr2nXg4PnvjX/TVB0M+tIys3ekkTT6OxfAOpydBPqqIZPio6Uc+z7npWpRZTD7N12SoRBpOPrNQd75ntk0+4dyfBdB1VT5zniEvKZxaPjZmUkugamQ+gxBuLVWZXD6PMGHnOc9nPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1359\"},\"selection_policy\":{\"id\":\"1360\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1327\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ORylvtIgOD596QQUUxhHPuGlJnRmEjY+lohXCSvRSD5SGweB0IJIPuL9tiIzUFA+LPeW6zyQUD4sd+nE8J1MPtc9VQ/IM1Y+p9R0zpe5Wz4vIZmV9UliPh7ZB2UEUGg+iAhTMqBQbz7f1KTXaLZxPkulYqV1s3c+29BcYQc6fD4BRHdwI/F+PhDPkKPVHII+hvrB4hL2gz75daCxwbSDPnSufGx8H3k+v1mPkUZOZz6s26uODC1RPsl2kqyxsFI+/SvPXb26Tz5L5bZghLtCPkeKT2wIVT4+07Vqtg1rUD7r/oeaXBpiPvqqb8FVf3E+Opaeg6Xvej6nhgEtQCyCPtrb2J8I1og+I2EiWaXHjz7l1SHxNbeTPh924OJ/35Q+veogh+7pkT5D6gDxiYSLPurPaSTDyYQ+T57DTTrmdj7egBLKt6VQPt0+haNkySM+TZOjztoVID4zv5PVW5U2PsqlYe0gIkM+Wpan0aQUQj7ZGCMkgcErPtqJbuKdqUA+rASmM4n0Pj5xxSvE4+dXPh+vAfILwlY+Fw86o4M8Xj52a0cuPJBpPr+NTY36s3E+lI7NJUnEfj4QNaOAaP6FPsONaeGfK40+WQnEMagLjT5G9hHWODOGPiLLksc38m0+DijJZQgJYj4G94/fVE5hPr+UqlF7dVw+uKaa5aR7Xj5lktN3yoNZPhni2NzY6F4+gn2qGCMjYj4GBnpKqShZPu0hXh/pzVE+Zem/ZwaETD7/9nqiFV88Pj0LL+ICx0s+FYDnKlELWD49Rf79kqNTPpSv+1GP9FE+sOHuo74PWD67pll0h4ZTPpb19Qyz0Ec+zNGFVwkBVD6+76pWZ6ldPvOwEffJKGo+0EzWgs5LbD7484+lpJp0Pt4Xv9XvRXo+GiI7iws4fj4lkL2AGyd8PkDZGAfIW3k+ZjDbPx7icj41ZDcpmkRqPqnjLqo/W2U+sj2oYm07SD4cGqD7TIA9Pu8IPLUNt0A+F6ZJ+T2hTT4gGJWKC4FQPlbK4WoBR0M+avMFLAYyRz46TG2P+11PPn/hH0bdzU0+eWaySFzjUj6YEmWLYDlZPie5y3y9uFY+y5HOzEwXaD6FT6ywOXdzPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1367\"},\"selection_policy\":{\"id\":\"1368\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ojWimkjEOj49/tUhT+pAPhSZNWO9FTs+VqtR4CinRT6fP83zgnhBPhV906A2vkM+qgCnS0QNTz6JVL/8UHRJPg0fbiBkd1Q+FPjVjJQxWj5j649Ey4NhPrfCeo6ZW2k+reH5YL3Vbj7cFoV2D9FxPhJhU4KeGng+/C2nVZybfD4UiIrV6MF+PoTnddZ//YE+OvlYFLk5gz78OFDHCzOEPpELs8BWjHg+t7wgVfTtZj5C+bi4nWFRPvoDGzTRhVM+hEAkOu1+UD5aMNGBNixIPli4VtFLAkM+059wYWHTUD7v9ixqubliPi9hBn3YBXE+HRjvuxAHez65GAV5v62CPrtUEtOmOYk+3FOh3juxjz62qnoSoJyTPiinqdvXwZQ+TShKyDvKkT6TZOWTL/GLPu1nAMiPsIQ+eXjoLMw+dj70g+pZZ6RPPoVwEsonERI+OSHfsUwAKj5MQR6ZLoo8Pty6BXwpH0s+2kEX81jxPj7UZnRLmeUzPvKk+Gb5iDk+XqdIXi51Nj5V8ZBO1VBZPjNYJAICZFw+6eHMcTlbWz7UGNblScBqPnI7tGmHUHE+ypiBf37+fj4rFRRpBjGGPihph5Gvpow+PsD3iyusjT6p+8qoLt2FPkLF2JfnD3A+43zZMfnrXj6MJA+X5sBjPlgz1Qo4oF0+LJCSU0tGWD4f4/BEKtpXPuaikQe/YGA+XDVQY6J5ZD45QngVuT9XPsZDTin2EUs++UWJUVqmUT4egyAXtutIPizgNqFJuUA+m9jS96fOUz4Jjw8WXsJQPkUV/+tmllM+yD8EkPODWj4srOQh/IpTPsQvVMzXL0c+ibZ87ODrUz53NW5IthhaPupCiUzNDmc+RltIYB6bcD4LLU6CYgp1PoZDiNvRhHk+8R8yNM8wfj64FMd6QxB9Ps5DQuek5Xg+FNypgGKJcj5SOUGXM99qPqMrSh/IrWQ+24GML//iTz5qrI16fDZAPjvoU/hQjko+2YEOm62PRD6Bse5cneRCPtbOF4YJCkQ+I6EHDVJoQj6/MUyaYKA2PvF7OSMsykI+lrI6kSOqUD6vv3O19ANUPjx7XK7Snlc+hmRT5sT6YD5erHqJPUpoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1363\"},\"selection_policy\":{\"id\":\"1364\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"czC66j9+PT5wOwWGlCk/Pom1q7RLZDg+u/BB3A9MQz5KR9FW4QNFPmMrFuZkbEo+NxrIryeQRz7ub5MZwqlJPrh4MzfsQlE+wzxdRC3EWj5HUIJLEt9hPgaRUX4eWGk+VrzKrQblbz5c1REdkGNyPnmUGX0FG3g+ORPyPCaNfD4kcUPrmUt/PlBiLRgoC4I+jbdDbam/gz5bpO3+GLGDPv8jkPDJxng+SD6utwJfZz5hizjA+A5TPubK+RsQWVA+0FA4ILIAUD4b9fBh79RHPj1H5Z3uxUI+R1/mCNs0UT4nLcBKsa1hPvuNOjgMHnE+DuXz+qo4ej54ItNNTZKCPgMYZSiUAIk+jRLJL4Rpjz6lowvTrKqTPgjLlwhE85Q+zfvxU/LjkT7oaryHtLqLPl4meRP+yIQ+IIyCzx4rdz5Y6FgUeD5QPpFFh+vWPDQ+JyAw2WeFNT6Kx3s1MitEPs0Fhyj3wz4+vPLkM9NaMj5IwGhOlJEwPgcWxkzx7DU+FQ1bjky4Qz4/iq4XrklTPgkhlXxvh1k+zw4OkEINWz77vDz8+DhoPnKsaZHJ2HI+jvYcXfBbfj7eLlEn+ZGFPmxioWCffYw+Rv+ft5vDjT5tkTjjbySGPtPWRi/9bmw+fqDb7gC0Xz5ZftGBJZhjPk5JCt1M+F0+soqDL4aMWz4DOsX3+8tbPumVPxrLdGE+LNeIPZtBYz7kz/hKG3dXPjMEZc9Nt1Q+DA9k4WvCUj7ztER226s1PmGJqtDcTkM+KRm6FTDBVT4k4bPjSYJHPqdkS5SfEEw+W78hCucbYD4xsibz261SPtl+ePiRzUk+unxuORKPTj7Jd5/xeflZPqrD27hG+mY+NDvTqbFOaz4wqAQiJ41yPtbt7taYKHo+U5iGVNXcfT6uxZ6KmuR8PhkKPIpXRHk+v93EIdgYcz7yGMwMCG1pPlUN/uQGPmU+Vsyj0IRLUT5Vk2p1GMZHPkBz2AvnBEc+2Zu1EDXkQT6Osr4WBFBGPq1qpveakkY+N8p7sTrbQz59SBQvxF9OPgoI7sGVJkY+GxIiI7ljVD755CxxTeROPhDptuEC3lY+lVyt1rdnWD5hVsnO1vhqPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1369\"},\"selection_policy\":{\"id\":\"1370\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hP8/+h+JQz5ylumYejw9PsD43WVcMTo+XEeo+s46RD4UJ0KqoVo6PsjEM+89mkk+hfl7L2KMTj5cloGhL71JPiZutX8dvVE+Co0CZ2DiVz7i64aoL1RhPhpa6abWZmk+3GEvcRbGcD5LIoxpU8ZyPt+y80+SoXg+UXLGDhRkez6kOJtBcH5+Pv98hkWy6IE+21X8Wixtgz4wdT9yJM6DPv+pfQKUy3g+ECe+8VwNZj6UODRT1QxQPjelQP1ojlM+KUzoNki5Sj7rexn0KyhFPpMqgChmh0M+LL4LRazfTz4B1TJKOfphPuQkA56qUHA+wN/dIeuqej4PSUutCHiCPvUoB+kBAIk+UWKjW9Kqjz5mwwKB3syTPoZ3RrVQqpQ+McgJlRfTkT7KcZHRte2LPnDrEdki7IQ+fsGHyt2idj6U+BsPS7dRPjKvsbJ3/Sk+W+lE3jumPT4zbzvyWWJAPmHZBFOSz0c+CT71CIsVRz5/LGfhAf0sPmD5WfMxOCY+smbcAMH/Oj5TGh1+AjtXPizLNKZvt14+Ihigl8cxXT7fbeyH3SNsPkar/cgEf3I+SZcBCgs0fz4iEQkFMW6FPhMGHTcSK4w+3b0u1h9njT4i7+fOZYOGPnlTfG9oGmw+pPB4Q0fJYT6wdM2pMRpiPlLfS/QuhVk+gzNUfNnGWD4uuWDBHltWPjovhtq4AmA+DnNlHoTXYD4A1N86W7dYPrCgDAA3CVE+d3KpuBAQVD5BnRi4Aoc9PpKjQT9UZUs+b7e4FPG4VT7neA/DrAdYPo2fqAoaOVQ+x+yCA06lVj6Yl5Hwu8dVPmyaGI37uE0+3RYW/OvCUz7oLS4topBWPpGFAlzTVmk+5BnQGKw6bD5ZP8U4JJN1PrcRVbTCqno+vWb99M/ZfT4rytLs2uB8Pi61wWVDaXg+dIlXrs9gcz4IqNI7jtBsPrEY18BsLGY+kUU7bbpXTz5/YZ/yyMhGPj5EprlmSkE+ZpAKRN5mRz4h+R7KkJtIPjJNG4k4rE4+Wfe9lKlWOz5sCPFzseJHPjECeTP+5Ew+zVF25UpWUz6k8RHOF0RGPn2fBFrNcD4+iqdmtlGNXz4t9drsTRRgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1337\"},\"selection_policy\":{\"id\":\"1338\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"oivGG5goOj6B4xHNbro/PkXvwpPsoTw+jOq2AR7XPz5av8G5ZKY9Pk83QO0WoEk+P/IVWYciSz6cdku7pEdOPou9LleU0FQ+rEL79zSvWT7HpfHvPW5iPr4JzMSkb2k+3FiffSjJbz5N9oVLzB5zPs/zFNzoJng+3i5D3kWHez5wdCXIEz5/PjEl9HsaxYE+rbWeQmXQgz4VcF9N9sCDPgvok4fvWXk+du9Gq3+BZj54P3Gx045PPlW9QDHzslI+HrFH44LDTT6KLKC7xplCPqhDX7QGOEU+x8QHlJ1aTj6HntoTbg9jPqXvBd8CgXA+eYTlE2bDej4raKuCn8aCPkpBix8nEIk+dYk+idXCjz6p6voTaq+TPtRarRPZ4ZQ+NgYTCqn7kT7IQTTLsKmLPvUVbOT+64Q+kCHnZaV9dj5NUVEdWi5PPgNxpcFwLxI+dTq4gW5JMT47OQ/PoFUkPmcdaKafAkI+oiBI4B2hPD5OrUtakFozPsC9RB+U2zg+Jm3Rfvf2Nz7ZqCGc2A1YPvLed/LHe1g+LbYF4dh0Xj7ru2s04alnPjJ25L/cE3E+ZD2iIWr7fj5OfqAfclaGPsAtOWBY5Iw+srABrRXHjT6W9AFtCgqGPulBzzRVPm0+HWyfMhFJYD6313kPVQNiPnbJJwJmaV8+ByihS4gZWT4CX75ch4xaPmWfCaRAvGA+aOccd2PnXT6+kETrmBxXPigJKFVOpVU+2NuSVrM7Uj5pMXyrzSo9PnEoNmtU0Us+cCzQtUAKRT7OmLqnaU5OPmcZG5LiTlA+H8JUyJCkVT6i7LYwTnlUPmfy5BVRbE8+V9RUtCefUD5yuve313lWPuaFNBmdCGk+484SKTDnaj55fpBIONJzPpvOoyqXkng+HMWLSrEEfj5uJEfIxmR9Ppf9Bczbi3g+kujBxTKacj5xPJVpE+BqPnfeePqyNmM+cJsOVwUpTj4M0Cqs37ZJPt6pFCuLEko+MiLkh4CXSz7VVYGgVbNLPl7pHyYgrkM+Od4dChSaTT4joDXlaDVNPqPgy7UJ9j0+HoIeTt4rSz5LbgxCHTZSPuqyw+L381w+q+o7qSREaD76vbCOiP1iPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1373\"},\"selection_policy\":{\"id\":\"1374\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+e9j5BFdQz47KhQ/aGtAPsQOUHnh2zw+UECiqPUiQj4bhmgLDF5CPn8hr1MXflA+jcG4QLq2Tj5uLatoTS9OPjj9wIEsKVI+SGXjBdeqWT5hiOLyphhjPk5B+eW/H2s+UcbAuBCicD4fmCo0bJZyPucsL+1n6Xc+PjvZ0Proej41luPlcBd/PqhJ6SfL3IE+gN8/9C1pgz5472J9LeKDPuai9adwzXg+3gRndtJZZz6UyFarp2BTPg6SqUQDzVM+1X2FaMpmTT6CruKSaQtMPiE4qHv/kkE+ON7LUM/fUD7CNHaoHYViPnoOeWx3GnA+lmWowCK8eT65fj9suWuCPqSWShzqy4g+lOOMnvHJjz7Mua/ILaKTPrvbIQh1mJQ+kmzA5KbjkT4UgbE+ZQGMPvsPaa4CgoQ+QH+9/AL9dj4t0tbI2KNQPumJm7fqaSs+JzZFXsfHMz45BfYSIllGPksBkF0JKDw+hB+jfbTAMz7rifSIwU4pPu2ihRjzXzc+BABIvFrrND7g0mVJtthXPjFlXtIO1Fo+LExeHNwtXT5faHGhXjplPr5yimsRSnI+G/0CyfgJfz4LtBDAzuKFPqhOibssN4w+3SQt1JRojz5cYMlq1O6FPk/EU9yRgW0+Mawda3YEXz4cH/cYxlFkPtWm1qsxaV0+mDBM8NjoWj40BvvkcqJYPvMuoF6791s+p+XEkn4nYT6V9t2+CvFWPmZGD9FB0VI++QYO3CJoVj4u0p53S8NHPr8kSMLIhEc+pisqyQXjVD4geZ1zjwNhPjvU1jWMkVc+AHT8gRnoWD5zhuYg29JOPsRv8NNllUI+uJMyqbAWUj6PThxdq6pUPnio44pgf2c+elnRbfowaz6g2tdzxtNzPh6e56VcgXk+/OlinGOffj6fWTTrbCx9PlfX/o+CkXg+80v2nHz9cj7RQmnJH/FrPoDzkZZq/WQ+RiyTsc/mTj4KsSrKjhZGPiibOL2MNTo+ukKeGMhwQD7N22GuWaZIPqQJHHVDI0g+a4F+aIWJPT4AlFdUIlhEPukv3uZY5kc+RcKT058dUD5A5VBti9NLPlBKgmWdt1g+70xq2+HYYD5WtVyBR9dlPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1333\"},\"selection_policy\":{\"id\":\"1334\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"CIFwxb2dND6LjAcqWH1CPmTlN+DxpjU+/1+pXrwZRT4Kea9uQH5EPljp5/ZJfVA+p78aNcNXST4WNvmGaQ5KPqlr9Zm8l1I+mMSkwRLeWD7DmVGJcJphPjd7KWAh7Go+7ZLWq7ADcD7wz0APvl9xPjNJw9lhIXg+JRbtY1z3ez7xs2MRFgV/PgCScJhPoIE+L4LD/brGgz4f3l3OfweEPohztNhXI3k+7hsL+U4wZj5REtZ3PDdSPnLLGRax81I+rDgP1VSMUD79w51AlXtMPt42cPHCOkU+G/OhvJHmUT6o+P1xLiliPvs3iSxsnnA+HT5JIrpXej6LR8vywJuCPulKCR6n8og+WnaFEAvwjz62tlASXKSTPnKY00L2p5Q+6RNYZ8rnkT4GyAUXJxqMPnhQ1TAuk4Q+EU9YNZ54dj52OUaI8kJQPvBJyiMQOiU+0x+ruyH6Jz5vqQ233qYjPiEbjwE1sDc+s4w4p79tQD5YiSSg43tAPvNVU3bmeDo+vEaV5fmrNj50/Y4fbS1ZPqV7iC4qRlg+o8bl8tYiWT5Yg2jLntVmPllNOMwi/HE+sPwZhTCTfj68Au6WUmWFPmeP1j6ju4w+jrckRyfvjj6iWgGs+7SGPlhyt5N5b24+wDOpOiihYj5SVHVY8L9iPv3Zx+Uujl8+x82uZBMFWj4aFq0mWA5dPo7l9ebfJmI+LUuPj6oBYD6SbkShSqhZPuahz41EZFY+Ybqc6mD7TT74HwIH29BHPui2G70840M+ZsPds8MFUD4ashfO+iBbPj+vktovdFo+Es81iDNXYD49j2VbfRBWPvcT3dE3BkE+/QJQcm6WUD5ljJyOR/xaPhCSQxBvL2Y+NHoBnGLGaj7aIby1O35yPiHCHd9t2Xo+C7jtqtPIfz7to2gMDtt8PmuYwyOjP3k+1U3S3W6/cz4PUmTUAuBrPkjfJ2DEQmU+fyd3sqUPVT6UJGNsPAREPmuoQWTuwkY+x6KMa+pzRD4gfZjuxCBFPtUUCP9Rj0s+cxgwilgHNz7j/zfNPHZLPrbncUvUzU0+EuDHObZMWD6DTX84E3RQPsCw6SFA1FY+Uh7JoE+PWD7rNIiLm6FiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1341\"},\"selection_policy\":{\"id\":\"1342\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jgmzAKYhMj6gU/TzcsVCPqOYIicaiTQ+SzgJR2ugSD50fXkCEvU/PhEtJDRXlEw+M5DmcFbASj78bYofueZMPiOTNPbMiVU+bIcKmg/2Vz6/LbOD3c1iPv7s9izNIWo+wATXO9nxbz7P+7carkVyPhoTIcz9Snc+ICCdpw2Jez5FkIN+nlp/Pt9zkhKeA4I+CzgnaLijgz5QJD9fzuuDPkDLPbDON3k+cOu6LpM5Zj4nheUYIFxRPsmSUP4UOFE+G0965Cl3SD4Vy9noF2hGPqSt+NWFUUc+LJfF5byXUT7EgEDZnkJiPv0o/oKcrHA+0N45T7ADez7x8EW06mqCPiYrK6AxN4k+p3Ot6A/8jz6jb4YwZMOTPs7iipkw25Q+jacowkHBkT6HmuO08zOMPhgK6hvf14Q+qYtNAVIkdz6MNc3f7ndQPtB+SWJtDyU+yNA04sPJIj4pIK9TQzE/PjkKrAqnP0c+62w0ScXeQT6ZTqrQ+nw1PgxSpmy6Jjc+P/8y6fGDQD7gwo9YpZ1UPpVBTAbNMlg+CF51ycU9Xz6LVqxP5k1kPvoUAraZKXE+lKjqc+jUfj7TcG43Yi6GPubNx3gJGIw+v4eXDSAqjj4VxFR1rP+FPpJJKCK81Ww+ocWdJG1fYD4eLKyGGclhPnbwwzyMhV4+qs7XGPonXT6s6KH7bLhYPpMi6Qnu4Vo+cXCKOplqYz7hdhtq+D9XPrLSPwier1A+s+bv12rwVj6I91sL9oNLPhEMezet8T4+hdrbPTh/WD7f9im/iwdOPlCkrQXOtFQ+2ckWVR5XWz7gkCATN9tRPpQzuQ11zko+I9oosye3Sj747KR0vr9XPhTwnzYcpmg+s0lPKNZAbj4AUHpOpTBzPo0oxo0D6Xg+AOljrTGufT7RPsy2c3h9Pp+W8kDD53k+OKUts8CAcz7Zfi5NHrpoPj22ufJSgmQ+eJSvQm1ITj497uAJdPpLPq2rB2Z4Nks+mDtjOC78Qz5XEIr59JRBPrAG/v8g4EI+XIlKmAjVRz71IkBfi442Pu+YsypNX0E+AdIn1iCwQz6DDsLsOD1NPlGyx0K4z10+gS71tewgaj4I0P9lxCJlPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1339\"},\"selection_policy\":{\"id\":\"1340\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Zdvh0DgKQj75ODFu+1FCPmR7gKB6dTo+2WCd2c5KRT5YTfyDAR1APgfBFkjl4lA+6/n7rAwJSD5ET1u65bFHPqLBQbeGPFM+wX0esmMfWD4CpdDhxrFiPkfXmyjfNGk+TyqOhZgxbj7VvVdddMZyPpv+0eCRo3g+i6llG96DfD7W189aAFN/PmCVIdc09oE+bITSGPdugz7zU9GKQ/KDPs6WqhL/FXk+vMy+Z04lZj5lywYPkhpQPmlyYZhAHFM+LlPZbD4LUT68wDinI4FKPv+A1tVBXEg+x2zpawF8Tz5ObM4/zqZiPpx3JODfpXA+39MMElg8ej49Lzch9VKCPqQOLXuCOIk+ZcUWgomnjz4yvUvPTKGTPjgI5dwauJQ+QqD8PxU6kj60Cd9eycKLPrH4XTn9F4U+EyDtSkqNdj5TYCKa13NPPpYeks6nhC4+WFB0e5qkJT6BeAPcHOM7PqkwYfDouUY+5Wq4rzJRQT5OTsSnJTs2Pmjoqy0QxzA+cpY5bJOGNj53bH9lB/JWPtAoCmMfJFk+UKT0EqkTXj7KcDSfG1hoPncHfaWKDHI+EKkdE3K7fj427QoeBMqFPqSWJoUsF4w+GBhHZfKbjT6Ss1zGNSiGPsG/iGIBYm0+b1X3MFCQXT5Anzn6dwtjPuB1qqbS/Fg+L1Ql/nR4Wj4MXxidxXFYPhXJ3Z6k6Vo+ls/gcbKdYT7+SwkVatFWPsguf3KXn1Q+Ipgtp4vvUj4et8DY2IoyPvPJqI+cd1U+RHVDiDEnWj5zuBEwPmREPj/KZE2qtFQ+Tkw1ix3qWD59JjyLEctWPuSLQZEDRUg+lnfJUwPYUT62EDLjaylXPmOHg3TX+Gg+Ku2QB8KabD7ZVA5nbdlzPmZjwf68y3o+xqC1X3fXfj5VApqP/kR9PoLKz62sKHk+gLvBUVKQcj61pEqard1pPpdirTUyC2Y+LIP2XoTJSz7q8kfThEFAPh4+8l0JxUU+NZkjyS7LRj6i0fK0I9VBPqzn6lUKglA+v0P+y0yFTD4vCC7jpDtOPlLb3INPe0Q+eNOWJQTkVD5+T8JfZL5TPs3idr9HFVM+UgJFtfO1XT6cFoiCkShoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1371\"},\"selection_policy\":{\"id\":\"1372\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"9ba2f775-e0cf-43cb-b133-2112534d3fd3\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"f3217cab-de13-4a9e-ac91-7762eacca633\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"ad1eb794-d57a-4aba-8c85-31d10c439248\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"91311844-b654-4651-8ca4-27f7b30a516b\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1767\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1775\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1769\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1799\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.0, C/O= 1.34, [M/H]= -0.36, T= 823.81\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1774\"},\"selection_policy\":{\"id\":\"1775\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1769\"},\"major_label_policy\":{\"id\":\"1767\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1772\"},\"major_label_policy\":{\"id\":\"1770\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{\"ticker\":null},\"id\":\"1772\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RsSGIWO0UT6C9kEN+sFUPriqbtZuRVM+jcEL9WbPSz6uMvheXF9FPvLJGXVRHDo+UzNjm5cfND6GIGT6lBgoPrIahBCBPDk+w2bJhN3/Kz6/mX6g6YowPr5bMK05tTI+Yu7gS7Z3QT4TK+8qI3w/PssQuzp6hF0+ocey4rXFZj5Y3eAKVXlxPhfVtijEA3Y+0ZPoVrp6eT690QW6PWx4PlwbwC4FTnQ+8gyuo2avaz5WxHpR0atlPs7abOC8U2A+ZzUz3FifUz528wzbFYpKPmz+CaDAP0M+tftYDKUbUD5gR/k0+GBWPgGIkRpzdVA+44VSzrRBQj5hhCv6ssBFPhlJTqfnhEg+me8HlBm9Sz7CrcNzjYFPPh9rxUTxq1M+OXlk1vMZXD40NJjZEERYPq6eMHc7Xl4+oMh/KJS0Uz7x5ZevwtxbPsuro0E63Fg+wINrOsB5Yz4XasuNPc9dPppXtuSKxGg+j0MnW1AJgj71IvCf7gKMPhT6v+L2P4o+Ly1NNwZBgz6+Qs0CCGh7PtGsbzkxCHA+XLZJ+IyRZD78IAg8W/1bPlH4Kzq3V1Q+YnO9vO8pUT5MYNz6NlNGPuZJZCNdwDg+qhC0jcUDJT6L+g9zwtwkPlY92rGcoiE+LAu5ADROJT4JnmHAFhobPo6vPNwlth4+xXYbD7jqRD5opOTcWY94Pl8uswXLmoU+smfvpXBjjD5X7AOuZeSSPiDcaFIxQZg+S65Hkn5jmD4lcUoQqGmTPuz6XrnB35A+IaKpscWgiT4v5f/JRJiBPvLe8FUtRnQ+s1IYNta0ZD5jAC74uPFQPgBz/2v8L04+XNFXSWU0Uj6f4I7Ew9RWPixeB/6s5Vk+mtSLKj/eUz7qU0dQGepjPpxTRB+3hHU+WPF3DpCZgT5aq1JL5amBPhnrNeUGboA+b5q3lX+LfT5RLFRUx5N5PkQNdymp83Q+vozDrSWQcD7iPdh4QDBrPqfUwN9VdGY+QEWmIoiZYT7baRFaqChbPmeBEdm8NVQ+QQjmrExJTD4fZsBjmpBIPjVCWE3pUUc+1icejk1mOj5ZwbrSptxDPjVtpG968UE+xUcpsSyKOz5JBv0L9u0vPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1798\"},\"selection_policy\":{\"id\":\"1799\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1770\",\"type\":\"AllLabels\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"91311844-b654-4651-8ca4-27f7b30a516b\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"ad1eb794-d57a-4aba-8c85-31d10c439248\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 161.84, p-value = 1.92e-04\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"397817a4-9b03-4985-ab86-b67d79dc97d1\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"1645c343-f470-4e9f-b318-196bd7729246\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Wx1gFCgnWz7pka9BKQlgPmRA3rTo+10+cvqAvrDXVT5hECeOjtpQPunrwEOaw0Q+7HyR2XgTQD56Fdo2Z2AzPqmOgngqHEQ+STNvc2GdNj56Ka8YGLI6Pv8SqkzSMT4+l6Fm9Gf7Sz5vHBFvz0BJPqZRb+5IVWc+XXOnSEzXcT4PF5+OdjN7Pln0MbAQD4E+wve4iki4gz7yVJEu/OaCPpwDAfZ/gX8++ZilUVKXdT4NkCRe7PZwPs7L1GcmfGk+YnjoGMMNXz5r06Q5Hh1VPjRurGNSqE4+I93eHp2DWT67rhcaOYNhPuMDA0jZtVk+wGM5QC+lTD6jmcNUwRZRPtcicyD4PVM+hZugo8nFVT7OjYjU87pYPjsoJ3zRBl8+Xt7zJGgjZj6S8bXGeW1jPu2rfWTKWGg+u2WxKdQUYD6G02z8OW5mPs0JwdIm92M+sgb6wUUubz7iysR63+xnPiZt+xwbjHM+T1gay1eZiz6qcygMQh2VPoWKYt2at5M+1lxL3MD6jD70oKAC97GEPvp8raZbcHg+nQzlvSybbz7TUBtxUZtlPrE5ILF+eV8+rhe/jo+DWj6kodbMNU5RPu14py9hT0M+HhhYVwmZMD5gL1aat5swPnXn6HkbPCw+A/RL03sIMT5jYSooI6YlPjAlo8PjaSg+oajiJ7I5UD7t4fCc+8SCPq7Lp96JcpA+UsUML9aRlT66TEf1KY2cPk76QMYJRqI+NaE0421coj6bpS8gkx6dPgz1Iqdjb5k+qScvdSNYkz6dQXBfW6eKPkEG99QO/34+wwjaqIkDcD4PkjUJ5q5aPiXppmvW3Fc+75LcBYeWXD4QBd1mL5VhPkTYtcD79WM+77NAY6CnXj68KFX8WGpuPpmGAUZtY4A+sKdVZkoYiz4iInkGUEGLPleHrFcyX4k+h9V6ltHZhj4lyqsPjtSDPnRhj7m7QYA+UPFhEeupeT4SI8AKCgJ1Pv1la4OpVXE+xRb70yYSaz6vmAMnatNkPulqfMrU714+Ff2wwm6xVT6sBcA/KtRSPqcFG0sCzVE+TGtCV300RD7phKYXPDtOPp+yZZMoVUs+Ich2/KEGRT5aEcCwI544Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2024\"},\"selection_policy\":{\"id\":\"2025\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1993\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"v5GDo9gRWT793Yhiz3pdPjwf6B8pUVs+pLebBZeJUz7nrSJcNd9NPr4P9AvyI0I+5FoZGZPPOz6YHKr9EI8wPm1SbT7ch0E+1UZ2VeFSMz41tQesRNU2PmfOOz8iyjk+rnIcOstJSD45l2eH3/VFPqRXBHz+y2Q+cYbfUPoEcD6hAZIZ8aR4PmGiprFcGn8+Ith+tCoFgj6ZcZU/gEiBPlFJF5Vls3w+friHxRiMcz7wyBkm7I5uPqUrmW+wI2c+0XogU727Wz6mt07nfrVSPrw7MhzX9Eo+V+5QocWLVj6SG87Q241fPhPlzLvjSlc+n8J5GNbLST43uicQx6pOPlRlZSpOPFE+c2/KCNx5Uz5FmVXxthZWPm29FZU9eFs+qxtUIlKqYz4cUmpscttgPqDU6UQrFWU+sq6RoIVIWz7VWTR4KGRjPlQ7F/AXSmE+xiSOcQ/9aj4Jmh85aLBkPmI5gJEeSHE+uE9vKgVqiT4UYoRrmNCTPlYC9C9jiJI+yFgW5yT7ij4V3oCy0x6DPreoM0yMVHY+pjjehT6SbD7z8uK8gIJjPjrO8dmKS1w+0J1tdDoSWD53dGsAplxPPrRnczsbN0E+AYoMcBAoLT5cjXeKzMksPgaH+/V/KSg+l7BVD9UzLT5uV1k+Ep0iPvZKSd38PSU+iESEp8YKTT6O4OhWRg6BPmauW0/3DI4+dSdFdFHekz45b5FqMo2aPoRjafupI6E+xO/ILUlRoT5OWVduM6KbPtmnyNOdvpc+uA64dW3mkT5MBpj9eWmIPsKQCM1s5Xs+GVdRQkddbD66biNxSjRXPkR5ZifXnlQ+JHH3knXeWD5S5lmJNmpfPiq8Y/dSxmE+xg+DdfI+Wz7e78na871rPo4+UUi6Y34+cU3sW/oxiT6+DrKR2WqJPhMDL0YGtoc+u34CaGBUhT6WK0GUb22CPuGqaGMiFX4+4PyOlKewdz6eGYW36GJzPovYHulQ+W8+DkEehxj4aD7/TyvkiC5jPvam4QGvclw+eImBAJrNUz6E5H0vmCBRPv2/EQiOP1A+eMg8MDc9Qj7jCQhNWKdLPskNIrtu4kg+4y+CgG4EQz4PwLbySgE2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"96g8hXc8XT7TtBrS6lRhPsYw6iRUU2A+QD1md8olWD7PyTxugsVSPhTIjXtCY0c+ZkyWJig/Qj5cDgpwvTE2PuXKl7J4sEY+vR9okeHnOT6/nVaF644+PswrDC3BTEE+gNCwrgStTz6lobpWv4tMPqhL2mCT3mk+SWBvQJ6pcz59LKwD/MF9PoGXkAfzkII+YhfzYGZrhT5LOI0deIWEPvRedSvNJ4E+dHnD3Yuidz6iOzypYqZyPvdrEGCc1Gs++jpYb+QvYT4w7/qLvYRXPlZQk9XmLVE+78tsnHR7XD6tT8hLhD9jPrMiOdTOIFw+4QT5Z4h+Tz4rVnMhH9hSPlrggBaiP1U+l8d2PrcRWD5Xgru3MF9bPoVJnLGySmE+EaGTJ36caD4IkQEhgf9lPjqDEYRpnGs+HfQZg2WFYj43TaWAS3hpPkbYarU1pGY+T/QyCb6vcT67+2m8VilrPuqgdqgX0HU+5mDFa6rIjT5Ahcys62mWPrQS0YrS5pQ+5GCA0Vz6jj7TY8BSGkWGPj1RJwErjHo+SvD1eg1ScT6zrlMlIrRnPpRSJ0S5U2E+jJEQqeT0XD4MiXeZGO5SPiaK2yOnZ0U+O+updgqeMj4SmHDviNIyPvIj635bJzA+ug/tHg13Mz5Ya/sRNK8oPmr//KnKlSs+/i4D/ADuUT5M4/jisHuEPinAoRWY3pE+L2PU6VpFlz47Kv1/IY2ePhiRGJFpaKM+plKgmJJnoz7o8QfS8pqePj9CfXopIJs+mkCmdNnJlD7ufEjBPOWMPuC9cm5YDIE++WWLsG/YcT5ktUehgSlePgZZ56/VGls+XdpgPEwnYD73Fg2JQ3VjPl70B4qkJWY+DCx/KCcIYT7NMPAOX4twPutt2mf9lIE+7wG/cJr+jD6GNUB7xheNPpsLKmleCIs+UyzzxEJfiD60aBaLrDuFPndtakHmeIE+wOU0ji6jez6GLPtdK6F2PrRfR5KqrnI+fOzXIDUsbT5f4dtpS3hmPm6Xi0l9tmA+snDghEOVVz7UJgJQvIdUPlFLJI52WlM+IA5IfsMrRj73fyLxj2dQPnVXqWvix00+X2BreNUIRz6lYslu/Do7Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2044\"},\"selection_policy\":{\"id\":\"2045\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1995\"},\"major_label_policy\":{\"id\":\"1993\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1995\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.0, C/O= 1.34, [M/H]= -0.36, T= 823.81, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1996\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"kizA4OySVT7NS8ppZyFZPq36d61511Y+Eqqqnr5WTz7kzzHphW9HPqwiSWK+eTs+vH2cUKSGND7dbiJlQaknPhPX95GrZzo+xHOC+j6aKz5txWxE+FkwPs0i+37RZTI+QFxPkgIXQj5qbE4ZYm9APpf0TsFzimA+ef+xbfDsaT6oDghyn1p0Pvz43ANMC3o+skwTKQpWfj5s6ofV8yF9PoLMD3Ri/nc+PCoejhkecD6LDdes5OZoPsbxTx8WNGM+Y6ewIlwpVj6IDxn75lhNPnLt82vrvkQ+xaubW7iQUT5UQVDkw7pZPtmJGeM+PFM+hFrZPPQDRT745kPkqMZIPtHWAT20vEs+3KKHB5M+Tz6vj3RK9KdRPolbdw4/gFU+HgYEX/EHXz6tTc4cfBZZPjMY3uroNV8+nK81PmkYUz75GYvACpVcPmd/RYIQmVk+OmHQUyj0Yz6/MT3AZoRePuoAKz+/9Wo+KflK9nK/hT7AzDkFX6KRPlzUsdaSi5A+f6IBhKOghz428Et2V3qAPh8f5mi4ynI+XJS+PYR6Zz5qgZqmZvtfPo4cfaew9VY+OC5Sx+P4Uz6IATjz5OhJPuoLZ0xtZjs+Rt/1VvJgJj79N3rFgFslPhh7vgX0UyE+Xqi+LW8KJT5+TEp8OwobPsvuXhYn1x8+TP180ntSRz78F421M1x8PqkK+e4oR4k+OMGRK38DkT6+i8dYFzKXPgDrkbvNeJ4+BcjCHwMinz5U8tY56iOZPjYEAQ1n6JQ+Xh/2oxH0jj7qYAIceqaEPnoIAn+rsXY+pAt80ps3Zj7FKhCfzl1RPsGd3PwgXE4+M4ZAktegUj7KVEuZBR9ZPrMHM15gNlw+3YyXUoyGVT5GhwQHgUFnPiSTY2Y6Yno+/jEr4esBhj4YJ37qY1WGPtvj9pKQ7IQ+HC7Uod/Ggj4GVxX/0BKAPi6n/oXUAHo+UM9dIsxgdD5caq/ZTKpwPvtzdcByc2s+Py9YLDZxZT5wSDMLR2xgPjkCm8SERVg+zEygjrWhUD6stJwNX4tMPq9wK+M2SUs+4bEX3WThPT4dSCxyBFRHPpPBmGzBxkQ+cDnDXidLPz4PlKxo754xPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"EgcApLFdYD7s/XnOnoFjPg5DIt4rkGI+25+sLQIEXD7QOLUnWv1VPnxGXVZVyks++rrUip/jRT6G8yK7Lew6PsgxCSh/BEs+sCydaaNtPz7Exnj2G4VCPpiBLI3p/kQ+d/M+q+bvUj465mliHglRPrWujxseIG4+/uZ1WiC4dj67D5vVJgaBPjRsdV57GIU+K0noAIxFiD6utF5y/jyHPlsd+btOgoM+tgctFYsQez5Umd1lZnp1PtalWbA2xG8+sCSQBxX5Yz4SH731yI1bPnt3sq3cSFQ+QAcR8UC7YD7MPAdCEClmPvc+dta5F2A+frbMITUjUj7KP2U3LspVPkZaZSKWnVg+nGV9w0nsWz7ti5xe881fPnZ66/SxRmQ+rbllmtfCbD5OvAR/tU9qPuAlxilQi3A+qPNHtHOdZj4QGpSY7pFuPuZTX2TFIWs+FdYRmDE0dT5yfrXKxUtwPtdZYZpWnXk+utv0T565kD6UGhcTJZiYPq5AE+Si45Y+l4tKGm8qkT6yUfWOlumIPtXadOT+FX4+b8IFn+rdcz7xYOmO7zhrPmqrYV2m/mM+kgAWqx2HYD6EQhEg+adVPuVrG7mL60g+mUA1g5kBNj7CQu/Rrok2PumpCXchkjM+15O4D8CLNz6HnC+SKMctPn1pC/4ZdDA+nNKGZibKVD7cNxtf3VuHPggS00V/QZQ+bMmHMi0gmj7bhuNIHvSgPhz/uK6sT6U+aN6HNtonpT5xLEQDnoygPuLlREFg9p0+oz9jGD42lz4oEW9RHlSQPgQCdhU5poM+tAt2aEXrdD6sfK25/v9hPrXBbyzORWA+1k+8PBtGYz67XxQB3JpmPq4sUlLH0Gk+gO30OVrkYz4Z5dJ4mMlyPqBD0Vi9lYM+sQ7AdVQXkD6WDjoRnhaQPtMqYhzU0Y0+8nwhi8Psij5EPUIgS5aHPlFvHzANg4M+UBNmAArzfj7I29A7x1l5PvwRnKaZ8XQ+Jf/OvYtZcD7u6NNCjTppPs3pLmgSzWI+Xq3B9ifBWj4CsbH4pGJXPvZSoCRp9VU+qP34P0h4ST7aYJDeOZFSPtVRGd3H8VA+ivOLSbBnSj6ljtP4V50/Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2066\"},\"selection_policy\":{\"id\":\"2067\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2001\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"ticker\":null},\"id\":\"1998\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"2045\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"2000\"},\"selection_policy\":{\"id\":\"2001\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1998\"},\"major_label_policy\":{\"id\":\"1996\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2025\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=161.84, p-value=1.92e-04]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"1645c343-f470-4e9f-b318-196bd7729246\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"397817a4-9b03-4985-ab86-b67d79dc97d1\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:29.970352Z",
     "iopub.status.busy": "2023-11-28T21:17:29.969163Z",
     "iopub.status.idle": "2023-11-28T21:17:29.973578Z",
     "shell.execute_reply": "2023-11-28T21:17:29.973909Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 161.84, p-value = 1.92e-04\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(161.84, '1.92e-04')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:29.982365Z",
     "iopub.status.busy": "2023-11-28T21:17:29.981740Z",
     "iopub.status.idle": "2023-11-28T21:17:29.984247Z",
     "shell.execute_reply": "2023-11-28T21:17:29.984531Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:29.988338Z",
     "iopub.status.busy": "2023-11-28T21:17:29.987577Z",
     "iopub.status.idle": "2023-11-28T21:17:29.990769Z",
     "shell.execute_reply": "2023-11-28T21:17:29.991169Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:29.995604Z",
     "iopub.status.busy": "2023-11-28T21:17:29.994667Z",
     "iopub.status.idle": "2023-11-28T21:17:38.075363Z",
     "shell.execute_reply": "2023-11-28T21:17:38.075722Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.097292Z",
     "iopub.status.busy": "2023-11-28T21:17:38.096706Z",
     "iopub.status.idle": "2023-11-28T21:17:38.099130Z",
     "shell.execute_reply": "2023-11-28T21:17:38.099511Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>372.594286</td>\n",
       "      <td>0.643714</td>\n",
       "      <td>5.036552</td>\n",
       "      <td>819.768941</td>\n",
       "      <td>1.449209</td>\n",
       "      <td>-0.384587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>741.558137</td>\n",
       "      <td>0.453279</td>\n",
       "      <td>0.112741</td>\n",
       "      <td>21.830736</td>\n",
       "      <td>0.195492</td>\n",
       "      <td>0.031527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>32.220000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.869803</td>\n",
       "      <td>782.505107</td>\n",
       "      <td>1.198675</td>\n",
       "      <td>-0.421808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>76.745000</td>\n",
       "      <td>0.336500</td>\n",
       "      <td>4.972679</td>\n",
       "      <td>809.213969</td>\n",
       "      <td>1.326693</td>\n",
       "      <td>-0.403989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>85.910000</td>\n",
       "      <td>0.888000</td>\n",
       "      <td>5.022122</td>\n",
       "      <td>826.138448</td>\n",
       "      <td>1.443840</td>\n",
       "      <td>-0.391798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>142.865000</td>\n",
       "      <td>0.972500</td>\n",
       "      <td>5.103957</td>\n",
       "      <td>831.913086</td>\n",
       "      <td>1.524138</td>\n",
       "      <td>-0.370071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>2050.810000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.210666</td>\n",
       "      <td>847.484924</td>\n",
       "      <td>1.800284</td>\n",
       "      <td>-0.330385</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius   chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000     7.000000  7.000000  7.000000     7.000000   7.000000   \n",
       "mean   0.810000   372.594286  0.643714  5.036552   819.768941   1.449209   \n",
       "std    0.144016   741.558137  0.453279  0.112741    21.830736   0.195492   \n",
       "min    0.610000    32.220000  0.000000  4.869803   782.505107   1.198675   \n",
       "25%    0.710000    76.745000  0.336500  4.972679   809.213969   1.326693   \n",
       "50%    0.810000    85.910000  0.888000  5.022122   826.138448   1.443840   \n",
       "75%    0.910000   142.865000  0.972500  5.103957   831.913086   1.524138   \n",
       "max    1.010000  2050.810000  1.000000  5.210666   847.484924   1.800284   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.384587  \n",
       "std       0.031527  \n",
       "min      -0.421808  \n",
       "25%      -0.403989  \n",
       "50%      -0.391798  \n",
       "75%      -0.370071  \n",
       "max      -0.330385  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.107904Z",
     "iopub.status.busy": "2023-11-28T21:17:38.107270Z",
     "iopub.status.idle": "2023-11-28T21:17:38.109620Z",
     "shell.execute_reply": "2023-11-28T21:17:38.109949Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>96.06</td>\n",
       "      <td>6.730000e-01</td>\n",
       "      <td>5.210666</td>\n",
       "      <td>826.138448</td>\n",
       "      <td>1.536510</td>\n",
       "      <td>-0.330385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>189.67</td>\n",
       "      <td>4.310000e-07</td>\n",
       "      <td>5.110967</td>\n",
       "      <td>817.696838</td>\n",
       "      <td>1.443840</td>\n",
       "      <td>-0.396000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>74.08</td>\n",
       "      <td>9.860000e-01</td>\n",
       "      <td>4.955522</td>\n",
       "      <td>832.388997</td>\n",
       "      <td>1.198675</td>\n",
       "      <td>-0.358107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>32.22</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.096948</td>\n",
       "      <td>800.731099</td>\n",
       "      <td>1.800284</td>\n",
       "      <td>-0.382035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>85.91</td>\n",
       "      <td>8.880000e-01</td>\n",
       "      <td>5.022122</td>\n",
       "      <td>831.437174</td>\n",
       "      <td>1.297561</td>\n",
       "      <td>-0.421808</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000       96.06  6.730000e-01  5.210666   826.138448   1.536510   \n",
       "1  0.676667      189.67  4.310000e-07  5.110967   817.696838   1.443840   \n",
       "2  0.743333       74.08  9.860000e-01  4.955522   832.388997   1.198675   \n",
       "3  0.810000       32.22  1.000000e+00  5.096948   800.731099   1.800284   \n",
       "4  0.876667       85.91  8.880000e-01  5.022122   831.437174   1.297561   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.330385  \n",
       "1    -0.396000  \n",
       "2    -0.358107  \n",
       "3    -0.382035  \n",
       "4    -0.421808  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.148074Z",
     "iopub.status.busy": "2023-11-28T21:17:38.146916Z",
     "iopub.status.idle": "2023-11-28T21:17:38.151517Z",
     "shell.execute_reply": "2023-11-28T21:17:38.151834Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"eee184ec-2032-4484-9694-ae6d1f31beb0\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ab9ccb84-d01d-46b9-9a70-205b762ba0b9\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"2297\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2295\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2294\"},\"major_label_policy\":{\"id\":\"2292\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"2294\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2292\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2300\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2297\"},\"major_label_policy\":{\"id\":\"2295\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"hutRuB6F4z/KL5b8YsnnP+xRuB6F6+k/DnTaQKcN7D8wlvxiyS/uPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]},\"y\":{\"__ndarray__\":\"pHA9CtcDWECF61G4HoVSQFyPwvUoHEBACtejcD16VUAK16NwPdpTQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]}},\"selected\":{\"id\":\"2299\"},\"selection_policy\":{\"id\":\"2300\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ab9ccb84-d01d-46b9-9a70-205b762ba0b9\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"eee184ec-2032-4484-9694-ae6d1f31beb0\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.155691Z",
     "iopub.status.busy": "2023-11-28T21:17:38.154929Z",
     "iopub.status.idle": "2023-11-28T21:17:38.157220Z",
     "shell.execute_reply": "2023-11-28T21:17:38.157532Z"
    }
   },
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.161008Z",
     "iopub.status.busy": "2023-11-28T21:17:38.160473Z",
     "iopub.status.idle": "2023-11-28T21:17:38.162722Z",
     "shell.execute_reply": "2023-11-28T21:17:38.163040Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.166520Z",
     "iopub.status.busy": "2023-11-28T21:17:38.165990Z",
     "iopub.status.idle": "2023-11-28T21:17:38.226271Z",
     "shell.execute_reply": "2023-11-28T21:17:38.226600Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"961e40fa-3b7b-40a6-a31d-df11547c8a0a\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"abce6a20-9f7c-44a5-8a76-322c13dd61b6\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2508\"},\"major_label_policy\":{\"id\":\"2506\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2651\"},\"selection_policy\":{\"id\":\"2652\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2511\"},\"major_label_policy\":{\"id\":\"2509\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"2508\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2514\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2509\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{\"ticker\":null},\"id\":\"2511\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2513\"},\"selection_policy\":{\"id\":\"2514\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2506\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2652\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"abce6a20-9f7c-44a5-8a76-322c13dd61b6\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"961e40fa-3b7b-40a6-a31d-df11547c8a0a\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.246385Z",
     "iopub.status.busy": "2023-11-28T21:17:38.245699Z",
     "iopub.status.idle": "2023-11-28T21:17:38.281453Z",
     "shell.execute_reply": "2023-11-28T21:17:38.281821Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.293099Z",
     "iopub.status.busy": "2023-11-28T21:17:38.292248Z",
     "iopub.status.idle": "2023-11-28T21:17:38.295327Z",
     "shell.execute_reply": "2023-11-28T21:17:38.295655Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:38.308543Z",
     "iopub.status.busy": "2023-11-28T21:17:38.298768Z",
     "iopub.status.idle": "2023-11-28T21:17:50.480832Z",
     "shell.execute_reply": "2023-11-28T21:17:50.481222Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.223434430360794,\n",
      "    'gravity': 4.770100514094035,\n",
      "    'metallicity': 0.9047048389911652,\n",
      "    'temperature': 979.282558186849}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.770101   1.223434   0.904705   979.282558\n",
      "std     0.178385   0.180505   0.142796    44.931594\n",
      "min     4.428070   0.863572   0.657678   893.104370\n",
      "25%     4.629057   1.076826   0.790492   952.246628\n",
      "50%     4.810874   1.210268   0.906985   972.567322\n",
      "75%     4.891162   1.335724   0.974905  1004.134323\n",
      "max     5.095485   1.664084   1.215579  1066.221191\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"3ba2ce94-e2bf-4107-acfa-e2be805d4fb4\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"deeeb092-ae46-4025-a215-ead97b18dee2\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8sEje4ouPj7o+9H4aK07PrScKz1oJkE+XBpy0VkwQz7tMuUJXCk7PmVFF0ourEk++6oE4ovCRD5j11dPiPFKPo8WoYGNI08+f8giHoOnUz4IcR1XjMlZPtXXEeW6SWE+pCpb3COkZj7/OXvgISJvPmBAp9SlZnM+FJkl6a0seD59ijJm24F8PoPXSqncQ4A+rw4Sowv7gT6Fw5J3RS2BPie/D3b+nnQ+kemNB3tyYj4cmUFJEPFSPq8LJ7AQD1E+35zL78f3SD54e/vfL0k8Pin5J7wJY0E+CvWjueaZTD5vqEggKddZPoSdljwHJmk+AP5g3chgdT4NciKfkpWAPluFjGM9zIY+545o/5VOjj6/cHICTYqSPvCvqsGiGpM+ikNKONeGjz7+Ls5vdM+IPke7YZUEvoA+CwS2iubqcz6N8CTbW7tQPhgXuHQ5oSc+EVkLulGRVj5Ui4SQdcFAPlqyZnDpYk8+1AWn02DvVj7ycOEu9tdKPo5feg/jukQ+JgJuFKk4UD7h3vyBbxBYPtvIbCzR4V4+7lHVQK7zYz72EiQKbHlsPrsQC6OsKHY+bS2Rw+PngD4DEuIH1O2HPrdmIHb1+Y4+lZLxUiaTkT4RnQir6sOFPhaW84VVhHA+g5FmkFUFWT5sENRwLJxkPgaE1s7V6l4+XGk6OpnNWz7gdkSnSPJOPlhmL10/fWI+wjyeU+TeWz4h3hp1FsBbPsPyoOLQpmQ+PEaIjQ0DXz7HzJC+9J9ZPrEBxBy2Jlo+Hm17XMZIdj6hAenkWvxkPnDxkZSMTHg+ZrWZpWvHcz6IAMlX24tsPvQgywwc/l4+kThqrjidZj6whSFAJ/pxPiRiTy2XrnQ+Jj+GIfuqfD5YJJmKGfyCPjFbnMPY0ok+pER5sQEUiz4bPZez7WeKPn7NrRvxuoY+qLU1YXL6gT6CGHzRRiF4PjjPwa/u9nI+LahdhBSbWT7z94LDGVdfPn+ADSdZL1o+yos7asshUT5Mrh0k1MBXPiTClyMPNVU+H7IacFHtSz4V2WZ+lE9SPj0J1OYGSls+FZN/xyVNZT48MsMHhXdxPtXYk9u6Tm4+8AdjoO6Oiz6oG0oB8CuTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3058\"},\"selection_policy\":{\"id\":\"3059\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3029\"},\"major_label_policy\":{\"id\":\"3027\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cb2JOBQFPz61MwVurrM5PtJ3Iyyllj8+7O3UmbAGRj5dbtb5c0gyPpjlB0A+DUo+RtLtCljeRz7nSLfibqJIPunV6FAIwk8+A1EnCSqdUj4InCjb17VdPh77jwGNy2E+pDPenme2ZT5JJnWvQP1uPqmJFcqzyXM+WHAi/U6gdz7Um0MLlJR8PuRMDafWOYA+OGS3r0brgT7WjUaQ59yAPudYpsgj5nM+veSr/xlGYj7SHsND9lZTPjwWv3rKO1M+MzSm/COsUD4luWZoPqZDPrFMLF2wrkA+31+li87qSD6bXBj4fXNbPmrN3dPQumg+DiKc8ed7dD5+2EQ/iYKAPtc2yooiwYY+12SXSdjFjT6ImF3QSouSPnnpc379S5M+w8XFmL74jz4C0iakETqJPjrmwuq2goA+NZos+mIecz6SaNpsYLZPPsFYxvnUvTQ+AZWuXzaYVD4C3NKoFJBJPnpyFBWEwVU+tA/afA57Uj6cN0m4xdVIPpeu0ihrSkc+823ztkWGUT6A4uTSwthVPrrO36nfkVk+st5O+Sm6ZT4zW4hHeH1uPshkgTfus3U+k/TdKSJ5gT4w05I0q4aIPkZSCTg1tI8+aQqHdHRgkT4uelyjaN2HPmzl0KAYJHE+BxvSZzMwWj56bhpW7V9jPmh6Uq82omA+2pbM+eqKXD555By+5NZPPuG+NgaSvF4+mfB6B3laYj6TypALgedaPpyr+gO52mQ+n/2MqKJyWT5/MPbtIOlXPnpZ16a5lWA+YuUK7Sw4hz5ypNbLGxBzPiD9xeC5MHM+nU0221vscT5MlK9XBrVxPqzrFFi2YWA+TzB71+afYT4QZU3C56VwPtWh2W5tanM+0Njz+R25ez460w+mtWGDPi0jduIuEIk+NvQ4ZEOPjD7B+g69YAaMPgdYB9tiBYY+/DG0UieGgj6MQf71K+h1Pk7KG/V8NnY+LcX12FauWj6g3mC+Q3JaPvhAY346RlE+9x6ckGiaTj5ZoKpbzmBXPj7bSnlzeFU+bpNTA3PfUD51u3YNQtRfPr3VcbOYPFw+LdCios8xZT7aXc6w4J1xPkTWGIigWmk+hIjtjyLdiT5STkoy0d2DPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3068\"},\"selection_policy\":{\"id\":\"3069\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LkFcJxnuPT6p3ve4DGk6PoLLN1BQoD0+wzKi5MbKQz6bEmdxfZw4Pp052vNTckY+8pTXtCuSSD6alUvB57hKPktlB31v/U8+CozUIM1hVT7OjNWfS4ZbPu+EM7EWnGE+liwtIVuHZj5f84juDVlvPnDZDHpShXM+xr7w7YUHeD64mjGPDTp8Pn3V6LjmOYA+dufVmyL2gT6dAwytXC+BPptPuADLonQ+z+MYbvbNYj5578pygqJRPqDJkXrC2FI+DQEypV2LSz72ikoBC4NHPqOm6FqHQzs+d0Xx6rM5Sj6DGbKQRGJZPqdJMbb89Wg+lXt1Ll85dT6WvJkNesOAPqzmTZ9rc4Y+x7VOPrfOjT6w9SLQ5m+SPlgsvznNLpM+cY9Fq0dckD4po+EI0dKIPi6x/I1puYA+ppjTGb17cz5MsTQsr8pNPqKizAY2kTM+40L1dWiiNz5IbNYUIzZHPsbvSKZTOFo+cWbzNWj/Vz7CO21OrXRRPpiSMvRfrUA+5vspiLlDTz6uUxQ61rtfPsuWJ3jnDV8+arHzb47iYz7SSX7B1AVwPoQbVMk5PXc+1aQTPPaLgT4TUmL8t2CIPpUElwd3w48+X47/701JkT6S0zU3KXuGPvS+WFblHXA+X7PDhBpBWj7OaPF0MdFjPueTzI2l6lo+golYmByNWD48PbPoMOBTPnXMqYcpmmM+c3uRIXKMYz6u2G4KmgpfPtn/zp2N1WE+tx4FmntGVD58VZyNP7VYPms2jQukvGA+CdzCYh5XgT4fk0VGcTBtPhSl0zz2vHw+xJ4K/o2EZz5w2ckJ2zJsPlGic9Mznlc+6mBDgi60aD75P/hVNSNyPs2Cs41rX3M+A72fpa2IfD6b+o01PcWDPqlOZqlqsIk+N93UvZxkjD7aSpmA8BCMPse+EVlzJIY+AMvRikyUgT7orTqfEVJ5PkH0WCgLuXQ+ONGLFjISYD5cQ3jzPsZaPuFe2VyWr1Y+zgQvE4WwTj7uIDrklkFLPmVkH3m3/Fo+nPI3mPDWXD4yAgNbRTBXPsHzCO1ZPmM+i/3DeYBjYz61SRSKSVVwPpV8XXUs5mY+vu4YGNsGgj5xRdVajMaOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3034\"},\"selection_policy\":{\"id\":\"3035\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GU5jgj6NQD71qgc950Y/PiEsJYsPvj0+FpUylX0+RD6JTh8eKb9BPlNoKTEfJUg+PPaLLgMRSD7t+Fn5w9NJPnbcqH+y8E0+7OquRJd0VD786VIe5VJbPsEGQbHKAGE+SNnSkKB6ZT5wu/cEj85uPmoXjI0nd3M+WAGhMjH1dz6PB+SeNr58Prsm1dJpJIA+NeHD5z0ogj64/dZbwF2BPkdfSqALuXM+ujuYYjRJYj7hMz0/l9tSPkVoKWiL21I+rP8NnYbUSz4ptNTARxVHPj3VCpIJ0UI+00RRW6R2Rz68IAqx3EJbPsA6JKay+Gc+7FVEMD5hdT7lj1YP6j6APq4CRdDohoY+wW7RrfXtjT4eS+P9f1+SPmwU+lXWfZM+l22kfyLwjz7RwUi8D4uJPtUhw4FI8IA+TM8itJODcz4xVz+iqmFQPhcQEwWryjY+NgyB0SZJUj72+TuYREtUPuRoGKOQ4Us+OscrCBEKTT7ElSxs/z9RPuD4c+Vlx0Q+q0apojp2RT49Om2au/5XPrZF99f0OGE+ZiUD+/jkYz5mZkEjTQttPptGxV2013Y+IkS+N+0GgT6hZ1dL9DSHPinlnh+drY8+jK+UBj94kT6QMUFrwYSGPiKppTl33m0+V9tzFMzdWz43yQ3QLJZlPkA5qHhILmI+Udy2h025Xj6/yU7ncQRUPnLuGLgmQVw+UvbPD8BnXz4z9hUA29FdPimYehaS02U+wAi2Fo9fXD6Qrl750EtUPhMvw9UxfGI+ung33xZcgT71aqHHy21zPoGaD2vkUnY+IB9eKjF5cj5HkA3HAXFwPu8oFJ0SW14+wI/bc09KaD5KhGCpgHJuPoCbr33T7HM+FXMb3BWxez7j90GKhViEPsW4Py7fNoo+RNGq4hXJiz5iull7gUuLPougEgwPeIU+Cv2NCOUOgj5sQcSb4uB4PqigejTLcXI+s8Usfl7xVD69FndqJ4ZjPrxsezZKzFY+Q+r5KQXTTD5VEhG89RZYPo/3ReGyplE+RvWeE2+uUD73IFl76eJZPl5VgFmsvFY+aVRv/CKNYT6a4hyOzS5oPgJIziE3Fmo+HYQEWjUYij5mKWC6aUGVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3046\"},\"selection_policy\":{\"id\":\"3047\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"F3BKqPjCQT4VsMnE+AJAPrm3xAq7zEA+ditF05tCQz7irgsePuM+PpzGeMhpQUg+KnjyaTFKSj4NXoW4NftLPq73dprkH08+82PDO+C0VD5cw3wak8VbPlTmxAtVmmE+eLd2MrLqZj5mLNbZfwNvPrrYGCJ323M+jejsdlRFeD5Sp8kDwkp8PpRPC/SSWoA+hvaI8ZX3gT4dsBhlwjKBPth4zQWkAHQ+KF1WrZIKYz6XuT0HZIVSPpEI3bpd5FI+g0sOyCJiTD7KIfaxIZk8PqCgnO4mfT8+SU2uCV9CSz7+yn/XA9tZPgzw6iojAmg+nEITgTsxdT41GbpL7jOAPqeLBJYomYY+ALVwYscmjj4XLLhnk3uSPtKE+RSQVZM+0p5H6wgnkD73qRI9MxGJPuuCM+4Z74A+tga9hQi/cz5cjRFZpdJPPjcNj9P5AEA+zwqzNfnGTD6wEiCmpzVDPhGtN/4PBUM+fbm8fVWtUT61UY2+ju1KPnf/AqkGQCo+Y97grt33Sz6hxZrKwGZZPmgiC0VqWFw++ufcsHH4Yz5KICl2HfxtPodHU2mplnU+cDqd1JQRgT5odlWuG8CHPuPdBkW6YY8+WU/300mMkT5bT97QaLaGPhJxfZ8t024+4uCmjYb7Xj4x/uUNeS1jPhiE7AqKJmA+Q9pSfWV4YD6GNYHIoRNZPnfVBXrxpWA+YHru/H60YT4/L/5bX51cPu0HoftxAGE+irh8y7omWz5fxL4nrCJXPjV3x8PGhFU+cFJDMzrhgD53X/Pq/qCCPi/ujX9M7KA+m39PMbR7bj5bOM5f45B0PiCKeW1+A1o+89rh9o0GaT4mn6UA06FtPs/Y6m6vIXY+yQQXEyJeez7o9RAsZ8KEPgVKhkktIYo+4hnSuWXNiz5ATiEV0PKKPsMGhtyLk4Y+B0Tl4zApgj7HgjUUast2PoAIqVZQMnY+Mwls1cLrVT4VekGetwFgPqonIZZbKVk+53tl733/RT5AKgevhu1dPvAUGqq74Vo+61MK1tqZUj6dlFIIqQhSPhjICluS8VQ+sXtXzU0maD5heDRg55JyPtA8zDx3UWs+wmzhm+PGiz5XhehJWDSOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3062\"},\"selection_policy\":{\"id\":\"3063\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"thC0jHCePj6atjz0knI7PtamZqRiz0A+u6UralzsQj6awqW1XYU5Pia9sYPG+0k+cGQGhn2fSz6bXdVcf1JNPl6VkSDfk1A+tH3s+XG9Uz5X/GEYoF9aPhLinCZayGA+uduVskNdZj4jNYlOY2ZvPirSDYyPvHM+LQejA0wdeD7ltSQDSiR8PojxWA5NT4A+GPBy/JX+gT69DsjlDQ6BPicosct0YXQ+jL+S52Q6YT60w97VhnhQPvU/8TqsdFM+OryySfyvTT52Abv8ZVtFPpy7N8q4OEE+HLgVpZo+Sj6bZ4FRdIpZPt+ugPrhAmg+AVJ8TMWgdD6D/oWJ8CqAPk/V+VGFn4Y+SkD2mFfWjT7cqIGPJFuSPgejus7G/pI+OgRzV8oqkD59mZIlGZKJPtL8z9CPIoE+iq5spLfwcz4GyBnQilVOPs6NuEJrlyo+XUR9plqRWD63hHQNAfpIPuRhQAUfmlc+hbPQI+9RUD44aw/xrShGPoquhGxYUTg+8ceF9Fc7Sz4XYz+ZzitXPg2a5lFQTl4+6aNPp+f2ZT6IA2m8MIJtPkGRsBrtf3Y+xXsdCCIXgT4qYW53nHSHPqd2OvOYdY8+YopHc4+FkT51TaTBSmeGPiUB8sU2OHA+DjTYaZ+kWz65oEQ7QmlkPrNW7nPcMGA+TrJVsTQ7YT6WpMY3citVPtysWzSInWA+1bzdtFreYT6FjGZiMDpXPs1qLAKIj2I+gLM5ZRi/YD5r6mivFztbPsVj6m3yQ18+Gx9ipSKWdj5UC9PyH8V8Phr09pre6XI+w8/R1OC0dD7u+ukyYM9wPgYhJRzlIGA+GzeGEwk8aD601qjPsbZwPozRwhCNcXM+vk+6fuXFfj7bdi3/PdaDPsPBYnyRAYk+iROqwFTAiz5lBNTF7WeLPvpP/MjA9IY+skkt7InkgT6Uf+8fAEx4PlyWoLbMD3Q+XFkdZJ81Xj5Z0QvFfU5dPuMxXAyY/VY+m5FqrefvTT6thx14ebpSPsAPyZYlolg+FHlDiEgHUT7P3pziryJRPjhm9l7VVWE+eZabOrZXbz5VQX3YzattPsi052Qmdmc+/74h5jlmjD5KTYjkYQ+TPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3072\"},\"selection_policy\":{\"id\":\"3073\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3032\"},\"major_label_policy\":{\"id\":\"3030\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5I0SAIBuPj5mo7LOF9I+Pq0AE1mQAT8+cDQl42KxRT4yY2XZlYI6Pk4XiHttIkg++AkYVCQxSD6v9sbfKFFIPuertgZZg1A+pTaILyMkVT7qlt0giENbPq945iS4iWE+DeiINIBnZj542C5LbxFwPqTr4joYm3M+tNoQw4/6dz4JN8XSI4t8PhxNe44IXoA+eOFbdnXkgT6p8AknDDSBPn0FeJMf/XM+iV2MCzTsYD48Gi4xlWBRPuCfl4BD11A+KshjeRhETz4IWiI1/Jk+PtKhW8zWqUQ+uyd50aMDTz7BFgDtLYhZPu86A844UWk+iW06OGMbdT4dts1noFeAPr5J6RdFM4Y++A/WWuvGjT51dai8SY+SPiaUjWw/OpM+FwhlDGoykD46GNoNi5+IPriVZ4jEIIE+6a990Dc7cz6lDa+IuxhQPiehCtKHjjg+892awp3yVj7N/zIaiV9CPsILRNBI0Uk+ZLI1iRUySD6ir60MlRdQPu0VD56pSkk+1PolwmsRTj6klPvnGAVYPlUIwwXu0Vo+GMVSgji4Yj5y/HGhX2dtPoER28bFTHY+R6sdsabrgT6C2PpXx/KHPg8KFc52+o4+RVZ0ILiBkT6Gz0HbQJSGPis3AF2LSXA+YyNZetE9XD7SnvNZ/kphPr/btS9aelk+KONvTprsWj72uELccQVUPiCUla+1GmE+qC2xFFA3YD4Fe7Nd/CNYPhdYFFI7s2I+ocobb27pYD6OpJosX4xfPmI0uPJSyF0+u9N2kPgZjj6TIi/uypSRPuvGm9cW0I0+CktAtLxzbT45WbXr1sZwPq6vQT1IC2A+kGhD8X+6Zj7Z+VRg74pvPjoBb+c+8nI+YMG9r947fD5qNEr65JSDPhs5aN5pzok+E58F7ms/iz7oarXpewSMPtZhCFcYUYc+tu2N06S0gT4O8QKGhlt3Po0n3x6OKXQ+mdSRQWDvXT7O+oj0O2xbPnjN1qo+KVM+uoJaNT81Rj4HPI6L/vxVPkHfYFCQClI+PeraCd8RTD4mGl5TkpxXPrnY4viArGM+utHo+xpJcD6vBUZhyLtnPscgcbhWTWc+WQnATS3mhD7K8m7W556NPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3054\"},\"selection_policy\":{\"id\":\"3055\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"m3G2PjtrQD7Oz1SSFNw/PowTbSEaLD4+/MPTIADWRz5+iyQtI6I6PvnoLV7mnEc+caMrkNL8ST6pAS877rdKPu2cCsBCWE4+dP9biVYXUj6xgPdEuQJaPq0gaDYrfWE++VA+JrmXZj4OkyLIYeFvPtxi8ogrlnM+j9B8Fi9WeD6lY32+C3F8PmgNwbJoHoA+BQMlEZ3cgT7/hRf1lwyBPl73I3+mlXQ+Eqjk1c4VYz4kExNiSe5RPvD0lour3lI+9DVaY2PpTD7e9j8DeTlBPgfS9WDmokE+SGvPzFZ9ST4qkPnw2v5aPuGzdDrvM2k++52xBjhXdT7+Lp7tiTyAPrEtg3gsm4Y+p1n3dwu2jT5c0RnKJl6SPsFftfxANpM+LEd9fhoykD7+u70M1g2JPrqNMrAu1oA+2J3yo1KAdD7xpbOEG9FQPrWyWSkONi0+zIe04Aa7ST6h4ED57wlBPg8D7p5j0k0+as3dhTclWD5SeBwD1zJNPjOy15MjuTw+4hVKzM7bTz6j+PwYndNWPgkioFi3oVw+h0WHuQ9lZD7nkddbEkxwPuQGhfLPSnU+Iy1eb5TwgD7OOnYiNdyIPup2XMkNio8+nQHzlYx3kT6rb3DagGKHPorMiOwUpXA+lSxoP7nUVT59omHViINkPkTJ07ZAIV4+bUFdCTutYD7VQzZZhmFUPrCJskhwoF8+8qRr4E8tYD4NCpGUs0dbPmk5kMTJPWE+1AtTNYS7Wz4bjN3jl89bPkRPnUOSUFs+YlJ147RagT4SlZHhrDuCPjaT4S4QJZE+/FNPGp1acj7UUSHVrBVyPlUHCJmtG1w+VioMDqmYZz77ORfEKBFwPqmoi9jZgXQ+RT6HE2VRej49oFcUMZ6DPuPKefCBV4s+YQAtU1xJiz5wEXn2Ra2LPpxAu5kaToY+zrRUxcbsgT7sUIXzCQx3PmL/Ooh43HI+gIBNl0bfWD6wpy4efgFfPqMPKKhwfVw+gIwV2s9BST6PzBOpsu1XPgwSd6za4FM+9pAKl2tzST77jg8BsJlbPgxbnqXbMFg+zRzlvWUIYj5rldLDUiFjPvcatttIpV8+hpJeRoX+gz7QWClbB/SGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3048\"},\"selection_policy\":{\"id\":\"3049\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lAnd4jWRQD7OCVZ8b8I5PmUNqtl5+UA+D4peNUG6Rz4AnYEt9Bo9PiHl/jRKGEc+2uhoAh/FSD5G5wJJn8BLPiHgiQUkUVA+JU6CuvswVD5O46AeNvpaPhROTknFmWE+qK7pjc5XZj7uNogcwHxvPt2YDv0XHXM+Ud+mi9kWeD4sgiIlzCx8PvP78Rv1VYA+mCKpX3csgj6yHPnhCCSBPtgTPNHF9XQ+ZPAFElRLYj6w90flh9JRPlTDheHDg1I+UDzACf6FTD7CI4zoG1tCPiq7lLLxxkQ+YxXvJXl5Tj5n/epeGodaPjL6s8LrpGc+4kXCkxBHdT4qOlRpUreAPmQeZMe4hYY+KV1LOj3hjT7cImXusGCSPiP6R/dOcZM+PANKHNDNjz7Ufuue5OqIPsnrcoUS1IA+3fN7yNOScz6cWAMMI3BRPrtdPb9wSj8+1y3cNUOqWT5dhSLm2chSPuTDoXHOe1w+WpJdoZTkRj6H877skdtIPljirxypVEE+vMXFXYhwTj4LHG9weLlSPlB7hR3jq14+LYpkBK4RZj4+ojrk3vVsPl7J96vyEXc+NzaMX27LgT4aeXXZXsqHPo2qCoAkOY8+nGEIp31okT7JFZpyeoGGPmcPKU9WcnE+WuV2ipyLVz5fEVpn9fNlPv9+Izo+vmE+9OBbyOlvYD7fmgDOTUNRPshf0eeTFGE+1AMbwHdKYT7BCr09kSNdPvFygNsiD2I+crwyqxAfWj7uxKJ3IspePvCCsRtwTV0+SPr8RvO6eT53CqhMWG14PtEUfjIiFX8+o4tW1dvsZz6w6EKkMm1qPofAjBBXiV8+mcE9LeXeZz4pVqi6zW9tPkYY/Ifs1XI+M0jhtz5wfj6OENjuz8aDPq6YgJ4vf4g+PYvR+u4ojD74qpr2b0qLPhHF1zaqdYU+UCeqgWSPgj7cTGZ+Sj55PkQMk3qGxXM+3hXISHzyWj6CCiUhGS9gPkWOStvaIVQ+1WrcKZefRj6NxExx+ntaPvWgnhj9D1U+zS2pMdCBWT6N/gcJHf5aPt8Wsa4lll4+BnzGPcsoaD6LY+IwE5RnPspJ+EGEgGs+N2h7Za/qjT7DpllaIq+NPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3036\"},\"selection_policy\":{\"id\":\"3037\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"DQ9rBGuSQz7sYKkGEVlAPlOpMy0wHD4+ifWkcs4NRD4RsChpfyQ+Ptv8DSE05Eg+x9YthCU7SD4PWeQtBOBIPrcvnWEYYE8+ktrWiyDhUz4mpNyxTq1bPg23Js3kQ2E+znJHX6Z1ZT5dVLNKZEJvPvVdGft1GnM+c02WXYz4dz7REtJnKrR8Pv3UROafl4A+pcizAy0wgj6aMkTd6VqBPouH8XKnS3Q+eM1TewubYT4qeTThhsRQPtsRqpPtEFM+RIFN8TAOUD66cl+pHH5FPoOOEBEURUU+hn6ExIoeST5kMsUUD1haPqENu5Hh7Wc+5jRjkG3jdD5D0PR4czyAPn/x/lZwiYY+ZIXH4yMtjj56+jHKbauSPgYVS6Cza5M+Z0+fV2QkkD5DY9VuKCOJPsLP64iOKYE+JA9DvOeycz5LcdTimOdNPkR+BiXlUEA+OIDT/HlkWj6dNNuVFGxOPkfb0yY1CU0+JpR8viA0QD57dHdCMB1RPhd1VgXatDg+9hKmchcASz5A0aXu26VbPhUAIRCITl4+Z99LcqP7Yz42LgwdfzZuPi4BVJPfg3Y+cPjRnnhHgT4RVnGEB3iHPqf/9uxXZo8+WGmfVrI3kT4d7F/a+tqGPvrDDucbXG8+SdZBfmi1WD7ncCrUvcdiPn904bJlJF0+ZNDNMhb9Vz6AtO+jX15OPlV4AeW3O2I+CvWUuhhlYj7TwtuGEvxdPh2qCxCpcWE+SqEbJQYjWT409z4QadJkPivsUNRnRmE+3UfJ+i8MfD5/IVlXT5tyPifdBeum7pw+l0E7vupScD5T3hrlnD9xPnuLjP32rVk+sE4Pqg7gZT4Fi8unB3pwPhbJDgUCjXI+NpiUKDrreT73X5lhEIaDPowK3hQhWoo+jPdIASdKiz7cVcdRolKLPvKu3/x7+YY+A8LsE3MSgj5niNISfEZ3PgNN8zVpoXM+wfpJOfrNWT4Dl0WUustePtQoS5LC3Uw+w0951T3GUT68/6vakC1gPutHQYaZGVY+6LpwS98sSD4pkzSemvtbPp3PVfaqOGI+TV0NAqipZz7IfOS+oA50Pn8Z5gHau2c+rNXp/qwphT7U78g+tsiMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3070\"},\"selection_policy\":{\"id\":\"3071\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"SVMyB+utPz4LH/LePfQ9Pr0+IjjHi0A+izAS8nSKRj7/iZt6l607PgmN3IU2GEg+ZkPV2dy8ST7iRMJe2YlLPrASILAu7E8+0t78fproUz524h9UoUNcPvx3jDbYHWE+SueiTUYCZj6UgU5tnt5vPvb4xKQDmnM+AVlmOzKmdz5IJP5cojR8PuldFUvdZYA+Yi4LaAX1gT68NSXwlRuBPnerHHQPQHQ+XW8bT66NYj7dSwa4yqVRPlBHzlW+uVM+gOeDT38tUD7l2T3FAcdAPnMQotRJe0U+0uXX8r93Rz4LKiNLEQtaPnbcpFL6u2c+wopaCQVldT5w1AicrdmAPhY56E58rYY+2I9XTW71jT5f4hYG64eSPuu/2wvcTpM+KpMRwR/8jz5X6bd2WzyJPuesWDM7FIE+0QDBJE79cz6YWjQFazVMPknRFdEA/DY+8X38q2gmXT5SrMI4h5RTPqAEbvPTHGA+QO2VehVZRz5E23YUxNZOPnfSbU3qGzs+XXshy1X1UT636cK01t5VPkzpBi5Bp1U+8BmBmfBbZz4t7Oc5431vPmyWV430ZHc+tMEU9watgT6ifXMEz/SHPosx9dhTOo8+u9th4vbMkT4lOYr+HDqHPolDEq5mz3A+PVA2zd8VVD4S9/3YB2diPgrLwt24olw+9Q+dw/lRXj4D0R5RzjhSPvU2W7aEy2E++tL+n6q/YD4RNxcZaM1cPpKyM3LlomY+zl62G2GfYT4Wwveb8bxQPihB0Jc/+F4+LFL97t+1cj7JcuKRWXV2PjUQ0k7NkXA+u73GJd74bz7AX6VOZR1xPv3uLXkLe2U+EZLIyqWAaT5YVUholF5wPrqI54m5r3Q+1eHldYggez6JJMlyCCuEPi/6l6GMdYk+/B0uK5byjD7VTXpySkmMPrr2S+BjY4Y+CYUD5zK9gD6GL5lHBNp3Pj0IwXepVnU+xVdiKJy4Vz4JJgdqzDhfPltJiZLRRFM+G7gFH67hTj6wZdpFeGVUPgayBlGdNVk+rG4r4uIzTj7rMzoXKvtOPkCGUdgUx1k+Vx4j6wYwaD70v9W05G5rPimamIpQDGs+CtKfG3BtiD4f40K+bcSJPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3040\"},\"selection_policy\":{\"id\":\"3041\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"KuuM0c26PT5UBAMKpcs+PtnnO1LvMzs+tVg4wWEtQz7HiV2+vkE1Pvwq5ka5FUs+8D5RVYsCSD6uXVdyBxVJPkWnYjMcFU8+ogp34h1vUz46u4D4HTBZPsDrcpktl2E+6oV4v3LkZj63A3G8RrhuPhuhZ7ai83M+rPXSJflieD42sYgnQ9J8PnUW1dngXIA+JWX7NwJBgj54lRgHiEqBPi0sPYSHXHQ+g98eVUe9Yj7xn0irWRtTPpTigHh/iFI+r32ymhfpSj5QBZS4s9RBPs7011AQXEM+rcfmLahgST4rrhO7N9lYPrKarbDmzmg+4+lUp63ndD6iG4TlWwiAPmhqUcLChIY+8OSQFdvijT7F9RHpjpOSPvaGSuLYdpM++w7FcCk/kD7n75x3UteIPl8aEdcQxoA+xm4SnPWxcz4DVB+RbYpMPlsvrURanjA+LsuHWPaBTD6KeKaP56xaPg2VxiecHl0+aJJUCwEkTj6DCNoHhiJQPq3okg2ofUI+RXCvWHUzSz4QI9/kfWpaPj8WKWPu+1o+K+yy8fyDZj6R6ZBgC39vPiP22UuHoXU+o7rEBbl0gT6zQD8uTDmIPrqgVNljhY8+Z3wbmZVIkT6ueQNlH/2GPo++lHyK8G8+ilmAI6ucWT5t1rPQYxNkPtG1oSJy8Fw+0XSh64ZBYj46/lt7o+FVPq/oSBXanmE+b2bQmc0wYj6GDmvOBZhZPra53s5DfGE+X+BzzFjpWD6l1BsJSjpfPtE/LXy5ImA+r+fme8LGaD7Ev6Gcc5x1Pi9V0Ge2ons+3SqbMo9MZT6aYgJ2VeJ1PuwUN7R5WVY+xDiEz4Tzaz4BgyMgBLBsPmvLWu1sQ3U+q4YmDq+OeT6yf+L764qCPhYLKDNRE4k+sOu60D/qiz51natNrQWLPjSqLEAfIoc+p/YsxgeZgT6ZG3tdWrV3Pss6PYgBJ3U+mXlDAbqLXT7JsEdeVJFlPq6R7i1B81U+djhkLjY+UD5fVqNUS/NTPqCBGeAJCFw++H7dFVubUD5HqlsTqTVTPvTCyeiWr1Y+MH6ASRgLZz7eR4TwLuZqPklAD2AHUXA+b9l59JTpjD6NnyAmTQuRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3056\"},\"selection_policy\":{\"id\":\"3057\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"VmsKOcppQD4vZWKlF5s8PigdxhDu+UA+/Rx2KlRDRT5f+oKC4rI2PlJYZMVA60g+rFpl6pZ9Rz479yd8y3RLPpcBWFU2X08+MHrVxdusUz7ChHm6xq1bPrc4WfOvzmE+/wGmirO7Zj7LD9w9wB5vPvhb1kJAe3M+Hw5wmJsIeD7GklA5SGR8PvHXkprgP4A+xosRx2bZgT4Gip2+OlKBPpdEtdKdo3M+SDbRcmnVYT4bBnGUZ8BSPuvX4AndP1A+nUNh5DuBTT6chWf1OIw8Psxpnhu2BkQ+CfOxYAzZSz7SgMX6ofpZPm5cBL/Momc+28dxz+lRdD4YGvGZ/VCAPmwX1ci/vIY+mD0/Z1ncjT7YjaYwyUmSPjRBTJj0hJM++izRZqwnkD7y5wESsoaJPtK4x/SVWIE+RqiQhZ3Mcz7LsuXdCHtPPtDFsZcoijc+X1GV13mXVj5HnL3ilINAPpM09cDOBVc+KBcrdu7mWz4/Huj1yuBWPnHtpPx7tUI+1vuH0VPkUD4dmOqZmCFcPrxFIYlVKGE+luuiDbSYYz4I83ZxiRhwPlm1Ez/MrnY+c0HII2HQgT7m21wCemCIPlC7M9XsQ48+seg+hS8ykT7rh3mg2UmHPhCogSKWXnA+AfeTNWQ9Vz6YFHBfVMhiPm04kQFam14+O1vAanf2XD58lrHdHGpYPghLoIfkyGA++lR/BQU8Yz6vj2lfGe1WPveT/qJdPGM+0XSwJxRLVj5PW8inxJRhPutGpiPgHVM+qzZN1lfOgj4WvWhes1F5Pt/iWpIFgHQ+ZDncYLAKeT4AUBLoteFxPqUHstS8jVU+hczxYRBxZD61+TCe3NhwPo2z7XFVG3I+RBcu70RYfD4OOJe6MHOEPqDX5UNuxYc+ydXgJOljjD6iZ+j61NKKPjv2ygvoj4U+/3PsWkqdgD6pvkeI0nB4Pj/1M4ZiFHQ+afRA04ldVT7fxz729UlePhVVFkKXYFI+eqc3FMj9UT7LgxUYti9XPtpfwuEenGA+BUuZe0JpUj5/3k3TuVBdPqQAWqvvAGI+vovHdvUmZz5A5GisQfxqPhXUY4588XI+jFp68wmZjz4SRJzH7fKTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3050\"},\"selection_policy\":{\"id\":\"3051\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uLy+7DcsOz7kFY7i64s6PtBWbFW+iEA+EkblvTgLRT5j9HMBFVNBPk9vRoLojUk+Nn7cYWyXRz4HajBptRlKPsX1JYHaDlA+zImikFkpVD6Y3SzTmEhaPioUxa7HdmE+p8BBxVfMZT5yTZ1bw79vPpIqz/C783I+W8Yk2jUseD7OsCL1fJB8PkMgrMIkZ4A+3EDiHArqgT45TGa0DumAPu/UMfowFXQ+mHocivN7Yj6ETuuXC6VTPpF2KzOh+lA+zeMs8DhRTD5RJf/8sN1EPgUdUuXabEE+Pux2cgBbSD6O/R71DANbPkfCzgsujmg+GrftXNjjdD5EZjCqoW2APo2CNKpkv4Y+aPIAeggGjj5HxKDWOGKSPtXDb/tbapM+DaN1UNPPjz7HUF6MG6uIPunzNh5m9YA+V6sh1GlTcz4pgP/41ghRPsQLv69Oyzs+tW4mEl7FRj47gVLVNBtRPsGPtjkLpUw+jMZzkVRRUj46idCsqRVPPh0+OlWGw0Y+3qJHhbqBVT7eNlZa0YJYPgvH+WUZkFo+bPjvkRA9ZD53dxI2mL1sPvRT0E2xIHc+x8Q2S1AHgT64bmNN1tGHPoP1G77en48+8J05bfe2kT7u0oIRIDqHPppGNvUQpm0+RBVvs2unVD5QWcHy7QJjPs9DF4cpPl4+OTTxBXAkXT6YCXH+dZdRPiMTbIj4G2M+TzVo4h+vYT4ktaFAXlxcPvX31/J+0GQ+OTZ72cPJVj6bw22ZxN1XPv/EZlIrHl4+XzS9Pd+Ygj75ojoJjcaAPjfqG+GxcYE+HP2w0jDEbz4AIDgrEuZyPqivxE/YYl8+pF13Wz+EZj54jpICmz9vPhHTYN3Ru3E++kYtGBLofD6c895pLC2DPvnIf90FFok+mrpL1j81iz7uHB4tvfyKPjeXKr/dd4c+JHp/mUO4gT4RPZByh9R3PnalC9eBWXQ+zjV554BRXz7zxPox0WhhPqMsrhlWV1Y+fZna+wwRSj4xFoJmRoZWPvFpnIIKkVo+DplqcjqPUz4WaeMrDzpJPqGH8V+L8mk+ufyh4wMWbj56bF0FGnBqPg2O+Vw5rnM+H3sOY4l6jD4Aey7c7KmQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3074\"},\"selection_policy\":{\"id\":\"3075\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XWtOZNowOz44iI5abfs6PmwFasLdckA+23HWrOx2Rj7Tho08PKs1Ptj/C91U5Es+Kixuz/7bST6uXaccnkpJPpkp9ud2jlA+neAcTQKqVD7Ec9r3lhRaPlDeqD+HfGE+JZJfR5xeZj7u493DjjdvPkrPJ7j40nM+BPoAiJH/dz70kfLBqkh8PrV5dQSbd4A+o9qQ21jUgT4+NrjeCSyBPrT3lucFCXQ+kQiuwBO5YT57bCACPnxTPltcChinfVM+3Stni0PjUz67Pfh5D2U/PrzzWcp/akI+h1RyvMLgTT7bfxNJCq5aPum5ikKJLGk+8vA9QO/ydT7v2yyrYYaAPhhnIup4zIY+k1ApcTzjjT6LFNgqRTeSPvzIwwWLeJM+3c7NFZX2jz5c+5EOKiGJPv1ucqlXA4E+KN1aGPqWcz51nNfL30BQPiquaEdxPz0+tsxCuR6AXj5U0UuMOxtNPtspqrhsO0w+6uxN3tWyVT6363tjDHpRPg4YtneGNUU+DLadlYyWUD4YH0WlGQdXPrnWtWaVLF8+6IjG3SSEYz7N+qbXMzRuPkxes6ykBHY+CWIUBBJKgT4bALuLXkGIPsbUvlyWMY8+teEZjv1+kT4kBb2vRhCHPhF2s6BZUnA+huZO92IdWj4ObvQ6REViPv64NPeyvmE+eSMtnKcGXD6nk12ar31RPmW3Ba2ON18+/CpV7hl/Yj4jdbkbxKxYPj+k45kxwmA+0h18cuK3YD6sEKQHDqpdPkQRjdKZsVc+wmT1JTrzcj76ErZT05p4Pm7Pj6xCo5M+e15OKFIGbD4viEJVYa5uPlbmuZotwVg+PtZV/XPYZz7ojmWSYyZxPjLob8bfv3E++pKPThZ9fD4t9bPqF5aDPk+brI2Ga4k+A3GWSPLXiz7trCPM5ASLPquxW5Jmr4Y+oOinY2rLgT4l4Y6M1Yh2PoEMf7F3K3Q+ytzibkDNUz4v3NuZuDFiPuvvrJ94jFQ+C/x52b9/SD4SnTdQ0r1MPrfFhs/dbFs+Mzt2TD4CVD4gQJ6dvTZWPtnGSBvzT1c+fX/VXW6Maj6A89T8LwNpPptmYCO9QnE+GM9ZLr0wgj4LCBVWbUqQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3076\"},\"selection_policy\":{\"id\":\"3077\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YU3emEKnPj5mcncFNsE5PvQ8w98TPEQ+0AFTLy6PQz7DLg7+wE06Pjvg32nyOEY+OOFtv6eeST5dJcgSUyhMPhXhAZNUK08+lNw25bnIUz5kXasGCkpaPvLbaBsnq2E+/kfJAm89Zj6l03/8tbNvPgmIqjmaxHM+sXHkcH3Odz7bTmU2f0h8PrVov6kTf4A+ugEODYoDgj6UKdAHJBaBPjRKS3bnS3Q+Bo7PmMCIYj5ocHToBexQPtHAK3SVuVE+uQGwrpCAUT7yogTt8R1APr1V66fVeEM+v08lgLgaSj6LuB8vcX5ZPghG7Eu0uGg+LjfKUINQdT5g5zNuUW2APhLgYgWNb4Y+E3I+byIdjj64eSQCX1GSPmdPt3RoSJM+G1WlI3Hqjz6joVMrRN2IPva4CGFSkYA+KwedAkvBcz7Odpyzo15RPvftXLrHEzk+JHQiXAx4Vz5mdRQ5G6RPPqcx/nbRhUs+j7PAUfdvVj7r+iaqOGFMPivoI/IO4Uo+ROzVv34ZUz5L2yymS/FaPjnfTDzwsVk+ZEk/98g1ZT6XNlHtNKdvPq/9GayVQnU+nqibiuWHgT4vZoWJ/7qHPp4jvKoPtY8+5XqPDvCOkT54LSVNvnKHPlHPP8UeRW0+LFqM4QrEVD5APivTP9xkPkHRW6O61l0+3A4/sPr8Vz5Wq0MOGrpSPjDTgatNKl4+k4vR8ixhYD5gbu1Bx4RbPgBoTjBlMGQ+9sKW6xhcVz6WG7mV2g5fPkjVm90aZGY+KH/1XVlQhT52Rz43HZFwPpJAkPVZW4E+yX00Z5LAcz5PSPWwKA1uPitffNGVM18+C6NQ6VowbD5D22L/cCFvPrVooX9kZnI+oTsjijr4ez6nMaEeZ++DPgo7AgHLlYk+X92Bk0dYiz5zPxiTb5WKPkAMnqjazYY+UFKKRGWugj4g7aAIIeV4PhBRfg1JhnQ+C0c3tIPTVT7pwbK4iSBhPgSJAPAV81U+YK2Md0w1Rz6qwISh+3NXPuVZWZzM31M++f/E0DyxTD56QZWyN19WPjYfIJH111k+MnwmiV9/Wj7ngmKUb0hrPpjyMheCE2c+m2Ch/8Zehj7Z7+4u5Q2ZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3064\"},\"selection_policy\":{\"id\":\"3065\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"k/whkVuEOT79kqUOkEc6Pn++bdqS+EA+4Seb5feHRD7q5nPPSN49Pi7Agc3oH0g+490Ugwz2Rj7ZYbFJQthJPo8ZMXCYtFA+RQe6GIkFUz63oyk6wNlaPsE5CIjb8mA+sRQcB4WXZj463r9nqldvPuEMpEZVgHM+tn0EqyDudz4VuTJ54Ap8PhCpPxudIoA+fH/Brr4qgj7x6k9LZH6BPoFYMJJ/5nM+Dk+Hng5zYj6bgjZLP8NSPtVFWLglIlI+LHYxGqT5UD7PAcoX9VU6PuwVHE5fz0A+vNNjDKsLSD5HN58mN9hZPp6p/bcikWk+pnpi2J8RdT4+WvAMrB2APrfr8LbUg4Y+o+4y6DitjT5Dp3vCjnySPhM3y8EPpZM+1cNQnPinjz77SSqStzmJPrj2YVfg/IA+vQhqwF7Mcz5zEi35NyVQPlwQ3bmrjzU+AvwI+bQpUj4qsosLOYxJPjylYSEUGEo+6eJ+zJ1VVT4WhnB9xMtOPjLRuZO3iEQ+7xnh8Rv6UD6+8VsMqRdXPj6L/9diE1o+BvkZfChhZT5hQ6P/4xlvPuBVfVpAqHY+e2yLIutBgT6f8F157x2IPujQIwqsBY8+aYisEMWUkT4dVUBfmsmGPj79GHnOSHA+FlAMmLgbWj7IhBN3/AljPmqiJ6Q7f2E+gcAfXiHxXz7/izLJgg9TPp5/Fd808WM+7rdg2E4vYT5B/UCTfHVZPocHBqbRnWA++8jV0ry+WT60t1S5yw5RPuXcNQOHk10+9nzYQ3dgej5zJmiYSPFtPqMAm9PVR3I+i9Mf9q65aT4cSMZzIuNrPivGAv3ZwVQ+e3YC9dgbZz7cgEKSEy1wPuI1y1dwC3U+Cg2/Tr5qfD759+58KyyEPkZ8KOSjc4o+cwOv6BjSij7GZOS3762LPqG4aijv/YU+pZZq40Wcgj49ExPPJtd4PjkFLTokn3M+7lPj9zRtWT4HzjP6/eVePkFUGk+Id1I+tQsJxQPhTj4Eog0SyQFaPsF97il7rVU+IOS/OXAZUj7X7cwycj9NPtm2tw/3cWI+k4lqFHJLZT4uj5907z5wPqg3jwugfHA+uniKnUTmhj76oMB2fYKUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3066\"},\"selection_policy\":{\"id\":\"3067\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XgLK7O4bPz5Ybb7zYs87Pu0zgGIlkkA+nDbToU5LRT7RFKwO1985Pic2vGvHJ0k+zlbLxhTXRz4bQim+n4VKPv22y+kdmU8+SY/y7IPlUz4NfwwaTnBcPuz7aCoitWE+M+bc4ZioZj5MmeuElcRuPriscEqkUXM+u3GcqFrrdz46aEUXBcV8PhzXoSGBcYA+9jhqU6Uqgj4NXz+YUjOBPkbU4iZJjHQ+Cy4fxyuLYj5qtyb36KVTPg4JBctujlE+qvKCpbCkTT7ny0ZCuLpAPqqguw6hKkI+RgaRr9K4ST48MQqm/QxaPjm/baagT2c+WE7m41OwdT79ewVMfFaAPhNTEX2DYIY+73VQbinijT71YIS/48SSPlXHwdtHfJM+0p3jB6AakD6ZWTQ/dCmJPonBrtS+/IA+BB8gEF+hcz4e/XLMpAxOPmQvZtunaEY+ZzWfwUjZWj42Ubu1ChlEPuj5eVvzHUc+OSaVnq8zRj6AfLtUV/1JPoXMRVlNcDE+PNwX+TmhUD4qmcoVHYtcPgB9XzX2+Fs+aLefW6mXZD7TEb6ba+VtPijcD4O0tnU+f7Sfo4UwgT5nhoGGF5+HPswYuo87S48+P8iqRvCdkT6+HrubXXmHPrj3hOWVE3A+3U2wSu+aWT52vBjrTftjPja6yUH2tlw+8APMTpizXz7TCJxN29xQPvvR66kvdWI+nZcEpdWDYz50vs06IUlePkv0Z2i9LGE+nvS4Y5W9XT744VJeW91VPncp8+N0Olw+h7kBigowhT7NiJ2hf/BtPqc3YC/G3oc+cu37B5Yocz5Q9xEKvpJvPnu+gQhxilY+C7eW4wdSZD489PiACLxvPi/eO5zmCXY++Ctv1cy5fD7vSlB8fROEPsl/LeyMTok+978rHWQJjD5z7RhWUzWLPk3kCe7OSoY+q1ZTrFNqgj5t2Pq803J4PhvhwkjuinQ+EI/lbDmVWj4gy4jVVhpiPjS+RYYFblQ+DdfTBOftSD6et+FEOu1WPg3ENkzbBkk+8Q/3tTtaRj4Oy7u/ypFXPpKESw2FP2Q+d5Hu2q2hZT7ANXqtqgRtPiseu/Tinmk+rPPZHU3rhz6XNJenXUeSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3042\"},\"selection_policy\":{\"id\":\"3043\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"X21DdGKxOj7tNcxA+bI5PiMXzk4jjD4+rPvaciUeRj4+8eCr4lk5PhQL+suKHkw+D/3o+ruwRT5k5ehqmnFJPpCXUVI5NE8+1rhFglHOUz4M7sa7uiFbPsFpvqgti2E+gxfCAgezZj44Jd0csxxvPsAZOHdQ4nM+4WO4m+rsdz6vYMVxYZl8PhLdBI78N4A+Y8iC+v/XgT5b1ARiTlyBPsvctiand3Q+OS/RiPnbYT4RfDYFnMtSPv7DWUUk4VI+OoU9zCSrUD49Ass3VGlDPnnW6F2JDEA+++qquO7BSj44WeJQwLNaPvSP1g6OrWc+gUk+88+cdD4aWMOoHH2APlE+pHFdi4Y+EqfDo0myjT5eDE75douSPsyzDT/U65M+GK8B6zoPkD6PL2L1ixKJPmDJd1lydIA+QLncCHA9cz7HaIed821MPlN+KX0FuEU+H5L1EJ8dWT4thSIVpZVVPrZYjxQX9FU+I1WFEW7+Vj4WJYVL/9lDPilj3d+WU0E+e07SwptLST4d6EhgyMZXPgUqqJ/IaVk+hc12LDdnZD7cGIrkuNtqPtaQNZjBC3Y+6zkeGBrsgD6Jr87VFbaHPqnYIHt/1o4+qtmUbUqHkT6XItU8Wf6GPhFiOPhcqW4+tApdIJLBWD6D0P+f2KViPms/16a5TF4+MRGuBcu4Xj6eLl7v7BtSPrDRZidLiWI+J42yIJveYT4SGyIBfBldPic7tRAN0WI+EAFrDl5aWj5i0d/CpjlePuj7a2yaVWM+/GIRk9klez6Eq0auuiJ4PhP3U1m5IX0+vjB64CJKZT7p63K9/51xPqG7euNEJFY+ONivU/47aT49mFqsm1RwPu0cp1AwzHQ+QY00S7ZsfD7fdyAyGHCDPvDE4zfmKIk+AY28U8JNiz5iGuN/yQyLPtibN+R5ToY+z15cGndbgT7GPOt2/r95Pj4u8YoB+XM+580lbg7gXj7CAGCeK+VhPi0GoPc5FVY+2xqlsTd3Rj6EJbAnJAFUPuL8AzJcN1o+c4kqZanoQj6onZslGOpRPqP3l51Inl0+rcBVE45WaT4s4ilUfTlyPrSnrcSpZGQ+/rF5VY9tjj6t8AJNNi6XPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3044\"},\"selection_policy\":{\"id\":\"3045\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"A8rZDQwDOj6ULY5QQUk5PibNAhtYwT4+0xpIqFhmRT6yy1otQbFAPsAdE7QRQE0+275Pjf0VSz49/7gCuRtLPuapjW4MuFA+SGIcFMFyUz4gZggTBvZaPq+kdVtESGE+BhpjdXgwZj5s4la4gCtvPpmEYYpJMnQ+krA5oRZCeD7uBE7nhMN8PnPeteWHUIA+rMZ4gjQEgj7WARf52XeBPvJR3LE+OHQ+h7X/34alYj5/fwJLwZpSPg72foad4lE+ZaTjHjXdTD559JrQBVZEPgM5gkrRWUU+rmn+ttYlTD6vTXStUohaPmuC+mwW0Wk+STe5SJ4FdT7iHPvDezWAPqmp2rDrpIY+vrqawd8Kjj4r9EvrYnSSPvY2wlj0LpM+ATPJWfookD45a0dIX8KJPhA9+nYMIYE+3vFhwhldcz79tSXFHqVRPgUzHhDWEiQ+6AMQzPS3Yj68RczF2vJVPl27MvYF9EY+5PrIZICpUD4A7UVaJ+hMPh4aGa0bVkI+x9rOFTerRj4dk5TO/VJVPlwY8kox0Fs+Vcbxcvq7ZT4pDM9ZAeBsPkK9569p63Y+9/QFRQOvgT7KP4QK94iIPnTkbBWTJY8+5w9NcvjQkT4GZ/AsguWGPtiqIMFHcHA+3/2RgyTpWT5fDvvoYoBkPvMEH+CtlWA+UEPZBTrdXD4QmguOfo5QPoLC4Ex9i2A+i/agmKMeZD40Tyagx6lXPofgjBglbmQ+ysi5yhGVXz511gStRcxXPjWqQXqUp14+gL+2o4pVgD5mz/hwlmJ8Pim3O9UFnYg+gV0KXxgObz5Zi4ZxYOZ0Pu85MdGmr1g+s4Y3/UyYZz5a78zWDn9vPnIia4PbPHU+drju28nrez5KHbGgmXaDPtjO+v2fPok+SV+5l1l8iz4/UhWjKb2LPrfQoWUt0YU+pioiFYUxgj60E27G/bB4Por3JSpBNHM+H+h41WhJXD4Yuy5jnBlhPl2aY/9E4FU+El6z+bISVj6nCgNquJtQPrZ1zlacL1c+KZAwgo/ORz7dEnZLzgJSPo2EvAxa7lg+phPUbCDgYD4hN1Ww5jBuPoZKjyC12Go+kLgUiIIsjT4Bj5recx2WPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3060\"},\"selection_policy\":{\"id\":\"3061\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"aLTJH6IJPj71oGew5j46PqQ2WYgWhUE+dFrLkpbxQj6ODGrJvoI0PozSoYC1ekk+61ba9UT2SD4OCjzNap1HPp/QKefc4U4+kcPXkxlCUz4vblS53ZVaPoJq2B+ExGE+XRNhDrRPZj7wtsCb8cJuPokzt/sps3M+M/7Gbn4teD4ffVwvbbh8PkT4ByLLRoA+WPF4UCsUgj4dYLJV+XyBPg2yhXQNVHQ+QnIj++A/Yz4uhCmr4A9TPk8DX9S/jlA+BPINu9P2Tj67a2ZWIsdCPuuoiOCEyEM+3R9St3mUSj7X0sQTfdNZPsgf0/Py0mg+QQO6JmZ7dD4qHOfrjjeAPuDGtd4/doY+QzfRLbnljT7D2Zv5gWGSPoPBt4ndNpM+53W3dpnXjz7PbqQM10OJPuyKS5OoxYA+DKnaYzE/cz6IgHY5dAtQPo5gafV3d0M+BPBEmdqXVT5/RUybzuFXPldvH1xjMEc+jQcGX4z7Uz4KjWTfevlHPtQ07M4v90E+Obzqwe6jRD6cDUalv/9YPm/TDElTF1k+i6DHCwnNZD7U/mn5ymxtPqhyUfhypXU+NwsOyJmAgT6e7KLp2YuIPhDx54rD3Y4+To+orXU3kT6ybmSsCZiHPsbe+QCNYW4+zqGSV4P0WT6VwLSEU5lkPu4A/IJlp10+euMsyYJaYD7FGfGRc59NPpA6u7x08GA+d56chvUkYT4exEIooXFbPug9+c0NEWQ+do4HrJ9sWj4zbfOIgLBdPnW9olX6/1I+Mk6XrTpvdj7sogzePtpzPlwwdZn795E+Ir4sgLLnZz4xNct3Ke50PleBOjJr1lk+YCQxRrbdZT5C779sw8pvPkdLs6A3aXQ+CTyG4stkfT6uskeqiaOEPpOlZ2apE4k+JDWcx2oUiz4p3N8Dma+KPllit18Vk4U+v8es+1Utgj61lIXmFqN4PsKoQ7pzhnM+KLVFZmMuWz6kTcEPOARjPsb8gYbMk1M+PDZSf1ejUD5pHWM80tVcPkuZyAgChF0+1p5O/HwqTT7QIdHWemBYPk5eRfkNil8+9grQLh3Gaj6WbfqTwNhuPg2S7F5OTHE+zPtvYlwGgz79FzOlwHGIPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3052\"},\"selection_policy\":{\"id\":\"3053\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"o9eRlBtcQD61X5x25Ps8Pg3neFrFkkE+EaPuWkUrRj6tVwYHN/04PsAU1QMgbUo+q0r1okZUST4xFfBRm0BJPgbZkrrBHlI+tqdtj/2+VD50qJDcB9JbPi+aPTICSGI+6UqxL4bBZj7nhKZbp8NvPl23jK4ja3M+W4hpNB2PeD7d3cUBNpZ8PhdPLi6lRYA+5dy9RhrZgT62ka1Yey6BPn6tAfWuFHQ+NSbeDYZ2YT7fJ+eV7vVRPurYqRuTz1E+5qAJAgElUD4iRkWOg0VDPg6epu7UxT4+q1XF1ht9ST7wCsdckbNaPjoInrlOJ2k+D/F4QHfUdD5UdpPQHDyAPt0HtTZUw4Y+V1uNjNFzjT4IesFMB2eSPjkOG6zr8ZI+SW1QVTj+jz5GaAiQIAaJPpGEQqMtI4E+mzJbbkbucz7dJcAK1dxQPjtJ4Unw8iQ+0KGRYa90SD5RdYKwy+lBPswJ1hXrHk4+czFm9skyYD7wnnhxjFxSPqxe7fPmzDk+lKJm8M+zQz5eFM2vi2tVPtt0SX9MB1s+wKqBxJyzZj6qD/L33KttPqVYj92I2nQ+pOoqdGhzgD79YNRnJUKIPkdUJMKSXY8+R8ddG8JtkT5UHlpGVsqGPvqdjqIxwW0+uYpNopo8Wz5RNB99oxdkPvOBOJJniVs+lH40BAxuWT6zatZTje1aPnETsKvb+2M+Ti6OFkBOXj4gOsN+VxpbPgw4f4hcKWM+xEaYbOhnXT5Pek6V6IhhPoU9OuG0cVI+LdJxqbJIgT5GRzjVjGuAPnA7bdkgyXw++S+3QmOFYT5Xv+Qe0dlxPgqeDdTJLF8+QEM2/F50Yz6u5c9PhZdsPlJgMId313U+39hvgTtpej7wtuvoyAyEPmFqKsOaP4o+5BGyJFSYiz6nQyMmkyyLPpaYy+mjtYY+YZ3AnTMogj70BoaKioV3PvLFSdtlE3Q+h2qcZvX3Vz44vmhueAtiPp9781504lk+bQQzjvJlTD7UJY+BcYVWPuKQ/O3O7Fc+IyVCJvU6UD479tUSqsFaPggedpyP8l8+w0G4nejHaD7FHG7yih9wPgEa7wP9H3I+/6IDl9CHgT7pf3BQKNqUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3038\"},\"selection_policy\":{\"id\":\"3039\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"ticker\":null},\"id\":\"3032\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tbC7ZkzYPz5fImgVcmQ8Pm7HkjJPwkE+R7LWixLWRz7eIt4kd8Y5Pg/pq5L2okY+SgxfqykZST4x/j1A3OBLPpI5Pj0Bek8+KC3ZXCmbVD4S7cUXBkdaPnWjlX2n1mE+qEtNKNRlZj7FWjBABxZvPkuB4pvsk3M+3hfHQU80eD6LNSqxald8PmX8XnLEQYA+2z8E4BX+gT6exfmpTkiBPvUqKJICaXQ+oi6ItJyfYT7sWOFRFQhTPht0WtxYnlI+5Aeh46+oSz6x9NGrbD9BPuQ9fmMUaT8+c3Lc1UT/TD5GAaMtkulZPgZ3SSaivGc+sarV5fDMdD6YOkpw2qSAPqoENxX4lIY+rOZ4pxmjjT5JmdI+kVOSPhDmP9C+n5M+oPkGuA2tjz5xkoDNm9qIPmPSEkFxDYE+6oNy7EO7cz6zL6tu9SdQPk/JYGLdMDI+fCU5VePXVD7P/QvR9Ps/PqJ5sXJt0EM+ecp1Czi0ST7kCnjvo4NLPuGjMnugAjY+3Gs2z2mZTD4sEJdyPwJVPopgR93LIGA+kBToKoaZYT6zV/yvfYZvPjqe/R75YnU+0srpKwAXgT6qcMklyMWIPgiQpPMSHo8+xmD1doZPkT4s743Am3OGPocsRwriR3A+tEldK06rVz4sps7xKCNjPq8JjqYoAWA+wK69zZjnWj6xfMby9VxTPnHrsvLaVF8+mP2bdpLvXj4MWaMtT/VaPqlwmxV7XGE+EOs2eQVBYj58hIvR0H1iPjUFcrPkT1w+BsOVCJyNhD6eXFnMcXp+PuPZ/0kUlpY+pSzkOZU8cD7p4OuoHh5yPj9LMFGUu1E+EG3JWc4HZD6d1zzcnppxPjX/YqWgpHQ+4NBMgEQUfz5dAmD+gISDPqQRj0Fr1Yg+THvGIst8iz58nTuwFKOKPnb/2RRmYoY+988OyXt6gT7DyUFMxB14PmBACA4RL3Y++z/4XsWhXT4N3qXHyx1iPtje+yP2x1g+poruTGTYRz4+pUfG7qxUPqC8UMre0Ek+WO2K7mXbVD4DmpuqQbdXPo65ZoThT2E+abvD/WwacT7Jg+Fcs0llPoqa140M/W0+lfxdV9fKgT7igPfz2H6RPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3078\"},\"selection_policy\":{\"id\":\"3079\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3029\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"msNN+SqFQD5vs8eb8c8/PhwQpOJd9j8+0/EGgjlcRD7MTmRm8IU8PhX4QIrh9Eo+wXR8GgHlSD51g2eUCstMPu75IxMU9E4+p76p9Z/5Uz5ZzrBNkJBbPqYr2CmsDWI+UdUNx7VcZj7VgXaxEXBvPjafbzMJYXM+TRQQpA8YeD58cX8GGuR8PiRnDUH4SoA+C0DKPAotgj5pYcX5ZnWBPl5+5oENiHQ+o7adBIoOYj7+Y2lnGQxTPgouuU20ZFM+mO8mnAkLUD41UU6MDzVEPqQ2RQY040M+nMEtsueVTD5WsX8N3WNZPqQGi5vF7mk+sGVj2q2odT5y2wKGTE9/PvcPqIIQlYY+IUoF2T3wjT6c05jf1q6SPn0xPz6qrJM+SK59NdcskD4bEGdjDFGIPpGz36lS2YA+r77iVA93cz46eXxakxFSPjyT1APFRTk+QZWNdZe3TD5ddI/9uSRQPmqqfkzcvk0+YMBVtN1sUT7PWDpCYeZLPtWxko2awkA+f93Z4Rb9UT5QfUsF4TBWPvQhl/oamVY+U1gWtN9pZD6cau4tOnhsPssoZm7odHY+EDSD+RpkgD6nU8g4H8mHPsTFX0GFMY8+pZjXgk8Ekj5j48azqWOGPlMOI/4ONW4+gFrhTTq8VD5KYbLo6mFkPt2PZb0YzGA+Oc9rigATYD5DWq7kVkRaPicQk4Wnb18+xHp4B4xiYD7HEUInhnhcPqvSSG8fn2M+TRhWbMlvYD5oDZnDU9lcPvI6RJZyFGM+hM34pzS/dT4yxDqSbzSDPiEVdIiR3YQ+BUEGQwx2cD5IkPbv7q10Pg9GJwqjzFY+yTj0iXevZj52Edbj3qFuPvSKSZ2DuHQ+677Fil03fz6E1ldDiTyDPnIjndwKY4g+r4UgzFLCiz69z4B7k+6LPuW9A3aIeYU+fdZVllmsgT4mMS/kvHd4Po6YslXycXQ+ao596aIOUj51Z4fewfhdPtbvrB5cjFQ+4rQVRz3ZRz4+dFsq2DpRPhUlPSsLmVU+KNdeXZndUD40D2BkrVFRPg0mQNcXnF8+qdClGWvgYD565BGGgeZXPsCNmKNMo3I+wVOIugGyiD56hM4biZ+TPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3086\"},\"selection_policy\":{\"id\":\"3087\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"OMSsoKrHPz6uqI1AStY9PnhwBb4kQEA+PDwR4c2dRT6wREuBIo03PiDeF/XtW0k+Wcj1W6QZSz4rhv7Q+QlLPlNA6DSSblA+ri1FiLtTUz7KvhvuCbRaPtil7pw2g2A+PtCbDhZHZj66Ia/8RD1vPgCKTafrTnM+y4J340ZmeD77BLivyIV8Pqbp5zsTYYA+a9PNgm7LgT5yMGvftemAPuPhngNfAHQ+LDRvmL36Yj7DTPt7qdtRPmvQjBX5+1I+S9FyUkA/Sj631n7ZuKRBPi22DbkccEE+b/2WTJjNSz6nme+NJCFZPuAQNCLjUmc+iu6qxzU0dT7BfBpcqpGAPjHbcLSnroY+eUtKvi8Kjj6b2WKFPjySPlsM7BLVFZM+vl2ukt6zjz7ytc04Fg6JPskw8+uuAoE+bj8d3/Rqcz6RuU4KAbJQPuvh129W+y0+KZRg/GZLUD5ZXraGaBxKPg9nSUYYElM+GZTvGJpqNj73pZvAa4RGPmJ/wrqD5D8+v9npesE8ST6kEt9DQVZXPgIjYJV+sl0+EilRANXmZD7ZL0e5qHxwPrOUxRUQYHY+hZ0Txi5SgT4mbZR5gwGIPiPMOKv68o8+gPTW+pdskT76FyzL9YKHPkLqcF96rXA+0jd0S+NKWz5ZmmHgR0xhPpz08gtGFFw+km1nX6AgYT58kddGKuNRPmnHk27rYmA+FYYTE+pKYT4evMgOv8ZdPiuIZoi1DGA+Xa6cPglfXT5MDyUvrJVbPt5Ko5MMEVg+BcrOVxgscD7r2ak+egR4PrZPktB/x4s++6zzrAzsdT58DCzhWXx0PrQpvgF+TVY+64RddyrRZD7rNl8K1udxPtbd8hz+HXM+5tEqCDMJez58rEnYvquEPptph4vSDYo+weRuMnnwij6ZIi256A2MPulrKazh5oY+rXmimLlagT5IdK2i1yJ5PnwPMcIBrXM+mCytbAalWz4HI6cqvjdePngUkZf9q1o+1nLq85VVQj60a+zzr8JRPjN7epOhv04+TmvrtkLSUT6eBk729B1dPkpDd6mVgFo+cFWih0jLZT6g5p8lEMJyPvlO5N2Q0W0+3GPaQIfMkD6IZzMxDUWVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3088\"},\"selection_policy\":{\"id\":\"3089\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MaB2bZjFQj7LX1Ft+UM+PjEUvPMA/z8+JZBlfq6DRj5bfl86nOA2PniezWYcRUc+Bv2PsBnFRj7bT8/qaypKPhjy0VSGUlA+UI/Z4EpXVD5iP3szDlJcPqq7JLHJfWE+8l8jS2t1Zj5OUZTPE3FvPmV7I08zfXM+D9q9jxaHdz5ELjF2UpB8Pm18E6KnQoA+JmpmbXATgj6mB9oESxiBPpGbe8YC8XM+ai1Ld6xdYT7vzVureuZRPqQM2jx37lA+TS2Y+lsiSD6D14J4RhdEPpWOvMaOpUA+R+69VVLtST6l9YVB2zNaPrIRCpV2SWk+pEYSt9bYdD4TqAu4MSGAPtmJ6AunpIY+xjLQGNoJjj7t2heO+UqSPin67EuNc5M+e7E1CBhmkD4Jye5ziVmIPj0Ts1wq94A+jiUm3owvcz5eUZwytIhPPn18tkwIwjo+dCAgkTUATD72xgZ2/T1KPkDCdJj1sFA+M8RFL+HmUT6tpO0RoBZMPv+SNDnop0Y+RADWGOoZQT7otPQgcjlYPuPD+qrRO1k+3o9hEDpZYz6/bnTeYYdvPsnB2URiR3Y+ciE8yHSggD4emOSqcH+IPtMvR33EmY8+F2WTivpikT7HUuUCQ2GHPvrHqFTqyHA+Yd9T7+VJXD421s8t4UNjPvnIOI4zI2A+f60IRU4+WT5EqWkNoMFSPglceEOgx14+hU4P26OQWz5Fx4exnPpWPk8SrBWbc2E+UvuDxJ39WD44jc9iVdlbPg3OfVrSyFo+dBUoeATfij6ZuKGp139yPr4OL5EOv5I+u2CC7+3dcD5P/JYB2jR0Pl+tLbkiHVg+UtGHx6v6ZT7gaTdYi1BxPjMMh545lXU+QP0xG/nAfD5pzqCnaCaFPpPSeRd/2Ik+NImX0zWWij7u28BtTlqLPuQyhKtc+oY+gq1qrDYagT6ePOIMDs52PngPTV17B3U+hfjn73IXXj7dqOxU0qpcPqCPZGoO4FM+hkh1GCk6TD41hWDraaRYPl7bxMc2Kl0+jRAiy3YhUj4uytk8xMdbPv3W1yxf5Fo+74tHrm2lcD4Z3kpMTVZyPsJ/OeZck3A+bZboZCLFhz7gGy9at92XPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3090\"},\"selection_policy\":{\"id\":\"3091\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3030\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"NjnrZR31QT4PAqS2RNY7Plcg50keyzw+LzbzFwA0QT6QPN76QIA7PkyTu2Pq+Ug+epfy67TPRz5zJNzexFFNPtw+xwjUolA+tIrFKZT4Uz51B7yRhhJaPgv6yU38J2I+N3jwPFu/Zj7K+wTm7W1vPhqx2SP78XM+eaHu0/8AeD7/+sLKF/B8PvOq0+BRKYA++/HGAQjdgT4IqXTJZ/mAPkgKI6bEcXQ+tH0tqdxaYj7rs65FGrRSPhGETbNhS1E+KTlTLgJoUD5UdZNB4XVCPoiu/g+85Ec+95O6muXCSD7iUgv4p4JaPuSOTnYvbmg+mb8I1h63dD67AXOn7XiAPkP1DO00pIY+P4S3nRJLjj7N7LqZemuSPtaXq1UAIZM+kN50hhYFkD4PjMcL1liIPmobNHvGwYA+3bglrXXrcz6D6vdF7UBOPkmlrEKyoiw+Ct914JKtWD4so5DCX4tNPnlfclqiH1I+s7LGug9DUD6HJWiSuQlOPtkI+SWRmEg+K5pDhlyAQj6iQwQLUA1YPrWJlYK87V0+q2nfUBOzZj4huIEFJHBvPsU+CzsmXHY+Mqz80h55gD6nDX/dyU+IPrW5Zs2x0o8+bu1CNETOkD7Qm711ouyGPhQEVq8aAW8+Nboo4mELWT6IRxtg/BliPpdtC0p4eF0+38hYJjAoXT7HDOYiG2lRPvB0dl3Xd2E+SfYrzPGpYD7I0C0Kz0dbPlVntSeddmA+iVppr2YJVz4lMD6xyAtWPpNWETOGhE4+3JcRkdIJdj6hiQdMfONgPklUbk9WcHA+zfyNVqducD48OGDZjL9sPg2Qk6xAN1g+0cHvJbHuaD4dNmcFcY5uPofczdS9p3Q+z4gKFakxfT5bv4VgMDuEPiHiF4gj24k+/uKNsohtiz7GlVVrpVeMPssXt+IQ3YU+QC5HmJQ3gT4+Vh8jC9V5PqYSg6vYT3M+VcUq1WeGXD4cWQlO65dgPiTDm1+f1FY+HgbPOGDzTj7eK11WtJRRPsncWFbeuFY+OtRyeieTUz7j29XaIm5XPmlbGyRfO2M+6JM9+wy5Zj6rT9yzFt9xPqcbvoh0gHE+6vOz9m7xiD4/D8TZrPyTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3084\"},\"selection_policy\":{\"id\":\"3085\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"P8fu4rRTQD5co2wRQvs8Pq7RiZe8fkE+lw6meVDcQz75YzIFnFc8PljgP/1Us0w+NKyDwpr9Rj4VbLtcQRpMPtD3pe0GV08+Epb0W5KXVD5ROJLqGYZaPq7RgXRPxmE+DRLbi0qBZj5qMW9g37NvPj+W9sJsNHM+dBgPhyjkdz77ziJWxNV8Pv8CrpbEVIA+C2ir/34Bgj78kf4eLDCBPgLel8/0QHQ+aZpJX5oEYj48kMmAX+pRPrhSNrRv8VE+gUpESIyWTz5sGDeiues9Pqfh2W9MFUY+yjiSju+3TT7rAHpDSEtZPvpMSN8X+Gc+Rm9yE4o3dD56zVWMcOqAPp5l5+4hwIY+R1vNdd3tjT7KSQY57DqSPjR9OUh3C5M+Mgvjgms9kD5nkxn0yMmIPt5x/2mtgoA+R/KWxMzQcz6rxnTFmnVNPvU9j1QAmD4+Eg0PfPC7Sj5wCa83PrZSPo62QQ3LxlA+EkOqwuKIRD7lOXgcDlJHPtXyDmd1FjM+KdUSnBI5TT4OfB6cGmpYPhTGwbejalw+SETDI/gzaD6pkPsuhAVtPuW/2pJ/znY+hTsF8g8FgT7u39+usJ2HPv/cFgcvno8+gT82NbBkkT7eCVMp+fyGPldBm2V6iHA+iMz1n6vnWj5ltmz6vkZhPjmUhFAO/1w+OJjq36yPXT5tgWoXId5WPrPPWaPi7mI+RxslHoYkYT58uczTPJVWPgnM6F1o4mA+EFE+NdayVz43xaYUnXlaPujnZnKC7Vs+AdgEsvPtez4TNdsyrheAPqu61c9NWXU+5kmWHEz+cz5JsAZ4yyhwPhT9CdXOYWE+6U/vq8vhZT6ZYcYQ34dwPqBFJ9jna3I+8Yb6cmm+fT6zMe+6PVaDPr+otgyzxIk+zCHah6/riz5ypqMnwK2KPrs3espEaIY+Yn/4toSigT7PDqNGOk94PgPo637sL3I+r938U9iOVT4Ih1zBSItfPrRYv13bQVQ+/OgXJjaJTj7V6K3BWeJYPsDyRkde7lI+3rUrsQkrVj7h/SGIvHhRPtdFuNNA/lw+z5HXzejiaT7bJtdIkdZpPhp58AawQWw+h7lrwxuqhD5yFEBHADaHPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3082\"},\"selection_policy\":{\"id\":\"3083\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"b23kmFKlQT4o5emZq0k4PqMEptWeKj4+1GmPjqSbRD6RBOkt1xg8Ph2EOOlWJUo+wNADN2m5Sz5Wi9JhDPJIPhgtXgavjE8+dXteDs4TUz40SFwM++VaPvL47yMhUmE+CiBLQ9LgZj75TUFsrd1uPjbdZ5lWpHM+k9qqt16teD5eCdWgOYR8PoIZ9e6rIIA+lJ3UM6zogT41mcaMVEuBPlUELyyE4nM+686InB/LYj6soL4Zw6pSPtyIdGSMIVM+6aEDhcnsTD5aWCS5kltGPk62elICIkU+ipJpv3NhTT5TYOxj6dZaPh0hCU4RJGg+WT4PJ7BedT5MxItM9G6APscvmwVWdYY+5kdbDNnXjT7UxJIppmSSPiel8552d5M+sQOA050CkD54PKwde+GIPkL0qTXCrYA+lZUTeQRtcz549DgK9BVQPrboSNsjLC8+aKoqJQKXZz5l9nnZjkFUPkQ2KOsjAlI+LCGaNDShRD7NllAtEhRSPiQopsizfkM+ZcTS8niyTT6d1G5f+z1ZPuMZo/gIlFk+QS8MRgceZD7wvEJykQtvPhmq0PwPNHc+b8dOFr9fgT70GTjA6mOIPsdLIYmM7o8+KscF4UUEkT7cfoMVSsKGPlL8FWRaqm8+Uglun8FcWj5G/NyIzVtlPsGMGQ3tI2E+i6hBBhUDXj6wIRQDq1FYPrIm/MnJHmI+4b8wMSuJXj5v6it5WbRZPlth6HDLcGI+pMd6uvV+WT4sCCCYYqVUPlsEgbDPk2I+UBamLKxCej565icCwVpxPjqvqEMgW2s+olyrPY4VbT5gQEb99z9yPkUyGeL47FY+XhJ2iGgbZz656eppnnpxPvjGc6FhIXU+BmvN9hWzfD5x+9JrUWaEPn96fpD9lYk+Eia9S8ZIiz5QBn4z5MSLPr5dR0+pU4Y+QTy71cxGgj6JWLPDLGl5Pj2r+XgymnY+3naKISl9Wz58LSxVeYRfPrvoSz/h/Vg+n/mgbE3TRj6OaEkpKf5UPvz21ZuMWlM+oeYlKdGYTT5cRAh7B99WPu+PnMU6LmA+9xc8hl/AYj78Rxkoj35tPl08jrreQ24+aLyjyYABhD423EC9of+SPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3080\"},\"selection_policy\":{\"id\":\"3081\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3093\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3027\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jdWX6NI5QD5z+NUDgkE/Ppu8fvvqxz8+A56jy45jRD7JesR80SE3PtbPZrgBeUo+2VJ/YOaKST5GbGUxvJlJPlXIewZQJ1A+1XHT06x6VD4OI18FuqlaPm5Zl/Obp2E+2wJ927gIZj7c3yKSgwZvPvrSOLN15XM+NJ6i2joUeD6ME/jdtVp8Pr7X3eVBK4A+lbr+vXUKgj50Yt72CCWBPqraZ2FVcXQ+YtCkTrocYz5xWkvZ4X5TPnQ5sCUSL1I+mgwAE304UD7t5g2QK3tBPiujqr0Ze0M+lIQuGzxNSj7mH+X9y7taPmWBgG7pqmg+APExkUskdT6EJUfZTF+APsxbVRFw9oY+bjkNKnyzjT7WhtvPOTiSPjSu5XfbYpM+DL9WbUn1jz583s9HXfSIPvtoTK0oCIE+1nV07zCMcz4pr1Hh0wdRPpdqBpS42jY+ZYhy7GYVXT5G8fYhwlxUPqyw4PYpeVM+y5ma2ahzVT4AD3s37IVMPm/6TYcNKj0+IkDpfMsITj50cWxK7RxTPjtiBohIx1o+M82SEACIZD439yd/KTxxPjUW3eYaHnc+HGm2hIZ2gT5SFrIHPfGHPjab53eUUI8+guF5KRwtkT7HGcZ1lROHPop1jIOXwG8+xA3JiDBqWz42JWRXpnFjPnigTNfmO2A+eBTrP8SsVj4NsEFZsElVPm/KHywhR2I+gr3aSxJYYj4SC8pOoRxYPhWGdLs0SGQ+H+ZXAky+YT5Au0wH/7VhPoc0VzwSS1g+DTd0+ZZKgD5lzBbaxbt3PtmylpOZDX8+GQZT8Y+acT7+41pmfft0PiYsOy567l4+ayNOL1usYz7SPrNSGyRxPpma3TpyfXQ+W8KW82OjfT5fn61ok8yDPj3h7z362Yk+AILjvw9YjD5Gr5ZbklaLPk4F+E8HrIY+3CSs/80Rgj5zYsRoGCd6PpT0mYI6S3Q+cWLxXTWAWj63MLj7aSFbPn3H1sU3H0g+ZdSjb0ZcUD6kPhs1OHxaPvClsQlf3FU+N8t3vbHCUz6zD0tDpwNRPrL2EObko2g+vFmJn0QVcD5+VmSzIJpnPmYsjNvE53A+o4OQJqPjjD4cB868jR2UPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3092\"},\"selection_policy\":{\"id\":\"3093\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"deeeb092-ae46-4025-a215-ead97b18dee2\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"3ba2ce94-e2bf-4107-acfa-e2be805d4fb4\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"de847f59-55f6-4d9e-89b9-6f11ce49683a\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"dc788321-4b82-4c7e-ab11-c5d8952c8a3b\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Rm1V0PzSRz4hUlei7UlJPijgggFJCUQ+3XXgZzbMOz6YqAvnSAc3PqFxq6f+6is+EWxdo2/6JT4ZTnSGBfgaPpr8d31qtCc+ah1942VJHD44eAOox5ggPtzRGdtUciQ+Maf3g5RBMT5/4cSanJouPtZtH7EN1lE+gSASa485Wj54DixwHPppPtNSE9B/i3M+v0WNH4S5fD4gc+YgEMR9PlOxJ7qHWXk+06LgO5yMcD5V0gm9dB5pPvp3Lf4yvV8+r/Z5YUaEVD4nJlAbkBlKPr02KPveQUE+MDVV4D61Sj5rguT/vRlQPnp0b3HFMEQ+05u72fgDNj7FipBmV7c3PiViJx37tTk+rGJgeQhuOT7p65R3FbA3Pq8HZHLvgjk+X95PiO9JQT72Tf7feX03PjoMWptSxj4+tqG3U6bqMT4DFEMlV5c7PgW9lvx3yTg+3WV5snhSRT7AMtEoMlVAPto6gyXfo04+CCqPk4/TcD6QIhY6XFiAPiac3GwJLoA+xnpBpMe1dz4mvjMYFVVxPhA5o1+ldGM+kVz2IOwVWT4jTIfqCkJPPvbkNR0UBEQ+byTND4NHPT7/S0lgM4AwPlIjEPHt0SE+MKkl4JO6Cz4ntWI+ogULPpmiBtZEYwU+v77pYKvfBj7g+OGVxpYDPluSJVx+3Qk+8Fc96zGxLD7RKXDno/1jPk4BiC+qOHU+rgtBJohngT4vA7MPsKGKPmtgoZDck5I+uR3n5yxckz7z5G1rlWWKPhXAXdSBFYc++znNYF10fz6qbDLLiSxxPgzyKX0yUF0+gXsHPNYdRz6vVPTtMcAuPpF/I42zSy8+x6ntdJ7CMz6HmxUmvyw8Pj35TkjwAUI+4DpNZWe5Pz6mHWj9v/tTPpAvmB/h0GU+SRtU3I43dz5c4LRqz4Z4PouYhASux3Y+DYyncV8gdD4C886KcKFwPvbkzy8oHWk+ocgpdxLrYj5NW/axGfJbPsXx5nSdeVU+d32dJtAdUD7+poJY2oFJPkzft1HDAUM+U552i2iuOT4XU4IMz8U4PpOOVmdv7TY+7lJprAvgKT6gPOz4WIQ3PiVg7ecnNjU+bQ17UJ+gLz7ioeQuxRIhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3501\"},\"selection_policy\":{\"id\":\"3502\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3475\"},\"major_label_policy\":{\"id\":\"3473\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3478\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3470\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.77, C/O= 1.22, [M/H]= 0.9, T= 979.28\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3472\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"3502\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3472\"},\"major_label_policy\":{\"id\":\"3470\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3473\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"3475\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3477\"},\"selection_policy\":{\"id\":\"3478\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"dc788321-4b82-4c7e-ab11-c5d8952c8a3b\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"de847f59-55f6-4d9e-89b9-6f11ce49683a\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 133.27, p-value = 2.40e-02\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"6b3baa49-1101-4ba0-8550-214f67bb9245\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"9b799d2b-bb4e-4d8f-b182-69c9757966e3\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"7LPAaoxjVz51SERA+stYPvN/GRPyo1M+5g4ygPUNSz5Nisdr/1RGPptN8NUZBTs+FQCwGx4uNT7Ej9sMYhsqPjuFzJsxyzY+ztDhLhIyKz703wCBHsIvPhjMOcGBcDM+zBiqdE9pQD5yhdfxpRE9PoK0nyFG/WA+OuPnDMvfaD4yRpOfu/x4PtSC+dRPC4M+wFWr2vhXjD6zv67XDoKNPl4scBiCG4k+BCKXjIgvgD6ItHc+/VV4PvROAWxnqG4+4C3I336bYz4UIfrN6oNYPuyk5ujADVA+Lp22OUG0WD6+ZM3BSRBePkx4jF9k01I+4K4xB9lkRD6i4K9YGr1FPmGgBR9GdUc+cgkpeeYiRz5Dm0U42W9FPtkZXy7/1kY+WDbf/lYQTz7BuC4rnqtEPurnIR5gCks+7p6onaIfPz6WDrUwFYFIPnJdvqxr+kU+0+bsjbLVUj7Knp/hIg9NPu92ZMd371s+h1l8BDAogD6ANLB7bRWQPkjsKv4VB5A+EgksXsVHhz7zSQiHauGAPvE66GIpmnI+s7DEu+mZZz4tPsjtn/xcPkr3vfKYTVI+1IfN9nylSj53y4NYRKI9PrYyzpvENy8+HrvMnujNFz7AmVdSB88WPmQ5wI2p0RE+K2dZ/2HQEj6gBucMAHYQPqgV6o5JKhY+v6vI/LQ4OT7A1wxEkI5yPgSS7c04IYQ+/P7pOyPYkD6Sdp1sWkqaPjLAh/GPoqI+hRJkx3+Zoz5Dks6MydKaPpj6x8js5ZY+l+hemMy2jj5vmLFEeFSAPvMGYX3dmGo+1+Zwv6keVD7ItB2u7NA5PhQrWP3vLzo+XYN9a4jOQD6Uc/HOxctIPmZqidm4nE8+GiltQmX/Sz6pXw9wVJ1iPpXK0HJh33Q+n6UuqDSbhj5JmqeoePiHPlNGV6jmRoY+aXd4VsGkgz5A3JlXZieAPvmP8bQDJ3g+gh8MeUsdcj7ljIwbUJJqPpglNBMtTmQ+RjY5s5NeXj5ajCuudvtXPqUhKpxO1FE+dkcVMVO5Rz4kCTARg+tGPpS9LfZ9SkU+VviIjo6YNz5wpTRvClhGPoQHg2eUBEQ+YLyl6Q+VPT7nFncAQXMvPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"7ozqDsFwXD4pybcLQktePmfX6jU3JFg+8cfpj1XZUD4539EyK+9LPiHYGe8wAUE+zZ6meEP/Oj5UFMvAhaAwPsdcpWsCBz0+SDDFkWBtMT48plYC1no0PmgQ6ra3JTk+MDQH+FEtRT6TKhc/zs5CPuDqMoBi1mU+53MKqKA+cD5JyU7zWASAPiQldW+FwYc+xpPqy8QgkT5Is87YEKWRPgIcj6NcE44+1EYW3r/qgz5uKnOM57d+PvTJdTeuZXM+RLjb//zEaT5URNWYbapgPlQbxnApDlY+/N3QWL8HYT7njtkiyyBkPlKsnXNyNVk+GGm5D7aKSz48XUgNSrFNPowpdSe/M1A+OtZRCMfqTz4f65/pZMFNPl4vdk1GK1A+gHaS8I4IVj6/qMBTigNOPvd+zFEo0FM+52BTLkQHRz6AstVJ8sBRPpOmAWlcD1A+ozia1mDxWz59/Yej80NVPu+QKdII7WM+G8adCHwahT7yDOrumZ6TPpTz9CfhSJM+6ESXYPJ5jD5T6yyv8QeFPvM0KmZoJ3g+bYPAm4uLbz4345pQJfJjPj5WRe3so1k+mz3mRm6rUj4Eyt0Pcx9FPsn2dMkK5zY+xV8RiNO/IT6fDvuE+44hPkrynMS0nBs+31uSYzluHT4oeqWxKWwZPr8a7faeWyE+QTcvwTABQz4CPVscarx5Phrv27M/tIo+EERvRr54lT6UmBMWLxKgPuBR0ZxO/qU+VQPm08ejpj7lObtyk7KePsCMrb/FeJs+lryNmfAKkz4t6KT6oU+FPu7Cks2V1XI+j83dW/1BXj6qMcccvmVEPgiKdHz9IEU+aauiYjB6Sj4D+lsGyH5SPnHEtEuEqFc+Lf+5TA4TVT6ZeKPalI9pPin3Dr/Gvno+x9rTRbQ0jD7Tmjp6s56NPkueexpOZYs+s2uoMm9EiD4sxZvNHUKEPtW5h0/64n4+vNyJiDhfdz5bnB/41F1xPmQgaimg22o+l8NIhdIgZD5UrX8VH/NfPl1HEZbU51c+XNWSw6ZbUD6AitgjmJFPPtDFvOU4CE0+OrFAopqxQD6qkOPiREVNPqB1fi0go0o+Hkpg/OIYRD6QftktOA42Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3865\"},\"selection_policy\":{\"id\":\"3866\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"Selection\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3817\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"3822\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3888\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"3816\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.77, C/O= 1.22, [M/H]= 0.9, T= 979.28, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3866\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"baDVvCbqWT7PCP4lnotbPq0rgqQU5FU+ZM8CUFBgTj7DtExPFSJJPu7+Edq9gz4+cU8ryrAWOD423DjHNq4tPgHxuAMa6Tk+rxg2qWkGLz4bi2uh8i0yPkDuEbwcSzY+fqZYtlDLQj6mdgGc0KtAPrFP6VDUaWM+hGV+LoaubD5ibBjDtoJ8PvxTN6JqZoU+pj5AOcFMjz6RCVMiDDOQPjCk/11vl4s+bLRWNSQNgj57b3Vl8oZ7Prc4u/bwXHE+EvPR7z2wZj7eVNL/YuxcPiBg1iz1DVM+kyys9d9hXT6jIOABeJRhPk8SlWlrBFY+/It1i8f3Rz7vHvwyMrdJPrz59zZi7ks+1m+9wNaGSz4xw/IQn5hJPkq8peTFlks+1ggBOF3IUj7AsHc/lFdJPna5bjCsqlA+L9iTvopLQz7LOTDifAFOPkzVYD+SDEs+u49DsoljVz5x5iuKwuVRPjPm7Vpi8mA+0Q+NBlahgj65IE21A9qRPu7vD5P7p5E+/aZh39vgiT6jmhobrvSCPvI3ieTIYHU+EJrCq7qSaz4ngb+jOjhhPsSmAfDC+FU+hQFNwiz+Tz7g1w+eSvhBPhIIrot2QTM+VL1318emHT5/2yYuf/YcPteVLikvtxY+heF1sU0fGD5kQEbfFPEUPpMlYr7DcBw+IY2TP4udPz5hCjQwfSV2Po/A5EC8aoc+hqEswXAokz7dU2JMXDedPgmJLEdvUKQ+7QqlzaMepT4U5sR/rsKcPqzDOkRZL5k+cZjeciszkT5OQKsfDdKCPjSjIUYCEXA+M1qnjVMwWT4HBus5GqdAPslPkL16HEE+YxcQZ1ykRT7Ns9TtquROPtK8PFxwu1M+3Un4dmCJUT4hbFmldBZmPt/g7xgUz3c+M0ABd/RniT6OGnERlsuKPk9yaWEa1og+jnGQRJj0hT620JoSwjSCPuekPAL/hHs+H/7KAEK+dD7N4uUF/aZuPv4iT57mlGc+Xa9yLw6oYT7XnNXhSvdbPoG0HZkR3lQ+F3kdXFA4TD7SSYSajT5LPrJB9W1bKUk+ZS2F6eF9PD4NGwypp85JPpK+gEraU0c+J5SZeLVxQT4ChQpX7OMyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3845\"},\"selection_policy\":{\"id\":\"3846\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"AAAAQHcm5j8AAAAgoDLmPwAAACDLPuY/AAAAoPhK5j8AAABAKVfmPwAAAGBdY+Y/AAAAQJVv5j8AAABg0XvmPwAAAEASiOY/AAAAAFiU5j8AAAAgo6DmPwAAACD0rOY/AAAAQEu55j8AAADgqMXmPwAAAEAN0uY/AAAA4Hje5j8AAAAA7OrmPwAAAABn9+Y/AAAAIOoD5z8AAADAdRDnPwAAAEAKHec/AAAA4Kcp5z8AAADgTjbnPwAAAID/Quc/AAAAQLpP5z8AAAAgf1znPwAAAKBOaec/AAAAACl25z8AAABgDoPnPwAAAAD/j+c/AAAAQPuc5z8AAABgA6rnPwAAAKAXt+c/AAAAADjE5z8AAAAAZdHnPwAAAMCe3uc/AAAAgOXr5z8AAABgOfnnPwAAAKCaBug/AAAAYAkU6D8AAAAAhiHoPwAAAKAQL+g/AAAAQKk86D8AAABgUEroPwAAAOAFWOg/AAAAIMpl6D8AAABAnXPoPwAAAEB/geg/AAAAgHCP6D8AAAAAcZ3oPwAAAACBq+g/AAAAoKC56D8AAADgz8foPwAAAAAP1ug/AAAAQF7k6D8AAACAvfLoPwAAAOAsAek/AAAAwKwP6T8AAAAAPR7pPwAAAODdLOk/AAAAYI876T8AAACgUUrpPwAAAMAkWek/AAAAwAho6T8AAADA/XbpPwAAAAAEhuk/AAAAQBuV6T8AAADgQ6TpPwAAAMB9s+k/AAAAIMnC6T8AAADgJdLpPwAAACCU4ek/AAAA4BPx6T8AAABApQDqPwAAAGBIEOo/AAAAIP0f6j8AAADAwy/qPwAAAACcP+o/AAAAIIZP6j8AAAAggl/qPwAAAOCPb+o/AAAAoK9/6j8AAABA4Y/qPwAAAOAkoOo/AAAAYHqw6j8AAADg4cDqPwAAAEBb0eo/AAAAoObh6j8AAAAAhPLqPwAAAGAzA+s/AAAAoPQT6z8AAADgxyTrPwAAACCtNes/AAAAQKRG6z8AAABArVfrPwAAAEDIaOs/AAAAIPV56z8AAADAM4vrPwAAAECEnOs/AAAAoOat6z8AAADAWr/rPwAAAKDg0Os/AAAAIHji6z8AAABgIfTrPwAAAEDcBew/AAAAoKgX7D8AAACghinsPwAAACB2O+w/AAAAAHdN7D8AAABgiV/sPwAAAACtcew/AAAAAOKD7D8AAAAgKJbsPwAAAGB/qOw/AAAA4Oe67D8AAABgYc3sPwAAAMDr3+w/AAAAIIfy7D8BAABgMwXtPwEAAEDwF+0/AAAAAL4q7T8AAABAnD3tPwAAACCLUO0/AAAAYIpj7T////8fmnbtPwAAAAC6ie0/AQAAQOqc7T8AAACgKrDtPwAAAAB7w+0/AAAAYNvW7T8BAACgS+rtPwEAAKDL/e0/AAAAYFsR7j8AAADA+iTuPwAAAKCpOO4/AAAA4GdM7j8BAABgNWDuPwAAACASdO4/AAAAAP6H7j8AAAAA+ZvuPwEAAMACsO4/AAAAYBvE7j////+/QtjuPwAAAMB47O4/AAAAIL0A7z8AAAAAEBXvPwAAAABxKe8/AAAAQOA97z8AAACgXVLvPwAAAODoZu8/AAAAAIJ77z8AAADgKJDvPwAAAEDdpO8/AQAAIJ+57z8AAACAbs7vPwAAAABL4+8/AAAAwDT47z8AAADAlQbwPwAAAIAXEfA/AAAAwJ8b8D////9fLibwPwAAACDDMPA/////H1478D8AAABg/0XwPwAAAKCmUPA/AAAA4FNb8D8AAAAgB2bwPwEAAGDAcPA/AAAAYH978D8AAAAgRIbwPwAAAKAOkfA/AAAA4N6b8D8AAACgtKbwPwAAAOCPsfA/AAAAoHC88D8AAADAVsfwPwAAAEBC0vA/AAAAADPd8D8BAAAAKejwPwAAAAAk8/A/////PyT+8D8AAACAKQnxPwAAAKAzFPE/AAAAoEIf8T8AAACAVirxPwAAACBvNfE/AAAAYIxA8T////9frkvxPwAAAODUVvE/AAAAwP9h8T8AAABAL23xPwAAAABjePE/////H5uD8T8AAABg147xPwAAAOAXmvE/AAAAgFyl8T8AAAAgpbDxPwAAAMDxu/E/AAAAQELH8T8AAACgltLxPwAAAMDu3fE/AAAAoErp8T8AAAAgqvTxPwAAACANAPI/AAAAwHML8j8AAADg3RbyPwAAAEBLIvI/AAAAALwt8j8AAAAgMDnyPwAAAGCnRPI/AAAAwCFQ8j////8fn1vyPwAAAKAfZ/I/AAAAAKNy8j8AAABAKX7yPwAAAECyifI/AAAAID6V8j8AAACgzKDyPwAAAMBdrPI/AAAAgPG38j////+/h8PyPwAAAGAgz/I/AAAAYLva8j8AAADAWObyPwAAAGD48fI/////H5r98j8AAAAAPgnzPwAAAADkFPM/AAAAAIwg8z8AAADgNSzzPwAAAMDhN/M/AAAAYI9D8z8AAADgPk/zPwAAAADwWvM/AAAAwKJm8z8AAAAgV3LzPwAAAAANfvM/AQAAYMSJ8z8AAAAgfZXzPwAAAEA3ofM/AAAAoPKs8z////9fr7jzPwAAACBtxPM/AAAAICzQ8z8AAAAg7NvzPwAAAECt5/M/AAAAQG/z8z8BAAAgMv/zPwAAAOD1CvQ/AAAAgLoW9D8AAADAfyL0P////79FLvQ/AAAAYAw69D8AAACA00X0PwAAAECbUfQ/AAAAYGNd9D8BAAAALGn0PwAAAOD0dPQ/AAAAIL6A9D8AAACgh4z0PwAAAGBRmPQ/AAAAQBuk9D////8/5a/0PwAAAECvu/Q/AAAAYHnH9D8BAABgQ9P0PwAAAEAN3/Q/AAAAINfq9D8AAACgoPb0PwAAAABqAvU/AQAAIDMO9T8AAADg+xn1PwAAAEDEJfU/AAAAIIwx9T8BAACgUz31PwAAAKAaSfU/AAAAAOFU9T8AAADApmD1PwAAAOBrbPU/AAAAYDB49T8BAAAg9IP1PwAAAAC3j/U/AAAAIHmb9T8AAABgOqf1PwAAAMD6svU/AAAAILq+9T8AAACAeMr1PwAAAOA11vU/AQAAIPLh9T8AAABAre31PwAAAGBn+fU/AAAAICAF9j8AAADA1xD2PwAAACCOHPY/AAAAIEMo9j8AAADg9jP2PwAAACCpP/Y/AAAAAFpL9j8BAACACVf2P////3+3YvY/AAAA4GNu9j8AAADADnr2PwAAAAC4hfY/AAAAoF+R9j8AAACgBZ32PwAAAACqqPY/AAAAgEy09j8AAABA7b/2PwAAAGCMy/Y/AAAAgCnX9j8AAADgxOL2PwAAAEBe7vY/AAAAwPX59j8AAABgiwX3PwAAAAAfEfc/AAAAoLAc9z8AAAAgQCj3PwAAAKDNM/c/AAAAAFk/9z8AAABg4kr3PwAAAIBpVvc/AAAAgO5h9z8AAABAcW33PwAAAMDxePc/AAAAAHCE9z8AAAAg7I/3PwAAAMBlm/c/AAAAQN2m9z8AAABAUrL3PwAAAODEvfc/AAAAQDXJ9z8AAAAgo9T3PwAAAIAO4Pc/////f3fr9z8AAAAA3vb3PwAAAABCAvg/AAAAYKMN+D8BAABgAhn4PwAAAKBeJPg/AAAAgLgv+D8AAACgDzv4PwAAACBkRvg/AAAAALZR+D8AAABABV34PwAAAOBRaPg/AQAAwJtz+D8BAADg4n74PwAAAGAnivg/AQAAAGmV+D8AAAAAqKD4PwAAACDkq/g/AAAAgB23+D8AAAAgVML4PwAAAOCHzfg/AAAA4LjY+D8AAADg5uP4PwAAACAS7/g/AAAAgDr6+D8AAAAAYAX5PwAAAKCCEPk/AAAAQKIb+T8AAAAgvyb5PwAAAODYMfk/AAAA4O88+T////+/A0j5PwAAAMAUU/k/AQAA4CJe+T8AAADgLWn5PwAAAAA2dPk/AAAAADt/+T8AAAAgPYr5PwAAACA8lfk/AQAAQDig+T8AAABAMav5PwAAAEAntvk/AAAAQBrB+T8AAAAgCsz5PwAAAAD31vk/AAAAwODh+T8AAACAx+z5PwAAACCr9/k/AAAAwIsC+j8AAABAaQ36P////79DGPo/////Hxsj+j////9f7y36PwAAAIDAOPo/AAAAoI5D+j8AAACgWU76PwAAAIAhWfo/////P+Zj+j8AAAAAqG76PwAAAKBmefo/AAAAACKE+j8AAABg2o76PwAAAKCPmfo/AAAA4EGk+j8AAADg8K76PwEAAMCcufo/AAAAoEXE+j////9f6876PwAAAACO2fo/AAAAgC3k+j/////fye76PwAAACBj+fo/AAAAYPkD+z8AAABgjA77PwAAAGAcGfs/AAAAQKkj+z8BAAAgMy77PwAAAOC5OPs/AAAAgD1D+z8AAAAAvk37PwAAAGA7WPs/AAAAwLVi+z8AAAAgLW37PwAAAGChd/s/AAAAgBKC+z8AAACggIz7PwAAAKDrlvs/AQAAoFOh+z8AAACguKv7PwAAAIAatvs/AAAAYHnA+z8AAABA1cr7PwEAAAAu1fs/////v4Pf+z8AAACg1un7PwAAAGAm9Ps/AQAAIHP++z8AAADgvAj8PwAAAKADE/w/AAAAYEcd/D8AAABAiCf8PwAAACDGMfw/AAAAAAE8/D8AAADgOEb8PwAAAOBtUPw/AAAA4J9a/D8AAAAAz2T8PwAAAED7bvw/AAAAgCR5/D8AAADgSoP8P////19ujfw/////346X/D8AAACgrKH8PwAAAGDHq/w/AAAAQN+1/D8AAABg9L/8PwAAAKAGyvw/AAAAABbU/D8AAACAIt78PwAAAEAs6Pw/AQAAQDPy/D////8/N/z8PwAAAKA4Bv0/AAAAIDcQ/T8AAADgMhr9PwAAAOArJP0//////yEu/T8AAACAFTj9P/7//z8GQv0/AQAAQPRL/T8AAACA31X9P/7////HX/0//v//361p/T8AAAAAkXP9PwAAAIBxff0/AAAAQE+H/T////9fKpH9PwEAAOACm/0/AAAAoNik/T8AAADgq679PwAAAGB8uP0/AAAAYErC/T////+/Fcz9PwAAAIDe1f0/AAAAoKTf/T8BAAAgaOn9PwEAACAp8/0/AAAAoOf8/T8AAACAowb+P////99cEP4/AAAAwBMa/j/+////xyP+PwAAAOB5Lf4/AQAAICk3/j8AAAAA1kD+PwAAAECASv4/////HyhU/j////9/zV3+PwEAAIBwZ/4/AAAAABFx/j8BAAAgr3r+PwEAAMBKhP4/AQAAAOSN/j8AAADAepf+P/7//z8Pof4/AAAAQKGq/j8AAADgMLT+PwAAAEC+vf4/AAAAIEnH/j8BAADA0dD+PwEAAOBX2v4/AQAA4Nvj/j8AAABgXe3+P////5/c9v4/AAAAoFkA/z/+//8/1An/P////59ME/8/////n8Ic/z////9/Nib/P/////+nL/8/AAAAQBc5/z8AAABAhEL/PwAAAADvS/8/AAAAoFdV/z8CAADgvV7/P/////8haP8/////v4Nx/z8AAACA43r/PwAAAOBAhP8/AAAAIJyN/z////8/9Zb/PwAAACBMoP8/AQAA4KCp/z8BAABg87L/P////79DvP8/AQAAAJLF/z8BAAAg3s7/P////x8o2P8/AAAA4G/h/z8AAACgter/PwAAACD58/8/////fzr9/z8AAADgPAMAQAAAAIDbBwBAAAAAIHkMAEABAACgFREAQAAAAACxFQBAAAAAgEsaAEAAAADg5B4AQAAAACB9IwBAAAAAgBQoAEAAAADAqiwAQAAAAOA/MQBAAQAAINQ1AEAAAABAZzoAQAEAAGD5PgBAAAAAgIpDAED///9/GkgAQAAAAKCpTABAAAAAoDdRAEAAAACgxFUAQAAAAKBQWgBA////n9teAEAAAACAZWMAQAAAAIDuZwBAAAAAYHZsAEABAABA/XAAQP///x+DdQBAAAAAAAh6AED////f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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3821\"},\"selection_policy\":{\"id\":\"3822\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=133.27, p-value=2.40e-02]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3816\"},\"major_label_policy\":{\"id\":\"3814\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3846\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3814\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3819\"},\"major_label_policy\":{\"id\":\"3817\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{\"ticker\":null},\"id\":\"3819\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"BqrAZYQmUz61+EwRPC9UPnfNZUtTuk8+QA+SnAV7RT53hh5osaFBPvCtXI/ZJzU+wnxoArBMMD7nbv1rQBwkPnz5huNDkDE+g5xfaQLFJD7cG66fwAkoPhA1ALgHTS0+yH18X2LTOD5G30y15OU1PtjYyCTn11k+DNcJiiV8Yj4BdGUWKhNzPnxMioWLLn4+YLaJsg1ihz5zcmhjPaiIPqKGNERk8IQ+5MeNziocej5kwpwaGPtyPrans3TA1Gc+VPvxguHfXD5OhoA0Sh5RPst0qp9WCUY+nnjZ5JbaUD4KoXqtBYNVPi6Cq2/C8Eo+YVgGQBjLPD6xHpyOYiE+PkNiX2dy5z8+6ZllicCJPz7LZBfzNuo8PkXD6aC6vT0+Ybv6BWonRD6OsbXbeKk5Pqs0scUWe0A+iZDsVyGYMj5brElua4s+PsUVQq4e8Do+jDMyS7hiRj64PispicFBPoAfTUjw71E+hGOgcncDeD5AsRrx7TuKPpLMb28Gl4o+N027grjrgj7zV9Sq28t6Pj5bnwNn42s+4v7VPqXvYD5qytb9WNZTPkd7OKBES0g+WY0IucOsQT7jSyGJXQ0zPkCdhbaV+iI+Jlp59Sr8Cz5OpwyGofYIPvWRQr9hNAM+Vd9QFxjQAz7PZjxYSOIBPmpo9TAURQc+Nt8iMwf8LD7moFluHxFpPtOl+eU9On0+ihGq4XLsiT7Hfahqe2GVPqB7/TRuop8+pIFmeoAMoT56Ijb4ppKXPrTUlRmOD5M+T/4OBX6HiD62YUpKJ014Pn4/I0DQTmE+ptfZjj06Rz42EaB/RH8qPtC0Xv9OaCk+HKe1BctiMT70lYA4ByE9Pj7Cx/SUb0I+dRJp+9gfQD5FGJR9qpJZPg4xIkn9428+/ywvF3fogT7ShoOKDDuDPtVzo5Nw+4E+mYIgFz2Hfz4uqgM1pWt5Pk/R6x6RgHI+ZZNVQA9oaz6gI0/PS7ljPhRTmGCCnV0+guKH6fISVj5wTQv5I0xRPkwnA5Vedkk+sHnurugtQD7rrhBYr1M/Pk8arBWLlz0+x58sZ9TCLj5OqZ0yQohAPj5el72g7Tw+gnDEt6ytND4n6avr0dMkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"akv1ieRWYD50jFcdAHRhPp5wUaP/6ls+xMe5gc2iUz6HcT2bPFFQPvanYxLR70M+ICLukbHgPz7CJDqRFqAzPkN09RH4IEE+bkqGdOijND5ICADzBFc4PvjBI5y17z0+GA7zPPAsST6pfVzdrmRGPvYybg+152k+/nl5aXNwcz5isuW3IfmCPrqBqYGPtYs+dmP7X7qbkz7o2fGS+RGUPt9g5Ts9H5E+5oRmAzMMhz5JDidYZgmCPpOdHLOBz3Y+eugqHovwbj63EZLlPV1kPtqF1wk/F1s+RHA/g5T0ZD7B8AItbWdoPodjVJt1kF4+5PVzewHFUD5DF1WP2S5SPishIJ2F9FM+XAlknmakUz7+6SxUEV5SPnlLazxXJ1Q+/LMEbQV9Wz5cRIoINu1SPpbYBP7MF1k+Gmgx0QRLTT60zp0Gol5WPttP0JOKUFQ+2AJ3n9vKYT6GLcJ/wOpaPqY8tZHM7Gg+4O3JU/BAiT7S6AxyEJaWPpP5Z+5zBJY+YgAEnv9qkD5MCctgboOIPkXCQkfez3w+n5pXDOgacz4ZnZPISIVoPuQP54/jy18+2LrI5conVz7OCY935mlKPoRBGTyiBT0+ymYZGr2nJj6ssaPM1rgmPlrxXbkW6iE+sKmhq0crIz6wJjfJgnggPnjLJLJ+nyY+VNXKcoleSD5PRDupasJ/PhpXZscsHJA+RzqEEahamT76FA6XnoaiPkJU2nOnz6g+NpTjIMcwqT7X1KkDW/mgPqSy324kT58+urE145cilj7BTzGahn2JPqmmMWycenc+SuTwKcRhYz7AB+5TY65KPl7ySLvh3ks+nK2ipalLUT5QjrQfaZxXPoWYFT4WP14+gAo8cNQCWz4gzOgLlGNvPjepTo0prH8+tKlp67hzkD4lVy/MDy6RPslwLy/EsI8+0KGQ/ZEljD5VzLOKsbOHPkC8xnK2RII+jDJrYXzIez79UD4eV8p0PjkOKQaGLXA+eW0h6qJGaD4f9k/lOFFjPlzVuefzAF0+PzymBFwhVD4XHoDEoWlTPh47iqh4w1E+cwW6zyzNRD5mRr2PhopRPgLnGhtyGFA+DfBQlZSMSD5wFT+47107Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3887\"},\"selection_policy\":{\"id\":\"3888\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"9b799d2b-bb4e-4d8f-b182-69c9757966e3\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"6b3baa49-1101-4ba0-8550-214f67bb9245\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:50.486608Z",
     "iopub.status.busy": "2023-11-28T21:17:50.486018Z",
     "iopub.status.idle": "2023-11-28T21:17:50.490527Z",
     "shell.execute_reply": "2023-11-28T21:17:50.491136Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 133.27, p-value = 2.40e-02\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(133.27, '2.40e-02')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:50.500933Z",
     "iopub.status.busy": "2023-11-28T21:17:50.500289Z",
     "iopub.status.idle": "2023-11-28T21:17:50.502519Z",
     "shell.execute_reply": "2023-11-28T21:17:50.502914Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:50.506724Z",
     "iopub.status.busy": "2023-11-28T21:17:50.506078Z",
     "iopub.status.idle": "2023-11-28T21:17:50.508468Z",
     "shell.execute_reply": "2023-11-28T21:17:50.508863Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:17:50.512973Z",
     "iopub.status.busy": "2023-11-28T21:17:50.512275Z",
     "iopub.status.idle": "2023-11-28T21:18:00.755754Z",
     "shell.execute_reply": "2023-11-28T21:18:00.756114Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:00.773822Z",
     "iopub.status.busy": "2023-11-28T21:18:00.760355Z",
     "iopub.status.idle": "2023-11-28T21:18:00.776325Z",
     "shell.execute_reply": "2023-11-28T21:18:00.776675Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000e+00</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>274.682500</td>\n",
       "      <td>1.396278e-01</td>\n",
       "      <td>4.762345</td>\n",
       "      <td>959.656591</td>\n",
       "      <td>1.169110</td>\n",
       "      <td>0.861607</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>299.162065</td>\n",
       "      <td>3.146679e-01</td>\n",
       "      <td>0.109120</td>\n",
       "      <td>24.103458</td>\n",
       "      <td>0.143108</td>\n",
       "      <td>0.060846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>85.090000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.640043</td>\n",
       "      <td>919.719808</td>\n",
       "      <td>0.980136</td>\n",
       "      <td>0.795654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>130.875000</td>\n",
       "      <td>1.147500e-11</td>\n",
       "      <td>4.687320</td>\n",
       "      <td>949.549332</td>\n",
       "      <td>1.077589</td>\n",
       "      <td>0.805832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>163.455000</td>\n",
       "      <td>2.061295e-03</td>\n",
       "      <td>4.749315</td>\n",
       "      <td>959.798899</td>\n",
       "      <td>1.186408</td>\n",
       "      <td>0.861304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>249.540000</td>\n",
       "      <td>6.117500e-02</td>\n",
       "      <td>4.820014</td>\n",
       "      <td>968.290685</td>\n",
       "      <td>1.252161</td>\n",
       "      <td>0.896803</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>993.660000</td>\n",
       "      <td>9.000000e-01</td>\n",
       "      <td>4.964019</td>\n",
       "      <td>1004.548645</td>\n",
       "      <td>1.397787</td>\n",
       "      <td>0.967250</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000    8.000000  8.000000e+00  8.000000     8.000000   8.000000   \n",
       "mean   0.680000  274.682500  1.396278e-01  4.762345   959.656591   1.169110   \n",
       "std    0.139971  299.162065  3.146679e-01  0.109120    24.103458   0.143108   \n",
       "min    0.480000   85.090000  0.000000e+00  4.640043   919.719808   0.980136   \n",
       "25%    0.580000  130.875000  1.147500e-11  4.687320   949.549332   1.077589   \n",
       "50%    0.680000  163.455000  2.061295e-03  4.749315   959.798899   1.186408   \n",
       "75%    0.780000  249.540000  6.117500e-02  4.820014   968.290685   1.252161   \n",
       "max    0.880000  993.660000  9.000000e-01  4.964019  1004.548645   1.397787   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.861607  \n",
       "std       0.060846  \n",
       "min       0.795654  \n",
       "25%       0.805832  \n",
       "50%       0.861304  \n",
       "75%       0.896803  \n",
       "max       0.967250  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:00.784443Z",
     "iopub.status.busy": "2023-11-28T21:18:00.783858Z",
     "iopub.status.idle": "2023-11-28T21:18:00.786329Z",
     "shell.execute_reply": "2023-11-28T21:18:00.786655Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>311.88</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.815448</td>\n",
       "      <td>951.021627</td>\n",
       "      <td>1.397787</td>\n",
       "      <td>0.844212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>182.01</td>\n",
       "      <td>2.590000e-06</td>\n",
       "      <td>4.781910</td>\n",
       "      <td>969.267232</td>\n",
       "      <td>0.988756</td>\n",
       "      <td>0.795654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>136.17</td>\n",
       "      <td>1.590000e-02</td>\n",
       "      <td>4.716721</td>\n",
       "      <td>957.603109</td>\n",
       "      <td>1.232679</td>\n",
       "      <td>0.808079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>993.66</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.833714</td>\n",
       "      <td>961.994690</td>\n",
       "      <td>0.980136</td>\n",
       "      <td>0.878396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>228.76</td>\n",
       "      <td>1.530000e-11</td>\n",
       "      <td>4.645716</td>\n",
       "      <td>945.132446</td>\n",
       "      <td>1.140138</td>\n",
       "      <td>0.799093</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000      311.88  0.000000e+00  4.815448   951.021627   1.397787   \n",
       "1  0.537143      182.01  2.590000e-06  4.781910   969.267232   0.988756   \n",
       "2  0.594286      136.17  1.590000e-02  4.716721   957.603109   1.232679   \n",
       "3  0.651429      993.66  0.000000e+00  4.833714   961.994690   0.980136   \n",
       "4  0.708571      228.76  1.530000e-11  4.645716   945.132446   1.140138   \n",
       "\n",
       "   metallicity  \n",
       "0     0.844212  \n",
       "1     0.795654  \n",
       "2     0.808079  \n",
       "3     0.878396  \n",
       "4     0.799093  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:00.842994Z",
     "iopub.status.busy": "2023-11-28T21:18:00.841938Z",
     "iopub.status.idle": "2023-11-28T21:18:00.847073Z",
     "shell.execute_reply": "2023-11-28T21:18:00.847393Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8fc2e4ce-f73c-4b97-bba7-cbf9686bb64b\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"616ab3da-3a81-4877-8158-f19855d22f80\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4233\"},\"major_label_policy\":{\"id\":\"4231\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4236\"},\"major_label_policy\":{\"id\":\"4234\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4231\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"piHnPruA6D/oPruA2FTqPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]},\"y\":{\"__ndarray__\":\"9ihcj8JFVUCPwvUoXL9cQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]}},\"selected\":{\"id\":\"4238\"},\"selection_policy\":{\"id\":\"4239\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4239\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4236\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4234\",\"type\":\"AllLabels\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4233\",\"type\":\"BasicTickFormatter\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"616ab3da-3a81-4877-8158-f19855d22f80\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"8fc2e4ce-f73c-4b97-bba7-cbf9686bb64b\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:00.851369Z",
     "iopub.status.busy": "2023-11-28T21:18:00.850493Z",
     "iopub.status.idle": "2023-11-28T21:18:00.852859Z",
     "shell.execute_reply": "2023-11-28T21:18:00.853241Z"
    }
   },
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:00.856966Z",
     "iopub.status.busy": "2023-11-28T21:18:00.856248Z",
     "iopub.status.idle": "2023-11-28T21:18:00.858657Z",
     "shell.execute_reply": "2023-11-28T21:18:00.858972Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:00.862121Z",
     "iopub.status.busy": "2023-11-28T21:18:00.861631Z",
     "iopub.status.idle": "2023-11-28T21:18:00.937084Z",
     "shell.execute_reply": "2023-11-28T21:18:00.937415Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"467a1b01-2856-483c-bb05-2b7d5f9e8c01\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"c9a9a509-99f4-4a4a-a137-d3ecd19ff9b7\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4570\"},\"selection_policy\":{\"id\":\"4571\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"4571\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"4566\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4827\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"4563\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4568\"},\"major_label_policy\":{\"id\":\"4566\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"4568\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4826\"},\"selection_policy\":{\"id\":\"4827\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"4565\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4565\"},\"major_label_policy\":{\"id\":\"4563\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"c9a9a509-99f4-4a4a-a137-d3ecd19ff9b7\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"467a1b01-2856-483c-bb05-2b7d5f9e8c01\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:00.954059Z",
     "iopub.status.busy": "2023-11-28T21:18:00.952976Z",
     "iopub.status.idle": "2023-11-28T21:18:00.991609Z",
     "shell.execute_reply": "2023-11-28T21:18:00.992011Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:01.004352Z",
     "iopub.status.busy": "2023-11-28T21:18:01.003569Z",
     "iopub.status.idle": "2023-11-28T21:18:01.006489Z",
     "shell.execute_reply": "2023-11-28T21:18:01.006876Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:01.012158Z",
     "iopub.status.busy": "2023-11-28T21:18:01.010062Z",
     "iopub.status.idle": "2023-11-28T21:18:06.492402Z",
     "shell.execute_reply": "2023-11-28T21:18:06.492990Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.6109122395515443,\n",
      "    'gravity': 5.2417387008667,\n",
      "    'metallicity': -0.41471983790397643,\n",
      "    'temperature': 874.2307373046875}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.241739   1.610912  -0.414720  874.230737\n",
      "std     0.144671   0.228501   0.025957   29.684233\n",
      "min     5.072875   1.267840  -0.478382  839.200134\n",
      "25%     5.143904   1.443201  -0.417818  850.256729\n",
      "50%     5.217384   1.600068  -0.410271  870.305756\n",
      "75%     5.262198   1.748956  -0.404092  894.941498\n",
      "max     5.505957   1.938652  -0.381680  925.626770\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"717c8296-ac77-498b-b989-4d9f6297865d\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"82e76abc-b1bc-4804-a8fd-73b3dcc60923\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"xHeFMJcxQT41m8NcOGFDPhSwsguMy0M+V+OoycW0Sz4jEAaJ/So/PjbRRAKX6FE+oe8h9bEGTz6ofgQJgWdMPoC6ew5fblU+ZB+WJIlDXz6WgXzC8HVlPpi4Qjy4RWg+sxmKmE6ZbT5WTdpNw4N0PmC34ECxAXg+Z1L+HViefT4neBPRKeOAPkUfTcTHHYI+X7HSomcPhT7Nt5TbTAaEPtz33QbIT3w+nYR85UzGaD6kC8wiohxXPv4NGf6A91Y+Qih0Bn2eWD6W+6qwSdxPPgKtN6zOx1A+oM9ab/XnWT5S+XGOQ3BnPvzYfGpgCHM+qCFuZqPpfT6qMvQWrsSEPteqXHVMGYw+OUn7Mjs2kT6bcZ5GdfCUPsCWYiGd/5Y+/I7373DEkj7NgSJqbkqQPoefnzyGzIY+3BLR50GlfD52frtiMvtWPkznF7KkczI+ZoV7Iz3oOj6o3zlV3Yc6PhCwimtcais+lYVmdjp0NT7EciAbc3wmPoAyuWSsnTc+pIqu9sMcSz4GV2hGSWxTPkV8vtbx11c+1Bgi2RZjXj6di7/DppdoPsqKXX5PZXM+KDhjop5XgD4mqjoPh5GEPuNDY7kemIw+D3QO4e1EkD7nZghFqBOGPr2narBpznE+LyL1z40WYz4oc0J3TlplPm0zWAiYWWE+60mmxeN+YT7CohtGrl9jPh3PR+ifeGA+16C3GG16Xj7XdEG58BNfPvPoBd9i6VM+vUsFoNC4UD5P21Q2+eRCPpfMUx0nglM+JEPoI2YsVT799oa/eu9TPu3mSGXkDVI+ONeTvnOYUj4ejLphqxBePgLnR4i46lI++ndLjWNeTj4OQUBloC9ePs4yx7e8wmI+oyeEiLnNaj6ahXdgtopxPnYk0zmcWXc+6KK9PPImej4YkSj0LG16PkjfS3YEE3U+pWQ7rN+qcj4rWLHOHwtrPgSk3Ew4mGA+8VoOtpwsUT4Z+kdvn3FNPvZvglZRmEo+/JUmW9eMRT7ffS1q3QtDPm4BZh1EOVM+VqFZ7C9rQT5uRqFsuz9CPj+SsWV86k0+WLljYRT1TD7zDUMXV9pUPrwTcFHrCFE+gia26aRxYD5sRKY5VwNlPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5237\"},\"selection_policy\":{\"id\":\"5238\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5223\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"UhJ5MDBrSD4pfVMWbfZCPuFKgVLbAUk+4bLqjoNRSz7gq+azdJ9CPkoQE5PviE8+wFf0arm/ST4sCPgp5qpQPk7kPD+2ulc+u7V7rMBZYD57odcyNF1lPrpIyRDnIGk+KMON+7N/bj7HjLZmOZ50PjpR0Ubzm3g+10Zd1L9mfD5kejIfO0SBPvR8G7oq8oI+9KRK15MthD5tzGyp2u+EPvNpGfTP5ns+G+bwyTHsaD5jmUO4eZJUPkuiHW7VoVg+1txT31cmWT5LvLDb/gRQPq8O45jrjE8+lvkNvM6pVz4zhrTOa1xmPqQ3AvyMOXM+MFLH3+lLfj4z3k4YnSGFPlKSB01FPIw+/rCzSBOQkT4jPWh+qsSUPsLm30Gf85Y+6p0IvJk3kz61xpUxROSOPjqVH6DH4IY+sIgZAUz4ez4LGnPGKNhUPn4i1GwcdTE+s36jC71SJT43EQz0SSQ+PqbjDarQvDw+BAlxpFyUQT77SaqdUwk7PvaepkpnjTo+bWzABB/oUD7AoNE5vcZZPlel3U6j+Vk+tEEm9YTAWz443AF3YfxrPqzLp6E3z3I+Xfq1yJUmgD62NZj2H7KEProP7y8+Dow+sXUoZun+jz4vdEcHd0CHPgMmjlURZXA+6u407omxYj5mxSWG56pkPgdnOljb6l4+VkQLybeFYj4R7I0SqGViPn1YX2Fst2Q+gGPN3zmNXz79kZIVpVtgPsKOzZmnllQ+x2gI8QMjUj7JNTaJDdpEPjG6v6tjKFE+3xzOuaARSD6LeEByyyZQPoom0R9f3F0+gfrGw2K8Vz5qW+WXaW9fPvt9x3XRAlA+Gjl1K20DUD4LI7F6Rk9YPmxRlSpBxmA++9ihlE9daz6NM4WMsV5xPqwMDnO9WHY+K1VE3XB1eT4VsjVjyIR5Pux3SbZX4nU+GiVDpeptcj66Ei3PzgRrPqmvgmj8il8+Y9BzOobbTD4+LQ3IitRQPte9hmCEvT0+MSQ3JvQdRD56dZ7SC384PiSSQy17mUI+d+uYp0ESRz5fvn0ExvZEPs2QC8dTU1I+fXTNj8J3UD6nsjWVeKhaPljVj0TUIlU+E18xQG2oYz51WxehFddjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5233\"},\"selection_policy\":{\"id\":\"5234\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dZCne/AVPj7TrgbEtwZCPrTuQnbsM0k+4IZHNu6LTD7/aiocw1JCPmIjZw0dhEw+UKW6gLQXTD7BX76LxF5QPgPbaVRfRlc+AC9Pyp0BYD4XkXGqQStlPg8VvNvRFmo+JdA53Epobj4NR1gKSCl0PsvncvyIdHg+TLBVaS4JfD7ugSnQLb+APobZT+pqkII+fV30xTw9hT78r8pC+8eEPkWFURVcR3s+PyE13MqvaD7zO1AUH99XPo9LOpEPr1g+o97Ra1YZWT4j9LICvkRQPo0+IgmyJ1E+xfHJVqZ7WT6aCkPwpn5mPg4BtwXkLHQ+zqeoBOIFfj6VuC2bebGEPuIqgkgpvIs+b0EyCm1xkT6NHOK2s/OUPvrjOjI/7pY+9/DQVXfMkj6iW0D1jgGPPi+pVQBRC4c+ZGKGEOEofT4L7FsWddVYPjULd871kjE+y5y9jEbfIj7eDRoWohQtPshPNKC6/D0+pUEi+UchNz7NTvvZyj8iPvadCrgmQTs+O8yED7KSUD4S19WqmolaPt0ESwAhcFI+6ele+ZksXj6uHuAdK6FoPtXHfANMKXM+XcVVkFeCfj65jtIHAJiEPjYpOdVq/Yw+PhDVC2G2jz4qKq4hYzeHPs3Ym3rHZm8+rahSPmdyYz5BJfIlttdiPlNiumD5eV4+xToAGriCYz5WkFRavEJhPrc4ZGeYA2A++Nxl2CryXT6jJUf3TRVdPqrcTPUOnlc+MomJ2lEnTz79ZNFgu+tIPiayUX2w71Y+A+qkVvTQWz4L0e4tFWtQPl7ub4RAeEU+Z+UkRw3eVD6UW4yJZUphPpwvKH38ZVQ+kWU0Q0xRST4E+lF7Pe9WPscyS/PKJ2E+iFIOCMo2bT5jWD11kyhyPj4dl7Lb3HU+/dN13/dHej65DfJfjrl5Pt/Utom+j3Y+mKaWL3sacz6QryqIm+FpPk2y0Mz18mA+SuAprZWqTz6ZJRxu2wJTPmJk56HWiUQ+HKVBLfJTOj4ceAvW+K9EPlEGEcT12kE+P5grTUajQz67S00azBg/PtrDmMrrf1I+cj7NRM98VD43DPtCeiFXPuRQz3ekZVc+nzXh8VTyZj63rfUWBjZoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5231\"},\"selection_policy\":{\"id\":\"5232\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"7io50qOaQD7wufJ2ygw/Pn3xwAC9nkY+paVo+jelSz4dWor/v4tBPnD0umTLSk8+o4zRsATtSj402AyxbgxLPr6K5hr5RFc+TjmEqXVwXj7q/H4mPvZkPi+wfH3Q+2k+khgySRl8bj71JYtYrmB0PkJqiE7z+Xc+ROKiFcThfD7sgzrEIY+APgTPRKvb9II+lMKMXuHghD6/0A4BKY+FPnBz2xZiAXs+9MP3Q95saD5a7d7Bf+NTPigVuSa0lVY+9FXqrY10Vj615VrCWYJSPvclV4cIWFE+CJ0bsuIOXT5IXOyIZ9JmPvtdM0j+VXQ+wV4lOKcHfj5z7tBaFDaEPjtd3G/IA4w+pvvq5PB1kT5RZ5znPdCUPrTIY52ASpY+R2SmXbf7kj4oKSM0ThWPPtv6bFmbY4c+fxbxUmQ/fD7luaTsqrZYPri2XBuezDE+1OOEAGWqQj4P+xmTXVI8PuV8F+acKTM+N/7PDst2Pj4HFJbl8X81PnTzNmpH7zg+0Fari/D8Tz4arRISiRZVPkS4r4j40lM+xazfjIqdXD4UWqwbJ+hsPjQql9LhnnU+l/K48eyXfT7yit5Y/NyEPjm4SpJ+Go0+CF3V8HMokD7RUj9NJTuGPnddhJPdNHA+3Jp+CFXhZT49L4sNAOJjPibm0f7jAGI+YbrQe9LwYj4sVHUsoB1bPlPWqgYbpmY+PpkO+HjNXz7mhsvAyLdcPqU1K0W99VQ+CfjMyQ7gVD6Wl5vQNR1LPhWKrDvLW0k+ulRvLcwHTj71eyWgYJZQPkuhy7O4jlQ+F7W1z2hHVD4C3S5XVyhdPkq/pG6b11I+4pfTyId9RT4l2Mj1SPdbPrp84nIz52I+QVZ6Uk61aT4j1vd80vpxPno7dQqp8XY+JZQyK3WXej5c4q3sxC95PsjxfXLkGHU+ixhtnwvHcj4aZCv8U9xrPkVkSANswGI+L633RjWySz7yy8hGM+JQPm43crqzpkI+8O1ihetGQT6hQ3k3/OJBPmhGY0Ml0lI+6sQ9RTjyRj7BxyonSY1CPj51ojmldE0+OQyH/aWSTj5uykSvp5liPlC+Sn/EvFQ+yM339jfQZz7Z5/ycA3VgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5245\"},\"selection_policy\":{\"id\":\"5246\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+4neWbIlOz6avl2zJFBBPg/X5lpnbkQ+ndxaTLamST7ruUnIGc8+PpvApuq5jkc+VF8BFhgMTT6zCBoQiQJPPvGqEH1C0FQ+O4mp4ZYJXz70cMBrOmxjPiPm4OkERmk+HrWmrdhxbT7lu1R67r50PnCJnkbK1Hg+kGJEop+dez5kXBubZL2APqePL2Yrw4I+/+Gn1AmFhD4xZ+/TEjOFPtzpZAJATn0+CrEPSr45aT4vZ4xRopdUPmhQ5e2ouFQ+Az7SoaoiVj7f2rFWpm9RPkdV70kUA00+WD9+6HSGVz7iG5BAv6NlPlh3fKYPhXI+jdUWdMkFfj7/HNuPQ4OEPtoJVOcIvos+w52ziGpvkT6klrH06UeVPgQSBMEZm5Y+U09vy5+/kj7z6eqpBmKPPiUNk5WQb4c+M5CCm+KQfD7hD8a45sRZPlIyU83QPjI+ke3GOB0pMj7IcAvTKGM6Pmfnvr+4iBU+YIff+Y3eKD7GcEALZXEXPpbIAnDBiT0+AzjZl3A6Sj4KLmCp1FZWPrvy/zwN8Vg+pLDrihsyXj5jqieZOY1qPnCBCSqNIXQ+DyJ9/G7Afj5yxTEyxY+EPp5HxdyzkI0+LH+vILATjz6orZLJzb2GPuO4yFQR7XE+aKPtZWLWYT4Q41jmgwVkPggTVuRzgGA+iHgUpVO5ZD5UU6yGoDBcPt8NoxFcH2E+9rQm4RzYXT4daG3u7ixgPvcdGLBz7FU+mkwYHGjSRz6O2JV7KQZGPrJSUJCG5E0+rFhmPGv3WT5EE/rixNhLPn9748XFREQ+n3ssZF7aVT4bBOPbnLdcPtAPb63qAFE+C6ueeJPtTT5c2RGAIW9YPg5sIpYeHGM+8y/GGvBSaT7LSotad2RwPsIiyvu1hXY+k8G4EXIiej5Cqbcv1/B4PlbhLli05HU+qW5BSBHScj4gCEofpztqPp3wV3VaOmE+iDdMKrDpVD5CF0bdPPNSPmnt+ogMOk4+ftoP7+c1QT6T9aiSGvVEPjMlqDw0HFA+Ln8EwzghTD69gkzaSS9HPhrb7A1Jvkw+h75VZMMaUT6FwwhG1tNRPlrzGlQ8L1o++kIxutduZj7/BsIfdjxkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5243\"},\"selection_policy\":{\"id\":\"5244\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Lwc8usAHQT4qJfAJI3dAPjv6Dd7QrT8+NU0sa+36ST4eEpG5KRk6PrpNF2M8BU8+Iloip5FfTD5FgJl8qbhQPpa3uNC52lQ+TNnINPxQXj5Ksi6WsD5kPoT3PrEfU2g+j+lUXJxvbT4ARfy0g4B0PpK/Ui3Pung+G4PXxSeCfD5hjZUwqVeAPmFuw6hcyII+aOWZ5MAPhT5eCzwmpPKEPkZ82+B/tHs+GL/x5BbSaD5uXazqVetXPlr+upIOrlc+NxbJayGRWT6fMfciboJQPiGL1ffXvEo+kCFw489SVT7evpSDTnlmPoY0E4TcCnM+aLuzDTALfT4dnnUUXlaEPmTY7ROEmos+71iekDcUkT4IK3TyOleVPurE8TI76ZY+hBHHG/kZkz7bM0eYVRePPsnN+L2YrIY+sI2aPvfnfD6e0DwizuBZPhDdyQbYozc+MNQTUkYDOj4oKDmcGF5APvKW1zFYjDc+qsldUIpVMD4sqVfOero1PiHlg5tA3jw+oID2K7O+UD6NUOMcCcZMPuBGymR4rFg+ZPqnHxhpXT7Pihfa3FNtPgMfbnSSr3E+pbVMUdvafz58GXP6BEaGPlLOYVI/F40+QH8dWjuHjz446teIkFuGPs0j8IecMm0+Y6Em05/rYD4gqad95WRkPlruNjvklF4+JX3eEdjsYT46xQOPBWhjPm7xn3ranGA+oKwMtzd+YT5wTbkm74tdPpzYv8QOdlM+ejELzBzTUz7PzsMg4FJCPnkQpOCw0lE+pU/dedOcQT5CdL9omUNVPpNoRC8tLlI+5l0Nsw7KVz5ODR7O1IVgPppUDmBfDVE+tgWNBnIOST4E2eGtoeFYPgR/buwNo2U+H6+OQB+aaD57BUz25vNyPvLOg1lI/HY+ad0NRCPaej4YJIJHCiV6PhA1E4fRBHY+4e4UQU0jcz6dgnqRRE1qPtKqmmF1EWQ+pdQEzpLVTD4xhQlPrAlRPvvtrP1JcD8+cHe/ux6mQT7NVLrD4nxAPsPoHDqgLlI+lg4Qit3uOD5of/4B20dEPuyqqFP6I1I+OuRxUyiwTz7ewz4uXqhcPiockkDW9Vo+qhDtg2FOYj7hSH+vlEphPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5229\"},\"selection_policy\":{\"id\":\"5230\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rZYdtt3/QD4B1vEFQ8ZDPruKkCti1Ug+adRg19eiSz7L2A3VPBE4Pi30mdjBNEU+F1lyuGdcSz7j0p271RVKPncBZZWYuVQ+hMmF1MBKXz4+SZtEiVdlPh/Gf9fLRWk+Bp7gkGFCbT6M+WaAC1F0PqzFBpTsonk+Wjt9A6ELfT7Za1IU+0qAPpjmn0Gu7II+LVn9KU/ihD73JQD2SdiEPtNj0YxQH30+JZQKM2hZaD5RXSl9n45VPrbNLup4+FY+e4/Kso0aVz7dwRm8YMFNPhiJXywr1FA+aOLizuGnWD62O7hQnyplPltg97h00XM+8C/QEiqKfj6OFPvWg7OEPqJe05FzO4w+JSvvHcFpkT6VqpPiCQuVPp63ICFYkZY+oUNx2/EJkz6KNkzyJCuPPpqep51984Y+CTKmU5RbfD73Xr511bdYPtXBsOPhTDU+GV4Hhy7DKj4+bI1mQd83PsloHbFbFDk+xQNpV+aCMj5MA62/ZSAwPsK1eURl9zc+gbEHBVsjTz5v4Ga57P5XPnh6l8vdDFo+zmcgltMMYD6O6YjNBnloPhb5Zyth6XQ+eu+qp8dvfz5c6b3SQTqFPlMnBBdR9os+3GqW87qwjz7uGxEx+WWGPhuu2To9XHE+ltLNqymyYj49xkDBltljPrvbXEy5PmE+Ch6g57AyYz7gTz8Y27BgPnOjuAE4zmE+Q12e0gQHYD58BceXcSZiPp/srPie21k+SBEkyAgBSz72EcUWdPRUPnmsq+/TXFQ+DGbUk+3vUT7Byq51SXNRPsjlokzZDlQ+9SvVfSQyVj5W39jpSbtiPqktW8WlCVI+lx0ZAm0kSD7WYE2pKiRXPrZm72zDtGM+8GC6WyzJbD5mLeZdiFZxPki90jaR+XU+GDEVQZsAej5Bt34gMX15PkY66MGs0XQ+YZryaDjXcT4uuLQpraVqPvGvh2vtAmM+bI2Cn7uOUj4nZr5hysVQPuR/PkKVPUk+bBjLnDYPRD45VcsdUi5DPvSa9iq+FFA+6BOSeDdLTz7WfGogt2ZFPtFXQwNmIVQ+yFPnvox5Uj4RxQJAlXVePhwN2K9nll8+9JHb042wXD5l3Q86U65iPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5235\"},\"selection_policy\":{\"id\":\"5236\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"OPIKCz+MPT5kZRto3VFCPjeAZ+W//0g+dG4/SiehSj44uFCOxS9CPjKlRNg6IVQ+zGBJ2tvkTD6xLCNZ/0xQPjH8wUABq1Q+2liPXW2AXj54KwpwOahkPr+PCD32mWo+2E6DtzqVbT7HOlr6Led0Pho7tMvJC3g+2JCkKyklfj6Y1qrxn9iAPmr8GpRgHoM+vJkxRtu9hD4C0GZpUAyFPnDGtGWnJHw+bKWRgprQaD6dGuAvxxpWPvYC5tTG61c+HkcP1wrLVz4ur5XqbYJPPpZOTKpUv08+eJRuyXixVz7sKP67vHBlPiAoHGB8g3M+AhsrFeMlfz7rzjPA0/qEPqa1JQg6F4w+Vmf2ajQWkT5hVRmdvH6VPuq9cU/AO5Y+I3TSVEYxkz7AE1+AHdiPPvSE6LuGE4c+h8OmClA+fD6YckaDLvxTPjtkKLGmvDM+ramfqdZeQD6vYQ84Z0woPg0V2Itnoz4+xrsvTMAYNj4KQWo4MEMoPsL4fJF6Ezo+kuYr1sJVUD44SX5Z2PJSPhhHH3n2rlk+4ah71wviWj50WJrb28psPsxs2K146nE+TAtJcSn8fj7tO+t1qm+FPmz7SqQagYw+0CaMRRDBjz6KFfWDd/eGPmck8zcbvXA+JC4IvS+xYj6o4iywyaRkPkAoKukRzGE+VQsnTyqWYj7CCszq+zZhPnEqHBCus2I+CPZXLjkvXT7CcVsGXWNfPi6/y4aXMFc+9j5o34neTz4Zqjv1MppPPj9gvIaeMlA+l3qgsuf9TT7442/FoJFdPpV2o25aYls+lzQoX+CSVz6rhDUGTQRgPljhNLSOpFY+zU1aSi41Uj7T0LWQxYhbPo2R2qnRjGU+Wz7fNFh6aj7qUhA+DY1zPsqdg6FkHHY+L/kP6UGLeT7bDNPQ9GR6Pp9QzL92tXY+jiqbo5K4cz5xAk7eL0JpPtYA22DbO2I+KPau3IbLTj4VL6xp+RNQPtAfUriWdUQ+RqZY/PmVQz7e1I84tehDPsCeZhKpnUo+E2zjAIPCMz7O94/P0a9HPv9mY2mK1VE+lPjB5rQ+UT7KfACqUSJVPiep16JZKkk+xuSrXt7iVj4RqZt+KVtfPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5227\"},\"selection_policy\":{\"id\":\"5228\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5222\"},\"major_label_policy\":{\"id\":\"5220\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5222\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"pjR7aNQOPT5X7h7gbulCPsbfZv8iZUY+ylshSEVvTD5ekaSo1587PnZKYEuDOEo+rfCuT6K9Tj6lUV+L+mtOPl3V42ISw1E+kDCNVrmSXz7iOHxY87VjPtI1wh+WwWg+lJe8H4TYbT6azH1DRJN0PoO4+SqDpHg+hKKiWrV9fD4zsBMK3luAPn0TrokS6YI+HPFhtaAvhT5YbvRCUYyFPlaFHxWRpXs+Wq7S+TZqaD4EOrG9sYNUPh6YAUxyalY+xV3aPf6eVz58aVgxfE1RPjo0xtS5rFE+s1sbJ343Wj6YgPVT3yhlPqNF3+FF4HI+P8RXj5gsfj79ZoYf8j+FPhNeGmiMm4w+5dzydiQ5kT7C0rvdJRWVPm5uQX0UWZY+qdeRDQUdkz4eKz7to4KPPg0BWGix0IY+4+nnQPhWfD6Gi0+/+W5VPrxWWaK2EjE+IHnIhBvyMD5OCCAGQWI3PnQ5YL0r1jc+cR3+n6KDOj5Z4EfnJ9spPjlvsjeSykM+VtKH0psWUD5j9alP6rFUPiPOcFJoiVI+4db4LVbLWT7ph1/vv3ZsPgjQz31mjXU+YkpHm1tSfj6MEk8QbpuFPmrVvICTYI0+NrWpU54RkD524O/a1EqGPlX9kWosSHE+dqc1o6iYYj4DWPGL3uNjPnb4mCQRZmI+Byfnp5B/YT61ffj8UtZePtn2aKQwb2I+9fe7UXQSYD4aTTZFHV9hPvyQrQRORVg+ABuRFBlHUT529fhtl2JSPohBC4SnaFY+DI5Lv4ptVD7x3xHg6SlRPu5IsdTfIEk+Ime1g6Z+Vz6IIEWw40JaPrwKYUWObFE+xaIYdtOoST5o4V9zNnVaPpfVqqf1ZWI+9QWPWLnYaz7LxNfVp0dxPlmQnbkf7nY+AGQRF/i/ej6a1Gji14V5Pu2vvx7YNHQ+85o+Fb7Fcj7Q3TLYVbtpPltzzyf7GWI+bVPWngsVTD4AY6aCIndUPoLOS4cSkEE+5j6/IyR4QD7C96I5KXtCPrzzn9Xjy1A+ruiBY7qFTj5BuPPG4mhBPvQls+qPAFE+oCGDipuBTT6U/rUtvEpXPnIjtPuLDVg+JJ2zESlbZj5r5f1cDnJ0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5239\"},\"selection_policy\":{\"id\":\"5240\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5225\"},\"major_label_policy\":{\"id\":\"5223\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"5220\",\"type\":\"AllLabels\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"},{\"attributes\":{\"ticker\":null},\"id\":\"5225\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9o8OC2LsPz6/zSaCQuA+PkLNQT8p1kM+l8KxePtXSz4Hxlkzta09PtUc2zk7jUY+wyRPxXA5TD7SmrC8hYRRPmn9gtZn1FU+YoYq8LC1Xz5p/Ph66WljPtqflms9oWg+9x+gBGcLbT5npfgphUB1PlRkYMeMUXk+NtLFBFhnfT7eGFzY9CeBPgguIbxPwoI+af9XYSLZhD4n/ToGKfqEPnUE+bQuFHo+FRs2+96raD51yQW4pTtUPhKmmjraDFY+RcU6TIgyVz7BfuPsHCVPPol9YgnUBk4+PSCs3KOkVz6+vO/QzJdlPo9Etron3nM+rfga368dfj6AAqOqSE2EPrdWEdcD9Is+GYHEjDqNkT47CacJntyUPnTYOIsSfJY+xFFhfP3Akj4T90gr09ePPh/S9MPR8oY+g0OjoycEfT6yQfyM4YxVPsPJUCQNiTI+Ckx8eajBMz4CWsxiQKZFPkw9nFOYzjU+PM5ujDmsPT7QtiT2IBA0Pjl9uiXMfj4+CY4IadzWSj6v1gLJCNxSPr0scKkZ+1g+bvKf4NN/WD7MPX52GDhqPg5JRu0GQnU+1J8XEm/Sfz6vYFPZ+9aEPsQxPSvEAo0+fhNY51K9jz4v0OBtowmHPvYYpyYUg3E+RKs+byp+ZD4mDrh29AtjPn779LO/hl8+ywhhHOmuYj4P1yDXKdhiPgu/Wxjyn2E+HK7XlB8gXT5Xqiw624NaPpxmbvkAFFU+jFbxmAEcTT7GfJxV8KBRPiCpBLhib00+A43JqwD/UD6cMbDtCCdSPlk87Sc02Vw+A2CQERR9WD4ZUSFgH45gPv6w527KGFU+sjXAqL23Sj5RRhY1Hg5aPo5a/xVSXWE+EV3A+EUlaj5JkFAGLzdzPuDxCcIVzHY+3n/9wJX1eT7tDZCa+UV6PrRRX3mU6nU+1q6pcGuKcz4DykMTA7JqPo5rANTTtWE+Hxq95LzLTD7gVSNTJQxRPkvqUmHyCEY+A+jqn3kpOz4ELgb9UxhDPjI+CXVN6Uw+GKHYtXQURz7NcsHfwCdHPg45avAiLVo+/IAx5JkrTT4eYWPGh/pTPlGtO946ElU+7wHHfGNkYj4ZFImm96lgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5241\"},\"selection_policy\":{\"id\":\"5242\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"Selection\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5246\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"UnionRenderers\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"82e76abc-b1bc-4804-a8fd-73b3dcc60923\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"717c8296-ac77-498b-b989-4d9f6297865d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4eb026a3-d65d-43a6-a5f3-6833fc736bd3\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"cca407c1-3387-4977-854f-542974fadebe\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"},{\"attributes\":{\"ticker\":null},\"id\":\"5428\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"MFwrNXAGOj7MqG/giYgnPt8owRUFLEE+QM6fX1v3JT4kgxg2UOghPmjJ2USxlhs+8OSGbjurED4QkrHQZG32PTRaxjKXF+89oldz0XE7UD665+nNXX5DPtHedtnDykc+rNKIcaN0Gj447trx6LkkPj4MjloiWTA+IJutVDJRDT5MmKYD5IMQPqAFp3/zZBI+xkkfEg5GLz7ojaAPCVckPqyt9lCE8zI+NFYWSgdlQz6tq6OmP9pAPogMIZjUif49o45kz5wERT6YEEQ6HSQLPjz5kBi09kA+rkfeAJynNj44QRF2EhLVPbqpI3DlEUY+MALVcw+/Pz7P1pv24aU2PvR1Faf/3So+4XO/iCesND6qRp/k3yEoPoAan91jERE+TJeo0f6WBT58B1MFAaIGPuQN6zBRsAc+PJzwcxm6BT4oowpX8pwMPhpJBwgaJBs+7fpCcCJlJT70YNrpDJ40PuynLHZ+UA0+vVUfqdJIIT78WmdevpIKPkpkvZ++XCc+UCKHNKbEAT7/XVl50WpJPvQR0MMGVho+hPq3sFyT8T2UoMFojuERPikznKfQbDA+OBfFwKrtSj40NtASDhodPrrXUVUzMxU+HiMre7JZJD7k8XD3mCwVPlBOyseh+ww+qFv/brTa7T0QdbLgVccFPiA8AqVD4Ps9/xwtr3jpFz5A07uytAr8PThtjvN56zQ+4CaY/DHyPD4QXbHlsaQ4PhxaOwxXvwM+RulticDX8j2n/94R+qkxPkxFQMJ6P+I97yobmYwMJT5ask7lrcAVPix7Fnl5Dhw+yO9yWe69BD5mutovU5YgPilRA7cdXEY+Sby0SRbSMz4Ip6HfXvj2PTixGf2PEus9aGms9qvFCz6X4P+EAx4yPtw18ohXIiY+n8m6x4wMPz42nWK4xuMoPlO8SCBJ1jQ+oNlUVy7zOT7ornlRvMc5PnyN1Ms8/Es+QluvAK8RKj6/NkxaxTg6Ptn3Lqo6fTo+SHU8/snL+z1V6wJc3GI2PmJDRlEuwjo+fyT4DNgNRT4CRp3la1Q1PhPmJQ200kg+qVD0dLg8Sj5nHRvfHTNFPqCEx+FlxUY+K07ydUjhLD7lrZC18e42Pi2eMKPZxkQ+/rF1jLaORT4YJpzDf8RDPmoDAMctNUc+Uf7Un0k+Rz5cOayJyURLPne+rOlNoUg+QhDhqusuOj4vXD5adfdGPg7a5rulQFc+Z3Zob4ODVz5K0ebFCPlcPmhb4khToV4++gxvV/3lXz4H5fflGXhjPgR3ry1+/mU+nfb4al6haD41dnCwjeRoPmV46r/aaGk+ojdICuMAbT45Jf3ZLkVwPvCM3ipAeXM+a0cIzbfMcj5+m2H+2l52Pm53wkPq8XU+Zy3SSfwHdz6uVS9nuMp7PtXqYb59w3s+hwSoWR/fez4ZJAwdYXh9Pv44A3M3ZYA+Gwi16JHsgT4MsIj97n+CPmHTTg6kvII+PzGVtoaMhD6pg0NoJCCDPs2dK46ONIU+htumUqqKhT4HOlQo2FeFPj4IXla3z4E+ZytoOTbzez4Elaw2VCByPqyNe04UPnA+2mR3xdo+Yz7CQCc/z8NhPvP7tGjl7lE+Gfs3wLzFRj4Lhx/eAuhQPmdmv90oMFY+z5v2oLnQVD7VZg9dtv5SPhvvHb1DHFg+s+B5h3d6Uz68lLc9pjBUPiCPgDxqOEs+ZhwlDYFFRz6a95gkG3dSPuFyOK5wrkk+8puAHAs0Uj4zu9mMcvhaPuXaxyPTNF8+fvR0goK4YD69SL/AYK5mPnHwEWS+rGo+UEmsZSHebz5CblwQvt1zPoc7i1s+kHk+2gJCS+BnfT5n8AiSKIR8Pm9dWRVroH4+GGJelEclgz679FiGn+OEPhHtyCH+AIg+8dw/RJZSiz7J++U1RN+MPqjg0w7CKJA+Y9NbcDq5kD4GPFe9I/CRPnBtj2tPVJM+Ziee6PCnkz6AOFo+yRyWPl2hhfe/OpU+n9rnKANWlT4G/A1bNMCWPh0cxGpMR5M+7/7p/h9qkz5MfVv10mWQPrPL6uyZVZA+JgrQbuaajj5lWlC0sGyKPgy4oziD8og+O2oggvk9hj7b/t3zxNaEPja7iGJYAII+N1QjEJ5Pej42Ja0Jhy9yPgNTmCN1uGY+HVBZropcUj5eqv75vsY2PjrJfwbuSjY+5mFuZm4BMD77JPZdlagcPnxWADCbBQw+rD5WuUcYGT4sZUF0l4w+Pjb2E3ZdgkI+vtLOrOmCJz5Q6BKLG9L9Pai+idj1rQs+/B5kV4hNFD646wIV2sAOPtjxmXACxwQ+vB5GjMha9T3ZbV5ipoQxPiy+lAJOvzs+O4D9CZZZMj6/938q66whPryN+rWgTRM+QDcn3iOW9T0kgI+iVacLPo9I5ew8UC8+6et7AyJ1QT6OA+CXxXhEPsgQlnh1j0U+dBLLj4K0UD7IXP7HMJNWPqh8J0i4oFM+BIeorPv1Nj6WXdJrGl5MPtPy0zA98kE+M6xaHN0+RT56l9ORCNpcPgy39cTyFDc+rST2izZuUz6S6I5LAupVPrUTGZ6e/GI+LAbQr1PeaT6tdAG7+y5pPsSigF9T/Wc+bnnrNc/AbT7Bh7iamo9xPqywQ1OgsHM+lpj1uVfvdz5xfg6RJ5l2Pv51xhtsL3Y+neNd/ixCfT5IWNSDMduBPpv5hvDAWoA+T48rDrTlgz4her0OXgWFPpkXT1u74oQ+i7G0hoIDij57I1jIJr6NPnham7at1I0+Rjb7mcYxjD5f5hbbvICPPgQF9Z6svo8+0FRrNmrujz7LPtOCeH+MPv76z2ZrQok+m9Tc0cvGgj7fksM2qcCDPsgm5/sToXg+YjXWeiQ6bT4PVIkkksdqPnltgw5XpWk+zoQetEJZZT6m1NI2rixsPtD2Cj8zxF8++NgVsmMEVz6of9SiyHFkPm4Z8/Vf2lY+nAoW2wS7XT6p4KyJNndjPsZ/RXfxsmY+NZvSTWttaz7LGxSWxLBgPp8PFgmDcVk+HGFOAwSnOz7u1c/bjINdPppWHUsP+Fw+AcM2jx/tYD4co1xrEfVlPn493QOE91Y+1er/5jGTUj79iru8ypNgPtwgUD0MoyE+3JjKgQNdXD6UGE2boRFdPqhxGhnxVWw+q0y2h3o5aT7z6YTlOKpYPtuIzvK+gmM+FY9pgB4ZYD4kJXXds51fPtVJMsv+v1Y+to5JfNNIQT4481Zxj0laPrQrgxLIFmI+4vGNj0rVYD7TtOM5DAhDPrxbMvinJSA+GNnc7bChTz7A4ozDAPFgPlkocmV0QkQ+WewXoBgxOT6Q9MDrxZRIPvwF3orj9Es+82JJHC8/Rz5NRggNtoBUPlqE7m1PhE0+J6QOVzpCVT6ogR0G0H81PthjcMXWoSI+iEwtf+GeKD5ts+eSI+U0PjBJK64ezTU+KhyzRg3oUj6Uf0g1LbgiPkDZxyG8BPw9GNjBqTa0IT5w05jW0FUpPvv+UiWM30s+sGOgDKELIz5A9eEOHBsrPvBvJDeuNyA+kA6WyMQjID6PoBiRzB1HPnS+2nYM/1c+8FLT+FebPD6s3qGE7BP7PTTfIe88fRw+mIzrx0oYSD4E1GEzyNFAPpuj3oi++TI+WGmR9CHaSD4G1rfBWjAyPn/G3yei508+Vjpk2y3zNT7DW/Q45npkPhmsXpYlhTE+Lve0nL1iMz7Z4G0FlqVUPjxZpmp6wVU+Xnxl5bH6WD6WaxWKJxpiPpjjVgd7KS0+vAlIFcCoVD75dKuoQvZKPoXlnbPPZVE+bL5L0PxKOj4EQUFrGZ1GPpSlKclqJk0+dKB2Ns6OHT5kDb/rSWzhPfrttyHIUyw+NOe0PJ9YHz6ov1UxZT9WPhqJl/XcMiA+LwohCIWsUT6tjAbLxB9iPuvHkTAZwlQ+qgzffspeWz5Fh5AyotRWPntumezVNWI+3zdyvZ0jWD60Pvs3brBiPhb3uCo19Vg+Bvyn0exAZj6HywyIvT1UPkwAPFMVVVY+ym6vM/MLaT5lps5lOGhnPrOiiEFKQmg+6y38jZBeZD7yMp6kYNtnPtJNfKl3c2k+J+t4zYRJaz44xqKSTsZwPk9T4StyJG8+bZbpLbnrcT7oA+kKcshzPs+VEWB/YXI+ym0jb1IHdj6SJoY1sO5tPkpiPvzDMno+uyEND8zQcz5i16GAJpR5PjrJj2/wJHo+0WgmZjzdej5d+V0pMCd/Pt+9az4WoXk+uiMILKIddj6bdJ1vR1R0PjmiWRvLB3c+gAxg9iEKej4893mRlf51PkNWrbdt4Ho+Z7E6D4JKdj5N5ie2I3F1Pi5u7S2fFHo+sm/goYqZcz4aLeXny9Z3PpE5UswYRXQ+mpVeXat+cz6C+WDnaqBuPhmkcwmxEHI+DUHsOJlKcz6kPHZQ/mNzPr9Yri/uWHE+wjs1kSVfcz6gofFPaElyPn+Wm6Tu3HA+aM1j6WVfaj69msG2tgVuPopo3JHzVGs+P9AmjokTaz4JVJKCg19oPjL7nmCczGg+jxouWYzFZz6Q0geJ83hpPk0JaCLJ8mU+W32rUzn/XD5PPy/np85hPsBlcCNMwmI+9Haau5goWz6ZLjNvHhtYPnwUBS9ju1U+m5P6lf9lUT607GTJ7tNUPhNsWAPtqis+uLzerpBoND5K/X36GfNGPoMInx+GkEU+/KFNBDmPEj7NhdTtRIxBPoeWVSBBVU4+gWTJ5S6FSD5edFFGPuE2PsTZDzbh9Ss+PvZ3uukiUT5VkDj6hZlLPqhNzCZnWBU+UI70N/gAAz4Eau8Ae/P3PchrJI0lEAw+fLhUehlzGT7UZDjqdPJVPh1ONwxDkzA+AkWJdu+XPD40cvWhlPvaPaRgYakeofA9kM7uX7yQ+j1MU/KFeCAYPkwedCPTlEQ+PjXgBY3vOT7RCq2b0jREPhi28mGyfEU+hCoGZ7VcFT4ZhTlr68s5PnIc7n32ZkI+7skE9TS2Mj6g58Sf29PUPTBBvVLAJAs+ANOV6kHvJD5arHSunl5TPhQSSdPmHSU+NHrlq5OkCj6ipw2qF1A7PhJX6isER1U+hthJWlqmTT7qjbm+wOtJPuw7HHVRBhM+GlcIrOuaMz6WuI/42Ls6PiwW5E1dszo+jRPqQcw7Nz7MkE0099YSPimnIb8Nwyk+VOZP1XEuKz4UdFnVAJwoPlAUeRk8CBM+1MW2evxv9D3scZh9kwkjPhTCPRPnITs+FEKs7nw+OD5k83XEC8NAPlwADWBRgEA+GDtER3PkFT4AWrgXIvQAPtoTUqaz6SI+2D2akxh9Ij4EdGck6GwlPqDTEjQ2YCg+sHzwVfVWKz6E1RePslQiPqJ94Rk/flg+MB1XdwBqKj4A1bVABEcEPpHV0xXeTkw+CKFnbiLAMz7SOp2aeLNPPkinO3c5lyc+quVQPicwQz6GvHGFWf8sPiBehoo52P49UEVN2o0UMj6qopa8SJlePtjNzLXSCBQ+nA135C2tTj4Y6gKsID9jPs7tzfGOG00+jPWbTUAtZD5k8uXf7qQiPtx4rBnUEFw+DG8+3LV5Xj7o53IWzQQ2PkmcYZ9ngks+2AIqDtATHT6cvGoXzGJPPjDE/EBtSDE+cOgXEUkE2z0YNg+B8NY2PtAnMtkt7TQ+eKvKZj9DOj58ei8S8RIxPsSJ7zoORS4+imHfQK4SSD4Uo2GehVsJPn38Y7U+f20+4GcOYBs3Zz50SiHEFJU1PpRo5HM7Lzw+CsuXwRzYZT5HZ3GFretiPmw1YxnTmVs+lOuIofoSGz78ZvxRpztCPqRhKxigVPs9DSvWjeLXcT5EZ7s4zro3PvjNYgZwFSQ+nJ41rHqsMT7gLNL+Clc5PlCGjgG7jk0+GCfds7hCVz7M4bO1FXlTPlw9Q+sbVk8+i4cwWaZRij5w6liaawWIPjAeX1UjkE4+xMjWxBe1Tz50o1IlXA5OPgzCtzZJEYg+1CS+vHjacj6gwuXiRGFKPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5430\"},\"selection_policy\":{\"id\":\"5431\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.24, C/O= 1.61, [M/H]= -0.41, T= 874.23\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5423\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5425\"},\"major_label_policy\":{\"id\":\"5423\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5455\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5428\"},\"major_label_policy\":{\"id\":\"5426\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5426\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5431\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5425\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"oAd4YmwvVz6jA+jOtg9bPvs6jvJKMVk+iJmvPShoUj4fv2PsrqZMPsrNWo+Y9UE+U3JceNTsOz67b8tHA0QxPsWmxknWxEE+idxzEIuEND68UWM9ehY4PhcHDSbLrjo+bAyGag17SD469rqIhAtGPmPUTnxXumM+TXhSbSa7bT65vUPMItR1Po6Or7WtL3s+hX4sr5BXfz4FnjWRIsR+PoEDbmdCnXo+hddy3vI7cz59Ee1lm45uPiCmVt2s9WY+sqiJGmPnXD5vlgHHnv1TPmrQBzWg2k0+tlVh1YsIWD6Y/fmsTHlfPlMRltVjR1c+T2qwImx1ST7km7Bc275OPlKFGHOjFVE+A4UT5gLoUj5eHDDwO1pVPrbC9+nuglo+HlFjo6OEYj7F2dz4Pl5gPnUWzr1FH2Q+GoW+AdtYWj4aPe9TUAliPn6JGZ+a118+XqlQ4XykaD48U73Jb7RiPlYuwTGUKm4+0cB2aAgqhT5OES1PU4+QPuypYB0wHpA+gMHBUCw7iT5VoNrHs6uCPllpBxVyU3c+pGFdCEfObj7CZr8HMAtlPrw2Kj4+1F4+LvoNUd7TWD52WCRwEEFQPs6BP1hLTEI+Qm98GR1/MD5v63CWGfMvPqYXGO5Xgys+ZchDnlMRMT4E2fSCwqYlPsn8RZR0tyc+7HI6CoOZTT4fyDnGGSmAPtPwTy0v7os+8TYKupI6kj5j/KmUQryXPuVd50amUp0+KAxWB0HvnD4ejl0aTGeXPpdtf0fU05Q+l60s4KhSkD70kvEWLuSGPmASIUR1W3s+tHn7nKcebT6SXUtOc2VYPs5g+DZ2dVY+Iu2iOvExWj46VcN63FdgPrZlR6AjuWI+zsub7dsXXD6Qu5x4LxhrPg2TFVf5q3w+eVVuB6phhj7c/MWstWGGPp1JqMECy4Q+5PfsAy/Hgj7sxRphunqAPhwUD740UXs+YHOGz6iYdT4nVtirtaFxPoNr5Nd/XG0+jmHyDa1WZz6IugtfuyJiPi2RbT2hRFs+9BcGEjasUz55KSjwTrZQPh2gFZgSgU8+mI2PIvGDQj4FU3TyPJJJPkjja5CR3kY+uShIxTGXQT6NWxF0YiA1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5454\"},\"selection_policy\":{\"id\":\"5455\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"cca407c1-3387-4977-854f-542974fadebe\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"4eb026a3-d65d-43a6-a5f3-6833fc736bd3\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 324.47, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4617694f-6e75-4124-a9f4-3d74089310b5\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"67b46536-dc4e-4d08-92f9-92b1af245282\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"ticker\":null},\"id\":\"5850\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"eYip1CAHYD4unexDt7NiPhc3ZH8JSmE+2EtRgGu/WD7ELIsB6wBTPhJieH62bkc+eMMeT87zQT4SvCGi3tk1PuKp7nV5/UY+aEx2uGD7OT77YOFHnHc+PgjKRliu3UA+/uGv74qOTz72s8KshX5MPsyem6rlL2o+yn+xXNftcz729hhFqah9Pq4TxDsKlYI+cjsrgUp2hT4qzYCI8/+EPoLqz7ft+YE+9h+Vl0ybeT7msCJHWDN0PrlZ0YKco24+CiuOJGjkYj4qGuPzy+BZPlZLRBK0DlM+PcXCuwv3Xj5UQ88Tf+FkPhgFpF0cKl8+6/xdmCr5UD4NSWtU4WhUPlosnfUdoVY+Trnc4B8QWT7+XwTAB15cPm4Qlzo1iGE+VCeN5eK2aD5su35dvE5lPl8UiYwcJWo+VbIUjtjHYD7YC1RyrndnPngfwZVSwmQ+Ka+7TnMDcD40bUs1Qk1oPtf9HtrfJ3Q+mkUWr+ykjT4vVEx7hpOXPoAqquVa15Y+3fDRaU2HkT54K9P99JGJPtSryD+4X38+7yNQJuJidD7TcARvu9ZrPh8w4oXxNmQ+9y80AHipYD4MNKixtsJVPndyWx0b3Uc+tOpavwkINT5wzXD0jSs0Po/IHmwSBTE+LzapbyAwNT5L1Zxcm8sqPojuvXNM6S0+lAAAyMCsUz52WETNgSWGPlqEto4BQZM+AUMSKmtUmT5w2MfuQamgPlxMRMH316Q+/9pRk7vFpD7nybcWJ/CgPj5lFPCuYp0+K060SaC4lj4/aeakuX6PPhBQpdYCcII+V4rFcK9Fcz7vle3Uc8BfPswYgng7vVw+TkKH0UHeYD7CH8w7mr1lPtjrklL7p2g+arBsMLxmYj7FNPSp7HhyPlLzg28QC4Q+RpoJ2LaMjz7im6ffN7qPPoJpk9F7n40+DHIHsoHCij573xnwD12HPm1HQfv9R4M+uA9t/HR0fj7+s0bun+J4PmQp+mCIv3Q+WGWH+NhzcD4pbMvlfHZpPn6eRpOqCWM+HZPsY+wSWz6qI643dOdWPgYxDnyCsFU+TqNSXmbySD7V4GRnObdRPrKI3U6Shk8+EnT7EY4GSD4W4LxVX108Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"76IfDf+sZT62RP8cDmVpPoWwQu6I3Wc+JnwpEXv/YT6EYn9qB4tcPquL/PKcR1I+MO9IjyAQTT5FtmCmfT9CPq9KkTJFHVI+aNENmPmZRT5aPfAT3WlJPqZihjWqbEw+azmrdrhRWT5N5QVnFr5WPtCDJKeBo3M+KIIVcuM1fT4b01T2PUKFPjzLu3T/Roo+TrW424NGjj6yY/BYLbGNPvJEYoR40ok++k7xIaPOgj58Sq/6dyx+PgXRmbsUUnY+JKoMk8HlbD6rec5KTjVkPoKoLb37el4+ngu2I91laD7kj+zGWfJuPjwQYvVHk2Y+WzkORJQDWT4r9JuSpURePstmHRhm4GA+Z14sA7G0Yj4z6OqEyBdlPu6icKK+e2o+9PEHxwxocj6jtUP9buJwPiwfnL6V7nQ+G6wCkM+QbD7WcbDHxwBzPqYM6rxVxXA+s5zkw93/eT6YTPZYH+NzPlF1BtAT0X4+Ozox4JUJlD7Rpwk4qk2ePqipx0uXXJ0+ezVhnQVFlz6wiF43BHGRPuYZdHqSFoY+azLWr6DGfT4La3R5dmd0PpeYvibLIW4+jzqNw+PwZz6sp2oDGGBfPrNyPgxiPlI+cJhqD9a2QD59UoOFdZlAPpEMnlikKz0+jUW4BVfsQT7eVMX5puI2Pu4qw7CRujg+NJ9fKBBRXT5IHrtrhiGPPsJLHmYMwJo+hriWYf1FoT5OynSdfjCmPuSgc0gbGas+m/exF5ttqj7ZWDW8e+qkPqU+VExgV6M+xypklmy8nj6aaHq4KNmVPkIxf9xiuYo+V5NWpKcDfT4y85ecRfdoPig+5hjzaGc+Vkyn0v05az5RlJweqSRwPh1JOTwbu3I+Elf5Vyd5bD7fz7Rz8UB6PmYCIncaxoo+OZQp61bHlD6ng2BCKqOUPsn5C9sjEZM+Q6Q4DS0+kT6bC71ICIKOPgki3Kwjcok+WjfSB6M5hD6ofoG29YyAPjIyk0YbmHs+iN591130dT7Go9yrjydxPmZhyoac62k+P9/yD5DzYj6kiDN0UE9gPurAe/P/kF4+JBv/HL9dUj7Ty97FH+ZYPu8G0RqneVY+hfSW3d98UT4rr+ZlhllFPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5896\"},\"selection_policy\":{\"id\":\"5897\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"5Md+vPDOXT74KM4M2F5hPrjSu1A09l8+9g1fqoeCVj5qQ048DhtRPmE2kvch0kQ++oYBmdh7Pz7X3Tkh+u8yPjbYhLA2W0Q+LmOu0EiONj5aVvmDpmo6Ptx7rML4IT0+brpU8a7CSz7iu2qgJh1JPkO7UMUvlWc+iYJYVB8Vcj5ADbpCvxl7PjmK+QAdDYE+COjJQ2m1gz7SnFYVPUWDPhx8oVNTaoA+GH0e7Lk3dz6AlChwZTdyPpqxSWR12ms+/rM8XdLmYD7IYzS7VfxWPsTDOaLpyFA+oEEQ5+RqWz41yBKb0+BiPtGw9wbGYVw+2fNmbEi/Tj7Lzjq0xXJSPnYe39qQalQ+Kq08vC+bVj7a0fglO55ZPs64ruiagF8+etJiqrBOZj4kKiytDdRiPnhqvZGEBGc+ZYJfCjvfXD74IzTyNJNkPvB7nIBIN2I+lyuOmbENbD6yXDOYNjllPulaWgLlCHI+k/ZwmayRiz6qMcgM5zyWPrUM4e9Bi5U+l0SnJ+ZikD4nGLQKpLeHPg5C0pCr03w+csZgdaeEcj6ScRV3LEJpPvjB6qrVPWI+QN4NwHltXj7cTyWDBNlTPska0UspWkU+j/avR6OQMj7F4K1X+pMxPk1rJ9hvNC0+2CTqqoxFMj4Kzdq/KAUnPl77XpbGBSo+hijQpa3BUT5kwoMP6luEPqvRnIo1w5E+jzgQzvp+lz6Z8eAdYx+fPiwgkBhrmaM+c/7b/ayloz4WZgDRjSWgPiDLxBEqiZs+ihO+zWoglT5qfCbdRxGNPnATBK71yYA+gZdpbYFVcT5mA0M5gyJcPkyZHMZZJFk+C8l9KGGdXT4er+sRfaRjPvHRQZHFG2Y+2c7bC8FlYD7lWkPXm+xwPnDp0S9DtII+ZyjXtwGPjT7EnHAx9dONPqEDJhgC7os+q/HFvgI5iT7++3pzL/GFPi+S31EEDoI+sQz8MmB3fD5BR0KgK0B3PtQ1weHaYnM+tQoUgz23bj4OS+VL77NnPt5ROsgfq2E+raHyh2PrWD6AQINIoPhUPnqRfclk7FM+aKFLzCSaRj4Sy1MtX0lQPiyED7zT2kw+zrLvvdrYRT4o86GOSIM5Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"dseJg6fMZj7suB1U7blqPkD+SEV4LGk+F5si/OwdYz7eS7wv5HBePoShbzbnlVM+K+/mkQJGTz5ipdTmb7RDPoUzRpVmblM+Bcbxi4VQRz6rQuT1V3BLPsDudixcuU4+M83YdaY3Wz5X4THtxW5YPpT1yZnc8HQ+aX9uepsOfz72R4T3somGPrFUhq/szos+XASNjLIDkD4KlBrM42uPPlizkOgSYos+aaCsd2wAhD5xs9RoNRSAPhWl3Uqotnc+MCFeWlfjbj7c1CVniadlPgoYnBZjYGA+bE0PjvAraj6BhdSfgnlwPmA6uCBz92c+Wrw4phqdWj43N2aZYB1gPr1tfKWs+2E+eWR8FSnvYz5Fr/DRrndmPvVWsGimQ2w+YRyd5CWccz5H/mxVxh9yPiD0AbzhfnY+Pp3nmArpbj7GZcCHBHN0PmpefMfaCnI+EDbZRXj8ez7ZVIInJW11PiCM5VMHeIA+vuED6zUTlT5Wyo2mSaSfPnPHkEGwqJ4+weGL32xpmD5YEu6wLF6SPslO79GYXIc+6I/FYNukfz6r6mv1vbF1Pl8D24BzDXA+Znu6455jaT7uxfYY5aRgPoqeA/Xaf1M+ghJAS4nyQT7SyORTP+VBPnofqdh+lj8+OM4X6KBhQz7/WCZI4MU4PoOkcp9UrDo+QnePSiM8Xz4t2r0Uj3WQPnH+N2rYPZw+v72Xj7Uwoj7xKUz9DkqnPhTNJ/GnV6w+J9QnramNqz6qvOwBFbWlPrQLfLsiRKQ+tDItCVEqoD4FX1qc4Q+XPuJtIAVwX4w+LYayp9Xzfj53PG3qPcZqPuj9GPJjNWk+HqrvD49JbT6jzIyzNzFxPhDW4Rw2AXQ+oziKfCJ6bj6/qWVGQs17PkgM1LbnHIw+KM1CezHGlT42A3yZS5aVPrqswrfg6ZM+dGTZhuwCkj4Y71vF6O2PPkfXPVYdrIo+3riKbC04hT4GtYPdL16BPsIlzMXI9Hw+hj57DpgMdz5UtM941ghyPgau1lEnSms++NfvfVQHZD45+shrukZhPjswBtOOKmA+F5wC5t+JUz6W4e//+VNaPjIJOGSGz1c+J9Wch7mTUj6iJXTJkcZGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5918\"},\"selection_policy\":{\"id\":\"5919\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5897\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"5848\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5877\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5850\"},\"major_label_policy\":{\"id\":\"5848\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"UYiz9rBJPT6MaffT/I49Ph+cFKGL1D0+fC69B1caPj4/jyxxcGA+PpiSsNVZjjw+HRvH7am1Oj4/Iw/lpqBCPkusB9x+90c+8gnR9EiqRz69AMF9NmBUPoGterelWlI+70KFWD54RT4bxnt1vEwvPvUPx6dbfEU+FJn8qfQ0Qz5aZFC4/OVAPioR6RXU30I+0RvPUTMPRD4zlllK+BY9PiAS8kxemj8+29ps/r4SQT4Is9EMO1xCPvcEDs7aNjc+9tClr4cJKj4aDiSqV44FPozoYvxNhTY+J3JTRubRPD5zks1Z5lEyPk8KIEEPnE8+IrtXko85Kj7qF6gomy8vPgr86HbKGjI+YP3BteqhQz47FvdfdxwzPpZ2ymiPYjU+b+N33PmvNz7gyXaa+/ozPruFkrOhOTA+RK4AaDgVMT6o1U6C01wiPhOgukP4KSg+l9f5oFsKLj6j6FefJ/8xPhmsYdkLAzU+iLaC455lMD7NGgYr9XAnPn1XnAzl8TA+bxYrORezPT7VqRaHdUxBPmea7+ol0jI+THkBffCmBj4hhmcKFJEePs/nUkqCmjc+KO7CPCDkQz4LQFTjPlM5PqJY/9+YcDQ+SvUiZTX5Lj7SHzNoA+4kPhNwTWsZfhU+B2tFET7wyj1+JCXB6GsQProRui0OHCA+SjKxxngeKD5jpiMMkx4xPv7YurYTijc+wwgfhcQMPj6AWADpqoo+PuXo7ZZw/i0+ihRH10l4Bz76vB9FjbI1PsbEnrjVIjk+SheYncxaJT4/IzZXKUwmPqOo9H3gQCc+gKibvNMZQD4v3V+8n3gxPiuIwI7O1zg+4gfjWsaXID5tyEEP1+0pPhdjLfb8cP49z8VmgkGQOz5qddxW030nPm/aNYTNcUA+aL5nwWr6Pz4e/2RZf1I4PvjcEMJ+UD4+61CbvnxDQT7hujKiG5ZDPsSEsromcEs+hUBD2JkEPj454uJ+wstCPrO1wt2atz4+jAuC2qcTOD4vu6EgFR9APpPuf9yD8kU+3pKdDqInRD5madbxO4VHPiW1PU4uykc+SoeUt3fOTD5HZonX6gxGPgUrhAkROkg+KA/R1HTAOj5vfeLAVP49Pj6XjXWnYj4+WV4Rs9waUz5XJ9rXcwJQPtsoRD4SZko+D5K/CV2wSz5DF1tu7EdOPrh2hWft7VA+uDbAkS1yTD7H9YFvTQtRPhiCbIlpjFQ+foGB1vodWz4SaoAB5RlePsXEHE0EkmA+6pCL2/hPYT67kS2MzoxlPg9lzcZ2SGY+54kZUJM+aT7V6YK/e5dpPl7Z0WDW42k+5eyK68fObD6nUEiGAp5wPoU8KtKihnM+DmNxlkbHcz6k3sdCOGZ3PmWdrR2Ga3g+kQWid7wTeD7kIiB517Z7Prz1WPt4HX0+Sz4/mlo0fj61k374ehOAPm1BDQZ19YA+OnkxQ87XgT60Uildd82CPsDP9t+w+YI+KAnF/HFkhD4+NEaE2NCEPmk6WySTb4U+NR9zinluhT4KXuPpW5SEPk11hEtd14I+vjCktdTGfD6Ja5hHnYN0Pmm7ooiluXA+5JNkLajVZT7EciW0xbthPp/zhlHCRFY+jNEKQ7+GUD5uPN/HUzNWPp4DWpYSfVg+5v0P8olnWD4OvyqReV1XPlB8pOcERVk+UX1OuuI6Vj4v/rxwpsRRPuH5Sl536kw+5NjlB11FTT5R1uybC9hQPpd32NwcR04+IKMEcwgSVD6oboJIxtdWPvB0W8dh7F0+LsPiN1Z8YT700gZrpKpmPnBdsH5XDWs+BBQkGCVwbz65F0VUlg10PuMMKN85Wng+IiGzl6brfT5ROZGTuPJ+PuqhYmQQRoE+iEs2bNPCgz6iQpdUHyGGPnofZJE8dok+LXg6+YbZiz5sm5zJZeWMPhxpPx63+o8+hiuM9v5/kT6/y9ZH4DuSPgrSdr653ZM+BK++XdEclT4CF6GCtF+WPoY3GyJJTZY+7bQIsURulj4cuyhRmJaWPtNON5w4rpM+cn2WMuV4kz5cx+ZCn/2RPqdFgyhG/5A+u48mwmubjz40pG5qu2WLPvHEd1ce94g+EbC5uU51hj6vQQfw2viEPlmZ8MGOLoI+gROkSWh8ez4MmlpZo/dzPiqhY1u+p2c+r4v9XsipUT6xGPJHD7k9Piko08QDGTw+TaPpOWCJMz7n9XhOwrolPi8jvaPYRCQ+AYkYi9vJIj62VPlaArwcPmqihlGNMjs+BeOI5hTPNT50KjiB31kwPvAbhb/jpSU+6OeirT+QLj7j4n4uO8szPnyj86ycqBE+stmiaMMYFz6YWzgalZkcPlFzEeGaFSE+s7ShXKFSIT4VDsQDJ5AhPlzjtVEsziE+ozQfL6EMIj6yKN7sC/gTPis7Ia3eCzw+/VFTbxmeQz602KQr90ZJPonepxbaR1A+cU7srBEoTT4Q0B1HattXPlFiI1KODlQ+WS0MuEZrUj7LISxHgnpWPhcqQGQI91I+vuqmi34ZUT5KMBU9QeVePu4G/TMI91U+zWGRwwjcWz4jjTFoawxdPj7TRKLCFGQ+sGRWUahFaz7pKSa38YVnPkgYnFxqo20+Gs0VO+accD4Gdc5BB7BtPudF1CuhZnM+64AvoOjpeD779V1VQ495PvK/TJRV6ns+S5PCFE5FgT7ehXuhcDuDPiOfrFT41YI+XfZlRU3LhD4KeHuw6Q6GPoycaYXK8Yc++9v6qp49iT6Y1KZuxauNPumk2mGvp44+IKt9DpRRjz4YkkI/UzuQPtwEnVPmi5A+gEL++72/jz4Qf9SVgkmOPpJgsSU+3Io+PEI9/QI6hz5MBX508MWDPi5RyrEaqHk+c370vbJrdj58K+9nw7JsPuR+UFlyO2o+H1guJeIqaT5KxASPD4pmPqsxSeotHWA+08bpyycvXD7CMeyiX/JlPjM5DzALtlg+GhWyyWUVYj7GajjdgClrPk6lLH1DnWc+BGxrJlTdaT4O4xYuSGFiPjtJaLd+3l0+f2eirD28Rj7dkUBX//ZbPkrZlJ23BWM+sjHvQOGXYj5hI1hU44BmPuF+W2U7umY+aUKFPDYYZj7sFlw+UG1iPmI9BrAvB1Y+cEMGnjoLYD4X0U2oKJhbPp088meq2GE+J/iQoIpBaD5/xg5lSLpiPn1rjpjq22Q+B3/liLnfYj4X4RAHl3FhPtJcSy9Lzlg+xuSxhujTSj5WE4B0xQ9dPlPjlMkdP2M+1dna76kEYz7K9hGMHLRaPo9WoGaAqlY+n8bP2tYrVz7lAzTydrViPo+50qN9ylE+uPtI0U2VRz4KeBaQKKBLPsnagql2Ykg+8Bg6N4P8VT7jTQWygZhIPhHmm3RNn08+5/iviSSWVT7nTv/60tFIPpeuZTeGgVA+thP7sERaPD5pdvdHayQ5PjBuiHj5fkc+zJh5iV0BUj4gh7qkSIpZPnOeUx/qbEU+LxfsLGzsUT6CgF27ectUPgYh8EXogUo+W4ActH6HTj6hx1cr2+pZPgxO9CbnkEU+QXrNMqm/Sz7uJDmhRf1QPnfCzMybnFU+o+lJKiSNSD4yI6UjSe8mPgohzYi8t1w+dc8ZE8feDj6IKB8tG3cpPooMC450rDU+2FgewKlsUD5+wSA9t1FbPvZM2EKIUFY+unAQER7zTD6r+qu9XApjPuzMPB+rKU0+XjR2mBoBUz6uAtXwHrtaPndWCxq0xWA+d7E0ry3sXT7zwzR5XH5jPmEkn0WT9V4+db9alomEXz5GkdD7X2w7PvGrhVawXlM+q8ALKguYUT4Gy1ABmWVIPgsNGX7sHlQ+g6TLWgxSOz7oJ67zMMpMPoaVoMsLvj0+XaTyoSjOUz6i1IeHGY1WPuO+zEBp+S4+OnMn5lzzUj5f3Ti5wMxdPrDHyoa/8Vo+zhka563gXz6idl4IcDZdPs+GDKax/WE+3MtmYS9NXT7ScLKyC8JkPohDSdRtimA+wtkxCIlyaz4kbzJn/whWPrSaJ8NPXGA+DR6nFtkDaz5h2USZa79rPvhBjpM+5ms+BWHdgVFvaz5ABHXZMC5yPsnNCgFMsWw+F9Io7k7ZcD42sAaVZtlyPnn9hCK0QXA+WkYwcE6IcT4jW9tIfnx2Pls8eVRgrXM+LFj1nNrZdT6lNV9UyxtzPszDfHvBYnk+1+vHacTicz6keyWD89N6PiEKSYYMjno+s+7itEVveT5pFlbLMU99PpWpJlGcpHk+RYRES0Jgej58ECKH3Zh4Pt9/kU40nnk+WUCToASNej6Ex2wngr94Pmwg/KKz0Xs+kaNy7AUAeD6zxv+7yd14Psx8/oEQyno+IYNr5eQKeT6qxHZbMfN3Pn1ueYWm7nU+iKKpdwTndD6u9dTqHodzPin/zrdV7HQ+R5y0Y6WzdD7j2nDmJnZ1Plvi/4kZFnM+lvr1l7IJdD7B3pzpTjNzPlrRAb7olnE+Hd1ekannbz5R93PbnOtuPkH4WVlYRWk+83g2quDvaz40GPtT+pNoPoPRG3WVmGs+kZX/hnpQaT7om5abUr1rPrJLtvlmuWY+1mPMYx4gXz7bbMpwlwtlPgKo07LrH2Q+oQ8IdKe/Yj5VozUVkbNiPiP7Olm44lQ+Hhixu3JPUj5uGoems5lUPj0HMajuxjs+qU9/3AVDQz4xjWWDR6pIPkDIZ5YuGU4+a4MN0QKoUj7zGo9sW5dPPlxTdj/i5FE+aHu9LBILTj46c/TvyWNMPg2ZMO0rDUQ+0a5Z5ggdTD7U83lttA5OPpmdKYDA+0c+Sq8doBXPND4CHUurK8IwPnAAB1Lwv0M+KFKlAwHqQj7xqYbXwalDPsDWL5N8akQ+1u32bCUsRT4mkLJrKbkUPr9X0tE6li8+/kub7FJ2Oj4O4XG2autDPoIiL+79rEA+eyULaiGVPz7yOIPprM09PiQfyyRG+Us+KRZEbA0VNj7aER2+tgNEPkXHOf2xCE0+1MDNyquOQT4PdspD1xUoPiPzOh1GZSc+Ff7o7pI8Oj6d+rObMHBQPrx6WlyCYCc+XRcaNw17Jz4O+mxenpUnPoN4eSrbEzo+m3bYB2Y4UT4dmQjRMnw1PuvCTerunTw+ACyLQVLkQT4kxPzq/w5CPntX9eKB7UE+pnjHwsTLQT7KZK+U0qlBPj9mBj6rh0E+Bn+Jok4kUj6CXnZQQUQtPpJzGCblXhk+wM/usixuQD6Pi+9DSMtGPupArXM7AkQ+woaMUnoMRT6hOQ77xvBBPj05Aylioj0+wSc21VEmQz4FCgu6o4BHPnnTeltdQUI+W2Ec0uxvOD4U12R615woPuZ26Fn6RL49hsj5hc5hOj6ZvgxLb2JKPorfmCHL0VM+eMJspn1aUT48XmOYcBg6Pl4uJHM9ekE+kO7m37s8UD56LTZY/MRMPiPCbdYSDEk+nrEys61ORT64g0cl5IxBPttIubMPtlA+uw9sGlc1UD40mpXgjwxbPlNwPS6KqkM+4ADUmH/JVj7Y+eB5ZhNZPtT+XAjoX1s+W6ljcfWuXT6GuKMRkMAAPlfzkFJ1Fks+jvDP5mKfWj711WhTIzBTPjpeiZqxcEc+rk4kiOIkUT7bGsmDpZdWPnwrOzWPEFw+/dq+icxFQj55g3/9ppxUPpjUk2oiNVE+/sO+qVSTSz5kU8z0SG1kPutfGfVpoWE+k+3koJCkXT52/S7nffVOPnMLdHi8Tl8+kk/9+bY3Uz5ruRw/g7dZPj8l1300uU4+RlBqIn/XMz5GFt7YnUpJPhaU2nyJSFU+05E9t9fLbD7zeECdopJTPrOZJ8WO7FM+nM0bDdhGVD76haH/rH1QPiE/wjFUYEk+7sbMO62bIz7ZPN2zueFjPj0/RiibT3M+BfQO/B1QZD5rK95mlcRyPkS7GfAZa3s+74sfPgp7cz4T2UQ4KDqAPvwpGH22fYI+3UfYPfbDhD7WDxy+4wyHPsIKj+yfaYE+KM6ldGB/dz4Zsw4hMDxoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5852\"},\"selection_policy\":{\"id\":\"5853\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=324.47, p-value=0.00e+00]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5919\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5847\"},\"major_label_policy\":{\"id\":\"5845\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5845\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tJXk8A/aYj7y8HWwYgxmPs5z0zbJk2Q+EiJS0TBfXj6kRwU2+cVXPrS8ODL4/k0+VNkzb/eBRz5OlHH3bCw9PqCfiO0BnE0+znsk+tRLQT7sdvCb1VJEPleW5kYspUY+NZVB936MVD6kn7OerH5SPpspOT66XXA++YBjZ92ReD5Lp3BMSQuCPnXvP9gEboY+YPhxLmfeiT5umLhwkFiJProXGR4z5oU+9d67bUmcfz6x/egg6C95PvE+gX7x0XI+l2rN2xTlZz5gA2Ai2pJgPuz5uOfXxFg+HrfLgLHwYz6c6V1t7OlpPmQJGhIrFGM+Ixs2bl/+VD6cnoNzw1ZZPvj86xL1MFw+Drua88A8Xz4ZjHYyZqNhPq7Zg+75AWY+noXOOX7Dbj5ZEwMszYlrPq5UcAKSAHE+OK8LD1SsZj7Cd9oAn7xuPmKcygd/Jms+7iVQiagBdT6ZAc454ARwPpS5EtV5fHk+hC7eGwZukT4A/qpZmPCaPhTquBj5GZo+LJOZgylmlD5sHki2/jmOPug3LE0344I+LSsTa8EUeT66UXsYailxPltkUFZeLGk+Q7Xg4S1NZD7cbYlaZ5FaPu4r7JrvLE4+yg0Y79o6Oz41ubt/PK86PpBqXmJbGDc+pOCMPWeEPD7C3wlUOiQyPhkRUfWb1zM+5M8veOh+WD5fu38chKOKPg5oavqGAJc+B9qf9jLwnT5fUR5G4GyjPqD224SJ+Kc+TemBVauZpz5gkXZpUe2iPqI4L+JbBKE+eTwMcIa6mj6dznbFQsySPqlAktmylIY+1w6OiqskeD4VX4fDv2tkPkelk2rI42I+UkcX0h8MZj4ypII8dgNrPgm/guUYD28+vgMzxPFvZz5SgtQO71x2Ptz6UnOVaIc+rjCXK9lGkj7MKBoZI0CSPkXX6uFw8JA+SV085m2fjj6LdWscjO+KPru0DtQQXYY+m18Ew+65gT6n2KStRf58PsutxtPRK3g+8KECaBs0cz7bWcIezuJtPvJ/CI2jemY+Z5T0IIM+YD55mgqQCsNbPvj4xDfBIFo+y2woTPLWTj5U1qGWrE5VPqTlHyF4HlM+jq6U5iaATT6bj2IIG8RBPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5876\"},\"selection_policy\":{\"id\":\"5877\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"5847\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.24, C/O= 1.61, [M/H]= -0.41, T= 874.23, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5853\",\"type\":\"UnionRenderers\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"67b46536-dc4e-4d08-92f9-92b1af245282\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"4617694f-6e75-4124-a9f4-3d74089310b5\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:06.498649Z",
     "iopub.status.busy": "2023-11-28T21:18:06.498095Z",
     "iopub.status.idle": "2023-11-28T21:18:06.502059Z",
     "shell.execute_reply": "2023-11-28T21:18:06.502450Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 324.47, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(324.47, '0.00e+00')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:06.512135Z",
     "iopub.status.busy": "2023-11-28T21:18:06.511323Z",
     "iopub.status.idle": "2023-11-28T21:18:06.514081Z",
     "shell.execute_reply": "2023-11-28T21:18:06.514454Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:06.518213Z",
     "iopub.status.busy": "2023-11-28T21:18:06.517597Z",
     "iopub.status.idle": "2023-11-28T21:18:06.519874Z",
     "shell.execute_reply": "2023-11-28T21:18:06.520281Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:06.524353Z",
     "iopub.status.busy": "2023-11-28T21:18:06.523666Z",
     "iopub.status.idle": "2023-11-28T21:18:56.555574Z",
     "shell.execute_reply": "2023-11-28T21:18:56.555939Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:56.561304Z",
     "iopub.status.busy": "2023-11-28T21:18:56.560646Z",
     "iopub.status.idle": "2023-11-28T21:18:56.579173Z",
     "shell.execute_reply": "2023-11-28T21:18:56.579601Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1024.402308</td>\n",
       "      <td>0.019081</td>\n",
       "      <td>5.188480</td>\n",
       "      <td>874.510777</td>\n",
       "      <td>1.594826</td>\n",
       "      <td>-0.389410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>2029.642888</td>\n",
       "      <td>0.117496</td>\n",
       "      <td>0.094855</td>\n",
       "      <td>16.004535</td>\n",
       "      <td>0.138128</td>\n",
       "      <td>0.029632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>93.640000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.007619</td>\n",
       "      <td>838.893087</td>\n",
       "      <td>1.371077</td>\n",
       "      <td>-0.442274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>280.520000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.121747</td>\n",
       "      <td>862.314443</td>\n",
       "      <td>1.481358</td>\n",
       "      <td>-0.410239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>478.960000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.185026</td>\n",
       "      <td>875.620667</td>\n",
       "      <td>1.586100</td>\n",
       "      <td>-0.393244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>899.835000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.264198</td>\n",
       "      <td>884.513214</td>\n",
       "      <td>1.667339</td>\n",
       "      <td>-0.372938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>12641.190000</td>\n",
       "      <td>0.734000</td>\n",
       "      <td>5.391366</td>\n",
       "      <td>914.803955</td>\n",
       "      <td>1.987939</td>\n",
       "      <td>-0.315950</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius    chi_square    p_value    gravity  temperature  c_o_ratio  \\\n",
       "count  39.000000     39.000000  39.000000  39.000000    39.000000  39.000000   \n",
       "mean    0.790000   1024.402308   0.019081   5.188480   874.510777   1.594826   \n",
       "std     0.120018   2029.642888   0.117496   0.094855    16.004535   0.138128   \n",
       "min     0.590000     93.640000   0.000000   5.007619   838.893087   1.371077   \n",
       "25%     0.690000    280.520000   0.000000   5.121747   862.314443   1.481358   \n",
       "50%     0.790000    478.960000   0.000000   5.185026   875.620667   1.586100   \n",
       "75%     0.890000    899.835000   0.000000   5.264198   884.513214   1.667339   \n",
       "max     0.990000  12641.190000   0.734000   5.391366   914.803955   1.987939   \n",
       "\n",
       "       metallicity  \n",
       "count    39.000000  \n",
       "mean     -0.389410  \n",
       "std       0.029632  \n",
       "min      -0.442274  \n",
       "25%      -0.410239  \n",
       "50%      -0.393244  \n",
       "75%      -0.372938  \n",
       "max      -0.315950  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:56.589308Z",
     "iopub.status.busy": "2023-11-28T21:18:56.588658Z",
     "iopub.status.idle": "2023-11-28T21:18:56.590957Z",
     "shell.execute_reply": "2023-11-28T21:18:56.591352Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>2817.17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.259919</td>\n",
       "      <td>877.618225</td>\n",
       "      <td>1.581851</td>\n",
       "      <td>-0.365450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>405.75</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.279188</td>\n",
       "      <td>868.166524</td>\n",
       "      <td>1.811233</td>\n",
       "      <td>-0.410055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>253.89</td>\n",
       "      <td>9.550000e-15</td>\n",
       "      <td>5.120636</td>\n",
       "      <td>883.089233</td>\n",
       "      <td>1.471478</td>\n",
       "      <td>-0.315950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>269.43</td>\n",
       "      <td>1.110000e-16</td>\n",
       "      <td>5.279379</td>\n",
       "      <td>890.576864</td>\n",
       "      <td>1.671855</td>\n",
       "      <td>-0.375062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>298.49</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.268706</td>\n",
       "      <td>884.244141</td>\n",
       "      <td>1.648558</td>\n",
       "      <td>-0.324874</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000     2817.17  0.000000e+00  5.259919   877.618225   1.581851   \n",
       "1  0.600526      405.75  0.000000e+00  5.279188   868.166524   1.811233   \n",
       "2  0.611053      253.89  9.550000e-15  5.120636   883.089233   1.471478   \n",
       "3  0.621579      269.43  1.110000e-16  5.279379   890.576864   1.671855   \n",
       "4  0.632105      298.49  0.000000e+00  5.268706   884.244141   1.648558   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.365450  \n",
       "1    -0.410055  \n",
       "2    -0.315950  \n",
       "3    -0.375062  \n",
       "4    -0.324874  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T21:18:56.673736Z",
     "iopub.status.busy": "2023-11-28T21:18:56.635976Z",
     "iopub.status.idle": "2023-11-28T21:18:56.676811Z",
     "shell.execute_reply": "2023-11-28T21:18:56.677400Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"fedf8741-de34-468d-a683-47e9ae1459fd\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"c82862a9-f90d-4fe5-aa89-74b2ab4b1e55\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6345\"},\"major_label_policy\":{\"id\":\"6343\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"KrZqztOV5j8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[1]},\"y\":{\"__ndarray__\":\"KVyPwvVoV0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[1]}},\"selected\":{\"id\":\"6347\"},\"selection_policy\":{\"id\":\"6348\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"6342\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6345\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"6340\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6348\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6342\"},\"major_label_policy\":{\"id\":\"6340\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"6343\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"c82862a9-f90d-4fe5-aa89-74b2ab4b1e55\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"fedf8741-de34-468d-a683-47e9ae1459fd\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
