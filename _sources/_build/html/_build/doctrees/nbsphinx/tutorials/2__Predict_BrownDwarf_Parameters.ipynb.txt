{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:40.196414Z",
     "iopub.status.busy": "2023-11-28T20:46:40.195686Z",
     "iopub.status.idle": "2023-11-28T20:46:47.011487Z",
     "shell.execute_reply": "2023-11-28T20:46:47.011904Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:47.017438Z",
     "iopub.status.busy": "2023-11-28T20:46:47.016775Z",
     "iopub.status.idle": "2023-11-28T20:46:47.019022Z",
     "shell.execute_reply": "2023-11-28T20:46:47.019420Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:47.023606Z",
     "iopub.status.busy": "2023-11-28T20:46:47.022916Z",
     "iopub.status.idle": "2023-11-28T20:46:50.082453Z",
     "shell.execute_reply": "2023-11-28T20:46:50.082988Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.091410Z",
     "iopub.status.busy": "2023-11-28T20:46:50.090783Z",
     "iopub.status.idle": "2023-11-28T20:46:50.093196Z",
     "shell.execute_reply": "2023-11-28T20:46:50.093605Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.097068Z",
     "iopub.status.busy": "2023-11-28T20:46:50.096505Z",
     "iopub.status.idle": "2023-11-28T20:46:50.102115Z",
     "shell.execute_reply": "2023-11-28T20:46:50.102501Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.105793Z",
     "iopub.status.busy": "2023-11-28T20:46:50.105291Z",
     "iopub.status.idle": "2023-11-28T20:46:50.549121Z",
     "shell.execute_reply": "2023-11-28T20:46:50.549484Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.553935Z",
     "iopub.status.busy": "2023-11-28T20:46:50.553233Z",
     "iopub.status.idle": "2023-11-28T20:46:50.556476Z",
     "shell.execute_reply": "2023-11-28T20:46:50.556913Z"
    }
   },
   "outputs": [],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.561277Z",
     "iopub.status.busy": "2023-11-28T20:46:50.560405Z",
     "iopub.status.idle": "2023-11-28T20:46:50.562628Z",
     "shell.execute_reply": "2023-11-28T20:46:50.563042Z"
    }
   },
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.566877Z",
     "iopub.status.busy": "2023-11-28T20:46:50.566291Z",
     "iopub.status.idle": "2023-11-28T20:46:50.568091Z",
     "shell.execute_reply": "2023-11-28T20:46:50.568620Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.572658Z",
     "iopub.status.busy": "2023-11-28T20:46:50.572077Z",
     "iopub.status.idle": "2023-11-28T20:46:50.631559Z",
     "shell.execute_reply": "2023-11-28T20:46:50.631952Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"000a9654-52b3-476e-949f-b3d7d024e42f\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"9f4d9c6d-9661-4d78-a779-e319ba56c782\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1041\"},\"major_label_policy\":{\"id\":\"1040\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"7uwrD9LT5D/I0RxZ+eXkP6g5eZEJ+OQ/jSRBuAIK5T/UYvAw7RvlP04MycnELeU/KQmJtI0/5T97TQ8KSlHlP1vNOuP7YuU/4XzqWKV05T8MXB5rRoblPwlTlEvjl+U/2GFM+nup5T97iEZ3ELvlPzOjHw2nzOU/A7LXuz/e5T/TwI9q2O/lP+er5GN3AeY/P3PWpxwT5j/bFmU2yCTmP9KKbyh8NuY/Jc/1fThI5j8WwJSBA1rmP3l1jgHZa+Y/e9egL7195j8d5ssLsI/mP3SV7q6zoeY/guUIGciz5j9cyvli78XmPwNEwYwp2OY/jUY+r3jq5j8Rxk/j3vzmP3nOFhBaD+c/8UdRZ+4h5z97Mv/omzTnP/6ZQXxgR+c/qmbWUkBa5z+TjJyFPW3nP44j1uJTgOc/xxNBnIeT5z9VUbzK2qbnPyHoaFVLuuc/LNhGPNnN5z+iCRSxiOHnP26I8ZpX9ec/pki+EkgJ6D9JSnoYWh3oP1iNJayNMeg/0xHAzeJF6D/ovwevXVroP2ivPh76bug/gsgiTbyD6D8eF9UiopjoPz2bVZ+rreg/DD1i9NzC6D9eFD3wMdjoP18JpMSu7eg/+ie4WFED6T9FZFjFGxnpPyrKpfELL+k/vk1/9iNF6T8D7+TTY1vpP/et1onLcek/nIpUGFuI6T/xhF5/Ep/pPwyR09fztek/2LrUCP3M6T9UAmISLuTpP5ZbWg2J++k/oMa9+Q0T6j9ZT62+uirqP8P1KFyPQuo/CqLuA5Ba6j8BbECEuHLqP79H/fUKi+o/LUFGQIWj6j95QNmUK7zqP15pGan31Oo/IJijx+/t6j+T5Lm+DwfrP8xCO6dZIOs/zLIngc056z99QKAzaVPrP/Tfg9cubes/G53zUxyH6z/yd++oMaHrP5FkVu9wu+s/9mIoJ9rV6z/0iqceafDrP7nEkQciC+w/FygpsAAm7D89nStKCUHsP/s726M3XOw/avgW1o137D+J0t7gC5PsP0HWU6uvruw/qfdUTnvK7D+rQgOxbObsP1yrPeyFAu0/kElGzsIe7T9eEfxvJTvtP9z2PeqvV+0/xR1v8lt07T9fYizTL5HtP2To2EElru0/A5gycEDL7T8kfVpFf+jtP8iXUMHhBe4/7+cU5Gcj7j+BeciUD0HuP5ZASuzaXu4/F0m70cd87j8ah/pd2JruP3MSSl8Iue4/N9+I7lnX7j9R+dfyyvXuP9ZUFoVdFO8/sf1kjA8z7z/g88MI4VHvP2U3M/rRcO8/P8iyYOKP7z9XsmMjEK/vP8TpJFtdzu8/WYY41sXt7z/0T3CxogbwP9hHp658FvA/vD/eq1Ym8D+DwMqhRTbwP7wFEhQ/RvA/2NMOf01W8D9mZmZmZmbwP2a9GMqJdvA/2NglqreG8D+7uI0G8JbwP4Ehq1s9p/A/uk4jLZW38D9kQPZ698fwP3/2I0Vk2PA/DXGsi9vo8D8MsI9OXfnwP+53KAr0CfE/0T/BxYoa8T+XkA96NivxP13hXS7iO/E/Brth26JM8T+vlGWIY13xP8oyxLEubvE/V5V9VwR/8T/HgOz17o/xPzdsW5TZoPE/qFfKMsSx8T/7y+7Jw8LxP8AEbt3N0/E/hj3t8Nfk8T+9OseA7PXxP2X8+4wLB/I/Dr4wmSoY8j+aCBueXinyP7SOqiaIOvI/sp3vp8ZL8j+wrDQpBV3yPx+A1CZObvI/ARjPoKF/8j/ir8ka9ZDyP8NHxJRIovI/iGh0B7Gz8j/bxMn9DsXyPxGq1OyB1vI/1cqEX+rn8j8MsI9OXfnyP7RZ9bnaCvM/XANbJVgc8z92cRsN4C3zPx4bgXhdP/M/qU2c3O9Q8z/Du1zEd2LzP07udygKdPM/2iCTjJyF8z/XFwltOZfzP2JKJNHLqPM/0QX1LXO68z/O/GoOEMzzP8vz4O6s3fM/Oq+xS1Tv8z+paoKo+wD0PxgmUwWjEvQ/h+EjYkok9D/1nPS+8TX0P9YcIJijR/Q/Rdjw9EpZ9D8lWBzO/Gr0PwbYR6eufPQ/5ldzgGCO9D9VE0TdB6D0PzaTb7a5sfQ/FhObj2vD9D/3ksZoHdX0P9cS8kHP5vQ/Rs7Cnnb49D8nTu53KAr1PwfOGVHaG/U/donqrYEt9T/lRLsKKT/1P8bE5uPaUPU/NIC3QIJi9T+jO4idKXT1PxL3WPrQhfU/D+7O2m2X9T9+qZ83Fan1P3ugFRiyuvU/eJeL+E7M9T91jgHZ6931P3OFd7mI7/U//reSHRsB9j+J6q2BrRL2PxUdyeU/JPY/L4uJzcc19j+6vaQxWkf2P9QrZRniWPY/fNXKhF9q9j+WQ4ts53v2P8wolltajfY/dNL7xtee9j+qtwa2SrD2P+CcEaW9wfY/F4IclDDT9j/boswGmeT2Py7/If329fY/8x/Sb18H9z/Ut8zpshj3PycUIuAQKvc/CKwcWmQ79z94f7xXrUz3P+dSXFX2Xfc/Vyb8Uj9v9z9UNUHUfYD3P1JEhlW8kfc/3o5wWvCi9z/5FADjGbT3PxObj2tDxfc/LSEf9GzW9z/W4lMAjOf3P3+kiAyr+Pc/tqFinL8J+D972uGvyRr4P0ATYcPTK/g/Bkzg1t08+D9ZwARu3U34PztwzojSXvg/HSCYo8dv+D+NCwdCsoD4P4syG2SSkfg/ilkvhnKi+D+IgEOoUrP4PxXj/E0oxPg/MIFbd/PU+D/ZWl8ktOX4P4M0Y9F09vg/LA5nfjUH+T9kIxCv6xf5Pyp0XmOXKPk/fgBSmzg5+T/SjEXT2Un5PyYZOQt7Wvk/lxx3Sgdr+T8IILWJk3v5P3kj88gfjPk/eGLWi6Gc+T8F3V7SGK35PyGTjJyFvfk/PUm6ZvLN+T/nOo20VN75P5EsYAK37vk/yVnY0w7/+T+PwvUoXA/6P1YrE36pH/o/q8/VVuwv+j+Orz2zJED6P3GPpQ9dUPo/46qy74pg+j/iAWVTrnD6P+JYF7fRgPo/cOtunuqQ+j+MuWsJ+aD6P6mHaHQHsfo/U5EKYwvB+j/+mqxRD9H6P8UbmUf+4Po//mDguffw+j9UHXIz3AD7P6nZA63AEPs/jdE6qpog+z//BBcrajD7P3E486s5QPs/cqd0sP5P+z9yFva0w1/7PwHBHD1+b/s/HqfoSC5/+z87jbRU3o77P+auJeSDnvs/IAw89x6u+z9ZaVIKur37PyECDqFKzfs/d9Zuu9Dc+z/Oqs/VVuz7P7K61XPS+/s/JQaBlUML/D+YUSy3tBr8P5nYfFwbKvw/ml/NAYI5/D8pIsMq3kj8P0cgXtcvWPw/ZB75g4Fn/D8QWDm0yHb8P0vNHmgFhvw/hUIEHEKV/D9N845TdKT8PxakGYums/w/bZBJRs7C/D9SuB6F69H8Pzfg88MI4fw/qkNuhhvw/D8ep+hILv/8PyBGCI82Dv0/sCDNWDQd/T9A+5EiMiz9P14R/G8lO/0/fCdmvRhK/T8peXWOAVn9P9XKhF/qZ/0/n5PeN752/T/aIJOMnIX9P6Pp7GRwlP0/+u3rwDmj/T/gLZCg+LH9P8ZtNIC3wP0/rK3YX3bP/T8gKSLDKt79PyLgEKrU7P0/JJf/kH77/T+1iZP7HQr+P0Z8J2a9GP4/ZapgVFIn/j+E2JlC5zX+PzFCeLRxRP4/3qtWJvxS/j8aUdobfGH+P+QxA5Xxb/4/rhIsDmd+/j9381SH3Iz+P9API4RHm/4/tmeWBKip/j+cvwmFCLj+PxFTIolexv4/huY6jbTU/j/7eVORCuP+P/5IERlW8f4/j1N0JJf//j8gXtcv2A3/P0Ck374OHP8/YOrnTUUq/z8NbJVgcTj/P7vtQnOdRv8/aW/whclU/z+lLEMc62L/P3AlOzYCcf8/Oh4zUBl//z+TUtDtJY3/P+yGbYsym/8/RbsKKT+p/z8sK01KQbf/PxObj2tDxf8/iEZ3EDvT/z+MLQQ5KOH/P5AUkWEV7/8/lPsdigL9/z8TDyibcgUAQFwgQfFjDABAbM8sCVATAEB8fhghPBoAQFPL1voiIQBAKxiV1AkoAEACZVOu8C4AQKBP5EnSNQBABthHp648AEBrYKsEi0MAQNHoDmJnSgBA/g5FgT5RAEArNXugFVgAQB75g4HnXgBAEr2MYrllAEDNHmgFhmwAQIiAQ6hScwBACoDxDBp6AECNf59x4YAAQA9/TdaohwBAWBzO/GqOAEBpVyHlJ5UAQHmSdM3kmwBAis3HtaGiAEBhpu1fWakAQDl/EwoRsABAEFg5tMi2AEB2bATidb0AQBXj/E0oxABAe/fHe9XKAECoqWVrfdEAQA6+MJkq2ABAAg6hSs3eAED2XRH8b+UAQOutga0S7ABAppvEILDyAEBhiQeUTfkAQOQUHcnl/wBAZqAy/n0GAUDpK0gzFg0BQDJVMCqpEwFAQxzr4jYaAUBU46WbxCABQGWqYFRSJwFAPQ/uztotAUAVdHtJYzQBQLR224XmOgFAGhcOhGRBAUC5GW7A50cBQOZXc4BgTgFATfilft5UAUB6Nqs+V1sBQG8Sg8DKYQFAY+5aQj5oAUAfaAWGrG4BQNrhr8kadQFAXfksz4N7AUDgEKrU7IEBQGMoJ9pViAFArd12obmOAUC+MJkqGJUBQM+Du7N2mwFA4NbdPNWhAUC5x9KHLqgBQFhWmpSCrgFA9+Rhoda0AUCXcymuKrsBQP2fw3x5wQFAK2owDcPHAUBZNJ2dDM4BQE6c3O9Q1AFAQwQcQpXaAUA3bFuU2eABQPNxbagY5wFAdxVSflLtAUD6uDZUjPMBQH1cGyrG+QFAx53Swfr/AUDZfFwbKgYCQOpb5nRZDAJAw9hCkIMSAkCbVZ+rrRgCQDtwzojSHgJA24r9ZfckAkB6pSxDHCsCQKn7AKQ2MQJAD7QCQ1Y3AkAFqKllaz0CQDP+fcaFQwJA74/3qpVJAkDkg57Nqk8CQGiz6nO1VQJA6+I2GsBbAkBvEoPAymECQLnfoSjQZwJABK3AkNVtAkAWGLK61XMCQO8gdqbQeQJAxyk6kst/AkCgMv59xoUCQEDZlCu8iwJAqB3+mqyRAkAPYmcKnZcCQHam0HmNnQJApIgMq3ijAkCaCBueXqkCQJCIKZFErwJAhQg4hCq1AkBCJhk5C7sCQP5D+u3rwAJAgv+tZMfGAkDNWDSdncwCQBiyutVz0gJAYwtBDkrYAkB1ApoIG94CQIf58gLs4wJAYY4ev7fpAkA6I0p7g+8CQBO4dTdP9QJAs+pztRX7AkAbu0T11gADQIKLFTWYBgNA6lvmdFkMA0AZyol2FRIDQEc4LXjRFwNAdqbQeY0dA0BsskY9RCMDQGK+vAD7KANAH2gFhqwuA0AVdHtJYzQDQJm7lpAPOgNAVmXfFcE/A0DarPpcbUUDQF70FaQZSwNA4jsx68VQA0AtIR/0bFYDQHkGDf0TXANAxOv6BbthA0DWbrvQXGcDQCJUqdkDbQNANNdppKVyA0BHWipvR3gDQFnd6jnpfQNAa2CrBIuDA0B+42vPLIkDQFcE/1vJjgNAaoe/JmuUA0BEqFKzB5oDQB3J5T+knwNAMEymCkalA0AJbTmX4qoDQBzw+WGEsANA9RCN7iC2A0AIlE25wrsDQOG04EVfwQNA9DehEAHHA0AGu2HboswDQBg+IqZE0gNAK8HicObXA0B2ptB5jd0DQMGLvoI04wNADXGsi9voA0BYVpqUgu4DQNydtdsu9ANAYOXQItv5A0AdjxmojP8DQNo4Yi0+BQRA0ETY8PQKBEDGUE60qxAEQPW+8bVnFgRAIy2VtyMcBECL/WX35CEEQCswZHWrJwRABcWPMXctBEDeWbvtQjMEQPBQFOgTOQRAO6qaIOo+BEC/ZU6XxUQEQHuDL0ymSgRAcQM+P4xQBECf5Xlwd1YEQAYq499nXARAptB5jV1iBEC4O2u3XWgEQAMJih9jbgRAhjjWxW10BEB8LH3ognoEQKqCUUmdgARA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1047\"},\"selection_policy\":{\"id\":\"1046\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1067\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1067\"},\"selection_policy\":{\"id\":\"1066\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1044\"},\"major_label_policy\":{\"id\":\"1043\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1041\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1043\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"1044\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1040\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"Selection\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"9f4d9c6d-9661-4d78-a779-e319ba56c782\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"000a9654-52b3-476e-949f-b3d7d024e42f\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.650994Z",
     "iopub.status.busy": "2023-11-28T20:46:50.650400Z",
     "iopub.status.idle": "2023-11-28T20:46:50.860977Z",
     "shell.execute_reply": "2023-11-28T20:46:50.861306Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.865349Z",
     "iopub.status.busy": "2023-11-28T20:46:50.864682Z",
     "iopub.status.idle": "2023-11-28T20:46:50.866952Z",
     "shell.execute_reply": "2023-11-28T20:46:50.867299Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.879400Z",
     "iopub.status.busy": "2023-11-28T20:46:50.878721Z",
     "iopub.status.idle": "2023-11-28T20:46:50.881254Z",
     "shell.execute_reply": "2023-11-28T20:46:50.881583Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:46:50.893088Z",
     "iopub.status.busy": "2023-11-28T20:46:50.885962Z",
     "iopub.status.idle": "2023-11-28T20:47:03.918164Z",
     "shell.execute_reply": "2023-11-28T20:47:03.918503Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.4176345030466715,\n",
      "    'gravity': 5.056915442148845,\n",
      "    'metallicity': -0.33240997611234585,\n",
      "    'temperature': 822.2474527994792}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    5.056915   1.417635  -0.332410  822.247453\n",
      "std     0.180882   0.305482   0.106007   39.487861\n",
      "min     4.624644   0.937398  -0.461986  746.070862\n",
      "25%     4.993532   1.216190  -0.408294  797.751602\n",
      "50%     5.068887   1.402813  -0.360700  818.086212\n",
      "75%     5.138581   1.577519  -0.306080  848.300629\n",
      "max     5.368104   2.200452  -0.002109  903.444824\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"08b073ed-8dc9-40b8-a003-6404023103f1\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"6105efae-40e7-4c96-9068-bc20950bbcd4\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"a4EbXZNnPj4EymgHT7I/PqWGRnYzsjk+XPFYhskBSD7q4+5o4KpGPkXJm589G0c+632PqXYRRz7H3s2L8b1NPulL2Cdkv1I+lUYK0fkdWT4s335uMS1jPjNapprv/mo+ApCgl92ScD4j3xQefNRyPuucElHVYXg+EvnjvRsdfD5gacWIIrR+PocnZv43HII+UfJpQSSmgz4z1LWRssWDPsoSlbXDMHg+DkknEPZwZj7h1WB6QxJQPuyzAvTSylI+5Xs2PEFMRj73EqtYkgxDPqWLAPV2X0I+FIXCky1tUD4HMXYYiSliPnjXirLsC3E+szIREpWjej4I4pEvBxyCPk2CbZsXKok+luiPo/QOkD4s4SybtqGTPv8Zmxo/rJQ+D34fsTTjkT7IpS2ZnJqLPqxxDCKlmYQ+9wWZKSOndT6N0zsb9ZBRPj/YYvtNUCU+HaY+yUmEJT6hMhn4lqs6PmvzHXGCyUM+tJk869G3Tz4/8LliCtQxPorV7dMGAEA+h2smWXb7QD64QBe3aMlYPhYkfy+r8VU+DT7pTGJUWT4yvb9VKX1oPtsQrhdOsXE+5zzeKWxnfj7waB2HNamFPgmXLNN9I4w+RPRiVq7mjj4h57MuHiCGPjKZFaNPcG0+JzpQBJKNXz76dx1iF9piPoY2jqxyM14+ryaeUTH3VT5kHyyi3+5SPgblnLYhg2A+A18geyhMZD4+PnioRFhaPjXXsY/g1lQ+LFe4dECxTj4luWCYOnM0Pjq0AGuqik8+N9caiUsZTT4GKHtrgsZSPsW/Ju8lNlE+kKIK8l6RWz4mSezcn1NePmDSn0b8xEY+9b6rVv+wTj5kMbv5/JdTPtZ9dH1K5Gg+MinEYzKYbz6KIZowlrtzPqFMv/+SoXk+ZT2rZjHDfj61wGOGacV9PmxsddV0o3k+agp8zpZkdD4xcCEbfS1sPqUg4NBzVWQ+AGcPbOyNUT417kSnfnxGPgVVbHg7oj0+Rv9s5VxfRj6KuiBY9I9PPsFWTmWdHUA+2LHZ3ClxUj5+batt6y5PPmuTkcwopEk+oL4K8DepVj6cjxzYThdMPtxxR8M/UFg+lbZ2hiSEZD6QdirZsXlxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1386\"},\"selection_policy\":{\"id\":\"1385\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1326\"},\"major_label_policy\":{\"id\":\"1325\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1329\"},\"major_label_policy\":{\"id\":\"1328\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1390\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"eLJaxuOEPD7b+l+qch5KPhoP9dvYcT0+IoNRnvxOTD6rKpfty2NIPuXqipRCMEs+qumin+uzRj7izuD9L2tJPhK+iQo9alQ+xRtPYDaBWz7+VjKXyG5iPgmjCOrD5mg+TeXRIihLbz5iObm5b4VzPh/+POTqgHc+e/CKI3Pfez78mfBqdWV/PtbSdmga4IE+J2SnKgh2gz48BOv92dCDPt8EbbiNN3g+9Ia9bgXoZj71UAshC2FRPuL3lkknwlI+AMMo5DQ+Uj4Uno43au5JPqMgaHYedzk+1af/XpDLUD69al0dYMBiPg3P59ozuG8+9g9a1ao/ez6zGZ6Y0JWCPp2UwrrvLok+jk2Gan+4jz4osMwJBsqTPi151XPH3ZQ+n8dVBcXEkT4//lA6KF6LPtofv5qLXoQ+3UY4g+bwdj6OWyYg2u9MPgU4msC5Xhw+afOQFIYJOz5MJQw4yM1EPg+C2de6OkU+mKQty8m4Pj5TIlWQvQgyPjSfG5VU6Sw+7M7qFV/1QT7LjdQuSmpfPpYYWI9GkVc+ejusitJ7WD6t/tCwONpmPoDdfRdIMnE+Wpx4lZg8fj68qOY0tU6GPgy/rgIVkow+qiIqJDnsjT7G/kRjzZyFPv+nubfW220+WMGH+xG0YT4y98xpxmRjPgKunFfjdVs+4TJJmfhCXT5+0fcn61BXPuirhKig4mA+ck8whmvAYD6rF+NIQ71ZPhc7/0DmM1Q+LhqKQtwEVT4BfRCQcBc9Pv+dBsiZlEo+P0FcgBDVSz4rCulcVMpVPuQiaet/BlI+eN8gTHAtWj7ogeEfSStWPiDO2K61608+1kA7pkynWD5hA8pOQ/RYPmM8HvB4qGs+UPL6LJS2bD6QSYGvGKp1PoYGcYKfkXo+zCjFJTYvfj7oh27UPqB9PphQKTOBHHk+P801lvoDdD5NxPX69ltqPnkM9+35k2Q+cpELlDoxUz725SN6d6tGPmao3x/WZEI+e7LDoOpiUT7H2Y72rupMPnMRiJX+pkE+3hZDFioNQz7ILFFmE2BIPj5/zgx40lE+OxWscFTsSz51aHJX1tdKPrs70pXdVFk+FBMrALmZbD6IN9C2TmVmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1378\"},\"selection_policy\":{\"id\":\"1377\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ziN/eqyzRT6ZYIwOWptBPqD+MwZOeDw+QsIvfT+mQz5KDN6q0089PuAfHPcE+ko+Bt+EOXAMSD6EQFRANp9GPoYs/iimK1Q+yBx++GDnWj5bZkthe9dhPtToMVm8hmo+p24CYOlScD5Av44EQpxyPjc+Yji1c3c+OGqwy8HOez7b3uC9ril/Pg2W2DSmrIE+i7fFYayvgz7pdQTKUSyEPs0fTIvj7Hg++MPX4caiZD7tYgjMLKVPPrjfD33SplI+tratld/rUD4ATWU/fZNFPioY6Rx5kkI+nhwn2bQmUD4OulXL4INhPiqg57OugHA+HFXslZ2Rej4s3v40y/6BPrzwhflCNok+o20bekOljz4SRZbT8pmTPpJ5CHvnCpU+/9JsuGy1kT43xdtbmTKMPj7gBHTrcYQ+NiCenrtodz6+dhIem2tQPu1NXUrUSRY+eICj3gTiLD7wuxy7yXA6Pr70vRDwpkU+VJnPqfRJND5UofB3EuokPg6UuCTRVj4+QQDqRpdDPz7cxD2sWkRWPiNPez4xi10+mXIILyS6Xj7+EM+ED/hnPkXgQ+VI63I+IruyDGM0fz5OS6RL+s2FPj27Y6SHaIw+HQKWOgwNjj6+WiDQwa6FPqziLOAzqmk+6Gw6axZzYD7vEPEOgAldPj2CE+6/kFk+ORpbk/GdXD4FHG+38qNYPm6fKAIm+V4+9NqUDdutYD4rp8LUM8dVPkfpE1AQ4E8+nOO99Ck9Vj4cxFcQ+SU7Pp1bkQrwkzQ+sGk0nLrjRz4X/4LI/PNTPo2yzMvGClA+MOxfeM/9Vj67PF7yfwRHPg4idXZkq0Y+RY/ppDrLUD7DPGziUa5YPtmO98LnkmU+mXvgzhBCbT496jJgUTJzPjEH1nKdUns+n8TqaWymfT4xWJyX1Dp9PlzLUPBieXg+NovOC7HQcj7ofs3JxMNoPt4lJu0mbWQ+UjpHyZJbVD7UgXhUlG5HPuGt+5ja+kA+gBTTC2U4Sz69o1n/wyRGPidBfKc5zkk+zEcX/PtCUT5WwZqLeTdFPutdBW+6wko+AnCE5N3NTT7ppDaj549WPsQ1AZwBP2I+fizKPwmsXT4E+iYGUP5kPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1388\"},\"selection_policy\":{\"id\":\"1387\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"mO5YoSGsOj5C/pZH6NZLPvBZvLrvsTo+9lEXaPvyQj6daRCqCmkyPlEm4lyKZ04+e/tNcIIbST4Ace1CYQRMPsxLLmzSvVI+CfonmcKgWT5TB+KEjVdjPtr0esODkWo+C+B8mmdYcD4zuAN8BQNzPkfxdAy8qXc+0dnOj6oCfD6wMWMfPMV+PgK5SlXD6YE+M8+faqV2gz558RjsZtyDPnBRxvncQ3k+Xk1n6XYQZz5NByyQ4vhNPjk/5TAJgVE+br0R9ZzNTz55vt8Bv4hGPp6AIca+M0k+MnI4guI7UT6qRYOukqFiPjqtzcMODHA+TwDN7+YDej40xMJR2buCPtXcS0SXLYk+tqvB3YXhjz6MweJZ57STPmvqs9PPvJQ+Ii/3tkrIkT5mD0hPhf6LPpv/YcwbqYQ+hJZD47uzdj6K/xn+oD9RPgydaKAkvB4+lyhC1a/1Qz4NTMm8dhk7PhLac69PnkI+8oj4avoESj7uLCOV4GBBPhpt6IyVeEc+xhAilROyQT4KmlxNaZBZPtT9CSC6C1o+mh1VOXnhXD70ycsQ9qJlPlKMC9JJ/XA++H7hlSdPfj7RRqFQ7KOFPp+Sn8K+GIw+2LFoyxZzjT6Ih+c/INmFPsy2pDAEIG0+4wyrUfetYj4/OKbx8KtgPmriKD5jzVw+VCyN5wN1Wz4tDvJ7e3BYPohEeBGghGI+hlw6eglfYD6IZcQP82VaPn+xjmhu0U4+Sp0802rKVz4kFnFLaUxHPlGM92n40Eo+fZ4ZInBfUD4Mm0Z8gVpXPonbXOHdeGA+6EGLhhsrXz7dcAW9EeNUPhsnImzs9EU+umHzRtIcTz5d8Y05oXtaPoEphfFVTGk+ROE6zA/Jaz7fAUb1AotyPmnXYS4EWXk+r18NUCTnfj5y2T3Qnu18PiH/23ZqNHk+xjC7u0EFdD7IFXvgeoVrPlNdEpil4GM+XNf5uoNRTj4I3qYWaRVIPpmLl00JQTg+vM8R5JfgQz6/Sx+no4U4Pn39NUC8sEY+qBTzeUMiSD6eH9t2EZ9GPlXSDZgs61M+DD18PxjZUT7vAFRNWk1hPlmsHQRQVmE+R2iQvLH1ZD6jYtB1eFJpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1380\"},\"selection_policy\":{\"id\":\"1379\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"OrGAJhtBQD5JSqohMaZIPsrqveYliUA+fK7DYiB7RD4LNoGtD79DPkm7Bf02X04+bVikM1rQQT6kGZ8SJkpJPn1Z8Dpui1M+vu8o3ThbWD52/xIkjDRiPsXxd+kVWGk+ps30w6ALbz6sspeQrKZyPlVyhtaJeHg+NawRid+rfD7eEvkFuJl+Pr34NQm10IE+cg+dHwaPgz691f2N6YWDPnEzeNsHWng+/0WaZ32MZj7Ud8o/PNJQPjdYsoMFQlQ+qzO6mqmBUT6Wt/omURlCPtH4XkvO5kY+hX9bak8PUT49c8F6fLhhPo4BeXZsFnE+9h5TuIe8ej4x3smWlYuCPj56hShwI4k+Uk5FZSWRjz7vv0aluHmTPuvqTGepypQ+bn82F7fnkT6Chc7U+fmLPsTPvqlVVoQ+B7UqZk72dj4QCRSsF4pPPimofHBhcho+RyzKDKAPMT6SOVC5SZhFPgabBqOl50A+SfQePhcLSD6ps3AkLCYwPv7skm5fBD4+RrUcD1fWPD4QOoRlY7NWPiCxdSzauVc+4zjX/4xUWz4JSXzD0PJnPhrGfskI0XE+SYhkmnI1fz7t+FEq3uaFPpgjV17RYIw+leAqPH5ljj53kQDC5aeGPmXiY38kqWw+qs3Mz+/fYD7NWjYsQo9iPgpvYakvrlg+Y+e5GQrUXD7lmdchRpFVPjQyWvzgil0+Z538YVpRXj568iSp5B1WPmRkrEzLdFM+7cJ+PbhGVT4gV6DV5x0/PjQ9XwxeOT8+Vp5DTKYGVz4Kuwphkr5TPszrFz6aQVc+rPthOk1fYD7JUyUBGLVTPvOhi7ogUEc+j21vwRi8Tz5VfU24HdBYPsPxEz5mD2o+icRk62RLbD7phQjdf2VzPnrSRlAWoHs+q7vLgTmDfj6lSogf5gh9PnDCuyjob3k+d5JzCg05cz73IqKwbHRqPjPmo0AY8WM+c3mQZowdSz5DrBvzGjFGPpRv0EJAhkA+yRAHAaUcTD7WbcCaTd8+PhOlh1UCfkY+9DWkRQYbVD4OeCnchMVEPo+c+8fkIVI+vDd2z5QGVz5BkXZLym1UPrT7AXXrE1s++FVJSsxAYj5gk907q813Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1344\"},\"selection_policy\":{\"id\":\"1343\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cIxbOg5BPj5ylXtdKFFAPlHfZAGngjs+pVXxEL8iQT79hHyMdNxFPpIfBl4OblA+xqTFOGyeTT6sKG4RK7pMPvy0Qe9JM1Y+qF/cyiPfWz41RSx5npNiPnX6X3P1TGo+xF7UHFUlbz6DwehesxhyPvU7pVIv23c+UEXJkkF2fD5RDRsbTLp+PmYtDIIlxoE+nkzLLVSRgz7ds0bQ5OGDPmcDCMJW/Xg+YK/HA0UyZj69XanF0DNRPrDEPF8stVM+/KwVrViPRz5IGOG3rXI8Pude/GHqD0I+Bcp9bi00UT4h2MVzC/NiPqCOHbmIjnA+76HopTYbej5NbURJT96CPl95yzcMUIk++cn5FQ3Bjz4Q2DQ9M8uTPg1Jl6Gmy5Q+w1DCfdKkkT5gVkRrxiqMPj3R594esoQ+72ftED2Ydj4F2ZTQKgBQPsEvHqd1DCA+Qaw+OOS9Nz4fnZuQ1Uw0PjzCuLfm6Ts+Yxqzi+hqKD6pxN3826slPrYAeeRWvDE+0TZecrxZQD7c9BYfw6hXPgGQS7HWcFk+1it5/b+ZXT6P9B56m4tpPjZukUa5qXE+JrG+hlEDfz5F+iZISKaFPtp9o1YNrow+dzNpcxFdjj7pvi1sQKOFPt8D6OFbD3A+gCLF7HHiXz6msdVKEl5jPlM35rqggV4+DBqycN5fWD7yS6q38YxWPoWsVzU4D10+Ck+ELYmRXz6ZHUcTxMlaPmmcWBM47lI+WSQexLnMUz7jk1tkxmRGPhWFAQJpjkg+RmTYOD2XUz7Q37WhoB5ZPgabp95h91E+NIbpsW0cWz4hFxjFnK9VPjOJJj9XhVE+r4c+pwTVUT7/kLSYeIBbPkQIi+EZtmk+gKJMNrBIbT77S2f358dzPqDP5eHRx3k+FEPNm39rfT4l4PbuObF8PjrnHnY1Vnk+XVEK6xrLcj60NvhSAdhqPkv6sXciHmU+bue8UJdSTT7xaZwWN31FPsWeccvlCEQ+/o6eBJ6LSz6cwxfIqGZDPnYH3pxvejg+bbuo/mWkQj44Z4kJGhJAPqIO2cVpPFU+uJSV/Y3dTz73y3Oj0lpZPiNBpFqs5V4+mQvYTiQoZT5cBDfsArJnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1348\"},\"selection_policy\":{\"id\":\"1347\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"COcGkhjvKz44PFradfxAPrBT+lDAMD8+xt0BWFoMST4DluqW8u1FPgrw4inTJUw+iB68v+xaUD5KEHYcNR1JPmgLQ3M/r1M+g1qQ+QPlWD4x4Og4Y9NhPnFqvnkoD2s+TDYdWltkcD7TvpqyAVNyPjkcLFNO+3c+TURE0VB7fD76lfNsR59/PmTFiP5fCYI+gsMzzCAYgz4lhPhvm8ODPoWAk+TsGXg+b7bMuqj3Zj5MxcHSRwZPPuT530AuIlM+AqpngePWSD7FLz1OB79APivnsaS58EE+7ndZieBmUz4wTZznPlZiPtYulqW8nXA+Zv0droWhej7z0NoLTYuCPsqt8ocuyog+lMjFsu7Ujz5XXtlKbZyTPuT1Cz91z5Q++tX1i1clkj7RPFB+IJuLPneqW1GiOIQ+o4UtrTkEdz5xuZ4xZS1QPgesBIorIyk+CNVtCn7GRD58KAnGAgA3PptV8KPuIUE+4I8dc8XBRT71ksV4Rt40PsIXrJSfxiU++DwaAoTYRT6GgzBtRERXPv/ZcoZWk1w+LxNQ63oYYD7vOsLQhs1pPjZrxWGr5nA+lAWGnz2bfj6QaTRyIpCFPl8irzrW8Ys+wFk7hPUhjj5sQtWrGgmGPt3TcV80qms+1bJs4O/MWz4prhVlMjxmPiDygcSw71o+Ai/7kNZTWT7jGwdcdepUPpICR0wK3GI+mO295NKMXj4hDRRLkwlYPtjFY2thZFE+PZXlnkSHVD6sUw2WxJs8PoVm7M+wyTQ+BJwMcCjfUD69c/CfjPBMPu8G/HeXzVA+nuuObKn1Uj5lCjVtVwJSPqlwZ/Yh9Ec+p24xCSahUz7R0UG9j3hUPuc9LxxNfG0+ugemNHuAbz457BxiYOx0Ps4nAU8vGXo+o1wvsRVGfj7APD8GMLJ8PgiHptPV2Hg+e39fNFBWcj71xhkIRAZrPiQ+QvR9b2Q+EfeL+iUTTD7O2cC19P9BPmLiAU6JtkU+3tzY3a+HRj5VbSvM6/w+PsCxPc09i0M+LiWXRBrYVD68BhVg3nJLPt9yhzKmFEU+Sstsm/lnUT6nfSvwCtpRPvn4LXi3xmA+HJbb9k3IYz5xOgKeS05nPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1376\"},\"selection_policy\":{\"id\":\"1375\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8InkbBDsOj6iSza4lwhFPotKfYKrfEA+KZ3m1EL5Qz6pNwHQ6FREPsSBcXj1bU0+8wxzs23xUD7KKgBI8bFNPh09EDDuvlI+kxj75Rl/WT5i/oFsbhRhPqTpv3fB52g+imTKUfpsbz5lRP+NecVyPkonT/ST3nc+AonsjPp2fD7GnmQVQDZ/Pg3ByVq9yIE+RMowX099gz7/CMC+gJ6DPh5RMgtpFHk+mmLWs7v6ZT74A6SEqtZRPkWuVWutMVM+6BCzGusuUD6nnY2l/4E5Pnmjx6QjNEU+8mVLU4G+TD762ExtxOthPmdLZTgSnHA+o2PhNSuXej7V7DVoyUeCPnQgGzIP94g+Q25VSkykjz7K++qY1JmTPv4czAA+A5U+bLf67AX4kT7c4OHTPZiLPsF0Lg3TUoQ+ZCvO+YSFdz5jDOEO/xlQPnSGRvZS6ic+a2ukJdFqPj7PyHrAdNY8PklG1dNjmjs+rkUiUABbST7WKZeComE7PkIrYZaEMiY+tpkyJ3qVQj5vRl6v/cBbPgiDVLbngVs+hwlinn3pWz4o2P9zxjloPgU4XZGOKnI+A/xvmdKPfj4I6w4LjGCFPmmmQRKQN4w+3v3x2cFyjT4pxq/vIiuGPiyd9FgyLWs+lC7qxQTSXz51LMDLkRxkPmptHXxe618+0RLD7H83Vz7iXImFkMBgPsjarh4Of2A+0jXbdSuBXz5/ch/E+sxYPiAOWU3P/1M+SRVfAaOmUj7JPNOuP8lQPnIbJGbcVEk+69cvhAFUUD5kp7zCKcpWPi9uoIWiGFw+qOfk15h4Wj5scJRoXKZRPmMpUehauUM+KjOyBpkEVj50CtLK5CNWPu6EbRXQDmk+Qy2g5M4LbT5ffIlUaWNzPtgGsDllrnk+Xegi00SPfT5f+QA2z918PhsPBnC27Xg++sNRhXD/cT5rJe7i78NpPrHMaOp6IWY+AsQNeA3gUj4oB7LSJlk2PmhWZGjuSTk+HDiLgAZaSD7gh75Qdu9HPvUeyhaRc0E+ogK92wO1Qz5iyJfYayY5PokYsOIUBEw+02DeCQfqWT7rgT523c1TPuSaK7Bm4GU+IOCkn1PiYD7778Wsg350Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1356\"},\"selection_policy\":{\"id\":\"1355\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dqZGQhBkNj4H++qWzVw9Pm32YrL6ujw+P11wEehORD6w0BJH8tdDPqD/Bkyr/FM+A2Yo/W5tTj6d9wnKS1lEPvgaopHYo04+NwGL+26fXD5+AfGDLLJiPn5uRe5rpGo+OHGfiZJKbz6Se9MoLglzPgW0uC7+Kng+FEWxRGSnez57BoXe4gl/Pjy6VbvqGYI+spx/o1LBgz7DmlMFV4KDPirZSH8yWng+AI0+81zhZD4r8lqQ/mxSPpvN3aGcBFI+GIuKw04GTD4B5cIFtD5DPtb1/McuEkU+NYAUh1X4UD7Vly8Y48ZhPkbKcif54nA+LLgl7NtZez7bPp6lBKKCPl0tas0iGIk+qyN48mOBjz4ABul6famTPuE2n68F95Q+jfSar570kT65dNrCyKKLPsIufM2gu4Q+CTFXrimHdz559tFC53VQPi1FAtNqbxg+gYn7Da2hLz6caN7QMAc/PsN2xeHTmj0+eXshQgk9LD68X3RHzSw2PkMxF1GulDY+vzDIFvzrOT43G2asahlaPrJK22sGBF4+/LgvXcZ0WD76ISvz4XtoPhadj/hT+nE+Biq3UauQfz7RvfAkYcKFPmvhxjModIw+bYcEjeyEjj7wN3peoj6FPhMmyp+wym0+W89kW2ViYT6qmDpVDOViPvGUMSNo/Vs++V4HvKbVWj7dfDKDkT9WPpyzu0hV2Vw+RVJ6aq3iYD46Ut3Eq0pZPtrC4zQcCVI+uESv6vnTVj7YimwOBSVHPnRXV+HeQ0w+rKf2fjhIUD6ZKBE3vqRTPt5AjwMA/lU+uSzj42YXVz5/EHRJvQxNPkxa954iGE0+6cZ7Ft1NTj4vDHFt5jxbPgTy3+L6Cmk+UAD7S70ibD6k2J3s5L1zPlviKqq1iHg+SJD76FgUfj5PtZ0+Xqd9PnpiMS5hDnk++w/TH+n1cj7aH6SFEmdrPlYs4fpgf2Y+Jrh+OV3TUT4cNOpHmCRHPp+y4r8PvTw+zfhTSLGkST4t9z1+7I1GPgzh3kNmAUU+0CK5oG67PT43EcawHu5EPvFv9XobtlY+63IR0a+AVj6Gh8AD+YVMPh+KPwsrpFM+zv8JaOnGXj4kZmAXLHNpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1350\"},\"selection_policy\":{\"id\":\"1349\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5XNcyj1RRD5cU6BpifZAPj52Jxs7RkI+ktrTJ8cuST6MKenfKq1HPij3Oo7Q2kw+C1xDQRhhTT566r4WwMFLPpKmPK2qSFQ+YPqc5xaAWz5XcNwScSpiPrqDVksWnmo+o03/3aQqcT541igyvg5zPlQxmfX9N3k+aBvFlikMfD7cFwHxYAN/Ps8/hXPDxYE+83zJuk2ggz7tHeBOdLqDPtqOYrHEC3k+V9vyO9U6ZT6vUAvVEIZUPuEL/I5qYlE+JT9F2mVYSj7ZNiVGET9FPs+Xl8RBQEM+Aky19cl8UT56+QqD/KFhPs5QdDOP3XA+fGxvA3Pjej7hOuoNrnCCPm9v5RJsQ4k+Y93gTiuRjz6YiyfN6ZCTPje8tTRg95Q+7a1aXDzYkT4MWVc08JWLPr2BLUSEcoQ+56ZOy10Wdz4ZwaQHp8dRPrws6n41Hhc+ljhC25WRBz7x31UC+4YyPppDkoUNCDs+DGUASJ0yQD5ZX/Ih9NFDPnfJvGuKzjA+M7uUQuRBOT7Yhl93N0RXPv3ezBd3cl4+nIGB97b0Wz6gAsWU6UZoPu0iJmvG1XA+SBleMSprfT5XXUtJoxaGPopwYbh/now+DLQhPeYVjj5ssftquumFPi+F1IIV7m0+9ujio3DrYT6xul2KQmxkPujC3pOQf1w+i8bu3QAkWD7G/OI/hsVVPnzie3XMQ1w+TBZU5vdWXD5WLzIr5UVVPvt20TTjUVU+HW4WkxKkUD6Irjta36M7PiDjrO9OvUM+zM0JIrQfVD5JMApi0pVXPkgGzM5GxUc+1ke5TNR/Wj7ceVpXnWpXPt9wd+p+qkc+I0awgvgGUD6L74Ui1A1ZPlebfDxeumc+AqNVbXP5bT7lm+BCjLR0Pqs/KM9S+no+hoWHiZQPfT6d9umMvrl8PpcPBfK7EHk+/dxxuemjcz7PcthzuAVtPoex2un3K2o+/f9en0diUz4JlH60ZZpHPoWghgXS2kE+80xxCqpzSD5XY0a8K31DPvMhKDEwP0M++uhDX1t5QT4d8lNK6Rs9PlL654o8TT8+ZV7bDqsUUT6YrkGwZPJZPp8DQ8ex81s+n34wi633ZD7k2Ka6kB1jPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1360\"},\"selection_policy\":{\"id\":\"1359\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lupJM0piOT7TOii4URdGPl6Dr4OZXkE+3Bf2ePrLRD6EzD+2jUlBPpvYraAkj04+ZGkleRXAST4W2ohTP4hMPpOsoPL/B1U+vWrn9N6KWT7yI0516EFiPpVhMe7oqmo+qant6RR2cD6Qmh+iRLByPoNv7Q25oHg+Ic9QWGa1ez6ZYw/XcDl/PjXsW1yvw4E+6sDxJLSagz6t1aLsD2+DPkTSC1aRqHg+dWLzhj1uZT703Bo4r15QPlYMmJrfYVI+KyO9nI/iUT5iZOoK910+PmQ8OwBQZT0+TjqBVy1jUT6lXaF2Y/1gPmWdkUxWNHA+a/dd5/Hdej6KMQYM8wuDPqLZULt10og+KmGQifeyjz7eCS3Tzb6TPqIPK15aoZQ+bQ5t5ecDkj7f41hrIqGLPkzGvBwL4oQ+Hj0W2tUVdz6tH2MNAp9QPumdYerAuzM+6ZBcHIZtPD4HnKm1bQZEPkVf1Ih3eEQ++LlzuYZkOz4kahkDbEMjPprhDA6+H0A+UZ9v/2UwNj51Vd27EadaPo568y82Flg+532l6jrnWD7Ze0kl6VxnPpwLRoZSL3M+GGS0Kyx6fj6ifBcjxwqGPr0WmAENUYw+oB75TRXxjj4zo5WxmRGGPssLegm4cW0+19wBW5YJYj7ag/eICrBhPrzCnsd11lw+a6wTbSOdWz6CCJN9DX9UPiDsvzJxMGA+uNrq4LnVYz6B0N5XmdpZPjrf3ytICVA+svKsxDvkUj41gQodPrVFPil+xc9SbUc+dWlrfOxITj61LHTZnidQPl6iMAUc6lU+6df94XeWWT77s4MMMelVPkSyfe4PnFI+XpWGIdhzUz6VFE7kWipcPuKJXT6vwmk+A+3OHT4Xbj5xatXBLzdzPjq1cFXzxno+cmux5RWifT7HoI/Mp0p9PhT2cXw6Znk+ghS3Ipq+cz4Fq3327k5rPic4sz0P5mM+CGBPFookTD4YEJVeDl9FPosdCzT+iEU++flhdpp6QD4WUg3YLBBLPlNm0w3tMk0+YBQfY3V6SD49SfX7O8xFPkP7scNFvEs+VwH1RHBRVz4In6KfO85WPjublsO8M1s+sMg6Vu5iXD746UxLiBtwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1352\"},\"selection_policy\":{\"id\":\"1351\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gVPuFNwQOT5GvCxaX8hCPjCiFPTObzc+KeH/9NUNRz4VAkcp+MhAPuB5hSZZYUo+cVVqb9GmTT56r6Jz+LtOPlDQCZJzv1M+BXN8wJNRWz6ZVUbBkP1hPtjPgu7qv2g+Ra+BomO7cD7WqBaxWf9xPvJd8EK0Q3g+nLFH0sOBez4v8/H1sRV/Pn0H+4Pfo4E+F+kg2Ah9gz7NVrc3y3GDPqZK4FBuvng+0WhNsFjUZz4jU0swBdRQPiPEIiZwyVQ+bz2trcQqUT7QEgtiDcpFPkJDo6idtUg+TbbVPBSWTT5kTJRX/hNiPhYkQquF7XA+n0SBUp+Dej7lq/5sF6KCPmmAdKTJJ4k+RE4dS71njz74hBFEzZiTPqNuS4SVypQ+cQz6ft/YkT6EpcjyQxiMPj9uj49iU4Q+iYq5Ri/Kdj4RDeuC6OdRPk9RAJS0dyg+rkSJBXEuHT6TlS0w/YwtPh9wl/BnKTI+Gyjwe/6eSD7LwXIvWxo6PiEi4+LWcDw+Ke8iKwfXPD610BwYr7tZPg2cOdnz4lk+oqu8pjoIXj4b7EIt/A9pPgIby2KGzXI+C6fCH0hqfz5buEva1o2FPs3NzVjCe4w+NgtiN9QZjj5kk3jWUjWGPrgBqBi9Cm8+qR5yXRBqYT5L8aRucR5jPgKvcPde2F4+cy5BzyKSXT45LnrTbpZbPkjp95tkf2E+smxsMKKsYD5OcLXyc0NYPkAj6z5DBlE+h7mqbiy/VT486wy8a2ZEPudX4qeS2Eo+YAArSEulVz4tbSUvMOdWPvECojvf2z8+WHz073K3Wj4IyUpU9SBUPssjklOT5lA+tS9hqKZoUD5qc/UywTVbPgBo5OoOy2k+9IV5QOO3bz5moCGfYVd0PsuGJgA/Fns+wqwGaH7hfT73YTYRLA19PklVwDtqQ3k+vFbxmaVpcj6su422phxqPj/nAMIg1GQ+1NmMx+HuUD409k6kio9GPimFX0+CQ0A+kcOJN31uSj4GMkv/2p9MPr3Pxwa7MUE+fATiRwHDQT5Z5H01uw5RPjcF/CTHUVA+MpKluWRnVz7hqpdI1mNTPjKRPvnNR1k+82mlXA1BWz6IONw0z91gPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1384\"},\"selection_policy\":{\"id\":\"1383\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Zp4OmlvAOD4JM4is7oRKPttOavv0CkE+j4vSZrCkRD5vDlW/YOJAPvTEWIHeXEs+1mSHiio/UD4Ikw35QA1JPsgN/87KuVM+t+cvJHzqWT79QHp2RPpiPn7pD9QCPWo+0vQPXuB6cD7kD3LxiwNyPiAobh9xn3c+497tNAGQfD4i9oHi3sp+PvQ6QQ6CF4I+zB1JqiBzgz56B3fLKkiDPuosm5o/L3g+EhowSUyTZT6UfJQtoiZSPgjoGWEUKFQ+0tpBYQmmSj4sQeg8CCJBPqfAyAw5mEc+uJearTsFUj6QQD7ZEtBgPpqgXOk6kXA+M9khqfZiej68WPM+BKKCPkMDwYfpWIk+FIb4YCjojz5WRHylB7STPqkAKFpNmpQ+XC5i6L7vkT7QPDlsN5mLPt2wEy1nwoQ+Ywui48sedz4BlB279ydPPs46n5h2FS8+MGryRsoIQj48NWTST+c6PnuIkJx8VTg+okVqRdFnRj4X6Q+D5f0sPrDPzx65iD0++j0xBu+4Lj5Xthd2oyFZPv9j7JpGZ1w+d13lSBikWj4JN8RZV7hnPnMyVjJbBXE+how1ovR0fj7tRBsVK/mFPm8fOmc5bYw+ydAZSSfvjj5+X5lLO1CGPgz3CcBVQW4+zl96WLARYj7+ZGqGb+liPvtP8gTSPmA+XgowoGbEXz5MwDMnbJpTPsBFbntWlGE+OUnjdFRGYD4uSnzFFTtYPi9JMvCdNlU+dZMa1g6CUj5ul9mANcc8PizebUTfYVA+e4wBHiJlUz7tHvFBph1OPi7EmBDEW00+zGVzlaj2Wj6B8ovU9tlOPr6Q9aN2DVM+9dZOnY4sVz71xWVFIIhVPrDbIxvrPWc+1w/lmx17bj7dTnC7DzV0PgA/ZTZGOHs+VXOKBDMWfj4NwwXQDZN9PpQZPsu1R3k+cjF22af/cT5ljljzx+xrPuWT7NbTFWM+d9W1xrgSVD4zKe7+XLFDPmppsOC2HDg+B2l3O9hySD4rnF/Fb9c7PqaUVASZKEI+JbzZobcgRT7qdCTX53VJPnPeYc9a4U0+uCCnFBknVD6fZ7MGg/JUPsJFftb/DWE+rkdeOz6ZVT6/Np4FnqZwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1362\"},\"selection_policy\":{\"id\":\"1361\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ywzQTkiUPD6/upd/nb9HPpH53GP3ITw+eU+mCQ1dRz5jUv+ZQVlNPnALW+gJgkg+TCFuQOu0ST5qN4m29zlPPszMrrITlVI+VNWrv67sWT4UOyvXlTVjPuxPWwRcmGo+pnCEPg0ecD7VLCct3zhyPjvH7/oXsng+PUTlT9zaez6YVmCmbrt+PohAW/89/IE+1Kpe7I1Ygz76QJgHO/+DPqk/lh1aXHg+h4NS0XPYZT6oGBcSP0hPPjfVdvFETVM+W1e3p63nST7GKvnTSzw+PkUwUQDNFkY+t5NZcsKGTT5qOR9I/u5gPh6EzibcEXA+WNz6S/Oxej74zLmPqJ2CPtc+yTugMYk+whwL1lDFjz7GLXTSSLeTPmqQbj/krpQ+wGRL4uWdkT6ozOvIRLCLPkieNwmA3IQ+CS/v+YLNdj5W8M3TJBVNPrTd3Bg99Sw+SZRTkPeeNz6+fhP/aoUzPtqyyKkqOUA+0TfG/jgJNT5Meb0d4GE9PjsQ/fAATkE+tlQKifdHQj5pLd3rs1VYPqQ/F5mmWFo+JobZk5fCXD5y5uSsPuhlPuzo1rkDcXE+a85+altIfT7SYDW6ne6FPtaxSJA6aow+OAp8Dt5ujj6h84k/kDqGPq9U+YQ1Mmw+G1bHDKW0YD6/5DiHn2djPprWHN3PrmM+On/xu0qnWz5IKyARsHhVPm3KmVjUa10+fsMacIAZXT7gP0QzSEVaPkQSLP1PT1c+59PtYE7EVD4DHbvUNp0+PqnBX+Z6IUQ+TocRwINeTz4LYBZVVZtZPiGUv9z+xVM+OYMUjP9OWD5BjKWyF7FQPnoy1IIJqU8+smFk2fmRUj74ZytoNnJWPj8ql+J0umc+G3nv2kdVaz5Mx4YAW+NzPuM7ZPIq33o+5cu2xzIsfj7+DX5xJzp8PjNNsF4HdXk+wI1Bja7Ncj5S8sbCTkNrPiubqooGzWY+FdhYyDkeSj6hnS/CT5VDPpQrtet0GkI+pTLWeS+HSj4Msrh8GyJHPkWvZ85KTEY+bsjdCKjgRT6OUOpINr1IPsn8OOXw/lQ+SaLrlnGuWz4vFMva151dPisG3tJSV2I+LDRd3786YD7xqZsD9gBxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1382\"},\"selection_policy\":{\"id\":\"1381\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BIf+t/z7ND638Wvn2UBGPixiM/nYqzw+uoIVpvs5Sj7PW9nLAIhHPibIi8Ssjk0+0/FgwhFjUD4E+OJgkgFMPjzdyWXMR1M+uxT/nvyuWT6QPANiOSVjPuxBkzrrNGk+QkQo+twfcD5v5KGVvaByPs/T85FEcHg+8QSLJBiQfD5FbNOfe25/PhukxpzD5YE+hHtBOLeSgz4JMkyhM7GDPn6MniD1OHk+llt/mFQVZz7OUJdif5dRPpfiRFMOLVM+Nn7CJt91TD41s/VMsOFBPr2tbJZCHEE+84ut24cNUj7YKlO1rfFiPu3re3Z9YnA+r45gEFgPez7v6BNosIOCPkTu3f2QK4k+Je2ePuiHjz44VGk1KMKTPhZbXNq97pQ+ijtnWpz5kT6Vkj7+BN+LPvAzio3fiYQ+czkXkr9cdz4ZK+WtvMBQPn486H8eKS4+viH7hB8DNT5wRMU3MTY6Ps1//UqD+0Q+hM/OPkp/PT59dCSnA9w1PtuFTjl69zc+0PG5ZZXJPj79yb8WCwNXPooMrnRG9l0+/gEZ/R8qXj6nbv+0QSNrPniXGCo/anE+w1lLc+5+fj4GdYGrVmaGPhUjIA1i4Iw+ZaUYUPH6jT4Q5BH5REiGPqSpHsId+2w+FmAMeLKTYT6OssiqWadjPsP8yKHVC18+h62fwN8WWj4uiTe9uoVbPue9qVg9GGA+iMnyofW9YT5Euk2zOAJaPk0zoNcpS1Y+RXnHpSLPVT5D/LOjHbBHPgXhoSASKlA+pgPRSAnIUT5XuvRhm6thPhAV4DnYJVo+bqsaC/DiYD605eI9lC1bPuVhwqcUlUs+F/3L1QC9Uj5Z6u9ccaFaPt4bHLLSBmk+CUzXiTSebz51rozEQOhzPjMFw6h1CHo+MZQSPSExfj4orCTcXg99PsCilX2bj3k+SSdq2sb2cz6mu22bM2psPoEmP929aGU+ha2GZsVXVD5xgPZjnlVEPhauuAGZoEY+/+twiFd6RT5uVKMeOBZLPtKfDfz+qUk+IHS8ZQi1SD7bYl6IFZJRPgrYFxjNRlQ+P11YTkJ5Tj6oap6kw31dPkaKdC2EJ2M+bHNKLyn7YT62ZkH42HdyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1358\"},\"selection_policy\":{\"id\":\"1357\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hClGSqnyMD6NBR/oI5U4PoirvNV+AD4+uKg3DxVsRz7rXicr+vA/PsSpqi/IsUk+3GTQOVp6Rj5TydqQmPhNPlwqm/TUMlE+Uz+MBSR8Wz4EqYvBh21jPmhAFuoaIGo+zFXN3+Pobz7nLTqUeilyPrZXTOom8HY+M3iYFUv2ez4C2JsluDt/Plb8217k1YE+fynYJ5yTgz7SW86uxGGDPjIuInW6MXk+mJjmmiRlZj5u9sTKaR5PPuaPvOOqxVI+DaZtAkApTT7YzmPMYYNDPrAwVAAmSEU+DPFFhAL8Tj724leqe/xhPtDk0kMOf3A+gziqqb/Xej6LZ05CHJSCPjQkgEJbG4k+HRGFVUejjz7qrYJ5MNqTPiwjhRJzqpQ+MOhzgUD7kT5yVvupsbyLPmvJCJulYoQ+9TE7DyqOdz4a2iQF6LNQPlqIyG5k6SU+q0NRORNEJD5VrN7hzdU8PvQeqCMj60M+gECisgK6Qj7gOCKJ3+owPkP64sDNSTg+E1AyxftdRT5U62SmUttVPvpreByHwVs+hqCBa9OFXz6d3MZ1bqJpPtXJMB1FJXE+qZVEBYIKfz57YdaRlN6FPnZY6HwBWYw+ajhMQzF1jT6pEkSALe2FPtCuZ6taJ20+jZQQvHwtYT7wzfo7txljPoFzI/oOcVk+XM0AWQymWz5TyMv0CVFSPsIWcJ/b3mA+et//lttHYT5yzw8TuxtXPpMFgH6nv1E+SZrZXZ9LTj62aFxK5+I0PrSAGa4F9Ug+Q2Yoiy3UUT7J1eFmOm9bPmVmf9bMz1Q+h5bIewT7Wz66esDo4D9WPoTNOriQb0E+g0l8G+29SD73EiEg68RYPtZCsaYwDGg+Yc/XKbJTcD5tJDX5CWNzPsLDACK4Onk+7aQUd/6Tfj4Q+bs+8d98Pq1NAWNI6Hk+6Q38ujNUcz6Mt6oXggxrPie9f8Qel2U+oStNJEtaVT4yyubW4+xNPgGTpfUrbEM+TFGCzBCmSD4SVCSkYwRKPtWjw9IQwUM+PuHuQwUPSD6KLxhR4GpKPpR0wnz1RFI+AnKyi8Y5Qz6L8ZJY5RRjPpQ/kMew+mA+hYwdO9+AZz7hcjFn47VdPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1340\"},\"selection_policy\":{\"id\":\"1339\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"4QHdpZ5pOj7Py88JtRZCPspspN5iFzg+ytBUHiOSSD6bPy8UdQ1APrDD3XPuMUs+2pfvmskwSj7GY2xhUlZNPiGE+Fz5MlY+fm8GAYS6WT5cuNUh529hPtV74vqsfWo++mmBXow2cD5VvPxZx15yPr3oLrdaWXg+voY8IXWbfD6lLOCnPit/PtjfBUrM6IE+Ph8ujyt6gz6rpuQ+oMmDPjvWq1BHRHg+fsqz1f5XZz656h+rcy9SPrEMNsNtClQ+6FLWmJloUT7LfcAQ5CU7Pts2VknIs0g+Hugh+D6tTz75kEqFc1BiPrrIqVHFC3E+zBEuAwvjej4VXwiRHFuCPg9KCAoO0Ig+/Bhx4PXnjz6CjEQ95p6TPtqjtu5KtZQ+tnr2VwcMkj5igdK3reyLPmF/BzKKwoQ+3ACo0pEUdz7pMgBEuhdOPolfWdtO1yI+ENjr7PhTLT4N/TDCE4RBPksFxdzc2kU+2e6rP4veSj4toSldAw02PvjEs1GrBDY+YUWHR+SCQz696XChuBxYPin4UJs5IFc+hjlP4wSkWT6/+zZt6cZnPvXegusQh3E+FU8qlp+hfT7tSApOw6iFPiu2SLfXvow+YmEBKY9Kjj5Wo7UWP4OGPkWgT9Jv2W0+DTo5U6VyZD7vtKiuXIdjPiGLDWHKtF4+08VYKhTaWz6iq4HvVwlXPqRM8rJUYl8+TEK5jjlVYj568nwFeBNcPuvqR0p6xVQ+AGYd3Q3EUD6nkvrwj5lDPlSeY01Fqk0+ztS3fICdTD5hegqXdzxJPjlZOYwhbk4+KUftBypeVT4KS6+oPL9ePj/sEVSkXUk+oCRrIvY9Uj4hon6XMmVaPsJnfaM7gWc+SJlVo6O4bz6/XOGg6GB0PixGMw/0x3o+TUE/11XkfT4YJaH7x7x9PiA56iLI2no+d06UhN9+cz7xfGGv7LFpPsj1A1Vlrmc+MxgxBERDUT79g1BOl19FPoqaW8xTbTg+JoDUsx6YST6s+XAEuEY8PsV/VWdao00+Xo4/lFYgUD73WKud2tk/Pl8fkI9dIT8+BRmHv2P/Uz4ds+tUmHJQPnLekBo6/FU+EOvxq7f+YD5f0gus8qlZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1354\"},\"selection_policy\":{\"id\":\"1353\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"40+2gJ9yNT7wKETKlHdAPvu0lz5oszs+GlnYTsCqTD7eN5GPJs1FPnJMySq7TUU+XJv83+AHUD56/JtKMwZKPqN5BtgTtVA+0CAFZEwqWT64IUGu3xhjPmRsRiZBj2o+Mu6LbOs2cD71caKgrR5yPg9+5a/3oXc+x7kJgZLjez5UaQz++Bd/PkCv9rXQ74E+hBvhQLuWgz5Qw+dSWg2EPqbkV3p72Xg+Md/lkjdLZz59QTU4NrtPPtHbbk0HCFI+PSgyx1+7TD4VLHoyivRJPjeIBR/Ve0s+sux+4t/1Tz6AyNCGZflhPkYv0NMWXHA+iGDeJVgJez5cHOIAjsWCPkrvRfPzN4k+vlCgAzdvjz4yXZA9MriTPiaRlYtZ3JQ+s9IIouvTkT74gdQ/FbmLPuDGsjsdvoQ+xWcToCoQdz5xu/PujXZQPsRao9mQ6iA+K60iOctDLz5Sa9/wxPI0Pt00cYlDZEk+a7Ya7lZ0Tz7/DUSDrB09Pg0Ei3EH7Ds+V7aRnXMzQT4SwAAL3/VVPvSwy3inmV0+Rbb1tOp0Wz6+2gON8C9oPrAItWQcxnE+iwsCHa9yfj77s3uOjtyFPgQmpeLJhYw+cTpue5jxjT7S8NEvjSeGPgfmvPkt1Wo+vjZR2tg9YT7YQt/2ogtiPou4xJzo8WA+qEkvk3KpWD41HYKpUHRWPgUMIY2IpWE+pNae3eveXj6wd5W6L65dPtQMRVQKwlY+xNpJKdQRVD51wuEwOuw4PpTOdAt2c0Y+IuMf16bHTj5z6mwXoflRPpD7mbDKkFU+PZAz6YjZWD48sdVFhLxQPp/ZnQaxbU0+mAe/XHACUj6gRAJaezpYPhQLyq7DUWc+R810mIFHbT6qj9k0rUJ0PtNIe7e7qno+ZR3z4aBIfT5xsPkk3lt9Psv6VvLsInk+qV5lLk9Scz6cDGwEBnlqPqACLqUz62U+Vol/mSgsTT69/8WDh2NDPpJwc74El0o+/+c8k+RsTD5/wom8Y3FHPupax4B/0kg+hswiX0cUPT7uFxUD4NlIPo746/6aJlE+ugXDmwsVYT44A0QlUPpbPtzOzv4A71s+Ia8bxoq5YD5IFSKSkTJpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1342\"},\"selection_policy\":{\"id\":\"1341\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LiNPdjCwPD6Z/P8LR2Q+PjyLRv5NojI+FI9RSfONST4l1sKQREJFPhHSMn8GoEs+wvDp2XSJSz4QhWrH+QJLPmnHU+tYi1I+jyOUWX/yVz6JlwR77KBiPlmJskfaDGo+QYWvDxNAcD5o5NnUyohyPpEzyuKx83g+i7QzQlHQfD5Zj3Npkl5/Pk9mSu4L9YE+FhGyG/jggz6RDLm7BICDPmxqSQJIzng+9AxaOGoSZj5qzW3atXNQPsLMMa/BRFU+lt4rZXRBUj7paamVwJ1IPk43xLS1vUI++FUKsIixUT7Wm9qjDo1iPg/9C7Evq3A+Qb+Mum4Uez4pgVZmz2GCPsXt69XfW4k+Z08v4FiPjz4EOtQLBrWTPuDgSUHOtZQ+zcvsUMjJkT6EM5xLpcOLPtqV1F3L0IQ+BVgA+/I7dz4wxRRJtstQPoI89/YfLyw+R43aUqLbMj4N9DYNwcs9PnOYrePg2D0+XizHo/YKOz7G/h+W8GgxPniRYZielCU+30Fh46g5Mj6M/Z3KiuNTPoorQ00yDlk+JKHJhR3SWz73PXnl6+RmPo1KWXA9nHE+o+Ryk9XZfj5MLuLkWuCFPnzPmNAeYIw+3P1+eQZ8jT72wKC89PKFPsX8Zzli8W0+dOReeNCRZD5Xns4XEg1gPoFdrrrwMVw+D9a3Dq9iWj5BpOnh6o9ZPkR+bVCdhls+DdmJJHx4XT6eQlHVMy9bPmi4icAOH1Y+bR8O+YveUT4uwivUS/BFPsZYh23bVUg+TRLQNrEkSj7gZgkgARBWPgUrBzZWN1I+DuXiJxJVVT7SHNnxrX5UPtyEfOLHk0Q+L5l2s6wdUD6JBiPSnEpYPmgLfOKHNmg+vUU1/jFubT6I0VHmpS90Po4U+NEVBnk+KWthUv2YfT6OEnsXLOl9PrmslWXTEnk+zvFs3Ugqcz6LrOfVeyduPiQu1tO5/2c+ilTfVtXsVT50Mfe9sM1CPlxjEPxfZkY+E2RTCmL+Sj4p+b1FxfBNPqUUuXB79Ew+LJitDFMcSz598adUNK5KPiBHo6x/1Us+hOF/Rm1sWD7CBHhGB6xPPjEYn+bsqVg+Ybh6+nJWbD65oCtSt1hrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1346\"},\"selection_policy\":{\"id\":\"1345\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"h81Xv7RNOT5EtDn7WqZHPt1jZy/5xzg+LwnQqpFuSD4vEfEUj09BPkFIDlp/lEw+65fZV8VdST7p4rMjLTdHPjphnDl43lQ+e36+NyMPWz4q2/gOed9iPurtBivYiWo+Aq+wHNRDbz4C1oGecKdyPnmsNV1EYHc+KqP7ZMxjfD6GZ/DP4It/PjlDQ4lp3YE+LcN6/M2Agz4+5qlD+MyDPuA5FbIApng+LeHp95rvZj74f6RE60dRPgtT218yVVE+30S6ojnjUD7tvh5R+OlBPnEu1UZ/WEg++P20c1BgTT5i4MzQ5StiPo82sRr1T3A+2H7/vrlwej6Ent0uejaCPg958OAh+Ig+f8nl0Rakjz5Fp58Sy6+TPpOt3eDyA5U+gfXHF4OzkT4oTtAN5ASMPri8l8cO3YQ+yFzZr6gHdz4DfVdY59tRPuEoMUBqbCo+ROkwGjcQNT7FCn7avAE8PnSS5zDhuTo+4yEN2+uYOj72LntrFJI0PhDvgyGjAEA+Mu065QGxPT5rqdV198hWPlil6yUsQFg+/Zn2TX8rWT6XpbQn6r9mPq/t6RTgcnI+LxGYZUsmfj7Yz4wjUjKGPtk/SogJxIw+YEu/wMLsjj4vQF1Im5KGPl4sd3IA620+urXn2RJVYT7Wj58V7B5fPiS+71L+vV4+MUHQwSTxVz60V61C9ntPPqdw1jkaQWA+Xt4dFGiCYT6yatJ/0J5WPuYm88+6Tlk+Mu4gsf6nVj6A+djlLWpKPivMTJDOpT8+NR3wRVgHTj591O3PSRZQPryJA+d/J1Q+9t8qBIkgWT7g8rVH7EZaPlcieVFeHkE+CO65JDzHTD6pXDwRun5VPoPuwSa9i2g+SOdEJKGbbD5tlK0gwZ5zPomEX1XVSXs+0Asosmbmfj5l1wQlqSt9PiIZLRyPAno+ZnK8tEMPcj51piFulqBpPvLLV1B+OmY+bZtrWOaIUT7KTAnTuFVEPiFHnpxAxkM+zriHXb+NSD7l3c3dB+xEPoz+3OyqVUk+pnIIFb6oOT4lrilmkqdOPnXhzzpFAFA+MHCuk1gNUz7d5I68rvlXPv5OpW66w1A+AB0JiVbfZz5yob6KyUhqPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1372\"},\"selection_policy\":{\"id\":\"1371\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Kudt6wQ3JD4LqVnAFB9BPvhOEJEjQzQ+5h4dUp1CRz61htMyIyg/PqOuubnDWkg+WWswFq0jRj5e5wC5+LhGPhv8eGkWSlQ+ktdxpvT3WD4bRBKkNIBhPnRnstHKjGg+CT2O/Wbjbz5jJ6Bu405zPtsleKBATXc+yWToMRhdez74uEZoZ4B/PiKCeveQ0IE+f4H8lE63gz5YNeiLWK+DPqXV60MBV3k+AWUmdzK2ZT7u8rgmIHhUPrYUtxqClFQ+cKb1Nyh2UT6QEZX6gb4/PoPh+p5Tskc+M8bTEqolTT6SIXE110ZiPqZXNytvOnA+pBLKQalhej4AKCctDoSCPvCx/nS9U4k+QmIUAif2jz7ZmCLFtqmTPgjY4Smq7ZQ+xAzJbXD/kT42L0ZK/WWLPpK+vx87FIU+IFIfgYbydT78xJzbeFJRPmB/U581CSs+/N7AQXHrLz6KTCtyZDczPh6UK4eNfUg+aBxSn5MGRD5oUGxZW90cPio4QUXiqSk+SJqMfXiVRD74vgwawRNYPqa4vTWKGVQ+amfMJzSoXz4Ksq8P4mdnPkVDPGH9RXE+4CuMDoIRgD7FM2M0VviFPrjL7acKmYw+in+6Bommjj6uY2q0svmFPgNcQh1leW4+wpRS+1RGYj4i/lwuQnRjPii+WeptMWE++CrhYKuWWz6DO/Ea59RPPugwvFbB4V8+0Fh8cLFIYD58sI73uQVaPkw2i8XJbVE+GqG5/yi2Vz7kJHAAX8hFPjH6nho010I+VIs1IcztVD4D3EwMhwxWPhzAYAuEb0s+CPNwKN+kVj42YR5ikZdYPolo4I+eWUM+HjschjTtSz6o5kqZJe9YPkq9VoivxGU+/vM4YZuicD4X2qc3l9tzPvhQgdxuJXo+C7hdU9R2fj5mU0kyDFF9Ph+gjva+5Hk+fueTvhXHcj5Rz5JhZHJoPh/DdIkHc2U+YdGZ75OoUT6YBwZrAGsxPgd1fHzWDD0+GNn9VDYcSz5d5VcF/pI7Pru+VDSFxEE+fXaMs7lkQz6rHFLrkCtBPjIHf6EUbVA+4mfI7BkQUj4YqaZcU/9SPjdJIF16EV8+WPIjxa5iZT5as5kc6nlyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1366\"},\"selection_policy\":{\"id\":\"1365\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"73F8amEFOz4VBdfugrFFPvnhmvsXRz0+Ck18oYBgRz6ERMukc9NDPgHXs71peU4+Zw347AW8Rz5UcJi8AIdJPpkKN0Zlp1A+BleLsq2HWj61Y9noYLZhPuDBAMejQWk+o3+aNHQhcD669jyeYolyPrfz4QvOMHg+mLfSDOcTez6if0aFuxd/PgjK0RRosIE+WRG++Y+Qgz4jHGGGPauDPhQheGMDfng+vRUol0+TZj6+3vRJMoZOPryV9/nkrlE+T7NX0MhvRz7dQk/MwkxFPpKn7LdN10E+RFYS1FgGTT7dVxA3bvtiPjzl7bmlWXA+TPgqTQAvez7ZXAMiHYKCPjvaqxwctog+dH7AkNx8jz6mzR16uYiTPknBiMmEs5Q+lJD8FKvIkT7X46KyOOCLPknluM2Wk4Q+MiqZLZEadz7JXp49AxRRPrJesWOgAjo+kbt/+FGOJD4ohJGC9dE5PqRzlzJsii0+nbR1k+iAQT4t0S30b9cvPgu8IDZM3j4++jRatVExOD6GEANk8h9WPkqFoh43jFw+7wCFm8V2Xj5PsbOlLYZmPsMyReC3iHI+ynBSSrV7fj4gHgBQ5x2FPiVzAwwIM4w+aY00w/dNjj4jcZJH4AuGPmnFhMG7om0+MT9G7W76YT4WgsiNMb5jPqqaU1qoM18+g9wSL4k7Wz7juPrkJp5bPjBabiG4OF4+9hIyfpi6Wz7X/hw7gEFWPrwGY5Dp6Es+QF7BVs7GWD6FnXL7dyZAPkI2SWa2+UY+gJnRoPtKVD7xq3tghhtTPkkjMAHZjlg+JexNTvWlWj40LXoai2ZQPpRa98XQzEc+FtcfMPAXUz7TbYzv+LRaPmKHhEu1r2c+kuUbFXbYbT4yddIvtx90PnuDg701pnk+Ido6Ewpvfj4k7cldPuV8Pr4j6trPb3k+NheKRSJ9cj6E4BAICl5tPp38avdAmmA+swYQOTT1VD6CxZNWNh5NPrOR6oN9MUg+Iow9HcOoPj4+vhKigDdEPgCYJ4U2slM+EcCVCbLNRD7jy2a0Yug2Pio4eByM90w+zShgWuPsUz6olXYRZuRIPnE0T9Lj1Vo+B7bfexgpZj6Ap4kdnW1uPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1336\"},\"selection_policy\":{\"id\":\"1335\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IYorAldjPj7rYQI+Q8JFPvVYI6o7BkA+ZQQX9s+wRT4r21V+Pf5EPkBEnUhCz00+lUK5hbxMSj5xj5fcK1ZGPirRyRaA5FI+2aHCJZBQWj5F9+yQl0RhPvxHyEj/mGo+5DIA2Fhobz5aGHzTQxVzPjJjra82tXc+V0fLKapZfD6P5IBSaaV+PiOuvq3WtIE+yPX9ztJQgz7CBRhBjGKDPjk71NA1eng+hMcTjN91Zj4bqxTs3BNRPizKIBS7PVI+LEDyhPayRz6lN/GC199GPuVWjPeai0w+OC0WjVbVUj6Oi0SYqkBiPjTR3XUi1HA+Mx8coZCfej7Ehrl7vtqCPsjXVioqBIk+SQC37v6jjz6U4tueAaKTPlMOS5+T2ZQ+Af1/a1a4kT5QeC/lCKuLPrBI3n2HhYQ+1QIvXFhKdz6/FTlDB69LPruCK7dKgCo+TcWGECFhLj4p6M6EqYMtPkNA1hAp7EA+pccpmLePQz5mLUSFWZEpPr7Z/ANayjY+gSZhgJ09Rz7XKSxH11paPlK4B0rYylk+Lmb4I0m8XT7nj9SlmOxoPlx5JBPPWXI+kTdPB9DMfj5wG9dZjCOGPqolnG0CsYw+XTpdJgtRjj60m8vkpXWFPmrZpkcEZW0+tpJVNSzjYT5YAKWOLgtiPj75jcLoTlo+9PzsxL1UXT5Jol6EySJXPrcxMMMhklw+n/D1qbQJYD4IAls/Gh5XPsx7Ytlc7FI+tRhIm8M9Vz519jZcfN1IPkD3+ngnh0c+CbcYmn+uVD4M7ThBu91WPp8PvrSzJ00+Pkikn9bMVz4dduwEyy1ZPt/UPm7AMlE+HAIjWuLvUD6AVMKyZIZYPn8gpRr7Kmk+J3eOiVaMbT4Ayn4tjBFzPtgzzmU6Q3k+j5l8Pvo9fj67EyGLSPV8PvyWlUaGgng+FVUhK1Xucz5Gep/JgoprPm6+d7Vot2M+UjVsu0WyUT4cL1rwhUZAPjpcTBdzEUc+9WJD5lMnQz6ivnqYUcdFPl/pSmoL5EU+SE8YdI45TT7Petp5+Ps6PnSPbQhGL1Q+ysOnjzcCXD5Ig5qhtw5VPs6Cw74eK2E+xcuugQqlaT4qt1fRw4lrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1368\"},\"selection_policy\":{\"id\":\"1367\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1325\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"7vpUXbRKQj5GhkKYYWdEPg6vj5deAzc+ZhyEQVKDTD7miDA/BilCPqJ0kzH5iEU+i6Y6W3McST4zEG1r9G5HPskeMdOlEVU+U6h5aRkvVj6izSWFXrRiPgAw5Jck+Ws+E4k22FDzbz5+tD309mpyPmIYEoOgv3c+1tCP1BXSez6AvzkRnh6APu2OY5MpEII+prVbW1eogz5xT1p+YW6DPheO1b7Ajng+Qd41YJsqZj7mKRYkwr1OPq90o/i5ElE+4lYLgSHGTz4pxW4efkVFPmcDooX+0Uc+XBro6IWdUD58mkYeRkJiPj0CK/pVD3A+pMeACIuiej7M45xBnD6CPqFEwMZibok+QquVL9Vzjz6Wjinx+qOTPp2QZaipB5U+g98TEQb4kT4s/ePb4/SLPpTgXCm004Q+7sELW9Okdj5CvO7jZ/1MPvUfQLajSBI+i/6XFh1KNj6OcmZ8kR80Ptf0mn7Fs0U+QHYpkTRpMz5NjGIKD3UxPlrbWUAGST4+9hMcXJMYQT4xDVt5Av5WPvB5W86DAl4+XjPIRGM/Wz5TVZCjDMNnPhMTM3M4bXE+RzsiHS1jfz5FtpSeGpGGPi3cJaLFLow+zBHfb64ojj5ye9ZnNmKFPvHryPzZtWs+yilGyjD8YT4+6xaeXOlkPkWoH9vNN2A+2ue1l7GxWD4+g2wa21JVPl78R4G4PGA+8R21C6PtYD4jf8ckEKxaPhgKY5VmQlI+KLYkmmDxVD5j0i2oXjxJPrkyUzyTNEI+q/tbCvZjRz4k5Qi5nzZNPuVJC8JkoVU+s6dEGLnsWD5gOuL9A1VPPqnef9d3yFE+OJ3VpLDPTT5UK4q6YCxaPmMBrJict2U+D6fH8IaFbj4KeYU68B90PiY++X1qmnk+lWVJ5nEhfj7Fuq56s1V9PuJ4GpGdLnk+x0OF9bn9cz5YvDucx/dnPlZkdYHcfGI+ldzwsHkiUj43tIfaZwBHPp7wcoc2+Us+WNnHNdSuTT6A8Br/zDJEPlBRwLPDRUE+GI5uATmFSj7IAx+HHfJNPvAdS0gHSk8+lgbgtSSgSj5TV4mNDd1EPlVb54U26mE+cOU6zjfXZT6s0Bo7VFdoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1334\"},\"selection_policy\":{\"id\":\"1333\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"P87c/hOkQT7JpuDvQe9GPrMcPF/wHjg+YY68KI2nSD5v4jqAz+FBPhANZBu5FFA+ZQpAhcjdSz6XtRN/YMNOPrPemMarHlM+ltoqCXZuWj74rs8QL1piPh3KkzrHF2s+KscgE4wNcD72RNHx+gZyPgeXaCk/NXg+oyIo9zKrfD561R0j9rd/Ps1/awNb1YE+HkZ/vM1agz79QzBkn8uDPl/a55H+MHk+69IUTkyRZz4/yrhUDWVRPtzT+ZwdyFM+fYu5zH6ETj6LMexQJOlNPvZCPPX0xUk+cBrOGlwTUT6T4LVmgP1iPjmQjRnXv3A+0eUMdKsfej5YqA6hlJ6CPorCrjwl6og+3782nSiOjz5DIAqbl5WTPjlT2cO2x5Q+JowcsCZTkj5dmqJOB3WMPiF9My1ToIQ+dK86jnTOdz5eTyLtE0dRPmT1W6C/qiA+C6T5lcYqJT7HTA2QwdkxPv7r6krVt0Y+XJaTPPYJNz6G7kwOGA81Ps4gYQMi/jo+16v2u5k3Sj4siOmRrb9dPmcAEALkyFw+13qZWK/QWz7i2WGXi5tmPr/7BS6lV3E+iol6ULIhfj6cmSNtdKGFPg1Ob3Io54w+VzfUcSbwjT597OufEkiGPvmIvsClCG0+XMj0GHNKYT6JseluegVjPgqv3BTvF2E+IKmYjAtvXj7m26n1zfhaPh80OFWf3mE+HVsA08JjYj5+YmZZQs5VPjhiytfKuFI+YUTjkewgUT7FGHoh4bs9Ph8toHwmVkc+D1CIhFthST6rT0QdhV1RPoqGW5930FQ+ma8FXwAhYD5eW94UUzpKPplv8Foz9Uk+/QUjJznEUD7dw+rBXJhZPsTR/mKQ+mk+Z5mIapfhbj7CXpnDX4F0Pg5q0Zd9HHo+STBRRoDNfD4C+8j1AfJ8PuMsUq21d3k+gFcMqrvEcz4yxkrJRa5qPphfS3CN5WU+P9N3fKVHUj4fZu/eN9hCPmKQDcctZEk+9IbNfPsBST7/VPqc6ZlIPgZt8b6YEk0++B0x067OTj6H88CtTfkzPsYKWCkIv0A+HqTh8dx+WT4vNyiWp8ZSPt8nMfnqxWM+RD6xaIudYz4tYbcCAPpxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1338\"},\"selection_policy\":{\"id\":\"1337\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1326\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"djQwKgJ7Qj6r+6/SF+Y4PuZf8XLjwy4+xSk34v+HRj7GsmSOEtBIPhStWCAAsU4+AZcllayxTT6WpnHHggtNPunalcHUfFU+rWe9Sb2HWz4TJ2z2luphPmYgdd/NA2o+kbgJSCambz7HYGYKc+9yPhAAmrZvEHg+m/o/jM3Lez7Q3RH/XiV/Prl0XjGMBII+5RUM7BpSgz4tF4gHoNyDPjMvJ0Lt93g++YhWJrenZT6KT9FScMdQPh3V+I7f+VM+a+ryasusSz5rzDJiNrE5Pj7TVwWdi0Q+gra3WpQNUD7e4BejiZhhPl4a9sdbTHE+jldNVQjJeT4EQe51R7WCPqaVLD3FQ4k+dBabw4LWjz5lAePR562TPsltrfSLk5Q+xFzqbE/+kT4r0eJ1W+qLPjv1rAYDnIQ+IxYa/gZ4dz7yFsxRcaxQPmtXMi5dniE+mxTD5ZOPJD5NIMAwtD8uPgUEfbiVWz8+zbeIh6xTOj6DvpJSjWM+PqPhvt7zbjY+aqKOJ5q4Oz5y9+ByL4JSPktLP1GSy1o+mznx9KGfWz5+wX2gEjhmPjlBFotC6HE+NEaNp0EMfj7YvblA5ImFPuMiVr3U3Iw+t5oCTP7tjT6ud18pZSmGPpGoUOl1+mw+aqPoYSJ3Xz7EmZquAX5kPuh6iHgJk18+shGZUXl+Vz7LtY4JEONXPrCX19wqHWI+c1NlsVoLYD5H3urNj55ZPj0fiFaSqVU+DowXe2SqTj41S2fs+pNQPuvjf60HXkM+kU9b24wyUT5GC5IjWNVOPptZxgy8j1Y+nNOvaMrlVz4tZm+6OyJSPgd87n8jE0M+98EubN+4Uz4LD/nG6oRaPqxhmnbpDGw+6/BP6julbz6tIbkZ2PRzPqz0y2nXcHk+lVEqil56fT4Hk7uorPh9PimmiXdwy3g+bMZ+l1Gkcz7P8YyLtjlsPkxzSn3cY2M+jfmNhKgiUD4/z1GuLY5MPsXvlMrIWUA+Hpr8X9vzRj79gAfmTJVPPvSJcN92TUE+jps1Qu/fRz4VWrXXyXM1PpFWS1h6ZkE+LpMpZGbdWz4Ubba3YcxaPg8SxzwQU2E+yXo2lTGeYj5YVv2zCoJlPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1374\"},\"selection_policy\":{\"id\":\"1373\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IgObyHZNNT7vKDP4Xl45PnZdadvk2zQ+/RTgZWVuST6iZ2w8I8RDPmovFCYSElI+fodgGEMeTD5tOlc0nZJJPga++RrdCVQ+nDwgtDA/WT4fm29S/hpiPtiGDRQ+w2g+55RfrVZocD5p+Qk0I65yPpnU2NWB+Hg+akd5aGUTfD6VLvql63V/PmcPrnZfEYI+oxVgl2x9gz7qbvYGWDSEPh8bvAyLXXk+ZNfOIVZIZj4yMLU7yGpOPmEH9sgwU1A+Y8YOLIsxUD7r8JCvWkhAPlypW9Hn1Eg+ktHL+xrPTj5UOijwfxxiPgedXG284HA+83ZgnK62ej4wt0lg7JyCPiOWrZyPzYg+VNH+HXt8jz7Hub659KaTPl8aFJEH75Q+iw1kqwAEkj4+Uk7yV9uLPv0YeQDIXIQ+V9VSCgMFdz7qTEfoMEVSPqUmMSMmRjg+UK0t43l2Mz6tO6NIN9wuPnk9uWLbKj4+vaXI2ZYrTz41Be1RKSBBPigsRLlbHz4+FFUh/6N2Nj57ECEBUwxWPu75XIDLR1s+bde8cVJhWT7xDis8Nn1pPpzxtrUvAnE+OOyWwKmBfj4ICDszmMSFPt3lqL62GIw+lQeIPAkHjj5hPevGatiFPjHb510M9Gs+hLqKhNncYD7wIoebWrljPtABOX9BgF4+aU+XU6AZWj68buoqxA1aPuZlX9i7jV4+B+Pk9cdBYT6rIcekJzJWPvC7x0KVt1g+72SUnHvAUj4Ztyp4E0RSPh1uFprUPlE+YhV1clBBTj663XW1ZT5SPjPfjMW031c+TCy+nNZlXj7K/+eld6pRPq7Sx6BUjUM+TX175K+uVD5NN6ZkyFhWPsvyGkE4PWg+eCDGhTvnbj5RkFJzIpt0PrwZsjM2c3k+S+ztEHbHfT4ToTEbiCJ9Pl3SdQLx13k+YUfPaJA6cj6K9Wj+6e5qPiyd6ue/mmI++1RfaN+6UT5GxRde7UE6PoSYx2yfkUA+hgy6qt/oTj4bQIAV1UhOPn89dhP4qkc+E7OCssInQz73ECLhkAVJPujEdQq/RkY+BEykSGU5UT5sT059ostQPsSnGIalw2E++rEeXhb7YT5OGqMUkddyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1364\"},\"selection_policy\":{\"id\":\"1363\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"c3dHfy4fPT4Cy38F5PNBPqW0liGxtUE+mB/B9R6XSz5pPMFvW3pHPvfxsrmsdEo+eCtGIBpWSD4Pe6GnNMpIPuHWzzMHpFI+j/Cx0xJ5Wz7y1E1bKKNhPkshBm/EcWo+DAo+ZfJebj7VuOW4J+txPuQYE/m5Kng+4TgHvoFEfD5t4Ue1VpN/PviU+IpGFII+oOIIkYkvgz5wXk7shKyDPkSeF5ZTDXk+IgEP0e6EZj4a2MgIr65QPp+HMjfowlU+XaPCS/UwRj5qaW+RoolDPjhHQw6lpUQ+P6Qh4M/qTz4sxDhjxEliPtOxqfVR83A+wwuuFGSMej5/XQaAuzeCPnD0Ykqt94g+Qjr05CWWjz5QrUyjA4aTPu+m19uT35Q+n2FDJk8mkj4CExQAzuCLPqbI8H+M7YQ+3wrsDUsDdz7MCHX2/9pNPpZprpdWxjE+blzlw5QZLj58mepfy7EyPvNHYSGHi0M+2iXwkblLNT6yeultnrk8PpQoi5qDmkA+a3O6FSJiQT6dnjEQ0iVWPgvr54jl01s+6ZjW7F9xXT61DasePDBnPqiALI3bY3A+qZIONFwSfj5qr0f0vRuGPlEanJ28QYw+LlG7GaEjjj4QXojR9l2GPoSgQrxC/G0+QRE5unuSYj6MQ3stPmtkPhaIFzkP0GA+xqJnWC06Xj7GD3QpWLBYPoHqrK4kdl0+vcsZrYbKYT5uAiKph85bPpfK8A3YZVU+oxiZ/mYRUT4DAq21FA5CPn2GyFGKBz4+xkkL2Z/xUj5BdJZ2ag1YPgsmLu2tfkU+suDf7T4vXD4GWgJiQUZgPvr732bosko+w20i+d4fUT69M1sPqwddPvMzbcccp2o+Z0C94XFKbT7WnRmdVFRzPozJQFt5lHo+2T1uMnFkfj6z/8GULCF9PsAKrrSYGXo+RaVlYBtPcj5f+CDE9H5rPvwbFUgVYWU+jw+A7/xqUT6nGIRICOJCPiu9amKPAEU+WAk5m2lFRz4EK6c2AvZIPg71sAeK5UY+my3ybs8LRT6WPOvCF3JAPoTJHXdw/UI+SmkbHuH2Sz6blswg4LRMPtEWdXsnlmM+eqosQ0tZYT48kq83lylwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1390\"},\"selection_policy\":{\"id\":\"1389\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"o+3IndHcQD6XXlCmyS1CPgmDgN5Ugjw+GV5f5qCIRT5pZkL1bhdCPhuWf9kdCU0+OtY/V0nnTD6ORCdI/KdLPnN2nSjq71M+dSQlae9HWz54lljgyXpiPiwqCEZQRmo+YNOJEXJpcD7ypcCQvOhyPr1yYuqtZXc+Mj12lonWez6WoLOcLpl/PsEVmD4dpYE+NtPNjJlngz6KiQJ76cmDPjD00hZFlng+7LDTNAyBZz49AXfPXxxOPvKwgsJSgE4+wLoAEcRlUj4zHP0xp4dEPkWZVjyw00o+GLdm/v1AUz7gyg1Xuv9hPsp8wogFEHE+ZWVP5Gayej4L1EaoMYeCPrdV9ChQBIk+NatsxB7Mjz76XT8MKKyTPqMTZXRz8ZQ+gqYmM4TJkT7YdnJ+YJOLPtnlz8ah0YQ+X/I6o8PZdj6wTrU27mlLPkUBPODyTSQ+yLvnBMlwKT6KdAnEh7AyPs3LtIU8UEA+Alr6606hRT6ch1iMGzk7Pk5dzX4ed0A+kKhD/q95RT40PE9tE7ZUPvQSlwLBVFo+UXCzTR1/YD6Up/zznOVnPjI/v2eqvHA+iVtV9qC+fj4LTvbwBaWFPirHUKL6xYw+/M6ngzqdjj5TmyUjFDKFPm23uzu7TW0+p09N7DTHYT6fPCEXeu5hPnRsMAZjUmE+Dblmc4pBVj7su4nxuAZWPvMZNP0q4WE+YZl0HaQjZD7eH2yduKFaPjZtDgy+zVg+i3D2hWpuVz44VY4wt3w/PvWIHywzLEQ+MZVXtnEhVT7j9Vfqt0dQPiLNPpTsWFU+VYx7Aag1WT6P4+Snt31WPliuZctt5kE+jtuIF/XnTD7qaX4AV6xbPln5Qjmfvmk+WHnLRKFgbz5/l1aeykZzPqIJCmpqj3o+SQaDriC0fj5f6CNujnN8Pho4uy/9NHg+yhgzY5Mlcz5QPbAOr/xsPgguRBeXxWY+Sf8IMcKMUD68kKiIIGRCPi6Qp2ILdDY++SD/w55yST4Fp6CFhkI/PnzfWpaoyTw+si8e8OdfRz5q+O3X+N9MPviv5gsf3k8+8E/TrsywTD6WGg9XHBxXPnMNrlF5FGI+6QXZ1Qr7Vz7dPVqWEcVpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1332\"},\"selection_policy\":{\"id\":\"1331\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1328\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Dsgkk5IxNz6C33qBnHM6Ppzr1OQcVzo+J2kCNMj5RD41j5/V22dCPg3aJedPJE0+th+Uj+u4Rz771eI7CxxMPtLEI50McVI+IYewa7D0WT4+7gcxi11hPpCSuyeWXmo++WQbTuuJcD6kBhDlReVyPouLM4apaXg+hNPuy5Woez50S0gRGOJ+PufcIcRq1oE+klPOvH90gz72Ctmr73KDPkrhGrd6Gng+ab3Kl/PCZj5P12riowtSPkWCaIOVsU4+JeXO1iSMPj5GoIvthOVHPkNfeNX+4Eo+0Km7bIhMTT6RcJGtJwhiPifYBrqUrnA+CbAvxqPZeT46+P7Ji3KCPvP+kfwyEIk++UPLWKTgjz7salxBO8CTPuTtdQmvuZQ+Ica7MSDukT4pRKgEdASMPkRsvkGb+4Q+AH4QF94bdz7jbXwm8TBOPocGD87JHSk+SRDt3vGPPT7Rb37Ln2w6PqNhN8KdVEc+ZZZeSVVmOz7Rl9P6IldAPt7+4d4Pvjo+nHqtkvARRD5Gb9oPMOlXPh/XPjBG6lk+IPkdYN0BXz6g0irbplxnPo9vgMrVMHE+57VfvZPWfT5KXWOJHUOFPvuY2pOytYw+Z3SBUAArjj4Yphqv1iKGPnQGI2IxiWw+GxDqRibmYT5h7K880XNjPjSjADLbCWA+Zy564WLMVj40wSidKYBWPvhej9QduF0+Z7U5+4tIYT5UQSqLm61WPhqUMvGmhFI+XbMK0E2yUT7/zXNOT4NFPhIubkAZAFA+NA1JtLdDUz5S5S1xBClJPtm8wCcJUk4+wilLChcFVz4OXqxIwBJUPoyHEJoPE0k+bmyirTB4Uz4/wR0PBwJcPkXxkHvVL2Y+0EImtetmbT7kwBo9Swl0PgvC6iGBuHk+00O6joQRfT7e8ayCKj99Pl40VNYdvHk+M2eqXnw3cz56fbr4p3JqPjzAqeWm2GU+xo/s8Cw9UD7j6eC9k0c6Ppu2UMDhmDs+OW4tpJ5qTz7iy8vEVwhKPoYN5EF07Ek+nUZKNB5rRz7rXDDLVsBKPgSUfXD14lc+C26FVS/rUj5U1SGAT0dgPoNigPt+BGA+Am00gO+GYz4DHZuhmt1pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1370\"},\"selection_policy\":{\"id\":\"1369\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"1329\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"6105efae-40e7-4c96-9068-bc20950bbcd4\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"08b073ed-8dc9-40b8-a003-6404023103f1\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f5bee966-ef63-4ed4-874f-6e8b919a9f86\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"9e112bd4-5145-4905-9490-d64f7563ad8a\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1769\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.06, C/O= 1.42, [M/H]= -0.33, T= 822.25\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QKx9bo5CUT6TknEFXjRUPvIfyoHRslI+tkCXDdWtSj6D77+JRGBEPqjooJ57xjg+Su2X3G3vMj4ujEPcoJ0mPuMEOQQ1/Tc+o1N+qXR7Kj7jpjFgVDAvPgwbPNj9gDE+UyqGs7yDQD6EEuYkqtg9PgkkVOTPKFw+aLaBx7S7ZT6JsqetvqFwPhvgHNc6AHU+TKQqzNVXeD4s6pBcL3N3PgFJTTiNlHM+EoTXJ8Pcaj7h9oM6aANlPtOTK5qm1l8+5NieF9gUUz6CdzXw9sVJPlXvn+Jzq0I+a5qoneseTz5YpCSxfq9VPgiU7zghDFA+FhFOghipQT4iC0WAeQpFPgeYmic4nEc+SDPqoLKRSj4jOizs9ipOPhV+SnFUt1I+JEE93DC5Wj7mq1ii9dhWPmF7M5eTaFw+Upjxp6M2Uj7wjY/Ce/JZPsq00C23HFc+PxsWWxf+YT7Ggl+Nj31bPhj0A+3AGGc+SjwGFPYvgT6rQoBiBxSLPo9ihXS4kYk+kOeYdXXVgj4kbOxXldJ6PsGCPxnsjG8+2U5xjpotZD6q/XlmLXhbPpTPF+OQ7FM+AvPSAWrRUD4KBOcoJOVFPncGgOJp/Dc+75jNbDxmJD7GW5zCwuwjPvugt2KmuiA+FO/tUDxgJD7DutZCfuUZPjg47ANkeB0+58DhFH0vRD4rgUpywrZ3Pn00EdK23YQ+1l7mzbSIiz7jMpGz/V6SPhrjm+FpkZc+8hxlvUG6lz6YMCiFXw2TPm4t+oqfZJA+mGQvVLLeiD7xpm70YQSBPs/9f2K5gXM+IiWItAXhYz5s8lcpcyVQPh7dNjKvuUw+5jQI6hlFUT6qhT74iBdWPu6m9N3N/Vg+jCKqm10DUz6Qbjw7BlZjPodmPNyYI3U+Xt9z/SovgT4+MbGKGkiBPgGCtuGnGoA+tEj3imz3fD5Lz6gXcQ95PhLHwFh7gnQ+grrkNqQucD6c0mhcvYVqPv4YXxkq8GU+shOcRdo7YT7PtgQKzZJaPk6QmCCAxVM+sciv1aepSz7e+VcKQdVHPmBvH7uOqEY+cjvIkIKYOT7kGv9qyShDPj7EcbNkOEE+h12dExRROj5A071hbHsuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1799\"},\"selection_policy\":{\"id\":\"1798\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1772\"},\"major_label_policy\":{\"id\":\"1771\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1771\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"},{\"attributes\":{\"ticker\":null},\"id\":\"1772\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1775\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1768\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1799\",\"type\":\"Selection\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"eBGGZmZqRz5efhnrrxtWPpXBk3varWQ+jE7CvQkHID6gDmjyrPEhPjRYqWlr4iM+wL4cQ7JdKT54mf+YH84zPu7j602byVU+9I+KCq3jDT44lArszl0UPiADTZYktwY+OLK6l5Tc4T3wWcdoOGs3PsRJjp4EcfE9ALKAIelUIT6sczYOMPEyPsqPTAkp00M+iGSG9oCFIj58M/6l4KE5Pqv4AjhzZFs+BLJiVQ03Hz5QFe9wpV8YPsxm6KQWqyM+jMnnrBOC4D1vWGEE7opHPgZ7XgUsJUE+XHJAH1yC5D3g9pAxpLABPmiXj4HuaA4+QmBoXwcVRD7AgBq++QQaPiVfpkyUTFE+OMqbnazkUD6YFcPqo5VJPsgcBIrkJ9A9yBS/tquwGD5B+qd4FRk8PmTM0LVboxg+3FXw+Abk+z3MH6tINGLqPVDrdm6uMOg9pFUEtsD35T1CSjdF1XA0PpC4D8rdFgw+5BPZ4DorDT5aSKU6b68yPnDYK7B/TBE+qITxhLgA7j3WygtotycgPuyBA4p7h08+CPdC4TcwOT5oALpxHPbuPQyC32ZriOg9tGIgNx6FED48BkUkfZ0FPn5mxWFAHSk+0Nm7sq/W7T2sdqXevmEUPqYGEWeOfxk+7hQPPCIcED6cBViLgVoMPrxU6+92YQs+vQzOdVWRND5iGWdc1JwfPpz/q4TjewA+5AxgL5gyRj7sZigDh7JNPii6XzRotwI+tK6DvtpCAj7w1iE2gswBPmAFCfx5I+I97nl/CdjFOj4cAdXKvkYfPkhmJGFSof89iBdX+iGLBz5kl2hbuuEDPmzSkzEC6v09GhjrhQCQST4AGUMiOhUIPq/j00LZdig+3s33N8xQNj7kolQd0RgwPkw1egvGn0E+XClE4YBbMj6Um8JftWkCPpBMs52zvAY+GgLgNPW1MD4fu4u5/hg/PsOb4rq/jUE+0AsF2xUpOj4x3VnEwWUtPqx46oYKC/8918IjTDdRID5CXH/sK5UzPjabXiLSYzs+VGMoXhVcDj6hyG/k92ZAPoAACnehJxE+9vQWiHoARz5xKgr1T6AyPmDQSsDe2zM+SAHoCspyQD7Tkrc+YH9LPn6UlGGEi0Q+PqCLnqxjRz6o4+XHTms4PsmnlYdogDc+8Bpo4Dm/PT6n9M5B5YxNPj7nxFvfzy4+CU1Po+HxSD6s68sz6LxGPlMrSuaZV0U+CiBL1MaSQj6gNtksf7U2PtNJ3ieMH04+QOecAHyKWT6EJMYn33tUPqMCS9MqpFw+VjWz++KaWT7AmD//nUpfPqErA7ThD2I+IfN4UEhHaT5STLI9y/9nPuzYKPJIAWo+/WSx8yJDbj4xwOWCwwpsPi1rrzqOTm8+lnbuwgVObz6u65VsfzR0PnKyeFPHZ3Y+WSdzcOHbdz43LgC9GYx5PvMLdfN/23o+Wba51HApfT4OLTAtcWB8PuB6UkDCj38+6KaMulCygD4asMDMQymBPqcTLxVljYI+4BdwvTZRgj7nCfhYEjmCPpSJGgMszIM+tttaRrCQgz7uSXCwa+2DPhDqx0qKvIE+dwPz5Hmoez4JBwbEZNpyPny6VHiKUXA+AejLoJ1xYz7uiJhjbMBcPliC6Sdkb1M+pTf+T0ddQD4hVGs0f/dOPngHnCNRi1Y+Ev5fkIPkVT5ZfAkGZ6MrPqqZUqkeqkw+44AaM3B0Mz7gYgJT6a8bPhERlTYfDUU+hCSgk4hgPj7YYx0WsTwHPmZ8hac6CE8+2ETAKEiYND6AmYxjRFpGPuoxz56N0FE+YpkWlHJfWD6zgFyZ5UVdPnogRoaWW2c+ZUmQruH7aT5uaXU5f65uPpyNgSOF9XQ+gOXsM6fddj4ML9/LLvl5PhiLeFwwsH4+kV9vYleAgD7TjydmLwKCPlPxM4BpZoU+2RhJcwN4hz5qHdWirLSJPvPQbG2IXIw+FdugBijSjT7bx+434JuQPjbYuKVawJE++lBtuu5Wkz6W0IihIjeUPkuc9Wz0XJQ+p1yX4r3mlD7j1rhS2J2UPtavA7Xzw5M+yd2KYJ7OkT6tyJFxat6QPgzx/ITu+40+RnPorU0bjD5xG7imLCiJPpD0DuItVIc+J9eHjavNhD7tYEHch6qCPh0d7JfuP38+EXSownpseD4gMqLNMYJwPkwF1FDRFGE+kgsDZ5REQT55qkYFazoyPrzH+eFWNCs+t0oGGuEhIT5UMs7i1EoFPgR9Bwz/hh0+2LDsBe3NDj4AHf4g9NwKPhCpJzhNtNA9qCOTgTX8ED7sM5s1EyUEPoZzHfObriA+aPfLfUpyKT5gQbuNNGgzPokxP72dyjU+QuSYrobuPj7oZFSI2+4FPky8WWbfxeQ9FG9pmKuOBz70UZukQxIVPu3+d4/WtzM+r2gzllWcLD5/i2J5CDkzPvAOrQ7tyA8+DEgbsrYgPz6eJFSbQEEcPhZo67MoIjQ+Chq93MQzQT4QEwmFznkIPqSHxYQSRVM+MXnf1igqWD7BSqjfsGFQPjOYzpdyj0s+M82XQWYOWz6QRbOJnkFXPizD13+eal0+Tto7zXnaVD7IwOrgybNXPv/34NlB/Vo+kpGU4WI7Xz4qZSMcZ3doPt5/2oVbbWI+zMs6bqjKZj50zO202BlqPnq2SBdaoGo+BPJV0HwWcj7wtuTfL1RyPmS8J113NHs+QMjrBVgrgD7oCh/qIU1+PmmMygoa94I+uCOk0do/hD7gL/aSZSKGPvOhG6da8Yc+FJXrmOJ2iD4z9d5SYG+MPqwRx0e0gow+sYw/PfZgjT4/wnFIIRqOPohwxiif7Is+P5p+af7Ejj6jMdKxHSqMPsYews0TL4w+okHT8mI2hz4WjWhdujyBPvzYWrO1snw+5gZyGkCqcz6gl7JhO8trProlyinCsVw+qlSpZQSVXj7O+b+Enw1kPru8/gfdz14+e+lVMGSrYj6W/FtKseBQPj/U9DLwpFI+OMSjxSaSYz7BiczxtFZmPnKcLgNLOGQ+cYE72yPcYT4o/UEYYb9mPlbCeu/2W1U+cJFtSLWzTD4ONlgL1yVAPnqVo7mYMk4+iwXSKZ1hXz5MybLcmC1YPpQ8VC3Y8GY+YFl3vMHEUT4iQp6TGFBZPrC7n+XzhVQ+uFb1yN7FFj4YXnlyXQ4QPs3B6pivlTw+i6zdYvjSYj4WIO6W8JlnPhpkYfhlpls+cA8DKUofYj7cfGE5tUZdPiisJBqnWlc+hR/RauEFYT7c8/9vyxo1PuSmrO42zVo+coKN2WOAWz6FiGJfjSFVPk7xE/FxnmA+hiUXEpFKUT4kw1HJLZhePoyVoOUGIDg+Ey7hLABAND4r+4R5zok/PgGPU8or9lQ+mSeDEKaLVj4CsGcELYVDPujTBBfs+gA+PEgY/OZyCz78OvwsYAATPrDU8H1jGhE+XIG3bG2lKj5tLQOMIY1DPnBGr0lWH/89gsGmUCKiLD7w+O85NkQfPshy0grrwxo+aO9EYNfMBj7o06Lu1w8wPh6+KhmH208+OvOq6WVnQD64AMc5F10oPkD9I/sTMSc+sqAAfuLwVj4broYhNNhPPphqPArmfTU+yVrk1P7gRT4G57X2ZkVQPqb8LC94sz4+iO2fYhA1ED7QOyZ9OjYBPnjF0kBLSM494GrbsXQzTT6mDKCSn1FKPhAnBBf3oz4+8l03+sr6WT4DrR8V8DtMPgL2hvwKOlY+VqQ6sGvfXj6KnOQ1opxdPpCGSTvVMSo+LDrSdPxhIz5fGlK+52FmPkZ3ZHRTAmE+gP4woePQWD7bpMFc4QFPPi+CsX+twTo+8gItz4UxJD6oNjiGF3MOPrgIrQrD8Ac+avzq/Z2wTT6ZlouQ14UxPoTU1v2vYkE+6GkuyvTzOT4D0ugBIXxBPmpyrfk2B1A+xs/36rcARD4lMEAft4JHPkiQPomTPVk+SlV8X1kjXj4cNIQ832ZaPueabctrp2E+Iwl3dl/cYD7k5BqwDHtpPiSZNCC2UV0+n+CycWRAaD5ZuDXQTYxyPgxkVVyAbls+4gm9/7wyZT6IGBOCGKdvPpcobUFtqWg+M5kpGtjYYT7UJtDwa41vPmQiSqAAmm8+4e9kkhVsdD4ERk7yvFJnPr82DQWwdXM+SD/VNQrpbj7I0jvjqpRyPg0taLhYd3U+aXA6rbwKej6iruY9qC93PvguP4E3Fnk+qAeNnJXbcz7u+MK+Z4d6PjKNM1U+Ln4+bFTRuki7fz5HEn30VA14PmW6MyGd73s+Jh7rKNXRfD6B1uncmkh9Pjzz0xNzzX4+tKjgVNW2fT49IHOrRk5+Pvv6HxvTXHk+y8kPGXv4ez7D3FU67bR8PrRiT40Z1Hs+psjegRvDdD7kdpkmHkV7Pgsc240sYX4+AHy2tLWKdT4+ohXWBY13PowcqniXG3Q+qhdaT9rHeT5tuodqomZ2Pjakklj1rnE+pw6jSjS5cD7oWfha3eRxPuOpQiJ5R3Q+pT1CQtbwYj4iq8EmtutoPkzp3PW3qnM+VBJwK+9sYT7v0ahuEtBnPrzhurslWGg+uzdHb8ZSZz6mlr1K3NhiPl/dtvkFc2M+6ch+gQNIYz5a51EEnERnPhLkDnVat3A+tecDDOxwYz5yZZWWKG5MPjy5S0eSW04+jn1ikyRNUT64SFZ0zapgPvwLN/1sNVM+gD8qIBLNGz6oghZ+MzwZPm+wGL/Ce0I+lKnyRExaCz4ou+PpQoAUPgxZXe5enAs+GSSW4jHeRT60a7whrzErPuxTx1kJ5QA+6LX4ZOtoFj78bAePnikZPmMiMcXBhEY+CIZXieohMj7MQG0gu4AGPmxv/6U7iCc+fpim0WFhQT5YqQ9Wkxz0PXJX9RpT20w+xBoVZuBqED7l0DHlV55IPsrZ3Xjr9CU+kqv7SW/gQj5fQaqaXTI7PqgZY9lFEiA+rLNUcENhET74cFlrsfIIPgO9sX2h+j4+qBkx+398Gz4lVqNXH+9CPpxjp0ga1RY+ELqale24Hz7A+eRuD2EWPohbTh1JKjU+WR5tv7KZUD4w6kSRvfIcPkDPbVa2hTI+sHyY0VMeFT7UGAiEuiYZPk7asAI24zQ+khtZntwtNT7oFmuB/O01PtK8zQNoGzY+nJvgztkI9j24YEeg3mXjPXTmnK2ysBc+OD9oEzrMLz6NahoyJM1EPkx2uNy8vlA+9EO34K+PAj7g718lNcYcPujw7b4AmgU+IL5II/esBD68bCu+u3EVPpgO7QlVTSA+9IKSTJroJT5CQAUWBWY0PmSj1leh+A0+YLphjpd7FD4sax8HH5H/PSylskwTNic+8KBMJE9F/D00hgFVkGUyPjili2UbWh4+5KkrIVYxnD2TVhlIa/tHPhCy6c0WFe49GDQ/UhC3IT64rtB96z3dPeDb+hCP/Og9JOdOPM4e8z3oT5OtGMf5PWzsDnjhKTA++JFgIj/cNz6qgQPmvhlAPhQIEscS5iw+mGU6wITaHD6KV4ekO9lTPsCpAQDJpwQ+AG+g2ibvHD6UbdcL9pk6PihJngcpQ1Q+PC2u2WaeGD5ETK7uSvAMPjxRY1p+GPE96IklEdhYHT40ppVPJ0QrPsiWWXkk9TM+eUDer9oUZj6s2zi/Yc0sPhjIjq2KrD0+OoK5X7f8SD5I4AYaBXdTPt6EKuoGJFY+z1GqaFuZVD7GTWg8+VNmPhyXKpy6Jl4+CYlRoziHUD44beAOn6MxPlCMq+W6LSs+HNV14O8KIz4cObwusr0VPqSDxpGggDg+8uFrUmWZUD4SPBgkJ/xRPlk26pvEPGs+yHu0noyqMj7S0rx/UeFTPkiBsjie21c+NDxLF5TzRD7qfNmsfOxjPkBCRKLkPkw+5Oox/sMORz7UeGWCnthBPnAFJk1M+V0+74ElnkEfgj5oKocg15yMPp9FAyXdDIA+gMMmL0IWej4s1pvXWjZUPmQPeM3RMWg+NH5zjcF8YT4AESLObbFfPjQ7kEJ4ZVw+EE3XlJsVWT4onr09DE5bPh4Ernu/doI+\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1775\"},\"selection_policy\":{\"id\":\"1774\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1769\"},\"major_label_policy\":{\"id\":\"1768\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"9e112bd4-5145-4905-9490-d64f7563ad8a\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"f5bee966-ef63-4ed4-874f-6e8b919a9f86\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 90.21, p-value = 8.12e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"1a76ed82-e00b-4ca7-b425-70da5f1ce0fb\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"8817286f-12aa-4f24-ac27-f9ba50f076c0\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1997\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{\"ticker\":null},\"id\":\"1998\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"2001\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1994\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"cOn1iKIwWD75WjBggnlcPi4Jzaqha1o+DSwXg7bJUj5bHZUymZpMPlFD4Ks5XkE+wYpX16qFOj5gBzSuB5svPhwYDU3b1UA+LKepbjCTMj5sIlcNI+Q1PhwQAl/KkDg+KupbG7Y9Rz7qRxuKTBJFPoP06v9a2GM+xTlkTEKHbj5UNh5/JlZ3PvG7m1N0an0+SllQzNUCgT669JIWYFqAPqS1xLB0Nns+ihacCDKfcj7XF8btox1tPjonnXxaJmY+TGJkwy2HWj5zKQSc2+dRPmjzMdgtx0k+Ddrms3J6VT46H+AjVCJePvqI4tEDZVY+i489rIutSD4dSiVeqlpNPiGkggDNdFA+iicgqrqSUj7mMO7J9iNVPjjeWnNWTlo+s/WnbBjYYj5tzhTN6SxgPsyg1PvFKGQ+J6pa1AgZWj4GPlVF8o1iPtSIIEULhGA+yG+OqdGXaT4FezBz459jPihUb79RbHA+uQzRKvE3iD41+Ef76PWSPga/sW6CypE++r8zom7riT7w/4lmZ1mCPjdHxtQbhnU+FlCP31F8az51hA1mx8tiPg57hhnVPFs+hew6IvxCVz4SSXP3v2NOPp7tg929jUA+pGKL+JkjLD5ivRM8b5ArPsJg2IVbFCc+tAyPgDkOLD7mdU1f4cYhPjP8G4tYSiQ+WwKClqbnSz4kLBy9EGWAPkTvfibR1Yw+sIgEZv0Qkz6KPQOIJXyZPjS/MakQb6A+s6mC4gOeoD7vO/FUY72aPs3uhdIMv5Y+I5U3HpgkkT7S4xOGGmGHPk2InqFYuHo+qyLDXZhBaz4aAJsrvVVWPtVEm90T0FM+igVpEOLRVz4QdBVSI0ZePkDJuhpaDWE+wjoXTzjyWT79fZ7ud6NqPhM3J9fabX0+8ArU418+iD6oP+icBX2IPl+UApcX4IY+rtMrsJSUhD4r+NZCCsaBPvanCVh2AH0+Box9hpPRdj4WjzoB36tyPlxfiS7Z3W4+LKu6mXEnaD6JplVJ/4tiPtwycFYkg1s+Eia+kREjUz5+Qkkg2XJQPtCSol2LRk8+x3lGIpuHQT6GM0GWi4dKPrnb+Jo5zUc+gORzf98nQj6iBnOeeAc1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"jvBiE3ziXT6kkzYaNr9hPlTuttBayGA+1SQxTx7cWD5l1EePLFVTPpmRIXQtN0g+KyAjBTnpQj5yExrXmCY3Ph6dry4BnEc+ro9IIs4uOz7MoGPnzf0/PideHxWKAUI+UMVfvLBwUD40mMyD3KhNPoPLiC8idmo+uBA5v/kCdD70VlmBrOt9Pq2bYW5klII+nuTenM9XhT6CqK0EKIOEPt/lYljuQYE+uAnTxv4JeD5OGpvqifxyPjSxti6fbGw+me07GvSbYT4Tk0qDsyFYPhZuw2e9tFE+gQ2cesgjXT5nSo+6IZtjPgYR20sL01w+1g5QTCsLUD5UuW4TBERTPoX8RgdurFU+4GURRMGKWD40gM7buA1cPrN0HBrYxmE+x+dqZWJGaT5zESVItsVmPszUZak5f2w+6C3XjP04Yz4iYa0FkUtqPjijDU9EVGc+EbsepN8gcj47T+hPnttrPjKTfnDcPXY+EbX/BiQLjj5PMPIvvpKWPsCWpDZVKpU+KGhNK++njz6OAaPxsN2GPmVF/OgQkXs+OpR0PoIHcj51byT4kbFoPjK2ZTjqFGI+SRwazqMVXj6XYwVw87ZTPjAqk36nPUY+HtNaF1uNMz6TV9RnoJszPt+9S0bs4DA+JlfTeZuEND6CXyOI+McpPmkYGU7jkiw+buk4FTWMUj6Qd53//A2FPobHJFVdSpI+WJtJvY+6lz4Cm8wLygSfPkIYJmcJkqM+M1CAHcWGoz4NtfIf7xWfPpsel/XddZs+a3iyD/UqlT7WU+jo/paNPun2BGDil4E+A+gMNKiUcj7yffx4N5NfPp00ozQsdFw+ACi+BmrdYD5SlfqUQVBkPt576cgqDWc+rnk05kqRYT6TRqd9j/5wPjnCMZajEoI+6NYQ9DBgjT4U/FFqpXCNPtuZTzf1W4s+mlHPZ9etiD5RQS4fOYqFPnkQlYM7xIE+br4913gefD7yywGE8wl3PuzdZ1/dFHM+NN15p0jnbT6f6JrSWg1nPp/glG9NLWE+Lslj6FxUWD5O1s/TjANVPtC8eAPI01M+da++7I7RRj7kqMCvqadQPsecTucUKU4+Eqq9AARVRz7YQVt9Ybo7Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2045\"},\"selection_policy\":{\"id\":\"2044\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1995\"},\"major_label_policy\":{\"id\":\"1994\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2045\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=90.21, p-value=8.12e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"7qxijXZpUz52hgbR2pVWPpgkfXf9bFQ+2DjFmw5jSz5YBcgoeylEPnV6gRHpPjc+VmloLI4KMT6PDHFZe0YjPmPQO0q6TTY+eZDlMJq0Jj5uaguUZdUqPpSRvMdp7C0+dYQvVo1OPj6WQnxXTbs7PhwahdB3llw+QSdsNdmPZj7pNm9p9M9xPhvsegg763Y+gnKOGcHAej4euU3v/rl5Pnbpk176FXU+xOCJzEUnbD7Y5DtwNK9lPrZJeKKn4mA+tHB2t5M8Uz5d2F8KK11JPlQ9KWbksUE+cFvv7a0ZTj7CNIR9fYRWPrZdarj0/1A+CJi/Axd2Qj42LbhGfadFPjCYVrRZKEg+rhC+G1shSz56EV/aL65OPnrs/oMSjFI+0xhLEaPlWj6qOX9v8EdVPo2sVt/UU1o+7l7Octh5Tz48MHf/oh5YPrgQbkYymVU+N9+jk1elYD6oVsIH525ZPn7FjUMdFWc+RmzkKcpUgz6apSe659uPPugJFh17640+n2iaolIbhT73InE6gB59PiRMKWgsdHA+tnVGGupKZD5OW/nCDbJbPsAHx9Opv1M+gLjgmH+JUT5tGcyTHs5GPtGQ3+1jkDc+Ovve8F3wIj7F9by7xskhPvMZUX3JPRw+gXhgfScqIT6HgxdASR8WPs9bb2JRrho+r3LPt58xRD5pbwj1WPh4PuTyHNwaVoY+fjeglRtPjj7sHdZwjNeUPnR8Tkm0mps+NsVAj0tanD5Q5bs77xeXPtWuOUGAypI+IKeDQzCIiz6qvlwfJSuCPtxcrVjTnXM+OhFwjRDyYj4dTWMDFypNPk/jsJ4mIEk+2EkfrqUCTz54BlifaJZVPqCuSdOHCVg+3uX6F4c8Uj6IwzU6t3hkPvQ1pG03y3c+vECN0gzwgz4Dj/E6dFWEPkaBxysBHYM+6JrKsDkkgT4bsJsyIjp9PuwqS2WchXc++Kq0extfcj7RV4t9jANuPvETTnKmvmg+/Ifso4hUYz7c2oqMmohdPgaiuBOfxVU+yr16HISPTT5KI/qSjjxJPvQrTEXSPkg+ZjJ/ojYvOj4el2/MLtdEPqFYP8xpd0I+CouDdBegOz5A1gRWPdEuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"iBZ7B9RUYT7lfcvhCbFkPp/gXuqsx2M+drRlhE30XT5mYC6Uu41XPrAXQZfy9U0+4bCaWsemRz7akHsB31A9PgjNnlb/Sk0+T7c/vNgzQT4Ah1oVnztEPtBBsdLUzkY+SNmBdOh7VD5q3xQxwW5SPnyZmKOgAXA++hm1Sq7+dz4wK4RL77iBPpgD8hMB1IU+pwRo3ET6iD6twJmjiACIPvZLe4ErUoQ+4C8q6Y2VfD7OM2CpwbN2PlzHbQQp2HA+ZeYyIEFBZT5Y0B6a+VpdPiDJxyBiv1U+65zFG7LIYT6jP70NDWpnPiWeqTINHGE+mAqPoOUmUz7HRyWfmh1XPo5Uni0ODVo+E4VSYM6MXT4ulEbcS+1gPpJtyhH6p2U+EFFtSamrbj4LQ3rdp05sPqmPx5oKv3E+QOtQ2gtnaD6Fg6PlGGVwPrAj93C2C20+WgMUrxyadj52z5sfB2JxPpsEJ46fH3s+wir2gyV3kT63VSZOs5qZPtJQyxYa/5c+wl9zlQU8kj4CcPQ62KeKPjygzCqAUYA+agEZITagdT5DRrV8UqRtPtlvRdt/02U+Jyi6K5DnYT5q+9ghxIFXPmZPJ2UzA0s+0wYxG/kmOD5iu/+n9H44PsOn46mnWzU+QKFqe6T2OT7SibKjmj8wPlqz/pMJwzE+RDGShDhnVj4AbDVC4faIPrbFVXo4ipU+SQh+WP+jmz5Q3XyRsdShPjyZsOu/M6Y+S5diOKP3pT7WBZScsV2hPpNe44Zqap8+/jkoDHWLmD5/vM8nemaRPqGMfQQlJYU+u3A2HGy8dj6/63KR9KljPuUDc2EW2mE+T9hqo7EFZT4eTFnuHqhoPs5t//nAFWw+IKTCgSNsZT7Oo9vX7xN0PshC80r144Q+jtCrAkLXkD5cViRmG8yQPvSsiqILH48+YIowZzIejD5uYbdIMrOIPv5O9HyogYQ+vk8DcXhIgD4gr3ZGDLR6PqKDhb12JHY+MgCkzhhdcT66IavVDNVqPgqp8BAQDGQ+W5Dka6yvXD4nB5yqHthYPj7wo4+kV1c+CZDFvY5BSz4Yd6kU2H9TPvAPBFtyv1E+DcnvxdesSz6t7mW4naxAPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2067\"},\"selection_policy\":{\"id\":\"2066\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"2067\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"/2wsTo8JWz4gwU5K9/tfPutyHaYr/l0+cSgkaerSVT6JMUmUPNFQPnXqAJCzykQ+xnJnOAcWQD6RCxpXDnozPp1a3j3uOEQ+bRt5SP/gNj6cYV16+PA6PjVmoETvST4+ZboNyosPTD4P8POGlF1JPgPguZc+J2c+zZa1ck2jcT6kxjuA6aB6PtO8F0zPpIA+9J6XtFItgz6eTqANxG6CPrFAxbAo3X4+IZC3Z5hUdT4dE7/wrcVwPjfsqdV8SWk+vx7u+4rfXj5DXqePxwRVPspn3FNUmE4+x3NBlx1PWT4CrT/mJVZhPgDN3o4HnFk+nNZuIvFhTD4xr0ChrPhQPlPQ5IOdEFM+tcYY972OVT6NWN7S15hYPs/jyVMD7l4+vW4JaT0PZj7w75wKUHljPsw6ndL/U2g+fkGC+8AiYD6UT4GlwWxmPgYWF8on7GM+9fLleMjsbj4gZYzhwL1nPq3z9hcXVXM+5WDomIohiz5CFJ2VU8SUPuMqq9JrepM+EZTA5q7JjD6/gBYsjJuEPk5G4V6Wi3g+RTw8LqvFbz71+RivrL5lPrnzKMVUs18+Z4Qq+E+sWj4QhN+1aXRRPueLC66yZUM+OELQCZTPMD4iG+8C7LEwPkDuNwkaayw+wG4NHdxFMT60arjzbMclPk6Kmuydbig+TvU8MARAUD7a0VzehrmCPpQfMvSiWpA+BBKnkcZllT5G7OfJd0CcPrvrKwiNAKI+83wBgGQSoj5++HE6qemcPrSGDmR1Gpk+xwb1lsYnkz7UG363DHyKPg871LAO9H4+rDx3MboacD4Gv0tSevRaPrk8HwkgIlg+xaryDlvGXD6tpwKfqblhPo8i0nFCDWQ+DxfADWeKXj6ShfZ0S1BuPuGu4oDIZIA+7HDya0jPij7eHZ2D1faKPh0XKWcGHok+pJL9Czahhj6+nAKxIaiDPjryzFc7IoA+OqXdLgZ4eT6ELZ5C6dp0Ps1GVvvkQXE+MESaIF0Haz6UR/gNrcxkPg36zJrf7l4+oPcQPbe7VT5mjAz6MrtSPhwDJdmGu1E+npSCB5UsRD6nQuF6b+tNPkC8I0En+0o+SccYwHG+RD49JOcN7WA4Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2025\"},\"selection_policy\":{\"id\":\"2024\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"2001\"},\"selection_policy\":{\"id\":\"2000\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1998\"},\"major_label_policy\":{\"id\":\"1997\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"2025\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.06, C/O= 1.42, [M/H]= -0.33, T= 822.25, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1995\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"8817286f-12aa-4f24-ac27-f9ba50f076c0\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"1a76ed82-e00b-4ca7-b425-70da5f1ce0fb\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:03.923391Z",
     "iopub.status.busy": "2023-11-28T20:47:03.922872Z",
     "iopub.status.idle": "2023-11-28T20:47:03.927005Z",
     "shell.execute_reply": "2023-11-28T20:47:03.927450Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 90.21, p-value = 8.12e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(90.21, '8.12e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:03.936086Z",
     "iopub.status.busy": "2023-11-28T20:47:03.935426Z",
     "iopub.status.idle": "2023-11-28T20:47:03.937214Z",
     "shell.execute_reply": "2023-11-28T20:47:03.937556Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:03.940717Z",
     "iopub.status.busy": "2023-11-28T20:47:03.940198Z",
     "iopub.status.idle": "2023-11-28T20:47:03.942294Z",
     "shell.execute_reply": "2023-11-28T20:47:03.942636Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:03.946715Z",
     "iopub.status.busy": "2023-11-28T20:47:03.945439Z",
     "iopub.status.idle": "2023-11-28T20:47:12.694092Z",
     "shell.execute_reply": "2023-11-28T20:47:12.695086Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.719613Z",
     "iopub.status.busy": "2023-11-28T20:47:12.718896Z",
     "iopub.status.idle": "2023-11-28T20:47:12.721638Z",
     "shell.execute_reply": "2023-11-28T20:47:12.722038Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>553.411429</td>\n",
       "      <td>0.290641</td>\n",
       "      <td>5.005204</td>\n",
       "      <td>822.840440</td>\n",
       "      <td>1.333986</td>\n",
       "      <td>-0.366984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>1116.504235</td>\n",
       "      <td>0.458315</td>\n",
       "      <td>0.153255</td>\n",
       "      <td>24.954447</td>\n",
       "      <td>0.115003</td>\n",
       "      <td>0.046610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>54.210000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.803046</td>\n",
       "      <td>790.631429</td>\n",
       "      <td>1.178236</td>\n",
       "      <td>-0.442488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>102.310000</td>\n",
       "      <td>0.001305</td>\n",
       "      <td>4.879450</td>\n",
       "      <td>806.064453</td>\n",
       "      <td>1.235117</td>\n",
       "      <td>-0.384112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>145.260000</td>\n",
       "      <td>0.003880</td>\n",
       "      <td>5.040227</td>\n",
       "      <td>818.385213</td>\n",
       "      <td>1.388488</td>\n",
       "      <td>-0.367115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>193.940000</td>\n",
       "      <td>0.514000</td>\n",
       "      <td>5.108218</td>\n",
       "      <td>839.068054</td>\n",
       "      <td>1.426560</td>\n",
       "      <td>-0.351277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>3081.910000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.217818</td>\n",
       "      <td>860.601420</td>\n",
       "      <td>1.447822</td>\n",
       "      <td>-0.288510</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius   chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000     7.000000  7.000000  7.000000     7.000000   7.000000   \n",
       "mean   0.810000   553.411429  0.290641  5.005204   822.840440   1.333986   \n",
       "std    0.144016  1116.504235  0.458315  0.153255    24.954447   0.115003   \n",
       "min    0.610000    54.210000  0.000000  4.803046   790.631429   1.178236   \n",
       "25%    0.710000   102.310000  0.001305  4.879450   806.064453   1.235117   \n",
       "50%    0.810000   145.260000  0.003880  5.040227   818.385213   1.388488   \n",
       "75%    0.910000   193.940000  0.514000  5.108218   839.068054   1.426560   \n",
       "max    1.010000  3081.910000  1.000000  5.217818   860.601420   1.447822   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.366984  \n",
       "std       0.046610  \n",
       "min      -0.442488  \n",
       "25%      -0.384112  \n",
       "50%      -0.367115  \n",
       "75%      -0.351277  \n",
       "max      -0.288510  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.731304Z",
     "iopub.status.busy": "2023-11-28T20:47:12.730632Z",
     "iopub.status.idle": "2023-11-28T20:47:12.733172Z",
     "shell.execute_reply": "2023-11-28T20:47:12.733569Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>240.26</td>\n",
       "      <td>5.590000e-13</td>\n",
       "      <td>5.101621</td>\n",
       "      <td>847.959696</td>\n",
       "      <td>1.414677</td>\n",
       "      <td>-0.367115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>120.75</td>\n",
       "      <td>1.120000e-01</td>\n",
       "      <td>4.897945</td>\n",
       "      <td>804.402466</td>\n",
       "      <td>1.388488</td>\n",
       "      <td>-0.442488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>83.87</td>\n",
       "      <td>9.160000e-01</td>\n",
       "      <td>5.114816</td>\n",
       "      <td>807.726440</td>\n",
       "      <td>1.438442</td>\n",
       "      <td>-0.350147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>3081.91</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.040227</td>\n",
       "      <td>818.385213</td>\n",
       "      <td>1.447822</td>\n",
       "      <td>-0.377277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>54.21</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>4.803046</td>\n",
       "      <td>790.631429</td>\n",
       "      <td>1.178236</td>\n",
       "      <td>-0.390946</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000      240.26  5.590000e-13  5.101621   847.959696   1.414677   \n",
       "1  0.676667      120.75  1.120000e-01  4.897945   804.402466   1.388488   \n",
       "2  0.743333       83.87  9.160000e-01  5.114816   807.726440   1.438442   \n",
       "3  0.810000     3081.91  0.000000e+00  5.040227   818.385213   1.447822   \n",
       "4  0.876667       54.21  1.000000e+00  4.803046   790.631429   1.178236   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.367115  \n",
       "1    -0.442488  \n",
       "2    -0.350147  \n",
       "3    -0.377277  \n",
       "4    -0.390946  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.775515Z",
     "iopub.status.busy": "2023-11-28T20:47:12.774917Z",
     "iopub.status.idle": "2023-11-28T20:47:12.777912Z",
     "shell.execute_reply": "2023-11-28T20:47:12.778253Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"36e8b4cd-4762-41b6-a40e-3b9a50ca9763\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"c8c64e1a-a53b-4cf0-a6d6-bb115ae61496\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2293\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2294\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2300\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2294\"},\"major_label_policy\":{\"id\":\"2293\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2297\"},\"major_label_policy\":{\"id\":\"2296\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2297\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"qA102kCn5T/KL5b8YsnnPw502kCnDew/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]},\"y\":{\"__ndarray__\":\"AAAAAAAwXkBI4XoUrvdUQHsUrkfhGktA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]}},\"selected\":{\"id\":\"2300\"},\"selection_policy\":{\"id\":\"2299\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"2296\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"c8c64e1a-a53b-4cf0-a6d6-bb115ae61496\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"36e8b4cd-4762-41b6-a40e-3b9a50ca9763\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.781482Z",
     "iopub.status.busy": "2023-11-28T20:47:12.780998Z",
     "iopub.status.idle": "2023-11-28T20:47:12.782753Z",
     "shell.execute_reply": "2023-11-28T20:47:12.783094Z"
    }
   },
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.786321Z",
     "iopub.status.busy": "2023-11-28T20:47:12.785814Z",
     "iopub.status.idle": "2023-11-28T20:47:12.787942Z",
     "shell.execute_reply": "2023-11-28T20:47:12.787560Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.790824Z",
     "iopub.status.busy": "2023-11-28T20:47:12.790281Z",
     "iopub.status.idle": "2023-11-28T20:47:12.850904Z",
     "shell.execute_reply": "2023-11-28T20:47:12.851232Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"68351202-c898-441c-b24a-30bf7984998b\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"b92e4ab8-b101-47f1-8ba3-3559b7692483\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2652\"},\"selection_policy\":{\"id\":\"2651\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2511\"},\"major_label_policy\":{\"id\":\"2510\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2514\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2652\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2507\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2510\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"2511\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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AAAAABbU/D8AAACAIt78PwAAAEAs6Pw/AQAAQDPy/D////8/N/z8PwAAAKA4Bv0/AAAAIDcQ/T8AAADgMhr9PwAAAOArJP0//////yEu/T8AAACAFTj9P/7//z8GQv0/AQAAQPRL/T8AAACA31X9P/7////HX/0//v//361p/T8AAAAAkXP9PwAAAIBxff0/AAAAQE+H/T////9fKpH9PwEAAOACm/0/AAAAoNik/T8AAADgq679PwAAAGB8uP0/AAAAYErC/T////+/Fcz9PwAAAIDe1f0/AAAAoKTf/T8BAAAgaOn9PwEAACAp8/0/AAAAoOf8/T8AAACAowb+P////99cEP4/AAAAwBMa/j/+////xyP+PwAAAOB5Lf4/AQAAICk3/j8AAAAA1kD+PwAAAECASv4/////HyhU/j////9/zV3+PwEAAIBwZ/4/AAAAABFx/j8BAAAgr3r+PwEAAMBKhP4/AQAAAOSN/j8AAADAepf+P/7//z8Pof4/AAAAQKGq/j8AAADgMLT+PwAAAEC+vf4/AAAAIEnH/j8BAADA0dD+PwEAAOBX2v4/AQAA4Nvj/j8AAABgXe3+P////5/c9v4/AAAAoFkA/z/+//8/1An/P////59ME/8/////n8Ic/z////9/Nib/P/////+nL/8/AAAAQBc5/z8AAABAhEL/PwAAAADvS/8/AAAAoFdV/z8CAADgvV7/P/////8haP8/////v4Nx/z8AAACA43r/PwAAAOBAhP8/AAAAIJyN/z////8/9Zb/PwAAACBMoP8/AQAA4KCp/z8BAABg87L/P////79DvP8/AQAAAJLF/z8BAAAg3s7/P////x8o2P8/AAAA4G/h/z8AAACgter/PwAAACD58/8/////fzr9/z8AAADgPAMAQAAAAIDbBwBAAAAAIHkMAEABAACgFREAQAAAAACxFQBAAAAAgEsaAEAAAADg5B4AQAAAACB9IwBAAAAAgBQoAEAAAADAqiwAQAAAAOA/MQBAAQAAINQ1AEAAAABAZzoAQAEAAGD5PgBAAAAAgIpDAED///9/GkgAQAAAAKCpTABAAAAAoDdRAEAAAACgxFUAQAAAAKBQWgBA////n9teAEAAAACAZWMAQAAAAIDuZwBAAAAAYHZsAEABAABA/XAAQP///x+DdQBAAAAAAAh6AED////f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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2514\"},\"selection_policy\":{\"id\":\"2513\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2508\"},\"major_label_policy\":{\"id\":\"2507\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2508\",\"type\":\"BasicTickFormatter\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"b92e4ab8-b101-47f1-8ba3-3559b7692483\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"68351202-c898-441c-b24a-30bf7984998b\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.868388Z",
     "iopub.status.busy": "2023-11-28T20:47:12.867516Z",
     "iopub.status.idle": "2023-11-28T20:47:12.907453Z",
     "shell.execute_reply": "2023-11-28T20:47:12.907779Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.918944Z",
     "iopub.status.busy": "2023-11-28T20:47:12.918223Z",
     "iopub.status.idle": "2023-11-28T20:47:12.921489Z",
     "shell.execute_reply": "2023-11-28T20:47:12.921958Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:12.926361Z",
     "iopub.status.busy": "2023-11-28T20:47:12.925815Z",
     "iopub.status.idle": "2023-11-28T20:47:26.504036Z",
     "shell.execute_reply": "2023-11-28T20:47:26.504444Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.226674207051595,\n",
      "    'gravity': 4.713886785507202,\n",
      "    'metallicity': 0.8487105329831441,\n",
      "    'temperature': 961.3925069173177}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.713887   1.226674   0.848711   961.392507\n",
      "std     0.176301   0.141678   0.121391    41.542813\n",
      "min     4.283842   1.002545   0.673636   893.488892\n",
      "25%     4.607698   1.103481   0.762165   926.117767\n",
      "50%     4.706202   1.240645   0.841603   970.501221\n",
      "75%     4.817861   1.309722   0.904753   988.982895\n",
      "max     5.126900   1.486419   1.188250  1052.935059\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"513d4488-d1eb-4641-8ae7-3856e9be51f6\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"067b7123-4325-4a39-8c32-43a49a1f8e30\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3031\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zfsknJDFQj5mkG/XFmM+Ps0MCyEgV0A+vm09gKlnRT4Famd0Rlc5PiHrZtGbx0g+HWGiqj/vRT7LH7nBi1VLPmCEH86ZLlA+OPpVRF1XUz6kd1tX5X1aPis9T6Ixo2A+1P719mR1ZT4MTXy9wB9vPhkUszxp3HM+3eRxICQ5eD6gftvWkll8PrxhFbgRVIA+2OOpRnwlgj56NQM3NjyBPsv3wUd/CHQ+M2zfvpT/Yj41XI7M+NlSPoAXsBo3HVI+htjellkvSD6jGbGTq65CPomPOv0290U+lltmSCFIST6U4lwwp45ZPoar0YHvS2g+bkJ+c2W3dD6b3GsQ5pOAPki/kk2waYY+OOyb+o8Gjj5wIbYtKkOSPplRhATJU5M+O76EzjUDkD75ZAQxHtCIPlMyErUB7YA+HLa/6yTmcz5H4ZCv/9VPPn8guWac7zM+i4Mi6B7gUz56cgQnyYRTPvEMkgVjFlE+nm8b0nwMUj6WyADYj+5NPhn69i3SyDw+PhmgTE/BUT4rRPq8WmBePmH806MMmGI+jDtIWE+TZj66drQ+iShvPpwFaAgIRXY+r5kSJocygT6xcOnpjvuHPj21/fNBM48+ZrkSdLpikT4699riedmGPhpley7PTm4+AaCgKORuVj5bRVopztpjPjdSViRMXl4+XEu541l8XD6iDP7YNddSPiSOCGCr610+i6J90SxdYz4v23DvZBlcPqmXhdrOPGY+YoyX5zkKWD77BNmWVO1dPhRkfuFNA2E+DLIT+7OSdj6LP7dw811rPoYl9UYWSHQ+yMr/pueYdD4nj2GCwbpyPjggV+2nN1k+lAz91AA6az7/xOOBtuxvPgNFfPwtK3M+z+S6i6utez6CyGltHqOEPsAponR0z4g+PwAGyR4riz6qN3YPvDKLPp310f4oAIY+lzxmwn0Ugz7SvLiJTYR3Pqx3WKvw5HM+nCfKBX6TYT4gDmgKallhPiDyG0jhTlc+AmDDMUp/Uj4CAejBXJhVPozhl8dFE2E+Z9lMvME8SD70alfCk2NbPjC4bDiIA1U+SQW+IiW0aD4lq8Mt9OpwPq08CJCJLWg+AJgPibFsgT6sbaBR0/GUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3047\"},\"selection_policy\":{\"id\":\"3046\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nO8gsfy/PT6y/dS92/g7PusX0Oa6W0E+NUf0fu2hRT6jjZRU9dw5PhIAJ6o87ks+VzNhmdQdSD44OObeAvZHPrTUET7ook4+sifNez25VD7U93Lvsx9bPiHDtQ+VYGI+KoLOyF4jZz74GGsFwYJvPgCjNfBpv3M+vlDwbWFKeD7MRk4X4rp8PimfEtck9n8+mcsuyOHdgT4wu7ozSwKBPrJeYbMtpHM+TE7+uzonYj7nyJ3wd4lTPlHtxmOCCVI+nc9E2VxFTj69fsct9QFFPn0/Eoe1FUE+c78b8ZIRSz5OZ2/thJtYPnXjiPsZNWg+baiQknwPdj7KXVbn8zWAPqSCHsTivYY+ut33nuaWjT4073DNhGSSPmqhyh0j+JI+E5CqNrU0kD4jvZldj/mIPpkfnG5JGoE+EqF1P18OdD7wlF8hzMRPPm9nFg7pASg+umDq+SNaTD4WzMkIy4BHPnCNowVvRUc+YTmGNa0/UD6bjvyl6gZUPlNWr1YhBUQ+YxUG8G2ASj43rGT2qMZYPlwOOi5661s+9KW4Qx7xZT7P2QvgJOtuPgZwg8MiMnU+U26xG/fZgD72ZnbbFpWHPpt67XFIUo8+KOMnste1kT5iYnDyynqHPvP+vartO3A+4qAQ6+ncVD4YzvUT+jtiPsX2Ct9IKF4+CFBaoPVJYD6X9RDl4s5QPkYQ3R/4YGA+SU2k82iQYD6pyI0HAkFWPiRY7QG6OGc+Hq/GvzLdXz5jTOHjXo1fPuMozT8azmQ+UGUXMRD5aj7XtareAhJsPpESTvTnWWs+jY6XYGttbz4BPIbi++R0PnNYGSEZ0Fs+QlG2Qg0eaD7RvmyHy4FtPvsppbyJEnQ+XdtR3qtueT7JDHE2t0eFPtU78+J0YYk+GvnQOyUMiz4cVQCDm2iMPsaoQqM4iIY+dywKcDQqgj5W2Yi3lud2PgDksz9nmnU+Jcg5ICaCWj6T/xwtHb5gPugthPzuxVA+3bCzQ0RqOT7EAGnGyFtJPnE4w0x22Fc+vd5MU7CpUT60knOzCgtWPlx3sX+V41E+hb7CRlaUYz7bP7dRX1FrPuGVTNiXqXA+MFXwSW/qjT6McZtUFDeSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3073\"},\"selection_policy\":{\"id\":\"3072\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"n/SzejIcQD5rxTzMZg09PtOVpNUMH0A+Vv0N7df1Rj5MNY8w8Gs9Prk6vLAgU0Y+yxLVCg+mSD6UQQHewnBJPneC3OZDFFE+lGfZZrP7Uz7FdfojSFZZPqpefJIqjGE+kdcW2HycZj5Iqy6LTd1vPgNbLraKNHM+J4VDx9/MeD4eGx3g2W58PkCkNA27LIA+LXjEPD/mgT6SrMpeVzyBPlrWR8ngbHQ+BkGc0qXQYj56yiBPAD1SPtU1gGgB+FM+Zj1evSfiTD79roO1w0JCPuR//6HDwkA+C9JRcpiwSj46z8qe8ChZPjQf0j0tmmc+2a7S2Og9dT4HeXjnbnWAPrkvNl+g2YY+KP3/MxyqjT5uxHXF1AqSPoyYF8FvqJM++9y+4ynVjz42I1pM/i+JPmf9YkHsGoE+Q/1eCJENcz4pa1mVqZhRPjN46caMJTA+xoazsoNYXz49wDFwQtBQPgHbjgdwV0A+ndDlry6sWT6NiEuaO1FRPuhnqlqgx1E+XTvWGL4yTz5gP6pq8SdaPqTi1siKElo+5yW47QU0ZD64pOs7dT1qPpkeDpaN3HY+WsemQ/W9gD5FR4DLzeaHPry7SF1oDpA+qDw09Q+KkT7wlGUan6yGPoNomjfdRnA+/R/I2OnLVD6MgTPdD7ljPpkyQbCVaV8+3zK4e8HGYD6KFgujd35SPkvtgI2pgmQ+9kgNls1zYj7lHIqvrg5YPvMMGV+paGU+TQu2g0KaWj5cL8J8uzhWPuk4tFb0VVY+CJhSHKmagj6bhvLXx9uEPp52LqCNTY8+1QeKW7KydT5vKI7p3gtrPrs9ffjFTmE+656dN6V5Yz7efp4MtKZxPqFrzPOZBnM+hJUvD4/ffD5EiwSCLbKDPhs6uoixHog+xusOblISiz4OoIdySwGLPs0UB9VhSIc+nPD0EzrQgj6Luz4s2zR5PmVkFguenXM+tJ1/HzyHWD7k3dU1eatjPtInQDVNRlU+nikHf312SD6L8bYzVKJXPhSUWKR/wFg+BDqRGP/6WD7eDm/cfaBbPnGQjdoID1g+c6jaZmgiaz7s4KtKiYVuPkRfU3A6VHE+EyBoG+Cngj4b74lRddKMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3079\"},\"selection_policy\":{\"id\":\"3078\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"B35Lcn3oOz6gCBGjflc6PuBXGMfDFEA+X9drIhlBRT6NlTZCVzg5PuCQEx7Vj00+j0CEUJzmRj4oWHnJ8BFKPoG0UMUnOlA+AggoZ+xoVD6bScsFx9xZPjxbJdQbumE+MaKmHmLEZj5tumUlWodvPnyNP6HzLXM+vaI6hYJpeD5E1h+NSWR8PnMHZbKFaIA+1IYsFpRVgj7HopED+JeBPjZCYnOLK3Q+ezwWXswoYz4FA+0h0hJTPo002BUhOlI+PgRN6zXQTD7s+Cjm6UdCPsrIgQyA2EI+EGN1qSugSD62AgiW6ntbPsoU9kRhjGg+fMbTwlTQdD4uypCjUv9/PiDY83JYmoY+2QUwjOtsjT6Wd/wkj1OSPreYefSPU5M+krL4z1Hcjz5FoUgUXtCIPoDY04nD4YA+v2RPJ68jdD5nW3ocDFtNPpFKGtTTejQ+vPetPzoDXD5NLLanTEtNPkCIIiM5xjk+e8F6J8N/QT78nOvrySNSPkNXIyNZ8Ds+L78ad/37UT4vLJH4R1xbPp8uYLsRcVw+5AEczrtOYz7bXsMG2jxqPmMZuQ4MBXc+JXAx7HErgT6XOc2TK9mHPpSuux6W844+GPDzHviJkT7CPGIHSWaHPsiPljf0jW4+KiQ4zABaWT6j0HZlB+9iPg+B0otEcV8+LaoPsGPRWz69DwweJo5TPpkETznJ0WI+LybcD3KbXz4qdwGM/N1XPq0aj9vXBmQ+AmLvXazHWz7FX2z5MOFePi+pxTp0214+1bn2/I1gcj6LxW46JaptPm1zh9F20nE+rQeN/rb9cD7CzgQjJgxsPvyatkXMsVg+DWIqLignZD7RpDiAxWRtPl6C0Brot3M+5HDD8O5UfD4acdNn+8eDPqpUEHVMl4k++Xnqcyariz4E6Krtc1iLPtGWczXl+oU+DaOlpRUYgT7JnGzoMS52PqRT/Fw0VHQ+ZQmZJBoBYD6FKQj+KUNhPgg+CuiAfVE+T3/WQQdQTT7C5TinoMFTPg/0RO8xyVk+Eh8ibdklWD4vW3kdnuZcPsIjFXOurFg+3iPtmUR4ZT6xPFHWR0VoPtVsJxO1kmk+lzMQI4tghz7+GKLZNkqRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3085\"},\"selection_policy\":{\"id\":\"3084\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"NBe9tIIVQD7U5Qw9I4c/PkJkeZPhbEA+BNogAQwDRj5SdkAFcKY9Pgb1QskfUUk+9VgI+NoUSD4fZTPC4MZIPhrcOS7Uok4+7X+pHGEqVD7jirJ48oRcPqPwoGwCEmE+6EbJnwCWZj6EgLw1vbFvPixZcfJcf3M+ASL1oYojeD5mtMDH/lB8PnM3xiN/X4A+x/hkXerIgT5S4/xNdRyBPgvHTVpVJHQ+1O0CuSzFYj5p33/YSfhSPgm2svm1oVE+i3xn0qrBSz7RSROzJDtDPg+goS4vF0I+fSpbjTAcRz5Ao4glbN1YPu4/CfQGAmk+7tKXdopFdT5foed9TkyAPomGIrulx4Y+s8Ku5h0ijj440bUr8xOSPj6xE3IKmJM+VqJgGXFFjz51KSqCFZyIPrkI9j07y4A+HsqLWQpHdD5mLNlvRm1QPj4GL1OnfjQ+oTLBTzMnTD6A4qDgD9FSPruNfkygjEI+RCQoZFuXQj4pFKg0q6dJPmLlFcP9gkA+03EZgtLESz4mDAF+LR5ZPuHDW04HYVk+WbVohWMSZT5sQ3nLMa9uPuX0QqKI+3U+K+3oNks2gT5n9Su9xxSIPuDtdm518o4+tMMTIbNNkT4aBI4qbsaGPm1vIoP2l3E+/dseH/cfWz4gBLtazF9kPoJ6htcakl8+Qv+ezKW0XD4SeuJQydBQPicy7pRLqmA+Cqt5DrloYD4YhnedVp9ePkG/JMcvYWM+9FTZEvkHWT4sf2OM/O9WPpj3L1+uLGI+gqBpsgJKej7Gr24IvHOBPhad1gH285U+Bdt96opNcj4jG4LXXo9zPsAoZKH8BlU+K9U+nF2taj5p6iwa0PpvPi7mc4gPxHU+aiMM/aRvfD5xYt6Qim6DPmdJS+M3RYk+YTzNdfppjD5Gtn7QgoKMPtK3bc0I+oU+LI5n7VHdgT6FzMFL0Lh3PkkyMqkGD3Q+aMZ9oJRTWz7Y7W/dL8pePucLVJkv31k+1wj8b5jjVD7tnNRq20VUPu7fd+roTlk+r6tpy7ZUXz5uYlEr3+hXPp8XCSv9RGE+gvPN8sXxYT6KFM454GdvPu/CMx/8tnE+oUwQo2lqiz6MjtkI0buSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3049\"},\"selection_policy\":{\"id\":\"3048\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"fve1HqAxPT4ql5OVH2Q5Pqx1vcPh20A+mOo+Ld3RQz4XefNQyvU6Pu0B3aUpbkw+LVx6ztzFSz7mvj2cTnJKPoiDfMfTsE4+faxIs93NUz6zN1YUC6NbPtlA06yUWmE+kj2hIv2tZj6xRhYAzwZvPnDQ0UYtVHM+i4pKHjvadz4Z9IhdzXZ8PhK+UOKWP4A+uZR9/DL2gT5IEigI9YuBPiLuWbOvU3Q+vbKq6ruBYz5Jy9TJK7xUPtHuz15YvFM+JbT4MOEVUT6d5ADquJhFPmP/7zz78EQ+rmGTgOJKTT7dp3i7KgBaPrbsFjg+9Gc+dpI9myiSdT4wTlN8SIqAPr4zZXqjb4Y+rhk/icw0jj5XCLLSvHWSPr9b4hVbKpM+EXZQRqwWkD46rCLGTZqIPqdQFV7TcIA+GO67B0REcz5rVwixktVQPkwDKo6iES8+OZe9llnBVz6OzWntn2JRPqe7MI5Y3VA+ARgVD+a9Tz5U3mxkjN9APp/+9l0vJTI+8IIISaY8ST6jOQRUJpRaPrGSKPlRlF4+5ogZu6XGZD5se5Cyn3RsPl3e2HsLO3U++vm8H9mUgD4/YTppkFaIPt7n0yfXS48+IHnctbVjkT4QXil7EIuHPr42JB5ZcnE+s4nNqQGmWD6gD1NkqghiPgkNhk1YBF4+p3lFhPsxYD5fsNVT1GtYPv+cD/5fS2A+DnWXTifwYT5BAztDAp1aPtnZlR6K0WI+QHRrdqIfWT4oEs5+9X1fPnP9PYoDx2M+RD+bwoi6gD6jYVNJh5x5PonH/7CPQII+9JO5UsMCej7x/pRKrt13PuVh2Zzcg2U+uhdbRE8QZT6SOqWIdqBvPiYjZWotN3U++UHQ7iM3fD7liAnsLneDPs6mIan4Noo+rE8dXbsEiz6eOPfoXaaKPk0wOyY2aIU+NL6Noxsogj5Lgyj/3QV4PhrJV0efRHQ+jLi3xuDrWj6y/kAV8QtgPs+pR7FauVM+dWD3cBFXTD76O3PeT/xWPkkCL3M2f1I+LjE9frY/RT4Ww6aysrpaPkwY1yMKx1E+OrHbNL0VaD59w5ZFVhVnPsY+jrNqPW4+D+ltNRnrhj5xpKZiU5CNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3083\"},\"selection_policy\":{\"id\":\"3082\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3029\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LnrNrKdnQz5X+vghaKo7PsRMXliwrUA+4Zd3cC2NRD7QxX/ETeE1PqIwuuJoykc+aki6kqNNTT7Kj7KhqXBLPhb1Jb36mE4+OFT7fz2vUz6oo88OXMtaPpHXePrib2E+75jaHhsaZz6bvlbuYWxvPnEDIsU8m3M+yDExMaLSdz7X4JDSh8R8Pi2XQRWVMYA+x1on66oqgj4DGkfCYDuBPuTKu97iT3Q+X9GgEq9RYz7o5kihOiFRPmyzkAfWBVI+UE27he6RTz5l8QDRcGNBPgyLSjC50kM+EHszIRVpSz5CRmF4dnZZPspQhI65WWk+1Mtl8riVdD4SpiNQLSaAPidM6D/NpIY+lEspASR+jj4BmMSyCXGSPnS5hhBadZM+MtNu1YGbjz5TdaOL3EKJPnbJiXQhooA+yJ8Et4Zmcz6Argq1Wz1QPg6XsjufajM+BpvP+aBVVD5cAltxvKdTPoIGD3tt2lw+R25jQti/Sz4eRoko/adSPrtHTIzFaEc+CgdwiBDvTT4SzYHW7mZUPiMhtzCvPmA+XHU6sr4CYz7dAAgg5zJqPpzzfWLCK3Y+PUk5Vf6rgT7gQPohh5OIPsc0ROEd5Y8+1C1+3gbWkT445ZU+YJSGPpz2AMBGim4+7bmpdw9uWD68PJ2t+09iPrdsLpYXLl0+jcyBzkFPYD6+150xmwlWPiZi/BduQmI+n1n/idySYD7eI3A8g+BXPtcpygmTxmA+RuGK9/tQWT7GG0xC/AdiPvB2FaUcKF4+fsTLppoAiD4nOkKZJCB4PvMMeQfThHQ+9hEIjeZScj7R7690WSZvPmwZgdp2F2I+VktDkJJtaD5DkpSEpTprPh+CoA1CanQ+BaeYN5XdeT4Ga1S/wISEPrAtygPxaYk+OPVxIprxiz6Vj/tLW2+LPpZYMqpVhYY+UR/HFbmpgT5w90TAibN3Pl9mhaNzKHI+u6hl0M3xWj5QInbX1hRhPuxSi6/PEVY+8W0asqPdUD5qBexWfsNSPgv8621FmVk+9y1Bh7b3Tj4xCTxd5CdUPskmiEwus14+bRD0I8p+Zz714AO3KtNtPgG/T0hjOHA+62sb07uzhT6QYR61POWLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3045\"},\"selection_policy\":{\"id\":\"3044\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nTNcp66qOz6N87jxZnQ9PjnK2uFdCEE+zWgCaeFsRT4+zeIVWMY7PtO6ADrb+Eo+wZiw0A5ZST60vEM+DG9IPiWor34VaFA+BWOAWzg9VD5fPYnBsVxaPkYFjxmFYGE+zknS3jUGZz6e1eNKDc9uPvwvgmcGZ3M+o5GOZOJZeD61hkpsuHJ8Pu09d725ZoA+lrMGbZAdgj76b0d9AX6BPv2AyNgqHXQ+hd/B5ac9Yj60BJj73EpTPvf7+Wz1GlM+A4bITzgTSz7hGT/NB/ZDPtZh0svl0kI+ha+fRUdZSj5fj+Jn50ZaPqED8mtAwGc+ij1tykKYdT4K0J/zsBeAPjigRRCoe4Y+Br2+pL4Bjj6FqphtjYKSPtGFNRpoCZM+E9P2Z+fTjz7mZxTaqMqIPq9Iih1jEYE+cjugHwHzcz4rg4mQX/lQPkVBMqzGWC8+PioRqFv0VT73puHiu5RAPrRbUD/7R0E+v+XcqMM1SD7aELGGttlUPuOZpIgiQkA+M9Ij1Fe9ST4AWg9mwNNSPpJgWPKh/V8+DORqsB7DYj58rtnxBGVuPnmrjSVC1HU+WeWrmb+hgT5nAFZVFCGIPq76cuby2o8+9iqj1BOjkT6zM7jy3aOGPmpGwh1oOG8++TfXtLsRWT5wmik0dMthPrl1tPBn9Fw+F8mEfWssYD4zlQV+tW9SPo8IeACf1GA+NHcxYDomYT67G9JQgENXPkVRdQDP62Q+HiSe8pU4XT67/Emrsn9ePhnvEdSns1U+Z+HS9/kvhT7xcdbrSGN9PsichCkn1aA+oUxbFcMecj55oZULDSx1PuXPAnQ1IWA+wy/1WTWOZj5Z96AaTJhvPhHm1Fxie3E+aYQZhZRAgD4xH70HueKDPiE5OeM4MIg+Hkf8NbFujD4ToI4SVB6LPupgPgwPYYY+PRiDjyJ3gT4NBmE2SeN2PlLtjnJQZ3M+lbVDl1SNWz5jM1Q0VztgPsHlVn6q2VY+mp3hqFDmUD7slkLWZs1SPq6hLFgzm10+USNG3qIlWz4zgMAe/d1TPuD1o70GYVA+6/vwVl8aZz5WS2lvDIFwPnuzhrRJ+3M+dhf/Pk/ifj4B15CVhByWPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3051\"},\"selection_policy\":{\"id\":\"3050\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9jlabWT/PD6kVGVEWqs/PnksJ2gX40A+TQvx7cs5RT64rSD7dYY9Pt7y8Cw59Uk+rQRFbK6BST4zifB+5cNLPnI5YMRf6U8+n0rw7KRcVD7qhTJawShZPsSUn0tSfWE+wWn/B+2rZj6ti1TdqbtvPmf9G0+VvnM+1Z0/gvyddz7lC0ZfVWV8PpZwxnt6SYA+uJ0rNDcfgj5kT0dDTD2BPn4BplqkyHM+2n0yC6+3YT4LQcH1Kh9SPpqlkTHF7FI+COgmiFwGST4R7uJ64dJDPhpp79bwyUc+UdLSSeD1TD6n/ZFcAnVZPo5jY0feSWg+a6rVhmtwdT5qIxNG/xKAPrp+uK2zi4Y+mHjfNBZMjj4rYi+/fpeSPoVEYzoLaZM+gwhMvFT/jz6ToIMqVkWJPsPod1z9loA+kMmTDqZ1cz7e/Urva89LPsm19KlqZzk+2qh87CT3Wj7oeIm/GNlMPtp+OTEbJVs+pJ7RK5dFWj58MbpyitZEPtzYoKleCUc+d0P7F+AwSz4MfvwGb0JdPtYTySeXR18+9isyVCdFYz7CVi5pR7tvPnJB4ZpV/3c+zAQsjl0sgT6tCRaBzyOIPhz3iFWb148+iv+elx+EkT418NhblmyHPodSWoiwSHE+pa1jls3ZVz7Uk0eN7z1jPjkmlZNYvFg+lqjrnOG8Wj5ydgWSbrxWPs6TkPPX/mE+1pPWLVWaYj7c+KTREEFcPkiOQh/OmGI+krVS+G0jWD7E8sLT6WdcPpiigvOrll0+8/ObSOyocz64nB88re9qPk3wGIDWy3M+eLg1RUggdT6ZK5h0xpB2PvFYqt6Jc2E+tcR7I+9JYj5X9YsKvyRuPp+cJBcKuXM+YKyxVJcBfD6CZ1KW+7+DPiuWQw626Yg+sp8Fmuvlij7iOK+PTQGLPtigRdPLF4Y+RHxFttCcgj7Ix+B0uFV4Pr8ov9caLHQ+aDqChJ/VWj7Y/+MNWaNfPgI8Y3Yu/lU+XxUjdlFnST43xnohx0VWPivikO5xrFM+usvzawbNUT4Cl6IlR59WPsmQMJo1k2A+Ye6ZJ8+GZD5BUd4J6SduPkPSoyymeHA+o4PhDCmqiT564P2Ha9OOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3041\"},\"selection_policy\":{\"id\":\"3040\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uqWikXsWQD5KFTxzyW1BPtmCofVodD4+sbTTL3aeRD6RYFrR2jw3PjjrXz2FOUw+5WNkXG1TTD4OZXljWa1GPjZBuRnAQ04+qeANfnd4Uz5ngDqgQy5bPoZlhXtCc2E+UVMlHCyuZj4HJgHNnaVvPskORAgnfXM+qFGtF43Odz5R/Vwe82l8PnWo+ZtHRIA+thJR4mMwgj7omhAuwEyBPpVVP+KD/nM+MqJc9km3Yj6Vda+wVDZRPl9rVoajrlI+83nVmkQLUT4FW6C4GvBCPshXa/tAnEU+uyBg2lc7Sj5cxsrUUhhZPstWqJIr9mY+QH2HBcKtdD777kH5u2KAPtGH/KrzQoY+tptfDfMxjj6S3Wh+ltSSPhii3LLMWZM+15EC5D3zjz5Pkgtx90KJPuHqLj6HuIA+r6pki7facz6nmxm8cxZQPlgxoj1dezU+I4g9tvf+Rz7H4H+s4GpPPvHgMrgdfVQ+zpItW6o5Uj4FFBmHl01IPsJEQBUpQ0Q+V3r3pDxeTT7mIl4KVSpXPrRVQ707ll4+VWYgzQ35Zz7xHpBDTMtsPhiIeoAvZ3Y+oQ/4DEa4gT758DjtMpKIPouwkS2YOo8+770Yz7bAkT6H11LuwhiHPsu9iKO6JHE+V0yp0HHdWT6xSOMSIddgPqwwGoYjc2I+cK3Eo9BlWj75gday7/1MPut+/j8Tilw+HmcX+09CYj7KViShepdXPnXNP5yBjGA+VoYFd0IaYD5cCwGD/wpdPt3WhfE4a1s+hZRNaK1beT4re3ztSjB4PrpX4hZJinA+UnHhH5wNcT7hzl4WuahrPvbCXTRgqlk+rcpt8hL5aj5bTG9PX1ZxPgSPHONzk3Y+shFLRa4GfT6sDJgtwJ2DPtWR7jlJnog+CbPlNP6Giz7G7eKg3PuLPmpeyNC4j4Y+fLzEPxCBgT5Y8tv3jsV4PqIG8pZs7nI+6cQdufAcVz4B8k34HcxhPuu0DoOTzVM+nURjFKLBUj65Yx7pdRhcPmALByolwFc+gQaIVukIUj7fXAfR8NNWPqPqg7y6KVo+1EMdXU8wZj5Iag73e4JxPvzjlGDrDHE+Bmr3mOcYhj4TtO/jTWGVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3071\"},\"selection_policy\":{\"id\":\"3070\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"SLGUHXqHQT7dq+16r2E8Pvw1kjV8bkE+lOJLFnHJQz4XCtQ9/rE2Ph2jSrxaNEg+mRrAWzRNRz4BD7kMl6lKPk9hbEuLPk4+DAPjVMfmUj5XLbWHoAFbPvCl8XmvJmE+uau2ClajZT77z0s+MjtvPj0NWqr5PXQ+XTlfrkXsdz5KkxZUV/Z8PvkcfEPFS4A+c5bRZOAKgj59hZz5RdmAPpKB7kr7EnQ+9HKyhiyjYT62hmExy1dTPt2CWEEvdlQ+sFDD4u2sSj5/HufTMPNEPrLr7484qkM+mb6bO0f+SD6pJRlxXGVaPtRwjMYKVmg+fwIWvfPsdT5Qeny9kp2APvajEplPzYY+DkfiGEzbjT54Uy5YWEWSPsMSJqk1kpM+RHB2PQkQkD4tU2IiLouJPpL+zt+asoA+7Es+mK7Ncz5Hkvb03UZRPjR0HgkbVjQ+TeSA+AdUYj5mcNDgy4xOPqFdU0Y+b1Q+OQgaKBTAUT4qEzxw0/VLPoNfVr4050I+5u9TFxwDSD7aBEOfNuZXPlbCl8lRKF8+0eFDXTUGZD48t3W5WTFvPudBrEXQ7XY+UOGDl3nXgT7dQOUhZtmHPv5rR3ytHo8+XzNwdPCmkT4fRLeQMOaHPvzUSypgEHA+/YNMRypfWz4W4oWJBedjPkPLdLfXlWA+szMEv0sOXz7fwbwroJVPPh1iIE1vN2E+UtuSN+YnYj5ctYwLro9aPpJhyd4xzmE+t/fLAliFVT6Fo53zLIlbPqtpDh2eqVs+DXIbEDOtcT42SihcmSN4PkC2Ehh4O2g+oRW3iiY/bD6j9GM4k89zPmENgGtP01k+gDOhZzEKYz5XgTxP2f9tPq4kt199DXU+ZYpLo+LSez7H2fppbjKDPoTk4niGIIo+qVAEfUDMjD51IMhudRyMPmUrKtXR8IU+w8XX77EKgj5DoX22QBh2PrBKi9RuTXM+24Rs+MOVWj4P/F5p7iZhPtCOtYu1SVk+ipkTt3ucTT4zMpyWK/VWPge54z0trVU+f4zB69dYST5RTWeaiydbPqrr/yrnvmA+KS6HJqDqZz6heMcVwuFpPgitLPnfAnI+xMDwHYXLiD6Wdnfa1+qbPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3059\"},\"selection_policy\":{\"id\":\"3058\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ZP81u1w0QD64aLDbDTk9PmfLJY34HD4+gVsw4EeIRD4ucmNW6HE8Pl7a4T5Qhkc+Cjhpv73cST4toq4vzjBKPsNDgMRG900+bWegGAESVD6bB4kjZBpbPjtAHCl/4mE+XAGO3xDEZj4F0BbC8YBuPr8yha7nw3M+26zxd6sreD62G9Yk5qB8PqROcmsdVIA+d+fwNVYwgj59VifNbT6BPhR6v3mIDHQ+dHFyg5XXYj5D4MD+YvpRPl961BKwrlE+1aBYlxr2TT6lO+N+9o1BPjB/03ZH5kM+5/1nX48aSz4C73rVdEhaPhWp7cwzP2g+Vs5az8H+dD4IWtTQV2eAPpy4Ku/4iIY+NtIMUJSQjT4HGKxxVHmSPn5WfeinO5M+0gmCQYhPkD4UPWAOCI+JPgPXEww0EIE+/deHeSvecz5Aek/x/KJQPiH3SWGhKjA+4hvbQyKdXT4uRlAv9y1XPi9uEdJn+k4+JYvki8Q9SD6UBJh8onZTPiLgmCgjKTo+wjrAlQjWSj4Rj24r7ENZPmyikzuc7Fg+i0kqeeZLYj4IWX45fq5qPl0jhsC4/nY+8cqV9C5VgT73GsMabsGIPrHdnjdCCY8+0sd+tqVhkT6EYcsyCfaFPsjiiTZjOm4+v03I3gW7WT5drdBEHQpjPpAAq0ksjV8+9AYiPXUXXT7yR8bHqm9ZPj8fcoO/FF4+vUVHx/48YT5nzKmJmfVXPoC9rmeAS2A+hBqoBuuqXD7YVpElWMNaPp4ro3VkP1w+ZVHl7Bk0dT6rZa7TTnqDPqKUIZEum5c+M06fk5UVeT5i8BD6YP50PiMOx0ha22Q+87/ze3SiaD6N3V2Ssg1xPgJwJc4x+nE+Hoop3pfzez55YfMm/PWDPgJNYkM3hYo+VYa9kXRbiz6G9lOwyaKLPq2alP6aIYc+SvTBThD5gD7K4v9OTAx6PnZUirvbZHY++mSFaREVXj6+p7FY6vVhPr5fdgyb9FQ+DWZXvaVzRD6Ok9E/H25YPsMvpux3U1U+Z95cpYRzWD5v+pSXTyRPPr9MNDJwhFc+cY4upNH4Yj6ZaiAdx8tlPjpLq6yUimQ+qBK8R/ppij568eKt5wyUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3081\"},\"selection_policy\":{\"id\":\"3080\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"3032\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hItnc+FGQD6s++Gicsk7PqiA6MYVxDo+OtToa4GtQj7vBUkibg1CPvDy94nY7Eg+iszge7mFSj4SLK6eWZFIPnFQzheuA1A+q1aLklfNUz4jYuaG5JpbPmFeKelEPGE+2ibwNmrvZT4wKSgbg+pvPmDmI+56rHM+WjNbsOKleD7tgComoeV7PqBC3wbib4A+87NSdgnsgT5bhe7bewqBPuX6kQXjPHQ+mS2iaf7GYT7eLEu2kOFRPgVlSGvv+FI++I9VYB3lTD7EzKlrQqU+PqpGqYb6hUY+p1gKaajjSz74lpsGLKFZPqwcSNqSjWc+W2yD2PZpdT5FeH5M3luAPrH9kIwSOoY+KXo2b66bjT4RKCplVFiSPtKHnsMnXZM+QT4r0/FYjz7Zvw1mRziJPpunoKCH1YA+9B42P0Gocz4E5Rcw3AVQPo7HS4nH9kE+I/1wUZKkYT5HlihtHmtKPgElJ4VCX08+wdww9OInVD5Hz/v7fO5QPlGYPQkrGUI+7PPgCIcPSz6KP7vzhFRYPmldXLhd92A+6xmjxSqPZT5vRHdXBj5uPhddUoJaLXc+WzZQseDkgT6YkmrrmyuIPkn/AyCUE5A+S7hsy/eKkT60GTms2LaGPsMv8039MHA+/crh6jSQWz6SCrmZNr5gPnlnASIBOmE+B6sx/yLmWz5+VFHNdjpVPn4qg+QMLmA+Q49epHb6Yj728nIvb/FaPr+E2dcIFWI+mE1TJPwgXT4KwGo2DpFZPjux3T2sQFs+UbRlt5mzcz5hUGiLwiuAPos17UfJUYE+t29slLDNbT6xBI2PD+BxPuVMBHpla2U+liMbey88az4ZoKR8zZ1xPlDiofRAZHQ+Ca6djGLMfD4CzgcFb5iEPhvxQyxftIo+AnJ8p8Z3ij5MdJCwJJ+LPqN0eGT1eIU+tWlJ8XNwgT6LlMRHUkF4Psgb3Saf23M+NjJS0VlxVj4mbyRdaMdgPrhxur0SfVk+U5E/LzZQTz6+j+0qYwBaPtJJhrxhW1g+ziFEkw0YRj4qD9HehRJbPnyNy7VpKFk+Js8gtTG2bT5e4KPTkhRrPjG2wv+6K3Q+RXKivlQ0hD49w2f7aR2QPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3061\"},\"selection_policy\":{\"id\":\"3060\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"e/EwEqJbOz4MzXRszaY+PrJpv0BJpj4+pk5wEB5vRD5+agPj9wU+PtqijYwDYkU+GpGlmBixSD7z9fPloPRGPnAqIf9q+04+bqBykyU+VD4stDGqsshcPhRpdzJiRGA+zUDH40SqZj470w0K82RvPtZSfw8EQXM+UE3g8SYmeD55ilvVvUt8Pl5atw7GX4A+UHE3UVcLgj76gH6uaGCBPk0pM1nmSHQ+PX4cZjGGYj5ArQM0IThSPlfazVgSV1M+5GeR+CQkSz5d/iBFI7pFPkwBz/HE90U+h3Km61jASj5uAqq2D85ZPnR6ST5WtGg+33XUJTzRdD5L9ZvUCS6APhuHaELxCYc+mWTPN/Y6jj4h51mOAmKSPtFVENufZ5M+d+T09ykekD7jRW750SuJPvtovTSPZIE+XFZzNhVycz7QMAQRIbdNPsWcBRLV3yQ+JoYgkv74Wj6YPfqmgGBUPkNC45fwPUo+C5TZ1CNBSD7boTQRENdGPpL73NLLPkU+A6WNUYpEUz7ImnhAwsNYPoi7purYAF4+hSUyfYcKZT7GliMAn+xrPk6B2xiH/3U+m/mkTkYUgT7Wv40B/EWIPrj/JZFG9Y8+aS2TgPyQkT48UUNGxHaHPoO33UU1I3A+WcrhkA8DVz7inVSy/uJkPqwP9CNxo2E+YiI0yLDQXD4TmcXxIuxUPkguPR4x5GE+RWlp3d3xXj5kwi6UcyFYPkgPGxOvdWc+KPXlTPySWz6t7GCp9xdiPg5bGdXm8GE+qECMWPVicT54lYc5Q+d6PrUftUxgdH4+c/qiwHXZcj45vZvLpThvPjrXbQOnglQ+Ztzygnz6ZT57ewCOeg5xPmwRstlfiXU+7H37pNoSfj5gdnwger2DPg1+pFXBp4k+5tHC6M2+iz7D3RCwoIiLPnmdrvm3LIY+3MykPbV6gT4lmGIi8zt4PhyyXtqz/nQ+XSFwTp3BXj4qqvJPVaFfPlCyrYtaRVU+x7tF0NpkUT6o4+J+OqpWPrUkjE4mhFU+/DzPxWeqTj7AqcAgN0FYPtV/3UqAu2M+rM+XRuMXZD4CFDWY/FhtPqnxxf+rl28+p6BIdFBtij4nXwsKn9qWPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3053\"},\"selection_policy\":{\"id\":\"3052\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GNrltfjAPT7Y5w27F/tAPhkFU8olMEA+p0VXelW5RT7Z63Fgelk6PpavidCL+0k+Xnh1XyvGST5YScOCu8dKPgAAsvdqFE8+eUlGjO3YUz6TUMK9AopcPoxAj8e++WA+/Kt1ws5YZz4yZMpXHIhvPoWgFjbnfnM+UWa9ZmPOdz6gqg6ppXd8Prd51SyIKYA+gPrvnQYcgj59+ecx40mBPgwomGMd7XM+UazZMSf1YT6pHZo5QsxRPu3QitiS3U4+cDUs4ZI+UD6r7BeIfppKPhFLbZFG2UM+XQM/kvQ1Sz4Pz9cXeYhaPplZ767cI2k+7Q8P/LbGdD6L+UrwmGuAPpp8PnmGkYY+cEMYvfzyjT5jK6k3cBKSPli6lEueZ5M+pkGwXJYikD7gSNUcJgKJPs7bgRi3LIE+FDusDHyPcz4iYiC017NPPraMp0tqczY+9vATuFJQWj6Si/xBUrtbPqRwOY0tN0M+oXfs7Tt+TT5idjKqAr9EPmYpkri6Mzk+f5IY4vSFVD6ce9NqYzhdPgAboH8xa14+ppxblcfFZD7HRx+NmnFrPsqDklCSnHU+czKp8VupgD5vDjaXcpWIPhZAFNLE1o4+wjlX5+yckT5pEA2BZ+mGPtb0P1qARm4+BxUnKAOuWD4D+negTc1iPo8VJ/hcpFo+w2XOaHQHYD6ptvASNGFOPudqelF4wmI+q9t/kVkOYT4qF0dbjSlXPi2JGSSnD2I+0HzXcIXBWD4R6pS/hrFYPuNYx+0uPGE+JMrZODkzgT70xiI4wNpnPm7x06oubW4+lrVXr2peaz5fKcq/QWt0PviY3vIIDmI+ykElyVjwaj7K5bFMrfhuPvhE0AAhqnI+VtC7AffleT7CrooMApeFPj30tKcxcok+mYEIIhZ8jD5FNtXAjsSLPkTb381r/4U+xnebnFlZgj7VUyRXt2x4PjENEWcBBXM+rMA8D6KfXT5iE2d9d4NdPmjEPMFra1A+s6LaIpVLRD5imJ1s2sROPhJ/mmAVhVk+XhyBAYZ2Tz5JCjisoJVRPmdUdAfkB1E+U6UrfASHZj4oOC042fxuPlxje8blN28+2RyfQijmkT7msixl5peTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3037\"},\"selection_policy\":{\"id\":\"3036\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"00BhQ9mqQT6fjBpOHNM7Pixy8U+IMEI+URjCudc6Rj6gN7skXRBBPro/xwfS7EY+iv1noZ1eRj5YdZ9Vg9lMPumETnCEjE8+LhmxpqTCUj7xbDofzkhbPm6zApGjEmE+1G4MmpnRZT4LqbzgiTBvPrBZxk5yBHQ+mzifKSkueD4URbCB0UJ8PiLLuvkAS4A+KHPIiqPKgT4uOvOT/ROBPsTdE2pRB3Q+PShCrbMjYj5y5gYl/PtSPqvYtkFRolM+6BH5NtWFUD5M6nItJpQ/PnrDmOzPOEc+C+M3FJv7Sj6XnGiRgg5bPtyvMriWimc+SHIssKjSdD4mTeO9HIGAPqEASXtgd4Y+Q6EJI1jHjT5qjExQGlaSPoWKuZHtPpM+l2lIxf+ajz4zZncgXRSJPvX4O+gjy4A+C5Ca/IDxcz4/mPZGydJOPi5RauOqDyY+FgZeDyjwUz522NqHOhpGPlO8FLJUjk8+5agBgr1RVD4Rx37V+vJOPn+672R5GkI+gRrFwD71TD7iV2HNoHVdPqyYcyK/Alk+i2zBowL/Zj4l6fBYTDRuPscrJA/XuXc+YiuZFvO3gD71JFjQ0jSIPqnUwELQJpA+oXXytpA/kT5JWhsX7UKHPj2yAWe+G28+WUq9GonKXD7sJlt9aOJfPvPo6RzieFw+OJkD2sDTYT69TqNDB5RRPplfAmxUtVw+e3ecD+0BZD55EvMHfSxbPiSVV0ouImQ+3Njc3CcrYT4gJFjBU55dPnoYJ2UVT2U+MT8NSjVxgz5zjpVeC7GGPmWTzZlqtoo+jFtd60+kbz60AJr0bztyPmK1mTwzplo+GiaAxVyKZT7r9cW0aEVyPjDiFI2G4XU+fAlJ8tkWfD4Oq3ba/dmDPleEbafHYok+BZs3cSpajD6lCDYbBrKKPvHyUEnE34U+7mYBq9I0gT6+cWiiWRF5Pv3WCbDSyHU+b8zT80tUWj5iQ6WFOAdhPrdDCfbvuVY+IQZ5ccjrUj6qHh1QiihWPrRIO5S96VY+cKBOTxoQWj65heLzYnxTPs/1bkzUVVQ+nV6lCPDpZj6+aBro5AtnPnd8GRWCM3I+VpiiBW1LjT483x8jXcOPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3065\"},\"selection_policy\":{\"id\":\"3064\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"HUNB7NR7QT5HxcL3eF46Phl9sZXQYUA+oabBFMdNRT7RxzIan1dAPrULAjJ0Nko+KCbXTOOESD73kY/iO7tKPnJb6Lwf8E0+xatnhIe1Uj42YQ6jMbpaPnhygAe0PGE+3HT+dtpHZj5i0A3PwexuPqoq82BNYnM+A0fZbggheD6ieKxEVyR8Pid4B2VzYoA+D7Rc65XYgT5scle/RkSBPmIxxVhzwnQ+vl+ZFmtuYj6yu8NY9R9SPkINXSvv0lE+ikags8BeTD7djEolYLU8PmK9afhpXkM+KcyvxcotTj6QxbTtCNVYPjUn0uAbGWg+qywMGJYPdT7ZfL3H7WmAPmjsHJBGYYY+VU+QtoBCjj4AV2zm3G2SPmL3ZJNhiJM+s8WlDwISkD6/0iL7xS6JPiQFUvs8FoE+8zqa/ezncz7LZ8Juzm9QPlCyqKa0UTY+JbUP+qItUj4dnvHW5WhWPhlDwmH2OVA+yX0jTpJDVT7XtQmlVjtNPvxE9evhVkA+1AZ0AFc0Sj6TDGFtKQxXPtCQl1npTFo+kC/fr1y3ZT7RbC07TgZtPmQQQkou9nU+Emf/Sv/1gD6pYcs85VKIPldXjXhIrY8+hj8zVGEgkT5ZueEt1oKGPklQ+NmMXnE+hCf/Qc1dWT5wwon9TudkPgUkLt/e2Vw+rFzNaXceYD6E+ZcRgy9XPj/KsWW82WA+0HUPvl9VYD5agt44Mm9aPjnJ0Kx3rF4+CA/YUewaWz7fFViSlbdXPmwcf6t0nF4+HG3ZVIL6fD537nOEK2F0Pm9mrmoUIXc+qlSAMqgbdT6+xPvDj7NvPhg+ThN27VQ+NQTXvxjSaj6VeEBz3sVxPmsDUDEfHHQ+6b4Y4Y8fgD7XgUlhGt6EPgYP8+IyoYk+JZSLJlT2jD529H/7nSuLPhIHCIu+Z4Y+lgbGfYm9gT5BX3I3PHt4PspMTIqZl3Q+SkVI7+F1XT5uza26/TdhPq5H6aT6cFY+/m9cDBEjSz7tBoN7QiRVPrwuDdqWFlc+PIM/as08UT6oT5NA1ERgPr17VAzMlF8++elWoEztZj5tQKoLrexvPivjqnR0pGk+b5jpQ/ciiD6VuRkUCXiSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3043\"},\"selection_policy\":{\"id\":\"3042\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YuNkT2qoQD4Bu+g38ks8PmgeASkmyz0+mF+fu61MRj5y1XRNRUg9PuyLGg2p+k0+bZqfQ/SSRz5bzIW3L+BLPvAG4qUP2E8+P1h5zmgCVT7WpEr1nhNaPlkm9jUbUGE+7rrqe3dFZz718+64GqZvPslDRwaYb3M+p79kTmTUdz4r9au7QNF8PkWA5j0HEYA+nDCpfAz0gT7UzLlrpz2BPkGckNoKCHQ+51sHBhCLYj77JZUwI8tSPrsidSfS31E+YA7vkZAUSj4dJwUkyHZAPiftPZa/oUA+ISP1uXK7SD7+O+6IOGdZPpP6d/N2K2k+To8vA9jadD6kBcMHuCKAPkNI0r6fyIY+0ika4xX4jT4lmzVwp4iSPkQ3WlljZpM+tfNQI8m4jz7AxZRt7/aIPkbl0E1QDYE+K67qdUZvcz4Vpm2HnX5QPjePFtJbfj4+Ttd0CUJeUD57WhzhXPlHPqg+mQfhxVE+rPUXWC7pQD54yfhocbVRPoDrRBcrN0Q+26V0QPpDRz6MdeBeEspdPry+nuipNGI+CP+LCWkwZj77FsJCipBtPqOqr/kmH3c+AbApzfAXgT5s03dZD+iHPrj9ES5Lbo8+5LODnMaJkT7aSp0KNryGPkg5YKtBeG4+pGge8KYaYD5dO/WqQB9hPlY1rRB7A2A+P20QlQWiXT4HhLYGl55PPhbTqBf0FWE+bY+JJZuLYT7ANvK8jD9aPgVFNIQXyWQ+e5HdxsgBXj7Gv14R5/5YPoGFEiEbu1M+lVn0aCX7eT6mCLmpBhp3PkDQPuKdxHU+k/Rgp5HKdT6fo06/Q0FvPq7fDYIvilk+DH83mXoKZT4H39seilRwPu4EedV4OXM+eqriS0l7fT4w4D21lPKEPtOszmszook+nrptKZIOiz4HSMlAEAOLPg80qhz0G4c+XdBLT7yQgj4On2StfYt5Pn39PXOXWXY+x06ml0gHYT6kePzeiV5dPpTFzoMN81U+hti4RCJaRD7jfISUv0ZaPsBVU96JM1Q+4u3FD4tFRz4I7kjJGrJUPoZ4NbdNDV8+Iz+HqAzuYD6ak69OWrRsPriiyQRJR3Q+ud8GQRRlhD6thYFjxnKOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3039\"},\"selection_policy\":{\"id\":\"3038\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ucqLqykRPj5dfeVakZ89PjZpLxhC9UA+vRsPnU+5Qj6Q6jzF+745PuumuDKBrEo+rDlLnaoGSj5A/1YVRFNKPrWl10YIk1A+TzwJaW1fVD4CFEYmfFBaPnjiV5bFGmI+t+6G3ksaZj5+HgQX5RRvPvpxh02353M+Dywxb7oxeD4/AAlyapR8Ptad0Ci3Y4A+uqiPxlcUgj5HqDeF3muBPrugiwjpqnQ+wYhk628rYj6mfjePulRTPrldkceLBFM+H/7d8HT1Sj6W/Fc1DF03PqNYri6bIEI+iRMWa4FCSj4STJd5jklaPtDN2gnzVmc+vgZshkIAdT7y5uuRRk+APlBoIP8ohIY+TuBrG6TMjT42iJ0N8XuSPrfvh2Kzc5M+t3XrchwYkD56DuzJd5uIPiV/Jkb9PIE+jcVWO2XQcz69UAeslQpNPoXawV3mykI+8lRZ2Fj/Vj4m2XeZuDhBPs1+SDm2FVQ+5IR8hlXeUj7UxWDXxCdJPuENqobQL0Y+bMdTL0svQz4UBj7KDa9ZPr0xiHqww1Y+2RQG/updZD5VRGh2ToRsPk+Esl3bhHc+ahNvgewhgT6023mWC1uIPuU+Hs6zgI8+eXD1/G8nkT5wl/JJFOaFPur/wsl0h3A+aVSUZNX9Vz5DkF5H7MphPm3xdzLywl4+Vjs42LKZXj6hoD2jCZdVPtMxE7Ux+GA+nwOjY+feYD4vHv6BOVZaPmxkwykKl2A+Cfc/9yafXz51Efw1LsdaPqiniYZkK24+lOhnafWckT4nm1UGdhiDPqCV8W2EzIM+cWO1YcFRcD6DR0RTrcRxPuPbmqlk0Fk++gL3xjFSaz49G2IrDrhwPtlEzlc2aXU+eWDrQjfqfT4gJ1El/3qEPur0XixCV4k+YVQJXTExiz6yCFoIuS2KPjcmqqkCyYU+angSo3Mvgj7jXkBdGoN2Pj9PIyepXXI+dBGdMBoQXD6QwCcwkDtgPljdMNFiGlE+j++BR6X0UD4YxwbOFmRWPvgmMH5geFA+cTC6t5VkVD4l0isZfGhXPp5mp55DIFk+tja6N7CeZT4NAHzdJxxxPtlc4AO7sWw+QwTxqyxUkT7OXJVfkWiMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3069\"},\"selection_policy\":{\"id\":\"3068\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2M7G5cWqPT4Kyz90dBJBPqsnBa/uOUA+WE1s6oT4Qz4WAjA9SL8+PlNdf1yOkEw+0wis9nyaSj7+anwG7oBLPiL7iGUxyFA+wKKZcZ1CVD77gwMi1tRcPm3VD6a/wmE+3TznEC7tZj4Nr7tFHK5vPvUyA0SfsHM+0tvnNNQ4eD5C9Grguah8Prf/E8EBh4A+0eUSDtwFgj53kKFv6viAPs5bGqzBeXQ+rfYrKlX/YD6QOxBuS8VSPq5azhLGVVI+HfeNx1w6Tj68C5aOJ0xGPjipvifeoUQ+5JauwIQPTD73mq0RfFxZPpuWH5z0FGk+Ef0GM6YidT7sR1xdJZWAPv4yLmwgzYY+WLDWUTJQjj61NmR5JRCSPk7+iiW6qZM+82hOkX1rjz6srRoClEaJPsVj4XVqdIA+YgQ6a2Bxcz5IzPVEl4lOPo1rlP4rNDY+LXlCzIpTWz5ScG/QtANJPmDKCN3cW1Q+ALF0ejF3Uz6u8AqhRAxIPqvfQrZQZ0I+t2ifzdoKTj4IS3KXQ3RYPsnqX8pS81o+Axjk1ihMZD5XYj15SnxwPniqH2IPrXY+9GH1RiOkgT4hxH2S8I6HPuSHuJ/RBpA+xOJKUD6kkT4toIRyvVSHPjqzRLpOuHA+iY/aifmzVj6I1j+IpLBiPrcxE4mX9F4+ZAQCIcvVXj6ubaTz1jhUPpOBzO/4hWE+4zpX7oq6YT7E+BPCj95fPrSO5KudHmU+MYgWwdkuWj6jgbPJ+RdiPuDr3Pxx01w+yA6WqDRUeT77987OhOJ5PrV7rqoh9JQ+PljF657Mcj6gEQPbuBBzPs2Irwa4o1k+Cjbk/XNEZD7kVgs1yF5xPnmBUoddanE+buWu3Qo3ez7FzRbfqhqEPiG8Pl5vuYk+S+nMEvlUjD4mNYncPpiLPlCYycAy8IU+8acg8c6QgT4Y3Mx32sV4PsXMCtPzDnQ+/CoVVxYeWz4zPXGE2/5ePk8lEoWvi1I+awEbeLJkTT5lXURUDwZbPlus6GcOpFY+PGsYEc23RD42i52Y9edTPoavbpvU5V4+JwBWL2JPaz4/1pXKp+lxPtc8X2lsIms+6ibeRXnPgz4dvEEjkgOOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3067\"},\"selection_policy\":{\"id\":\"3066\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3028\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"yDrDWqswPz6sM32rQKVAPq8CZs3CXj4+w9niEzO+Qz77TM2Y641APjGsUEYbqUY+0ze4wV4bST49SLy6KxNKPn4Mw8GbZk8+9LO2kIxcUz5BCZAFGgNaPvypZFHIVWI+xNhv3DRtZj5eEg7qQHRvPgG6zvlAl3M+/On378wHeD4ZiRtbEB98PrFsGSRqSIA+8Zn8+u/tgT7qezKPGDaBPrTIIiY8x3M+zyAshrXaYj4LPc/si0hTPnGbfwwyVk8+5W6ubhNvSj4ePYC4O/BCPnziyN1ZNEI+IatQWwCySz4UF2fYtOFZPhMKlzQwcmg+ALXKicDCdD5p4NnsXFuAPsOsXcGnc4Y+OS0WVrWLjT7fNAL3aGmSPujnk7SBUZM+oJcgBnnNjz4IRECtAEiJPkKKK/uSjoA+MaTBFwLTcz6GmrJ8IGxPPm6uDo37izk+D+P4+kQXUj4WI85xftpBPnhJ8a7LJkk+Cm3WAZfHVD7HWVEAE1pYPtXSrVMAkkg+8kQNk9A0Tz7I2f/v2thZPkeTJDVeNWA+7R2W/gQ6ZD7qUETcozVtPlS2MVW9sXU+GDfUvXDqgD68f2Pvzt6IPiFcuh/Vdo8+0V3b0bBUkT5Mp4uWJBmHPuG6zV8I2G4+NOT9Dgo1VT5AFLzDZGhhPiK7HnmqV1w+yreejtiOYD7Zgd93olZcPjtRShUsK2E+cOjtjfzqXz40oSdRhOpbPqSDEmsBLGE+zwEYkJYoXj7pG5ZR1yBbPlgZeJ/C6Fk+GMVWUXbLhz433plsIcZ2Pm6lTpXEQ3I+fVeG0f6gfT6oicbUKWJ1PhRowfWbAlM+F175pA8GZj5FMOTZM3ptPhIf1Keuv3M+B7ej6ijweT7RNOZZfveDPtjkw9Ir/Ik+cCr8BkIBjD5YzL1BwJSMPnqBQwdLfYY+b9nVZ5ougz7umJ2PUad1PqMZuCkor3Q+QZZKpJ74Yj5XxlKrDlZfPoXk3bDl1lY+jzuqDxw3Sz4LQN4YgA5OPjot7pnK3ls+iG9NKTAaSj4EE5bUFIFXPr1kFqCYNVs+/DrWTFTXYj5n5/vHhnNxPjxYuoWNKHA+yxeQBfsmhj4VWLZRFl+KPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3063\"},\"selection_policy\":{\"id\":\"3062\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5N2kuE2pQD53qlA+SRk/PjiZNS5idEA+oduhLI7HRD6XzDPsn0Y8Pq0FKFJWV00+BtQyV6CDRj5L3Z1pVS1KPh6B8QP/9E0+y1pT5nFIUz6LfHbNLNJaPsBD0oHXh2E+iNMly7Z+Zj5/PZBqXVFvPizLHkRcInM+FVp5Zw+ndz4Yb8CfYCB8PiWDuC+dN4A+hmlKiK3NgT4QE1I3+DKBPrTjzui3FHQ+hB0RT4Y7Yj79tSIY2H1SPm5y18/DG1Y+jKkTniClST4dW70j2tJBPuxvr50SYEI+t9OT/DlzST6EYNJdVodaPrazRGvYLWg+aY6k7TtodT6kuW25+DKAPihNCnbw3oY+510Pk2rhjT7XxAEzmHaSPsw1w7x4Z5M+Z6Kl5M7fjz6ZI3Rac1+JPgGuQDrP0oA+zqwapmZ2cz5vnSvp+ZlQPlN33kiaCDQ+PZqcviHxUD4yg8BEbQ05PtvV2O1S5F0+9qWoEfYzVD6z1+FaWm5NPstXKBoH2k8+XUwfYCPvVD5Qlpxm5htaPuGgfD0PAF8++tCVP+qRZD6/DG4ftSBuPphRiLnphHY+rV8PWexKgT4KAoqokleIPjJpPpyhLJA+yaXEVdNrkT6YaEM/9v6GPtG50M2LcXE+634J5SE8Xj73WGL7B3VgPpXROQfv42A+ZZUaFXtVXz7FkKlVM2dZPn8fKuh9OmE+fYHw+Ov6Xz7fbjI1xfFZPpKO8HGofmI+lKwgwepwWj53W7WZefdQPhg7qMu8ql8+8CbbpMI2gz40MpriSy5yPm57CSkLPmc+sQUNdosibz5vUUZFRSdxPnrGS8nqH1U+yfcemIhlbz4MT2PjWottPj6LuWosn3I+eDdNB+wcfD5jYV1p7hiEPt7+cpHNpYk+IgHHCuvRiz5+grreR0qLPs+Ank1pvYY++t1icmZAgT7fBfBdvjF3PlWmgdUPvXQ+8mGX5Hx+YD5xwlQ+o79iPrNZQXccyVY+RLoOD1/0VT5SS4xnpqJWPqeJv45aSlQ+S13tVSHfUT7Ydt8+v4ZWPsD+0Oiw9lk+ZrhHStlzWz7Y8WEdiCBqPo9R4Zk8Q3A+NjcsH+aThD56b9SYOS2OPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3075\"},\"selection_policy\":{\"id\":\"3074\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3029\"},\"major_label_policy\":{\"id\":\"3028\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"vuNHFsbOQD7HBF9GdlE8Po2fcxwCGkE+qd1QM87iRD7F96w0dTNCPoVMaXFFPko+mLuQJecnST5pwPX/ER9JPkkcS94MnFA+9PhHPwlfVD42Es4jlupZPtbp1d4BAGE+mzRoBX5DZz4dZe6xHiNwPkjrvLFad3M+rjOYhMlxeD4o2ksvt4Z8PqfMIiOikIA+4nSWUd/ugT6H9xiHPD6BPlCSRK8+H3Q+jkonZJLfYT6D0aEObitRPiJf/yW/k1A+mG3idjQPTz760KgisPtAPhcUFdIzO0I+O0P/M+W4TD6634ZSZUVaPmshH0/Um2g+puLL47fRdD7kfe3SiC6APv9/83QhnIY+6novB7o6jj76L5wPQF+SPkqR+ftSh5M+vaL4DCUPkD5O4v3rkuCIPpFEd9x/9IA+dZZqMVCjcz5IRYU6M09QPhn1x5hujCo+tQKvYSFDYz5ewUe6VMREPiT2Rnym2FE+9j2Jd5bjVT5qLLKeWaRRPoXbhRxM+Uw+ljLM6TzZSj4SVfbsJ9FVPsfgt9sMK2A+OfcKGTs6ZD61Q8EJjpVtPr0K+WJA+nU+jNvnM3fegD5pY7N5XJ2IPqVPuCr/wo4+D//l3878kT5vxJFALAmHPgxU6MjJ8W4+kU8uBOvcVD48qUG62klhPuULD2SYA2I+dEEGSzTCXT7aJfRIgiJVPi1UoDOdEGI+9NEOoL25YD6f5oIrCchZPkIZ8WpsPGI+iOPyz7eWXz78ybzIge9aPgs38H9341g+gR82sESudD7O8LHt8UJ3Pp8aKrhWPXk+rfzXdMYqZD7tMv8w1bVrPkjzjjgeRl4+Q0OgpwrLaj6h0G6ELB9xPo3GRdR5TnI+4M0YrOIQfD6iI40OTliEPls/Im1/iYs+//9uaisaiz7ocmt91rmKPl7+9jzy4oQ+HA4mFJD1gT5Dzi1LRw15PrewPnHcUHQ+t/vSaYO2YD5wsmV83+JhPhbTyQKQ61E+HNUOvc2mTj7XotJsJqJaPpmfU+BrqFg+mT69ptmpQz4wotH5VhBSPhSiN8H/IFE+PVYOtJNdXj44sWx/wrNoPuU+od7KV2E+kjR33ezhiz7LMFYVxZeQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3093\"},\"selection_policy\":{\"id\":\"3092\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3093\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zct4Jx/WOz6TgiXTV6M7PviCpAnNoz4+zc3xCdUHQz5XJeMI6WU6PpHfRoEfg0w+An8leMxBSj7LDGhcWoBJPqhoVsf6QE8+gdGwbgBAVD58q3t4pjxaPrn2EHi1l2E+rgJtz3XKZj4jXPp77FpuPqdDErmDfnM+JMN0uoywdz6sA56AHh18Pi7yE21aJIA+MfN61aD9gT5zOWpCxhiBPk6R326El3Q+WTF35ccaYj64VTuo/TpQPmmkuKHk7FE+bms8RRUrUD7LqDCxbvxBPkqM9Zn9E0I+yFhojWBmTD52SJ6O7jJaPvgJ8TJ2Dmg+bl3HfgvMdD4gOEscZkeAPken2JnpvoY+Jk0FxdTOjT5YLZEODYCSPj8VY6IvV5M+Km9abUBFkD64RCMIbzeJPuSHhVOH1IA+EccIWteucz6GDULVsEhOPk1bIHvJVic+gsbq1OIBWD4n4/KkNshJPm1DfkNe21I+pMqfBnI0Tj4V0IggB+tIPridHjnjk0c+I/RhuPIBRz4ODcG/sfdWPkWqOWHkZl8+tOJi/QepZD7olweN5ytrPi0fdxugbXU+5KVop/5tgT6ueKw9EQyIPoZW+XsTvo8+I6mYhyoFkj5HIfI5YV6GPuHw488OfXA+pO8Dvt01XD7aKFdrQ4plPilcz+as6mA+jLmn4tHNXz4xublwQK1SPoTDypxF+WE+pVbvZ0flYz5+4qgSlglWPh0iiPv3dWM+VOWFqkuaYT5Zk5jq1fZbPgvZw1feulw++V6mWA3lfT6Dk3rVtbCDPpzgKkvjvn4+DQi25dE/Zj7mkAws+0dlPuwwRVSZ6WA+gTCbjxaYZz5j/svz1gJwPooRYJNU13Q+dgScxt3efD54zP94cDuEPj/E7xZQZ4o+wEe/SPoUiz6CLBTDwFqLPkGqQ8V8Woc+DotpO3L9gT7mNOsrZbp4Pg6hwdVwa3Q+JaJT0yQKWz4FcxGO0KRhPp1u3pV+2Fc+WkKr3g35Sj5Pae0dylVXPmz5hvtmiFY+zINrFSg0ST7ImYvv0wpSPn/d6E53fVc+oKYrDHsvaT5ExwGkx39oPjAWeXh7Mms+LB8dPy1qjT6CXYOZ4aKXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3091\"},\"selection_policy\":{\"id\":\"3090\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3032\"},\"major_label_policy\":{\"id\":\"3031\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"tgMUUUK9QT7BXoIVemE9PmU7FcR5REE+4gls1QrkRj6Rl+WjIYM/Pkt4WNKZVUs+to2DI1YQRj5lC94VTNRLPoO3UH3c8k8+DuWQA0qMUz6S4yjGOQtbPiiDIDV0x2E+Iqe4PqyqZj5kf/Cvds9uPgeptlhlfXM+DddmyPmMdz5v1Bjk67x8PkjYgOqYQIA+StHy+wPzgT7WoGM3/GuBPtls0xOZsHQ+usDTVFqWYT5LCthxedpQPm2etNLIDFE+ci0wc5hkRz6bSS1rEOFDPr5cBvEQDUE+p+eOv1G7Tj7WUYIvnyNaPquPQow/bmg+dNfIXyqZdD6RzUNG4V6APqmNJtZyV4Y+Q8XlaT+ojT4Ed33R2ViSPv9+AW+PipM+gzsE9GAikD7d0Vv0SuyIPo5Z5yDXAoE+hTHJgfx9cz7tjgOnpD9PPtwtFZBBIjk+6gM+NpRgXD49GyvqLdJQPqjUJgPWsEs+vHR5rTNGUz5FbtB8XDdGPqMx7O5Sbj0+ejx1fvcnUD6WfJ4SLr5YPlyNEtizPls+JwfuwTktYz4ujnoWSNxtPibO9WkRp3Y+/mG1+OSCgT4baL6CZtuHPgNvT21IBpA+Pooh0q7rkT4craJKavWGPpmSsPMi2m8+0gUNlkSzWD5LlJovCNtjPl7epJQ6M14+AoOSnXtZXD5wYXRgIDRTPs6263pzzmA+78nm10rqXz46hsVd0lZXPkIJrry+1GQ+mz2yI++IWT7MXj9WZjtiPipXJBML6Vk+D2rDriv3ej4X3CY5+HRxPiA/jsnBFY4+NnjMReMabz7BUZPziHJwPgI8ZeoLm1g+FgB25TROZz4jfOSgyVVvPh6DG/qUcnU+AKaqCu+VeT7wE6d0YIeDPmEN/0ERQYk+PFtIuO77iz63qtrXH3SKPuJEPejsSoY+epLzYhsCgj7yGFNkj452PnMVrX5eTnY+eJONEefBWT7AjYazOCtZPre0B04yjlU+7Q7FTXvyRz75Hb5TryFSPh3q2Htm2F8+HBrRfUkxUD43V1RWKv1SPqvGi5V+ZVQ+rzwu68RbaT6fqqmb7uFnPlHlNw3dwnA+gM1q9TjTjD6nvaSKOTuTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3089\"},\"selection_policy\":{\"id\":\"3088\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rsef8JB0Pj4/Abz6MUQ8PmvNoVd+10A+2FSm/+CCRT6mTlew7DE5PqwjR1CC+UM+VPRYy+J8Rz69CVEsZ/JJPjbpzxRHqFA+jiwfgRDWUz7gpiPkz59aPqIEKAHeA2E+ZkOrCvqCZj7g24PWhh5wPm3ksospqnM+JTMW9o9aeD6bqH4eJq18PrSFZ7aoMYA+3hSyO8owgj5cXSpeS3qBPsbbTH70AnQ+E01It6qLYj7dSYYEEhhTPmh+penmqVA+og3n+VM9RD6FR5xgjOFFPllgijJkg0I+dkrRLIvxSD73SBFoXJBaPkST6l3au2k+DRDIrhDvdD58TDvZRXGAPgQf+kTceYY+KmLKs3QEjj6Y9R4ugbySPiGliGQ3/JI+74w5QIcHkD4UeZNBjMSJPp/ThTEhdoA+ROqhYBcgcz59qpswFDdNPuU31Tgj1zc+RmtPGEtDUD6tx5hXOulTPiH3buEzQlU+R3cibinqVT72IJtW63xIPi+JH+Jn/0A+alQRM3a8Tj7VSf9ElNlYPnICY+8UHFw+C3aqCkqsYT7irJ7O5KBrPiw7OSUU0XY+GDPKadOfgD7v0LGBFImIPv3EGEzgdI8+BUQlqbzXkT6DVnZ/CrCGPiYB2Uq3C28+YW+RoFsFVj4VCX+ogcBgPqEbXDqE12A+KCjNDAgnYD6UgXTdSndSPjJHzwjvdmI+NCqSfcyqYT4MBFzB58ZYPjrVT++BkWA+y9R7qLRsXj4Ojr/GMVFXPo4B9LVWy1Y+Ts/Iw6d4eT7nx1WYxFJ6PlNp3tGTfWI+Kc9o51QgcT4RX2I6H7FwPuzowjm5dVM+cgLYeENQZD5OXcumNmNwPlGbqIbEu3M+z9wd9J4afj6bZeTjdauDPr/EIeD1pIk+4HaHYs0uiz4MXSAu07OLPjNqXUc2ZYc+FPupQMMBgT6VIaHVUcd2Pnzefuoo0XI++8ou2cu8XD7Vmk5AS0hePvhJTHau4k4+XY9Nu6ZzVT4JFKDyDVFXPqsP98YtcFg+9kHJbNTpST5vsjD8ENNTPmfQAdBO0TQ+K87POCT2ZD6YZbkJvyFpPgk3GeJAam8+Kz4+FQkShT6Y7MC6CAGaPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3077\"},\"selection_policy\":{\"id\":\"3076\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2a5KwtSbPT7QZrNSBJc3Pg+FGMzpzTw++zNyiC/UQz4zPiVX429APssh4QLVskk+2wH5xTW4Rz4z6cHAb65MPs3++Kllp1A+r4XZaK69Uz7Vj/2hXbdZPstLzlqHQGE+LhXYm27IZj47+py+YwhwPjFPI0mw7XM+Q2pMmuRXeD5xEBm4Zh18Pvvkzrd8VYA+WXemWvMUgj7giB7ASO+APtWB083YBnQ+12CSdPAlYz7uL1jaJxhSPlENWYeWRlI+Uc+m7A2gUT6/uiJYiLVDPjmRdNdMpkE+caQ/ja6nST6GTPWlEY1ZPsmguaWj7GY+2cNLi9StdD75WzdGrD2APilBAJOhnoY+QJMIF1Rbjj5c4JxWcFiSPthKdy1kUJM+DpT/KXgYkD5ekw+/CXWJPhoitzCS54A+NZsURQNddD5WJj3unzlPPh7E4GcGPzg+xdGavfvjSj4eQ0R+kJBDPuGbtaDM908+zmRfeY8lQT76hWlaR4VKPgsW0ga/tD0+X+vRvBlqUD62V87RXdVaPn6D+M7GGVs+bqw47lo0ZT6Ihyrw9zdrPkKfQfnETHU+m9CyuYCDgT6T+FQKVsGHPtM9dIYgFI8+vVfkt19ckT66Zp8AiXyGPnnt7dxHLnA+QRCJASmwVT7BiRAypihgPqRcd1rob18+kXrsB32kWz4eBT5hvWZXPmW/JM3FVmE+vueTCWHsXj6bTUJ65ClcPlg5XgSMB2I+m7CgIGA2YD5BBEOPCixcPs5RiBltYmI+uxoHV+Gscz4Z1nPu3MRyPrWlVBbUuYE+qgMvo6oncT4DiB6d6VhxPvwYpRDIzV4+TDvNiTxraj7bPu5DxxFvPrA9gOf3m3M+zNXhm4CSfj5Fpq9BXNGDPnVIyGgKS4k+RC3F5vRfiz5ODTtIlamKPpCXMI/NIIY+EYtT9oBagj6OQHC6gh15Pqcza3eWcXQ+ykH7Ru7GVz6psepa0PVdPveJXUtxVFM+vCvW4Z3/Sj5ujZffAMFUPhLs/WaQfVk+6VyptUSiUT7pLrsLisNbPmTPyktCxF0+0YxIVGuKbT6OekhPdbVxPqaFTAT1yGs+LIP9uV48gT4NqpBQIxeOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3057\"},\"selection_policy\":{\"id\":\"3056\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"qwputSArPz6QyxxDdMtAPhDW20Iqm0E+mucR3bF2RD6W8wiBcFk8PpR3JmdOq0o+Wh+yYQFQSj5u3AEuexhNPtTWOvi6jFA+0rnsJpu6VD41ln5/b91aPi61NSzSuWE+zJDDbwimZj6rd1TQVGtvPhwt+XXzs3M+B7VBMP3hdz55y23T44F8Pn9Woau5c4A+m9ctJ1PrgT5jtgPA3SKBPhU5xIo4P3Q+XRU8ZXm/Yj6z6NtJpLxRPsVy4Vn9hlM+HP/Mt+rxTT4pn7QaWN9GPj7XZzpRDkA+W9m2o088Rz5+oUh2/g5bPrFM8UFCFmk+rM6lh875dD4lM7MCaj6APs8JVuo7noY+ZwhamJ0Ejj4oXbJc4FCSPp6tSK5ebpM+E+E4BBOfjz7hMJ9vZyCJPunfUmQc1YA+IWgCbW1pcz51z51XK8pRPp301UHiRS8+dWrL7P8BUT4+6xfQso9BPiZqdNvQa1Y+XY2eHSWJUT7sxsrKkO5EPiC7Ln8STjw+D2/QvggVSz5RDoi7aEVWPm4TANcxZWA+MqVvf+mpZD5MucQXG+9tPtyjH7QX53c+fHAgzeQCgT5ktr8wsOqHPulT7Y+uPo8+jLpkCbRxkT6bq59x7l2GPpidkxMfbmw+F7xbOfgDWz6XrdQ7ftpjPp7ITnshCGA+qQtKzUN0Wz4EmelGPSdVPh8bjhaZZWM+alZgVAXPYT4ZUxSdbyxdPvfIOOrL82Y++Mta5c1qXT5Z7KwOf+JdPnVy5bfxqFU+2Cq4xzEFdD4rL3eTArxrPuT3x6Q2dXo+DbT9D3bjcj5BCYvllUlxPmRIzBXuzFs+tpj4T/5eaD4Nw6YwiiNyPqtP77VfnXQ+kGn032ndej7fKs4ka2CEPuymHHmVcoo+Zs5tYUjoij5J9keDMiCLPsxyblGx0YY+nrBVcKVQgT6tKwllnFp4PoH0exsWnHM+J6BAq4MHXD6qVK0BW8hdPvZ9Gdo9hFk+KQz4gCL3Qz6Eiou9mtdEPsqTXiZcB1k+HgLiENo3Qj4o1IlKXSZTPtF2Sxw0tFw+EnnqNMidYz7exDgr4A1vPmPxd15EPHA+sJvQGSwqjD7urI5uY5yTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3087\"},\"selection_policy\":{\"id\":\"3086\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Hb/aYRYrQD5RfbNl0GlAPrFim/ZPOUI+AGrqIo/3Qz5CmErpxCA4PioqrfCjg0o+2WhK6QjYST4vIoHObvpIPpurFqTIJE4+aJzDMwCLVT6cKHqpsPxZPuxp5yuNDGI+8qgt9RaIZj6paIn+j5NvPrYPzkFCenM+n3RTSR7rdz6gbtjd8z18PstRRueBKYA+WJ/0IuL3gT4TL4GOq+qAPvL8dDSXd3Q+hhN7VVGCYj7b6l+L/PtSPsxzXXzNEFU+qCE/4NxSTT5EaEWM2IBBPg5BQ8MaMkM+XU7u1+QKSz6FIhgCZl1YPkE5NUkjTGg+10qtgdIndT4tacwdwV6APiHzpJej0YY+uqFi7S6bjT4zDUUuvUCSPvlqgaI3WJM+7BAIotVOkD62JcEovwGJPvkpIdQqm4A+N/68PUOGcz79Y0UixidRPrrHEgiguy0+lqHOONxuUj7ClFLinjpHPsy+TEIzJU0+TyqlldG9Uj7CpVobsWFIPkpUmT0RB0I+UmbDrO+GTD7DO7QA5+RePnlal6Jd/V4+ISUsj8l1ZT66aZ63Dh9uPlVsHksn43Y+e843Sv0ngT7Qe0UbBsqHPpQiey7RRo8+cy1/OZSikT4qmglltzGGPq+Ot8w6/nA+Aaxj6SueWD5tD2JpMvBkPshOoRBiv1w+6FLwn4uRXj57O3mI3vFTPgJl7p7y6mA+6T9oGv3BXT5sg8QCQLJUPjr7OCHtTWI+R9NbZFp2Vz7Lrw5aj3paPqrqeKQDAFk+s7bJz1LjjT7liBbjwQyKPocJF9C1B3U+91b7uNLGaT4LrC6Prlh0PjHcOAxOe2A+il5jIWBIaT4a2aFovOVtPq+ifYoXJHM+Z1WjnNQufj4gQXiMyi+EPqZ+YxQ224g+G5P9pCujiz6c4rjf7liKPvvzLvsJloY+kdEUawGQgT4bNJ+OCeB3PqCRYkEbgHU+7tcROfT2WD7aILOx+rZgPrbgcvaWfVY+/G3JLlcWSD6rreEQ/DZTPu9nDbkffVI+ul4FIdWKVT7VEEAQX2JTPvt0bObSOVs+48r7j3Puaz7zM/CIGstoPgTYTa91LXA+3rNWXNBmkD7ewz4sBwyMPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3035\"},\"selection_policy\":{\"id\":\"3034\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lJyZL9XZOz7VJfxcF+Q8Pmj8LMzU4UA+M8WtCFQzQz657xhebdsyPjtruOCJ5kk+TmyGLxiKST5umlfTJ0dKPr4Y5MdlSVA+Z9hzrWMeVD6DRCtrzXNaPh/QvtazJWE+jEWUZwZVZj7BUI0IMY1uPkFOgMQOYnM+cstvWGR9eD7VIol1DqJ8PmlknkO4OoA++3rX9qS6gT5PnGlhnTKBPpSHTQwwnXQ+FVDHrv8jYj5syrRb+kFTPtOMLPyfHFQ+xPi+X1bESz4VPECL4Y1FPoijXGTak0E+KZ50UK7ESD5OglCNnX1aPk//L37i6mc+R1X1JKsDdT7jiNeYznGAPtcDR/ylzoY+85oN3Rr5jT59n4MiAoaSPqDdqGzel5M+vEbkm2vJjz5rtCoLn2CJPqzNWdI/EIE+CYKvEyO7cz7hRhi7/uxNPol48YxYRzA+FvChlkyPTz4YO5CqSYFUPnQ6eUElN1I+HF+8eUtHVj5YH9KL3aVJPrRf/92O6kk+RS0by/3kTD79C0DBIC9bPvQFD2f8oFs+xUkfYbIHZT4HOB39AJtuPi0a4PhcUnY+HT+I2n2MgT5Tup6NVCqIPkYrTcaxvY8+gn2lPKC2kT7wRGCY/TGHPtzfndS8DG4+W7YTV29zVj5FoItWasxiPn7HWbBcFV8+zCNs7PMaYD5A9pJHaBhXPiulRK4O7F0+9FHeWcJdYD41/SjlR+JXPgLngFjrYWI+InuuHJYHYT5wehLXDr5dPkNIBWsTals++5gvHFT6fj7m71hJrNR0PkIWd8C7qIM+jMOBEuV+cD5uA8BO35V1PmiKoZywpFw+petKBRJ3Zj5cQe9lR4xxPqqM06m503Q+ln+lPbbwfD7w5T9LSzKEPpQ2PeZw8ok+j2olt0GYij5puSjY2jyMPiCYXpSqpoY+Vc8Y+aLFgT6lWmRDSBF4PsoVpvQBjHQ+MMtYaeq3Wj4wfOU8f3JjPtpawNgDm1Y+X7MeQiH0RD6qeGfspGxVPhCTrW7crFk+u9Z3xhFOSj5cILdegD1YPsmGuoTBxlo+fk2Jwc8FZj772XgHtOVpPhr4wiwaMGg+iycBYR7Ggj4rCAgskv2SPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3055\"},\"selection_policy\":{\"id\":\"3054\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"067b7123-4325-4a39-8c32-43a49a1f8e30\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"513d4488-d1eb-4641-8ae7-3856e9be51f6\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"07ebbd4f-023f-4d86-958c-929d084817f3\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"92f30a80-4156-4843-b628-f638620aa2fe\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3478\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"3475\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3478\"},\"selection_policy\":{\"id\":\"3477\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3472\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3472\"},\"major_label_policy\":{\"id\":\"3471\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3471\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ou1K3GnjSD4LvPLgKIVKPuj6ydukGEU+3pqZXoovPT4W7MnOZgw4PhKFfy1G3iw+ig8ZneGgJj4ULLOw5WYbPnjSSAsmxyg+MsBNXBf6HD6FF866WyAhPsYidzKuMiU+lHzDibQqMj7/X14Eeh8wPl4qISKDFlM+Tg2cjrxJXD4+PcBeXs9rPvCYR33Br3Q+DAy4vwvYfT5m+waXBKd+PpSu4ryRAHo+5sI/ntQLcT5mdAnJmgZqPjj2Ykxlq2A+uw/VPZd9VT6C/HgxrGxLPpqQAA0/NkI+ISVgnKV/TD4EYKGqZlVRPvPslayP1UU+vnGi1NbaNz5VjSUl2dA5PoYSRhq+HTw+gnv2aez7Oz6xT56a0Cw6PqSvvY2gTjw+8YhjlRJDQz69ZtkejyI6Pkk+wjgNHEE+iKnIl8fQMz6n1bD5oaU+Pu6DfR9dkDs+/krCh2S8Rz6NeNK+ty5CPsQztAMvAFE+pkI6n6Etcj5yX8IEl1yBPtMe8Ct1GYE+hArSHfoNeT4ERL8NblhyPuNAHlv+umQ+Eji6lTrgWj5+2hdApftQPiuSPllT+0U+k3cfAGNCQD600No4j3wyPgDSkHTUBCQ+1lGWMW0EDz7/Tk1M7UYOPuH2KHqR1gc+5puJQSyMCT7r3z615OAFPlBzCipECg0+79bEJ1A9MD44BbiPx+xlPv0s8rlv4XY+gFfQZQOHgj5IiwZM4vyLPgDS2mN9YZM+gGiXEmkdlD6lD0Mp35OLPuRgArYES4g+vD+diHawgD7ppMTzXItyPkq2RC2sOWA+nh/l1WPtST6iMcRpJmIxPioFoqARrTE+2IA0V047Nj7oEiM6Er8/PmsX/aJXPEQ+AFOkIbreQT4YkqH8UwJWPgVPIbmbtmc+xLKmyQn9eD7oLTF8Mll6PqZL6YIld3g+N4ts202ldT6NMHuY6/JxPgzxizoKO2s+MhLqI8+JZD5utCgjIItePjCyst8yk1c+lIZdQqC6UT52lgaivRNMPl9JGH5h9UQ+xJhjB+iSPD7M2/kfooM7PsxKKfpEcTk+8ozB0aj/LD54vWz4iL05Prc/gpe9UTc+DqkP3Jh/MT6t8CR0UQwjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3502\"},\"selection_policy\":{\"id\":\"3501\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3474\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.71, C/O= 1.23, [M/H]= 0.85, T= 961.39\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"3502\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3475\"},\"major_label_policy\":{\"id\":\"3474\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"92f30a80-4156-4843-b628-f638620aa2fe\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"07ebbd4f-023f-4d86-958c-929d084817f3\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 129.58, p-value = 3.93e-02\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"599ec28a-834d-4320-a46d-d88d66148fd5\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"b7949e1c-5e9f-4b39-b092-478bdcf97088\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3816\"},\"major_label_policy\":{\"id\":\"3815\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"n4lp/K2jWj7Upu0smGZcPhRWvj2DoFY+KxLNBJVMTz407pEDWMZJPhvvo8qDCD8+dt8V93dhOD46XcI3lawtPqF10UvZozo+WeMNQbJRLz4BafzOnHkyPg3YSfL6vTY+QpgWzABwQz6LWNO+6kBBPpPNcez8UWQ+LRQWFe4wbj60Gnua6b59PgDSrqfYMIY+AtSyz90LkD7QGJqnzoWQPr/PPMHAEYw+9nsGNAhngj62bSOvgBh8Prk644xP7HE+R1LFBEQvZz4yEgzxv5ldPp4EewlRl1M+76mbZYeXXj5ZtDWlYYNiPm1Y0xJIRlc+GxaiPgpaST6MGvJLYl5LPntgckLM0U0+Z7FtGraYTT4AyrJDHa9LPseRrM1C9k0+t0HJNe5wVD7KWIdzUsFLPhXx8ATqMVI+/cLShZMORT4UqtwitU5QPvoQuA3mY00+W4cB9k1RWT6A+JU7f15TPoTugwzYO2I+UoHBzTa8gz6Z50DXCtiSPrtg5thBlZI+25p1cxA5iz6/yxJAnvCDPumm6zbtinY+Vfl3ZYoqbT5kPUqeGV9iPu2dSAE5p1c+fDqkHgFlUT4/zaUCsq5DPtZ1s2YhJjU+H3o4bkBNID6NqIGlSNEfPq3orH/2ABk+J+oys/jPGj4g+A+revYWPsc1VgC1zR4+k+YQrWlfQT6xN4nlK+N3Pr6tQDQB/og+2/u5mWg7lD5Z7G/ac4WePoKN/xalEqU+pmW0Kg/LpT4fcLY8fsudPsfRZihfWZo+BmjFs0snkj5WF/hpWS2EPiTplRtSmHE+HWyWCRz8Wz6Nwv6oy6RCPuLC26i1AUM+TXlQlWz7Rz7GNZiK/yJRPsOR5zMD3lU+QZp5pE5QUz7BNucU+OVnPhCIPZYeoXk+vgbWD4fmij595bRshlOMPhbnh2EhSIo+4vO5JDxBhz4bW+XTpU6DPnNtgjMOTn0+juW87f4hdj51duZzxHdwPkDomUDrcmk+fuTyTrwiYz5/8KlyGFRePkW8wmgvp1Y+cuNYXvDXTj72iL5I0alNPo4sFXOKaUs+Kibz6Ec6Pz70Ow8pxq5LPp4+A70nDUk+/1M1Hl7GQj5ZmtnNC3E0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3846\"},\"selection_policy\":{\"id\":\"3845\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3818\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3819\"},\"major_label_policy\":{\"id\":\"3818\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3815\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3866\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3846\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"EPQvT+j2Vz674XnvBGZZPlXdu7PfDlQ+sCUznZhuSz7WsiTnIIlGPk7wP8Sg7Do+MJnWYbTyND7OMwCC+W0pPkuVVI3r0DY+umbhc0CvKj6/I3kQKlsvPmOSl2kwZTM+PZlVSTyiQD5va2yyD3s9PsbPW8O4rGE+q0SXKO0Aaj5g8hWV7CR6Pmwi0TH10YM+1srTZQY4jT4svQA1KUSOPkm79eX0rYk+Xt3pEtaogD45/zMm7TF5PqdlqcyZD3A+3KoEV2h4ZD7oFoifAclZPklc7l/N5VA+oTDH/gNLWj51EaBEfhpgPmgue9cPMFQ+UlV1n9PhRT7XmFymW2lHPsSVULpBZUk+YE9UXUURST4ITTUWkSlHPgbGCTUkskg+WiuwF0zPUD5xDs+a/TRGPrVMM/plAk0+YnhzPNKEQD7wJoj+pxtKPuiuZ1rBbkc+l+vzeGInVD7hqu7Y/B5PPrpvcZ99/l0+DYvKBSoxgT7MDeHKXvOQPox2RMCE0ZA+WClbu7NliD6yQsWw/8eBPlIx8enMwnM+/O465kBFaT5M0pXW949fPp5T2UFeF1Q+CNLXg2+HTT6QjQOKLoZAPpa/7mGVaTE+WLvIBg1kGj7Hgm+xnlkZPp05n54PtBM+yhOhHt7tFD6gZGdRDlwSPkIp8kiO8xg+Fpi2n8KEPD5RMhrfQUJ0PoAbl/1/mIU+0+z+hO3ckT6M9LuDqm+bPoubBhROMaM+u4YwoLUXpD4q2iAskpebPg3oYIsGx5c+hDLpl1wckD6MKLMPuXOBPsulsOXfLG0+MZ/8R05sVj7HwBW94/88Pu6nfHyqnz0+7RNMfknnQj5sVjlcQvRLPr6QoOaI1VE+BUDjW860Tz5WjL/vNpVkPsNg5UBSj3Y+M5tuublAiD74DmSPbbeJPti7weiB6oc+LncYgkIfhT708A5sRmyBPriNBXkxKHo+o+/T2tSlcz7Tvgq9qv1sPqScfy6QRWY+nHpThbWyYD6mNrpqcHNaPgnEt/vVvFM+nNVr5dSMSj62Bjk8VKFJPsMR8lmavEc+bMqXDWKhOj40+BcHO4RIPvcGUgEPC0Y+Ed5TagFZQD6/oU/5bX8xPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"Lh+jqXNQXT7ta2FqK2dfPtPOwMcmMlk+U38ztkiVUT6SKf8fjwNNPvT2g2gzkkE+vCVVjDvQOz5TQ8J2mPUwPvdVTgrHdj4+/C8dBxL6MT4iQLyVpEU1Prcd/HrFFjo+R5fXTsU9Rj5fe3CkTcRDPmDLhxVB92Y+2HHKgHcwcT6EIfBPc6yAPpSBjB28j4g+mcJ7bLh7kT4K07O0iOmRPjXkg5yMdY4+jhojVTolhD4z3BI4FP9+PssPHU0FyXM+svmFsh/maT6+BkghP7VgPvOsB7PUSFY+nhE4ZgVyYT49V8sFRexkPnKCK06AXFo+5NbO3UDSTD5BnIfxaFNPPpkVSmUrH1E+t4nDaxMQUT58I5i4VBpQPsSuJ7MwnVE+FFjiU5ASWD6S0R+m06ZQPtA7yAyh4lU+mA0yz1SYST6wQHVGlo9TPoY5hGCFrFE+HyMPczl7Xj6Qm7QKgC1XPislT0lxeGU+l3e4lUNHhj5mwaDjtryUPupKiPH+WJQ+XgyQK20Mjj7MVGDPPBmGPoAc5oMNU3k+14Fa8umHcD6ikUlRN/ZkPjzot8ATN1s+9Itce0oGVD7uDEh7NddGPhYseGut4jg+kpYMWXpoIz4q58lMeSQjPr2XumDdTR4+QmDiowlZID6gi7gE55AbPiYh3dvtUyI+G4FGCnJ8RD4RPfjrFYR7Pvw/6mqCY4w+4wp1ruOZlj4T8pGYns2gPnl/+Bn886Y+kUQ4tWh+pz4UBkxNav+fPoG7bMW365w+iJ2hzzoylD4gBj3E+eaGPmJ/U0Q0mnQ+hByY5fTFYD62pHJzpclGPs0xeROWM0c+rd5UrI8PTT5WwBPn3UtUPsiSLoF95lk+gJQBGzbGVj4s4Q46uTZrPl2vlevqsnw+SXI9ZlSMjT4CvAVKn++OPlQSTtrApYw+lnBbxzVjiT5Cxbs7BTGFPpem/3b1OYA+edulACmeeD6BjUeJs3ByPtwztFJGoGw+YE6SGMOSZT4s1Uw9YBphPoG0zdWIkVk+pPii64WRUT6bBaIqJ9lQPllHOIx6Fk8+9EAn4pbpQT60fwZLUdlOPkV2tHhAD0w+7ckW0rozRT7zkmOiqWI3Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3866\"},\"selection_policy\":{\"id\":\"3865\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.71, C/O= 1.23, [M/H]= 0.85, T= 961.39, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"GKVJedN5Uz70+yH3T1xUPlVtbaelfk8+sE6j3FnxRD7L2x4dqhlBPmrpLpuCBzQ+7Cu12TBgLj6mHl2yl04iPnRTn8k6ZjA+pYIz6FboIj6jyzqPGPglPnH0/CDnjis+egjmfpLbNz6q+Bomyws1PohhBad4eFo+aOPuNg36Yj4qdKtGyBl0PmyjR1Ujr38+8eQXj3hliD4TUMyUTpqJPuXxYhNVq4U+MEF6BTJ4ez7yTpzH2FN0Pny0+eZQ32k+2x5Ljs3UXz5EHjya+2FTPoYHudKGwUg++KOu2EwUUz58L7Elph5YPnvrPKERBE4+FVxdZlwPQD7UeHZbc8VAPkGyEQnM+EE+VElAR6x3QT7G8jw8SiY/Pj5i3HTctz8+7oQ0XaduRT4BPLaTNcs5PkiPZo3Xn0A+kzCOpq3OMT7E2Hia3GA+PnZsmLv63jo+YaRPs0b6Rj7Zs6/6x1ZCPpWxPOKhIVM+qpeHOFfZeT4oy1spIoyLPojH7C71tos+U56KYN2ngz6UKiBEWlF8PjppVqmiL24+mQfht8G7Yj40JwJNfN5WPsZixIl2Okw+iEMa1NGzRD51+cqc6XI2PkzhJ8LmSCY+/itJBWPuDz725Lw/q/4MPjFoptI5ngU+Re/TShodBj42kQkhNUUFPtD8wy4rQw4+CIM7F9cRMj6CYBzB/FZsPndbpkLbyn8+HmNlSnLGiz4ilmiSXUKWPtXl2M2XCaA+BNNx0Cs9oT4zYdQrSOWXPtWsXdFJdpM+zCmrk7RdiT6Cco6eJMJ5Pvh+hO8RFWM+JNxdqS8uSj5ATmTqIy8uPnT2Y79CFy8+uiAyry/DND48uMzbnVlBPspIIgH5IUY+LgJd5p8XRD4Kauz57AlePllEopu2aHE+5jj/GFfPgz64F1YAVFaFPlSyzww+8oM+vk6KLxaLgT70t7H2qIV8PnCSHrTq33Q+W21Y/qH0bj4UM14dD19mPn8HAFe28GA+PFEYrx83WT5uSZKBtvFTPrV6KJrZsE0+mt/4uXlYQz6sjxU6w9xCPoUg9LKpkUE+LiMUkX3qMj7YcwBHGTRDPqpESnLM/kA+GCT+naiMOD5pwjPipR0pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"E7fEP8TmYD7aqFwxcDhiPn71xaezgV0+02p7FujTVD5OgAL1gjlRPmZ6DH3CBEU+e5SowGvJQD7nzZNeSYU0PufLAee7cEI+BiL0zIbdNT4wbFtWLfc5PuI1FVSCtD8+Ryy6WDjySj7BNJnq7/tHPmLqYIW9Z2s+eaKeeeezdD6fYCV3BbKDPkrSuaQfiow+i7XZV//kkz6WCc4Edj6UPs1WizcWPJE+VNdPZfcRhz49RlVLlO6BPjSbSab26HY+IBVlQiF0bj4QA+4jwuhjPnmFmanezVo+81dE+WANZT700JI3cPdoPhw7CFWHil8+EGhzC1xSUT4i3jaeqPtSPlqH6T1m1VQ+vYzN9t/cVD5OjaO0iuVTPjh5dbBLCFY+90D4vIgqXj7KyZkOhU5VPoaaLkPoE1w+2DYvHOiaUD73HRsfMwVZPtz10V4nrFY+Q54tSbySYz4UF9R5mpFdPj6E6Sff5mo+zzY//8GLij6e6dOZBOqXPrJdVhoJT5c+skswwyFlkT40ghVej7iJPjUZLBkJ/n0+iHWHianMcz4uZxMW9U5pPjyF116bmGA+NFM7UxlwWD7EHeY27yNMPgb7UmzPJz8+PqkeG+ieKD5Qb5LVnZEoPqFOAwtomSM+Vu59ILJIJT7Sk81iLaUhPpM2pTTqPCc+oguEzue1ST6QH0K1bM2APuAWl2NKC5E+J0ZBDpiTmj5IoTsRRWSjPi81JmCyG6o+SPj2hPJYqj6GP8wm2tihPlz7tz86nqA+Jju1Hb2flz5r9aiEoHmLPsySaT8bpnk+FPU+H5BwZT6KcWRXzr1NPieI3qGaPU4+HvGDqaDKUj5uD0onMJlZPpD/nvOEVWA+a7PEVc2UXD4+HGzWfGNwPuRlbEjD7IA+S2pWg9v+kD6h2YlsXKiRPuwNIFsCT5A+BpnpGWL3jD482nEsd1qIPjskc9kY3oI+bpRN3KzJfD5g0x1ZAcB1PoDkGRWQ+nA+XqBZxuipaT7Iy+AxPVtkPjA7cQTydV4+pXNcgbMrVT4gwbOrbztUPkwcm5m1oFI+kxRpIAnFRT4IAo+FuRRSPkkc3oPBjVA+8pVr7WdGST5+U5mqRFM8Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3888\"},\"selection_policy\":{\"id\":\"3887\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=129.58, p-value=3.93e-02]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3816\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3822\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3822\"},\"selection_policy\":{\"id\":\"3821\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3888\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"3819\",\"type\":\"LogTickFormatter\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"b7949e1c-5e9f-4b39-b092-478bdcf97088\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"599ec28a-834d-4320-a46d-d88d66148fd5\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:26.509978Z",
     "iopub.status.busy": "2023-11-28T20:47:26.509474Z",
     "iopub.status.idle": "2023-11-28T20:47:26.513600Z",
     "shell.execute_reply": "2023-11-28T20:47:26.514004Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 129.58, p-value = 3.93e-02\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(129.58, '3.93e-02')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:26.522712Z",
     "iopub.status.busy": "2023-11-28T20:47:26.522186Z",
     "iopub.status.idle": "2023-11-28T20:47:26.524886Z",
     "shell.execute_reply": "2023-11-28T20:47:26.525335Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:26.528609Z",
     "iopub.status.busy": "2023-11-28T20:47:26.528076Z",
     "iopub.status.idle": "2023-11-28T20:47:26.530220Z",
     "shell.execute_reply": "2023-11-28T20:47:26.530561Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:26.534769Z",
     "iopub.status.busy": "2023-11-28T20:47:26.533948Z",
     "iopub.status.idle": "2023-11-28T20:47:36.651164Z",
     "shell.execute_reply": "2023-11-28T20:47:36.651530Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.672310Z",
     "iopub.status.busy": "2023-11-28T20:47:36.670982Z",
     "iopub.status.idle": "2023-11-28T20:47:36.674995Z",
     "shell.execute_reply": "2023-11-28T20:47:36.675330Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>438.332500</td>\n",
       "      <td>0.282629</td>\n",
       "      <td>4.656512</td>\n",
       "      <td>954.915535</td>\n",
       "      <td>1.151146</td>\n",
       "      <td>0.821189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>739.268631</td>\n",
       "      <td>0.418187</td>\n",
       "      <td>0.039168</td>\n",
       "      <td>24.179707</td>\n",
       "      <td>0.088393</td>\n",
       "      <td>0.077201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>69.120000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.572866</td>\n",
       "      <td>926.699931</td>\n",
       "      <td>1.057113</td>\n",
       "      <td>0.706212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>100.712500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.644414</td>\n",
       "      <td>937.123550</td>\n",
       "      <td>1.068721</td>\n",
       "      <td>0.782407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>206.035000</td>\n",
       "      <td>0.000016</td>\n",
       "      <td>4.667361</td>\n",
       "      <td>950.543803</td>\n",
       "      <td>1.153871</td>\n",
       "      <td>0.812646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>282.367500</td>\n",
       "      <td>0.538250</td>\n",
       "      <td>4.677639</td>\n",
       "      <td>974.096441</td>\n",
       "      <td>1.189229</td>\n",
       "      <td>0.866455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>2255.050000</td>\n",
       "      <td>0.996000</td>\n",
       "      <td>4.695665</td>\n",
       "      <td>991.362305</td>\n",
       "      <td>1.312603</td>\n",
       "      <td>0.931021</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius   chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000     8.000000  8.000000  8.000000     8.000000   8.000000   \n",
       "mean   0.680000   438.332500  0.282629  4.656512   954.915535   1.151146   \n",
       "std    0.139971   739.268631  0.418187  0.039168    24.179707   0.088393   \n",
       "min    0.480000    69.120000  0.000000  4.572866   926.699931   1.057113   \n",
       "25%    0.580000   100.712500  0.000000  4.644414   937.123550   1.068721   \n",
       "50%    0.680000   206.035000  0.000016  4.667361   950.543803   1.153871   \n",
       "75%    0.780000   282.367500  0.538250  4.677639   974.096441   1.189229   \n",
       "max    0.880000  2255.050000  0.996000  4.695665   991.362305   1.312603   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.821189  \n",
       "std       0.077201  \n",
       "min       0.706212  \n",
       "25%       0.782407  \n",
       "50%       0.812646  \n",
       "75%       0.866455  \n",
       "max       0.931021  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.684288Z",
     "iopub.status.busy": "2023-11-28T20:47:36.683239Z",
     "iopub.status.idle": "2023-11-28T20:47:36.686614Z",
     "shell.execute_reply": "2023-11-28T20:47:36.687056Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>69.12</td>\n",
       "      <td>9.960000e-01</td>\n",
       "      <td>4.695665</td>\n",
       "      <td>972.110738</td>\n",
       "      <td>1.179201</td>\n",
       "      <td>0.849730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>299.73</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.691506</td>\n",
       "      <td>991.362305</td>\n",
       "      <td>1.062354</td>\n",
       "      <td>0.815913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>2255.05</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.646666</td>\n",
       "      <td>945.543416</td>\n",
       "      <td>1.057113</td>\n",
       "      <td>0.706212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>241.39</td>\n",
       "      <td>4.010000e-13</td>\n",
       "      <td>4.572866</td>\n",
       "      <td>940.242025</td>\n",
       "      <td>1.154869</td>\n",
       "      <td>0.931021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>276.58</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.673017</td>\n",
       "      <td>980.053548</td>\n",
       "      <td>1.152874</td>\n",
       "      <td>0.746132</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000       69.12  9.960000e-01  4.695665   972.110738   1.179201   \n",
       "1  0.537143      299.73  0.000000e+00  4.691506   991.362305   1.062354   \n",
       "2  0.594286     2255.05  0.000000e+00  4.646666   945.543416   1.057113   \n",
       "3  0.651429      241.39  4.010000e-13  4.572866   940.242025   1.154869   \n",
       "4  0.708571      276.58  0.000000e+00  4.673017   980.053548   1.152874   \n",
       "\n",
       "   metallicity  \n",
       "0     0.849730  \n",
       "1     0.815913  \n",
       "2     0.706212  \n",
       "3     0.931021  \n",
       "4     0.746132  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.743330Z",
     "iopub.status.busy": "2023-11-28T20:47:36.733688Z",
     "iopub.status.idle": "2023-11-28T20:47:36.746947Z",
     "shell.execute_reply": "2023-11-28T20:47:36.747287Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"cb07b627-98cb-40b0-b10c-e44095d7caeb\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"f4aa5aeb-ce5f-42d5-96f3-9d90c86ded12\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4233\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4233\"},\"major_label_policy\":{\"id\":\"4232\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4236\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4232\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4236\"},\"major_label_policy\":{\"id\":\"4235\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4239\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4235\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"uR6F61G43j+mIec+u4DoP+g+u4DYVOo/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]},\"y\":{\"__ndarray__\":\"SOF6FK5HUUBI4XoUrhdaQI/C9Shcb1ZA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]}},\"selected\":{\"id\":\"4239\"},\"selection_policy\":{\"id\":\"4238\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"f4aa5aeb-ce5f-42d5-96f3-9d90c86ded12\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"cb07b627-98cb-40b0-b10c-e44095d7caeb\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.750834Z",
     "iopub.status.busy": "2023-11-28T20:47:36.750346Z",
     "iopub.status.idle": "2023-11-28T20:47:36.752412Z",
     "shell.execute_reply": "2023-11-28T20:47:36.752740Z"
    }
   },
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.756817Z",
     "iopub.status.busy": "2023-11-28T20:47:36.755864Z",
     "iopub.status.idle": "2023-11-28T20:47:36.757940Z",
     "shell.execute_reply": "2023-11-28T20:47:36.758274Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.761428Z",
     "iopub.status.busy": "2023-11-28T20:47:36.760857Z",
     "iopub.status.idle": "2023-11-28T20:47:36.840432Z",
     "shell.execute_reply": "2023-11-28T20:47:36.840768Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"a6e90a5b-1a6e-4e80-af0b-75cfea32113d\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"74888522-e0b1-4101-9b02-54a52db03f85\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"4567\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4571\"},\"selection_policy\":{\"id\":\"4570\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4827\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4564\",\"type\":\"AllLabels\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4568\"},\"major_label_policy\":{\"id\":\"4567\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4827\"},\"selection_policy\":{\"id\":\"4826\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4565\"},\"major_label_policy\":{\"id\":\"4564\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4565\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{\"ticker\":null},\"id\":\"4568\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4571\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"74888522-e0b1-4101-9b02-54a52db03f85\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"a6e90a5b-1a6e-4e80-af0b-75cfea32113d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.861274Z",
     "iopub.status.busy": "2023-11-28T20:47:36.860703Z",
     "iopub.status.idle": "2023-11-28T20:47:36.895734Z",
     "shell.execute_reply": "2023-11-28T20:47:36.896074Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.908320Z",
     "iopub.status.busy": "2023-11-28T20:47:36.907619Z",
     "iopub.status.idle": "2023-11-28T20:47:36.910583Z",
     "shell.execute_reply": "2023-11-28T20:47:36.911012Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:36.916017Z",
     "iopub.status.busy": "2023-11-28T20:47:36.914342Z",
     "iopub.status.idle": "2023-11-28T20:47:42.271867Z",
     "shell.execute_reply": "2023-11-28T20:47:42.272199Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.6085566759109498,\n",
      "    'gravity': 5.229089069366455,\n",
      "    'metallicity': -0.3831125259399414,\n",
      "    'temperature': 878.1430053710938}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.229089   1.608557  -0.383113  878.143005\n",
      "std     0.148864   0.315052   0.053363   35.190237\n",
      "min     4.980973   1.191096  -0.450307  818.899597\n",
      "25%     5.139564   1.384560  -0.421366  859.027771\n",
      "50%     5.238162   1.546032  -0.389988  882.115479\n",
      "75%     5.324604   1.794734  -0.331131  897.018906\n",
      "max     5.488423   2.247647  -0.310102  939.580505\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"369a6f2c-6f33-4a88-8aae-014b7a43acdb\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"7773648f-e441-4a49-beef-07b2ffc280bb\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5224\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5221\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5222\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{\"ticker\":null},\"id\":\"5225\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Ynn0/DKuOD58q4MFAllEPiAjzRzOlUQ+iMC69escRj6LuGKr63c4Ps0oDUEg8lI+KW3b+LgcTj41/3K8F/VQPiNRTUMl9Es+RmkuquRzXj4wsRYfVSVlPn4nLlimLGk+xFaCQUrxbT6Vo/K3n2Z0PhjM/U/xBnk+q9bBDATkfD6litH/3G+APotH6vquioI+8v5HxIw/hT6P529HJimFPsw8anDwMnw+AwoNEausaD64BZILgJZSPs9NriwbjVc+/ZtLYGCXWD4a7cGZcfJRPvhBeGmtPlA+6gwc+ShOWT6w//UIgBlmPhuoJVKdfnM+CCTiGjUmfj6KrNbwzcmEPtu7pDIPzYs+PDyJIQKQkT7EnvIeShKVPgNsL8j9kpY+Dha0Iu9skz61frfg46eOPn0C5QeYwIY+4O0ljCj5ez4JF5XfYqFVPgbJu171tTM+Rxud22zHMj4+PYLr0YQ2PhMxtVIEQEI+sU3Rhh+NMj4vdqrZnwUsPqnABDO/kyg+V9dyB9P7Tj4NJ2NT8jdQPlqXcS2X7FQ+hGwGhGzhXT6leyp2RSBqPrPm9k0YCnQ+19fapL10gD4By4KEpiuFPu9pyU/mU4w+Hgt8F20UkD6AdMMJrVKGPk2Dtqp0wnA+upWEvkOlYD6RNdaTSTxlPorqXX3fg10+qvbnDy7NXz4X2MoIdoRgPvT7VTJLTmM+HY1x1k4CYD6nQdI4EW1bPnCPYarcSlo+PO3HWOojUj69v+jxMttFPmTmJYtjo0Y+S/mrIEKATD4i9mPzJiZHPitu4jMaO0Y+bzr5kWQEVT7WyYJKDkdgPiVsuFDOAlA+fIdEDYNOUD4InHUppA5aPrlhNHSSzmA+uiLwdDu7bD6jdBH3HilxPkK5y8AZgnY+GKlUL8LNeT6YYvUHlyx6PktU1kTTanU+X45Algmacz4f2j6JJaxpPsDxcdDxVWI+yPVaSbY2Tj4U0voyWz1SPickogGp00Q+yU3VcjLePz7L0fmdWF5GPkIvmM/qVU0+TOZjiTv2Sz4DV2T7mWlJPte7P40Krkw+llYs/YHiUD62MfFsaohWPmkvYZvMRFo+Z5pMnB5RYT5Ly0/6COhYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5246\"},\"selection_policy\":{\"id\":\"5245\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5246\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5222\"},\"major_label_policy\":{\"id\":\"5221\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"d2gLDV6aOj5MG2iTJxZDPra8b/iDi0A+h5O5Lq9eRD7tjA0G5mg9PhPsHTXX7U8+jrnrNNw0UD6DBd+dBIBJPjqUGB4knFU+TwLKGdTFXz64/j09Y25lPoGqFK9MpWk+K78wdhxebT7u6FfLcPR0PkOAMcvpbXg+uNxtPNtmfT5nudw5olGAPipa+ItchYI+960IGiAShT78lqWMg8uEPrsvOB/3Bnw+zbdFxE2/aD4mwT3L1MBWPj3DQQGOnFc+yAkgO9AyWD42hQMOpMlLPiD0xN5I70s+zz5l0jsiWD5MrYrfm6xmPiQLl/CkcnM+fOt7/GE/fj5Baom2JPaEPt/rK+sQzIs+aZP2Eh5kkT5LPjJbKjyVPtc4JsH5eZY+pu6x0BMDkz5feidLHD2PPqM0dp7X74Y+K80PGburfD5PoK5o5+FWPlicr42ili0+1D0otSteNj7J/FVyzXQ0PqsuRibIkEA+pSAMGNv1MD71C4ZphmA6Pp6W2idakDM+zapOlRxcTD45Mfk+j9RQPuJ7sHh0X1Y+bNAlPbAyXj7RVuBq5kZoPmEK/aHpwXQ+nie1mKlDgD5uoex9WVCFPj3/gmQYPow+zZWfzwfkjz6wOnSemaOGPkd5dnwoB3E+aPaT58D7ZD5iO7B/leNhPtPe617Wt2E+xZW+LX+pYz4bDzuJ2MNhPhnBst7JnmE+0a6lGvztXD6tVUlMnElePirkdMtHflU+JA1Jr9PyUz5ACBb7sdFOPsXW0ikpOlU++b3TSC0oVT4V7Z6DOG1GPklLpgZhh08+Gyf6eQYuVj6gruyRgMNcPoXa3brs3FI+aWO+lk3LVT7nKp5n8cxaPlP9PaaNvl0+2oI1lKN1az4eD7AQtjlyPov6aAgJxHY+ymvFzuexej6940XrSZJ6PrvX7GhRpnY+rFk3actAcj7wU0zOTP5pPqpiVOW2VmI+IShrglkZSj408nymf91RPnMhZvDEkEE+OGJDao+zOT4E7BNwi8A+PnoANWzBpFQ+c76IYj8EUT5WyGWJhqxUPomcrTUSYzw+KYEoiqJkRT7JauewPmNaPhDx9UTDn1A+w5hMv3z0Xz5VCWEJlrhePg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5244\"},\"selection_policy\":{\"id\":\"5243\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2XlomCxfPj5fqFdZCHhDPolcmEdRVEQ+FCivg+bjRD4nxNYBIFsxPsQvTCcCzUY+6+LTyYVXTz77BX7uicBQPuIdmmKFiFQ+juS2G+UUYD7d5L9P/q1kPkiebK2HRGk+WDbEdSdIbj7r3awwig90PmPk5ijdgHc+3vq3N9FFfD687spt5riAPs5FIVLnsII+vuphOzqbhT6RK24vVHOEPpaR9EjiDn0+PxXm23AoaT7OWDafw1xVPnusK6i13FU+NmZnv2nyWD7vQH6Pup9MPmGQkQH6K1A+8w3X7mFUWT7rItwLrBVmPtPadFjFhnM+wmlVxh83fz4ZQzDJkYKEPhSUEVrkqIw+MqQYAA7jkD5/gQV/wnGVPutPknWCQ5Y+C2EmBPfykj5HT4szr2GQPhy9KMWWw4Y+9Q9XkkY8ez4f5VZTqqxWPvq7kMroXzI+1F9oUDaqJD6kMZ6wywo7PgH7+vUD6kY+epwJWzKtRj6nxqP4pX4wPthqUCyI+DM+JcDz4U59Tz7vMCBfPZtRPlWsJO7JbFU+nHgxu/4UYD7lVa5caChsPidPkC25hXQ+Y+nuwsBTfz5UWyw1E4CFPnlifPcSlo0+vIpTX6BZkD4zDXOM0WqHPrsRDs2UPnE+f6o3P+qbZD5jcNJatTxjPu8dnsVgrWE+s4PosVE/ZD6hETKE11NgPv+/rZjUoGI+1SZKA3PMXT7zbFfcHA9ePsvK7Lqc11I+F3S8tWubTz6sDVUekK5TPiSvuswe11A+K7p7Qz4cVj7TQWiUXVRYPpzBfPSY5Fs+FJDVZFGsWT6/eng4PVVhPp9lDZGYhFE+Nuw6pCcSUD5KTQPzjcdaPhpey/GDDGI+y4pwfDlraj7+L2Hw6ytxPnymPeKto3Y+mOGGzo14ej6yZVIUHoV5PlMgq7AxVnY+9jkwJAV9cj5IXPQ2LyNqPu3O7pD4fGE+uT9xvlq9Uz4x6WlymTJRPj1NXzttfUk+3eC+NPcAQD6pEiueHVRGPv16no3kn00+/920lOhNPz5rFsA2OtVJPj5vbsm20lU+x8+Xt+kXUj7v/W6PcVxVPg0i+ZbPeFQ+QZSimN/fVj4j2MtVECRhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5240\"},\"selection_policy\":{\"id\":\"5239\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"fuhyAwyRNT7GXwOhO2ZCPsAmCGDrbEk+iXzDcwDMSz7oF/3GKUM+Pm3cNz4uuFE+mgtcF7ekSz6TCkYVf8FPPsntQGHh8Vc+3tqYa4n+Xj5kchOYbntjPhgWLuzoVWk+2tpwjWAubj7ecCqCG0N0Pv6vwqvXgng+0kPa/C2GfD6d71ZZrGSAPrR3m2AWWYI+xFrnTt7zhD5MHmsM4qKEPuJWF0iWAXw+kGG1Qr1uaT6BBI1jYQFYPkTI9U0rY1c+fJp0Ox48Vz7P4An0C6lRPtScJVf69lA+g2OeSodaVz4q7AZbV3FmPkDqrioqpXM+xn19nVb5fT4y0vdFdgeEPnQG/Ku0Aow+sfNZjZewkT4AR+pDnteUPsr6ldijppY+f1JzA+Iukz7bD+1r8umOPo6CpTz73IY++h6eM5VQez6s6QujB2JVPjC/OXxqSTE+/FO5oX7qND7UGeGg8d8+Ph7DHgsFPTA+rbNKN1kWMj4Cp8Uyo5IoPhw90H0jTTs+RIBSKS0/UD4fhPTJsIZXPrs8LlbGRU8+t8X/nJOGXj5kI2gzNGtpPij3NI/XS3I+k4SfGf6RgD7KrLa8JjOGPjdoslRkvYw+OUIe1VESkD7pgFv3q4GGPuWNJDot/nE+fZVxIkvAYT7phMOCjh1lPsv8WKVREWE+xgfVXB4YYz6CvmsmMJRiPmL7StQNzGA+2XNVRRSqXj5qQNafN8VcPrXxfcXqz1I+WL3r8kATSz5veCu+VLBKPit3nRVfV1E+v46JK1j3Sz7Dg7LuQgNIPhJlLnfR/Ek+0CRAX/vIUz7fkPmmghlhPsTNBYhE0VE+Q7j1bWVlSj5L+reKihdaPvff6UE+VVo+x6qI9uZSaj4Oc1F6QCFyPmfktCaLqHc+/wMIgo3fej53aua7kwt5Psn+l2j+snU+n80+9jTacT6w7r+gpONpPqL1MPSQj2I+fZUFcA65TD5mr5DbIL9LPqWJzfd+50A+a5KzA+5dOT7xYJNoYnFBPu6nxH+Np1A+GzgR36hxRD5ZB7CTNZJEPkj1j4gdfVA+FX04rlQDVD5KSZ8Ebo1YPuArTs/69lQ+j0rHyP6eZD7ksvlUB5JjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5236\"},\"selection_policy\":{\"id\":\"5235\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8XhwQ1O9QD5g2wK4tMRAPnx3KtS9REk+s3mvrD/WSD4BQYnnANFAPqxyNZolaU8+DtrD6KGHTT7Sfe13DNdQPlqfklzFsVE+x/z3ulIrYD6vArQP6FpkPpvcZ0O4pmk+IsPWxNYKbj7VwjZtFRN0PoJuK2S0XHg+vMZlV3kHfT6WXDm25oOAPt7FBBDu0YI+lh0ueXkFhT644LoKlI2EPoDzitbDT3s+lZFX/jR7aD4CJhRVi0lUPpXdrnxUR1g+iT8B+p3MVz78vq8b9SJRPsJCTBpbBlA+deS6BWg9WT6hQbaNk99mPtpeql5bKXM+S2zfY5PGfj7v/PL0t92EPp1ftPOyPow+b/YoBAtukT48HZeOzg+VPkD6ATeEHZY+AjYchQEgkz7+W6bYtEGOPvVxDpV3YoY+65gXk6M3fD4scF9VWpdYPok4ucHgyTE+Sr+fzYhWMj5Z+jEqjTlDPtVZEzhJVkE+y9sLBUq3GT4IVWImkA8GPmeUVTWRTTk+NbAe10ChTz7lym8iN8pSPtrAC/K6KVU+LOXw35lXXT60yNjsAihsPoSbU+gRa3M+9TwbkJoKgD7r0UZBSteEPmheiNTkA40+l6cxHHExkD7sJkbsB16GPgmc/sHp0nE+KvpnuUZnYj5xBAqqmbZjPit4ImqRR1s+N1kUka5xZD5kC7TK2fdkPknkIqWS4WA+bxJa1APDYD5oS5QlfjhgPgl2CSdKZFM+wPgG9R4TUD5UywvMLDdPPoIpg31vLlM+vLjfJoDiUj4c9YstUFpYPj1EvC+e8mM+coofsrXMVT5GcJIdN91hPph2Nt7p4FA+uJJnQagjST4uAz8m5DJYPqhG0ZghrmU+5tmrUvEOaz5dyVrSf0xwPtx3gJSTV3c+QPHuudypeT4jEZ1P7fp6Ptmi2kV3XHY+KemyJKcLcz5D0U3B8HlpPrGYDcBxfWM+TXL5P+bSRj4wRq094/VJPhanUr9w7jo+ZSEZgL2hST770+YQvL5DPnqjp4fIskg+ejm1ns4URT6unmx16EFFPkVBSADlTk0+1fh3xw1kTT4Y63jRWfNZPk3SeV7r8lU+61x2bcaAYD6Pe2WfGJVjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5228\"},\"selection_policy\":{\"id\":\"5227\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"fl2yaFygQD5eaLz6h5pCPlhA7Ih0L0U+MNuLrQiMST6fOYaD6iJBPlmMCcH0s0Q++XYnIbr7Sz6EKU5zBvtQPgQhQJgvkVs+ZFVW5dYHYD7GqasueupkPlpmk8XXF2g+gTpsOdJhbT4GliMrTm50Ph4/4JXW0HY+Xtt2PP9lfT66VdPFMdyAPiZjWXFyk4I+wBmUyqhBhD57agqJL/CDPnaTHHEO5Xo+5o25p63saD6tFK6IM5xXPnfltw+uo1Y+EMlGtm+gWD6E7IM1itJPPnDAkF84q08+fIJW3Y7QVz6i+MKbr6pmPjBETAxw53I+jOOpd5rgfT5qTtlfJjeEPrVgnWBkEow+yGu2yHmbkT7bBgOZ282UPn1DQ4Ku+JY++ijAc3rXkj4XgtOjGCKOPpadovb+ZIY+oN4I73UsfD6BgNA1PkFXPhYKI86OMTE+MTkT2gYBKj5sHKU+8Aw6PpWaQRut9jE+4x0+peUaQD5y3JyeamkyPuXwP+ri1Ts+OwbeXxqBTj7bovZgGwtZPuocWgjGHVk+AdWqEQ6wWj6DbQFMGFttPgh6VLcR03U+bVoHrRhZgD76BIVG0eGEPhlQaaOuLow+BrO3J2rljz7rZuTVGZ6GPo8KjR69mHI+u9U28ItfYz6fHv9ioxNkPjlUnucXDV4+0/HL/6rgYj5MaNCzacdiPncr8KJE3WE+p7FwIbfaWT4oRo5aLtFiPu7R7NcqfVs+N4SBNTgrTT6WZ+Z2VuZIPq+G1Gbhjlg+WDw1hZLZVz6nWFhWFq5UPqVQwR74oVc+8oxzwQyVWD6aYosYoVpgPppCc8QJqk0+3/4jgKd2UD7BdUOiGiZaPm0p4azIXV8+5SpsjINnaT6ezUtbF+FzPtRtpsIN8XY+tShmblxMej4sIjnLa715PkE3AlkbO3Y+91146IyBcj6oRVOZ0rJpPvQrqTviamQ+ik+ExQBASj4bCLvK3SdOPkTAQTb4mz0+Dna50ufqST7TVn4HIcFHPnVb6FUgIEQ+nV52eXHmRz7OEZZV+9VFPvJ8v6xCjU4+T/W9JRCpSz5vaOZpD7NXPu/G/uljj1Q+6FxtJJoqYD7kYnDfOL9ZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5230\"},\"selection_policy\":{\"id\":\"5229\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5fgxt5GLNz71QWF6acY9Pnxpl8b3n0Y+4+Mm9bYQSj5UNVus1pZBPrAIbnzCVE0+GUsTRSfVSj65afrGtiVNPgVxy4xByFM+PAt5K6Y/Xz4Cli5X0JpkPgfr/TOW6Gk+tQA8l1zabD4hSsPlfVl0Pi0KnY51eng+xufSxWfifD7/GLMAVIuBPqSh5s23z4I+WZKPpJY5hT52TYEfXbWEPjZCBNSci3w+wNRnEVgZaT6JX8+rlt5UPh6QpyMVMFg+BLZQHwuLWD6e6+aZ4RhRPu9JcW1grEw+cxLZ5kM7WD7T/WZcAkFlPiY/1nVIK3M+faFdQ/ULfj7QdN+UVJGEPokt7UxU2Ys+aKZntNISkT4YHvgMfP6UPmHAfhAqzZY++4QJxebXkz6OAgg/1pOOPuvy0oOd+IY+OKWVvsx+fD4GFJ8Q7qhYPvKmsXAmNzA+DKA16ht7Hj7ZkHv0zaY3PndK/1JHkjo+HOkvic/ULD4CvwkFrNwxPsbru9ZJLjY+GWB8eFNiSj6TrJtB7Z9UPt7257dBc1k+iZQpcIMwYD7OsOJx3rhrPp4/p1I5HnQ+YH4oR8RKfz4P5lk1qQ6FPrKaV04Yuos+M2Rld7YSkD6oRi+YdWeGPqeEZuiCXXE+diYfQGiVYz5XSOKV0VNlPjiUrq3gIWM+x6E10jktYz7ojyMpxgNjPnA159ZgFGU+/TbVRtrRXj6kFWk8HM5iPor/87Ru4VM+7mPcPGWlTz5R7LrRdvNGPmPVmmLFxlQ+VgNQyYrFRD6n/xePhuFUPrZa9wsfvFQ+zfc2QqEyVT5csyVmb7RcPlZ0tS9VzFI+sNkeNgdVUT45qyk96rxZPoF26z8rAmI+fIKEKIqYbT4gGDswYZVzPh7xc+ZuKHY+6gPDUYhmej5qFxa8JJF4Pp4aKAA7uHY+pLaF9aulcj7YUbUxDQ1qPjRVK1O0LF8+isz93fBGSz42FlFs4PlQPobJZjkeRz4+tvj50BeURT4ZJwrQMuFEPlugZGYdc0o+qvfIFYC6Pj7+zsG/hj5FPtVdYBzTHUw+y3R7PQ8ZUD4hOl2wRqpSPnsvMs7sjVU+ryettFUhYz531huTrpVpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5242\"},\"selection_policy\":{\"id\":\"5241\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5225\"},\"major_label_policy\":{\"id\":\"5224\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"O7rsI5SBNz5AwXYw+BRDPh25GpcmMUY+JHhbWccOSj4hm48OGhI6PpEHbNNkcUg+yISJ0rUkTT5qjsYReF5RPkCUoHT7H1Q+qhtAu1B7Xz7U5PX4zFllPiANpZhpsWg+zsZieePLbT4Eoi755310PkllAmQP6HY+n9IbqOyYfT7tX9GNuLGAPqhqbpDxsYI+nzxsJlqphD4HyutOjBaFPrO9ULVJMXs+f+RkGqx9aD6A2i6Pen5UPrnd4PGZU1Y++f0Sv2vCVz4zZaeCSTdQPnDJMgWbsVE+qOTWwpM/Wj412tVIATNmPlBuow0TnnM+DvRpHZ6pfj6PlWJ32z6FPqiwQH7sWIw+2GwjwwvwkD4deRMBcniVPjkVN19nwpY+Xme+slFMkz7ZgmvuWniOPniU1Rt3aIY+nZkZ6lOZez4FoETjzc9WPpNGPe1xYjM+OM1sL9jWJD4jLsbPaLhAPgCU/XDJojk+nwGoCjOiMj4ELCWT9s4rPqnlrg1ZaDg+PWsxCW/bTD4nMUYT+YlVPkQeZIlysFQ+Onp4DPQfXT4/MldPSpdsPulzK5EpjXQ+w1dRRE3mfj7cvwnb0zKDPlfdATZ47Ys+RgK/p+45kD5p8GALeJeGPuOOQGC8Z3I+RO2/mQQ0Yz6j1+pUo/diPlTtFnGoKGA+s2NtZtpDYT7t6wEVnYZjPi4jPjFbsV8+Rok2iS2wWj4kGjZ/wJhePjIjk0+cEVc+S4CSUg0GTj5z2fQBxzNJPngsj8Hn5VA+vvI1X9TDVD7m/UGSMHZHPkzXt9oetVc+X/KxhJqbVT70I0ggxH9ePknQnT8cUlA+OUPihPq3Sj6pObNe8k1bPr0kTYaQtGI+AUhpHZ66bD5tFPV3DUpyPjsz0KMiEnY+0R/R3MSYeT42jMOdhqF5PjhpvAxRL3Y+PzmLCLTzcj47ECj8BbNrPhbiUGVyvWI+AMt+EWPASj4n+PLXnbZPPuUX1vonKj8+0PvjUqKuPD5Uq6Uj3uBEPpC6C0961EE+b/auESNaQz4buCMVc2dRPjmEjPzmrk4+CvhkW3yyRT5dc2R7YzxYPllP7V7MG14+C1Dek028WD7q7SVG059wPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5234\"},\"selection_policy\":{\"id\":\"5233\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"TBOSWJmQQz6Zk98CXTdFPt0ecP+x8kU+aZH1HjmkRT4bloVoar48Pg3/9PHHeE0+VxK4uXIwSz69kZqpIPNOPqnFVdImG1g+rkF5mOMbYD66n1VNBjVlPpGl9yAtIGk+OHnv5A9Hbj6TTYOEI9N0PvQ5U++kl3g+PXCwKAIqfT47Xi07ICKBPh6LvavQ4II+07MuIVUohT5DyDsHWuuEPmlM0c7uhHs+MpdrWphdaT6bUxdgGVVXPlZBZKdEClk+Do+e+aVIWT5abpXcFMRKPjCzm596lVA+ZKaLoT6sWD48cgrPqGdnPgnvc+6ekHI+zz2boN9qfT7bvUbV6oaEPsYqJDvquYs+H099G0O9kD6ViaCcnoOVPo9iOCiPC5c+wfCpbB17kz5QL6I7nfyOPrrnc7RcjYc+lxsAjUODfD7t+B1b5kJXPr3fdHpR/zA+6N9I+8vNJz6yXhLVd5c6PpqB+uJTH0E+zZQfKtXmOT68DEUkCUYvPvt6yiE4GjI+nu/DAr4NTD4A2+ns5hhZPvaxr1d2N1U+C3IaCeJXWz4YcfDyNoBsPrpE7AQTdnI+ONfY7brbfz7GGXV4gkmFPtyixYLba4w+X6wFmkn3jz6e8+MT13SFPpEMlCG0JnI+s1CFV6cNZT4ZOuwWbj5kPqut1gtDR2A+AZ7YlfjZYT4R6wz5oxNgPqBHScd5DmQ+Eg1/dEv1XT7CwcpGGkJiPj9EVN31flw+nruxPadNTD7CskFuM01TPmNFCXxX8Us+bsOnwS/RVz4L59lzDZBYPqvV/kTJKVE+dr74+0j4Vz56bkQipZ9gPibQrRsY/1I+8Y7tHiN2TD5PekCgonhcPhni706vtWE+0EQqgZi8aD6QA6yNu4FxPhysob8fsnY+jJssirG9eT7xbSGue0N6PrzJrWOSWnY+P9m98jiecz59pXI0NQxqPnOHL69HCGQ+hQzH2WBGTT70NwidpkFQPsxtCWK3O0I+kFKU3hAjST7SoZZ1cPdCPv1k21rUgEU+7sYqL2EzQD7AebjLLAhFPuDpRK/zlFM+lx2+MqB8ST7oSLjR2phjPmRZMj6HqFI+q28msUxMYT6oMkVIcc5cPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5238\"},\"selection_policy\":{\"id\":\"5237\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"Selection\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jcYZ9fXXQT708v6ItzVDPi4JGN6f/EQ+oHF3i3W8Rz5TsCuVqRI3PkgxfG59VU4+K3ph7fAhTT4D0x4enO9QPjIrDj+HiVk+TxlnPe92Xj6vkx2ZJ8djPghw1Ace92g+pK71XT9DbT5KoD1y+pZ0PocfPNB5O3g+XEQQO5VEfj688kNJJ9CAPlS4/GwRE4M+NTa1ViGEhT4v6KYergmFPmqTpGqc2Xo+7eIexPzFaD48ToyID1tVPjWB7pFBRVo+bK/eCtARWD48/m6UiZROPrN6ZdwTJ1A+5NQZWT3NWD5We2QXz4tmPknAVRbusXI+B+K5tXbUfT6lHWdxnTmFPpnJlvOfNYw+53hqv4A1kT6fPC2FSBOVPm8uPsoITJY+clPOtneGkz6tVadzf2+OPhuQ7hdcCYc+ebV4vH3Dez5sp99fdClXPtAYyvfdNTU+fxD6bCkCQj5QzT+aHRg7Pkr/yu31G0E+6IAdbIu4Jj673vAr3qIiPumvSFBD2js+dqNgzrc2Tj7Tcz3Tda5UPuW7LVXSxlQ+mwbp0nHUWD631V7d1f5sPikEZFAiL3U+0ylFdHEwgD68h3nQXnqFPrD+uNEs6Yw+QZHaIsu7jz6KxAWtU3OHPn8PjV6UrXE+SQK+IHyxYz7X8sBNWCljPiok3e5CkF8+KSasF5//ZT5HJKje5LVjPhD/S5Y5ImQ+s/qNJEi+XD6D25CnW/1dPmLpu/fpWlg+MCE5dv2NUz40ZKRB9ZJHPqKnDHx+GEI+XZ6ww4O4Uj4I7pzkXmRNPmKsuEV8MFs+gRvlM9GfWD7HJhWjp19gPs/ZKyLmDVI+WygbDTgHUD7G9ZS/hsRbPjIifXwcdGM+P9Rdvh2haz7dYmjwqF9xPosKj/CvJnc+AMJf9IEfej6Nv3TEitB4Phb/uB5ziHQ+DLqu0aR2cj6CvWbfDClpPhRg3agXF2M+Tna4uuEqUT52doWmcfBKPguL15HOATs+RKFkDbCpPj6VBE9AdxtJPi9+xE6ysUA++SDr1VIGSz7I9Bk7WIZRPlL5DzcCkEg+MorydijwUT66mYE8ggRUPsAEb8DiB1E+zjeg4hz6ZD5V8hzI7gBpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5232\"},\"selection_policy\":{\"id\":\"5231\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"7773648f-e441-4a49-beef-07b2ffc280bb\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"369a6f2c-6f33-4a88-8aae-014b7a43acdb\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAANoAAADXCAYAAAB8g08FAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAdn0lEQVR4nO3deXRV9b338fc380AGwhAyQACZRAIEYrDVp4AKiAgI0sE63Fa91la93Nqnw+PTp/Na6mqvrbJsrRatV3udFQEB59ZatYUIhCmBIAiZCRASyABJvs8f54CHkOSchJx9hnxfa52Vc/beZ+/vTs4n+3f2/u29RVUxxvhXRKALMKY/sKAZ4wALmjEOsKAZ4wALmjEOsKAZ44CoQBfQC3Y8wgQz6WxgKAYtLK1YsYLS0lLHlvfQQw+xfPlyysvLAcjKyvL7MseMGcPdd9/t9+UEIwtakCgtLWXL9l20JaQ5tszCT6uJbDwGQFWLfz8KkY1H/Dr/YGdBCyJtCWk0TbjaseU1Tbia+OJ1Z5770+nl9Fe2M8QYB4RV0FasWMGKFSsCXYYJU+fz+QqrpqOTOxNM/3M+n6+w2qIZE6wsaMY4wIJmjAPC6jtaeXk5TU1NLF++PNCl9FhpaSkRJ8O300tEcz2lpQ0h+bc5rbS0lPj4+F6917ZoxjggrLZop7sRPfTQQwGupOeWL19O4afVgS7Db9rjkhkzOj0k/zannc/W2LZoxjjAgmaMA8Kq6ThmzJhAl2DC2Pl8vsIqaP31FAzjjPP5fFnT0RgHWNCMcUBYNR1DXWTjEQfP27qZ+OJ1RDYeBvx/vpjrxM90vy4jmFnQgkQgduRMH51OeXkrAFlZ/g5Ber/eWSUheO39kCvY9CudXpwn5IImIhuAwb1462Cgto/LCVZe13X69OnTCwsLCx2qx9+C6W9bq6pXdRwYckHrLRHZpKr5ga7DCf1pXSE01tf2OhrjAAuaMQ7oT0F7LNAFOKg/rSuEwPr2m+9oxgRSf9qiGRMwFjRjHGBBM8YBFjRjHBDWQRMRFZEBAVz+fhEpFpEt7se8TqYZJCLrRKRERIpE5BURGeIxfpWIbBWRzSLydxGZ2os6xonIRyKy2/1zbBfT/UZE9rl/b5O6mOan3Y03XVDVsH3g6hc5IIDL3w9M8jJNGjDL4/WvgZUer1M8ni8GPulqWd0s413gRvfzG4F3u5juMmB4V3UD04D1wGfe1sseZz/CeovmSUSucm8VikTkHREZ4x5+nXurs1lE7vXcCorIEBF5yf2et0Tk9yLy/b6sS1WPqOpfPQZ9DOR4jD/mMS4FaO/J/EVkKK6APOse9CwwzXOr6bGsD1T1YBfziQUeAb6DdezusX5xmoz7w/Y0MFNVd4rIrcBfRGQhroOdl6jqHhH5boe3PgO8oKrL3M2tEuAK9zxfAro67+MLqtrkfv4XERHgA+BeVa3rps4I4NvA6g7D/wTMxdUz/CqP4auBEe6XmSKyxf28VT/v+zccKFfVNgBVbRORCvfwQ13V0olfAM+o6j7X6pgeCfQm1Z8P3E1HYCHwtsfwCKAFV1PsLY/hKR7vuRL4uMP8jgPJPVj+cPfPWOAPuD6o3U3/CLAKiOhi/E3Aui7G7e9i+HRgR4dhO4Fp3dSxH4+mIfAFXM1P6Wy8PXz4LAS6gJ4+5s2bp74CtKGhQV977TW98sorzwxva2vTmJgYXbVqlc6ZM+fM8Lq6ujPvuf/++/XOO+88M664uFjHjRt35vV1112nU6ZM6fTR2Nh4Ti1FRUU6cuTILmv93ve+p3PmzNHm5uZu1ykuLk5ra2vPGZ6Tk9Pp9NXV1ZqSkqKtra2qqtra2qopKSlaU1PT5TJycnJ027ZtZ17fd999mpGRoTk5OZqTk6ORkZGamZmpb7zxRre19lPhEbTp06f7vsbu0NTU1OjgwYN1165dqqr6xBNP6IwZM7SqqkrT0tJ0z549qqr6u9/97sx7Vq5cqVdccYW2t7drY2Ojzp07V7/+9a/7vOzjx49rXV2dqqq2t7frvffeq9dee22n09577706a9YsPXHixFnDGxoa9MCBA2der169WjMzM7W9vd3nOlRVZ86cqU8//bSqqj799NM6a9asbqfvGLSeju/nnA8aru8TJUAp8KNOxi8GioAtwCbgMm/z7E3QVFXXr1+veXl5mpubq5dffvmZcL3wwgs6btw4/eIXv6j33XefRkdHa1tbmx4/flznzp2rEyZM0EWLFunSpUt15cqVPi977969OnXqVM3NzdWJEyfqsmXLtKKi4sz4+fPn68aNG3X79u0K6Lhx485sEU8HsqqqSmfMmKGTJk3SKVOm6OzZs7WwsPDMPBYuXNjpFrXj72jXrl1aUFCgY8eO1YKCAi0uLj6nDlXVu+++W7OysjQyMlLT09N14sSJna6bBa1bzgYNiAT2AqOBGGArMLHDNAM82v2TgWJv8+1J0HxRX19/5vkTTzyhl1566TnDN2/erLm5uWe2UMZ0o9PPrT/3OhYApar6KYCIPOfegu08PYGqHveYPpEA7DZ++OGHefHFF2ltbSUtLY3HH38cgD/+8Y+sXLmS+Ph4Bg0axDPPPENKSorT5Zkw4bfTZERkGXCVqt7mfn0TMENV7+ow3RLgPmAosEBVP+puvvn5+bpp0ya/1GxMH+j02Ic/D1h3tsBzUq2qr6rqBOBa4JedzkjkdhHZJCKbDh3qyaEf40/DR+QgIgF5DB+R473AIOLPpmMZroOip2UDFV1NrKrvi8gFIjJYVWs7jHsM91m0+fn51ishSJQdPMCDb5YEZNn3zB0fkOX2lj+3aBuBsSIySkRigK9xbo+HMe5eE4jINFw7TQ77sSZjAsJvWzRVbRWRu4A3cO2BfEJVd4jIHe7xjwLXATeLyCmgCfiq+utLozEB5Ne+jqq6DljXYdijHs8fAB7wZw3GBIN+03vfmECyoBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ6woBnjAAuaMQ7oF/ew7u+Ot7RSUtVASVUDpTXHqTzWRFV9M4caWmg+1UZLazun2tqJj44kMTaKAbFRZA+MZ0RaIiMHJ5CblcKkrBSiI+3/cm9Z0MJQXeNJ/lF6mH/tO8w/9x2hpLqB09d/jo+OJCM1jmHJceTnDCQ+JorYqAiiI4XmU+2caGmlvvkUZUeb+EfpYZpOtQEQFx3B1OGpzBw3lPmThjFycGIA1zD0WNDCROWxJl4vquTtXdVs3H+UtnYlISaS6TkDmT8pg4mZyUwYlkRWajwREZ3eWegcqkpVfTNbDtSxcf9R/rnvMA9sKOaBDcVMykpmwNT5tLS2ERsV6ee1C31+uz+av9j90T7XdLKNN3dW8VJhGR+U1qIKE4YlceWF6cyeMJTJ2X3f3Cuva2L9tkpeKiyjuKqB6EhhcnYq00akkhDj3P/te+aOJ0g/u53+F7OghaCyo408+Y/9vLDxIA0trWQPjGfptGyW5mU51qRTVeKyJjDz+4+xu/o4URFCbnYKBSPTiIv2/xYu1ILm078gEbkGWKeq7X1akumRorI6Hnv/U9ZvrwJgQW4G1xeMYMaoNJ+bg31FRDhZuZv5kzKYMeokG/cfYcuBOoorG/jimEFclJGM+45cBt+/o30NeEhEXgaeVNVdfqzJdFBcVc9v3ijh7V01DIiN4pZLR/KNS0eRlRof6NIASEuMYd5Fw5g2YiDvldTwzq4atpcfY86F6QwaEBvo8oKCT0FT1RtFJBm4HnhSRBR4EnhWVRv8WWB/9tnhEzz41m5Wb61gQGwU35szjm9cOpKkuOhAl9apIUmxfHl6NsVVDfx9Ty3PbjzIpRcMYurw1H6/dfP526uq1ru3aPHAfwJLgO+LyMOquqKz94jIVcBDuG5E+CdVvb/D+BuAH7pfHge+rapbe7wWYabxZCuPvFfK4+/vIyICvvWlC7hj5mhSE2ICXZpXIsKFGcmMSEvg7V3VvL+nln2HTzBv4jASY/vvTm5fv6MtAr4JXAA8DRSoao2IJAC7gHOCJiKRwCPAHFz3s94oIqtVdafHZPuAmap6VETm47pP9YzzWaFQpqq8saOaX67dSXldE0vzsvjh/AmkJ8cFurQeS4yNYtGUTLZX1PP+7kM8u/EAC3IzyEgJjuau03z9F7MM+K2qvu85UFUbReSWLt5TAJSq6qcAIvIcsBjY6fH+Dz2m/xjXDeX7per6Zv7PK9t4t7iGCcOSeP72S5gxelCgyzovIkJuVgrDkuNYW1TBy4XlzBo/hElZKYEuzXG+HmSp7BgyEXkAQFXf6eI9WcBBj9dl7mFduRVY72M9YUNVeXVzGXMe/Bsf7q3lxwsuZO3dl4V8yDwNSYrl+oIRZA2M553iGv62+1Cw7pr3G1+DNqeTYfO9vKezb7+d/nZFZDauoP2wi/G3i8gmEdl06NChbhc6fEQOIuL4Iyo6psfviUxMJX3pj/nu81up2buNvY/cxr9/6QKioyL9vuy+ePREXHQki6dmMjU7lS0H61i/vYrWtv5ztKjbpqOIfBv4DnCBiBR5jEoC/uFl3mXAcI/X2UBFJ8uYDPwJmK+qhzubkao+huv7G/n5+d3+Kyw7eIAH3yzxUlrfu2fu+B4t9+CRRjbsqKKltZ0vjB5E3uULibh5kSPL7iv3zB3fo+kjRPjSuMEkxUXx99JaTpxsZeHkTEcOcAeat+9o/4OrOXcf8COP4Q2qesTLezcCY0VkFFCO61jc1z0nEJERwCvATaq6uyeFh6p2VTbuO8I/9x0hNSGaa6dmMSSp/xxrEhGm5QwkMTaKt3ZW88rmcpZMzSI+JrzD5i1oqqr7ReTOjiNEJK27sKlqq4jcBbyBa/f+E6q6Q0TucI9/FPgJMAj4vbsp0qqq+b1cl6B3oqWVDTuqKDvaxIRhScweP5SYqP556sn4YUnERkewtqiSlzeXsTQvy9G+kk7zZYt2DVCI6/uVZ8NcgdHdvVlV1wHrOgx71OP5bcBtPag3ZNXUN7OmqJLmU21ceeFQJloXJUYOSmTRlEzWbHXtkVw6LStsj7V1++9UVa9x/xylqqPdP08/ug2Z+VxJVQMvFpYB8OX8bC7KTOn3ITttRFoCi6dm0tByipcKyzje0hrokvzC286Qad2NV9VP+rac8KKqfLj3MJs+O0pmShwLJmeEdfOot7IHJnDt1CxWbSnn1c3lLJuWHXbf2bz91f+rm3EKXN6HtYSV1rZ23txZzZ6a40zKTGbW+KFEOtzDPpRkpsazaEomq7ZUsGqLqxkZTieUdhs0VZ3tVCHhpPlUG2u2VlBxrJn/NWYweSOsU60vsgcmsCA3g7VFFby2pYIleVlhc50Sb03Hy1X1XRFZ2tl4VX3FP2WFrvqmU6zaUk59UyvzJw1jXHpSoEsKKaMGJ3LVRcNYv72KtUWVLJySQVRE6IfNW9NxJvAusLCTcYrrGJhxq2lo5rUtFbS1K0vyssga2D870J6vselJnGxr5+1dNWzYXsXVuRlEhHiLwFvT8afun990ppzQFZt9ES8XlhMbHcHSvCw74fE8XZSZwsnWdt7fU8vfSg4xa/yQkG5++3qazCDgp8BluLZkHwC/6KrLVH+z//AJhn7lFyTGRrIkLytoT8wMNXkjBnKipY3CA0dJjIuiYGRaoEvqNV8bv88Bh4DrcJ0ycwh43l9FhZI91Q2s2VpB65Eylk3PtpD1sUvHDGL8sCQ+2nuYnRX1gS6n13wNWpqq/lJV97kfvwJS/VhXSNhZUc/67VWkJ8dR9ey9dozMD0SEORemMzwtnreLq9l/+ESgS+oVX4P2noh8TUQi3I+vAK/7s7Bgt/VgHW/tqiY7LZ4leVloS2h+AEJBZISwIDeDwYmxrNtWSXV9c6BL6rFugyYiDSJSD3wLV7/Hk+7Hc8B3/V9ecPrkwFH+uvsQowcnsmhyZtgc6wlmsVGu89nioiN5bUsFUanDAl1Sj3jr65ikqsnunxGqGuV+RKhqslNFBpNPDhzl73tqGTN0AFfnZhBlIXNMYmwUS6ZmoaoM/fIvOHy8JdAl+cznT4mIDBSRAhH50umHPwsLRp4hu+qiYdalKgAGJsawaGomkUmDuPWpTTSdbAt0ST7xKWgichvwPq5zy37u/vkz/5UVfCxkwSMjJZ7aNb+mqKyOu5/9JCQuieDrFm05cDHwmbv/Yx6uXfz9goUs+DTt+ZifL7qIt3fV8JPVO4L+Yj++7o9uVtVm90VZYlW1WER6dsGIEGUhC143fWEkFcea+cNf95KVGs+ds8cEuqQu+Rq0MhFJBVYBb4nIUTq50E64sZAFvx/MG0/VsWZ+/UYJw5LjuG56cF4a1Ndr7y9xP/2ZiLwHpAAb/FZVELCQhQYR4YHrJlPT0MwPXy5iSFIsXxo3JNBlnaMnex2nich/AJOBMlU96b+yAmvLwToLWQiJiYrgDzdOZ8zQAXz7mUK2lx8LdEnn8HWv40+Ap3BdsWowrjvK/NifhQVKUVkdf9t9iAuGJFrIQkhyXDRP3VJASnw03/zzRg4eaQx0SWfxdYt2PXCxqv7UferMJcAN/isrMLaXH+O9kkOMGpzI/EkZFrIQk54cx1O3FNByqo1vPPkv6hqDp9Hla9D2A563NIkF9vZ5NQG0s7Ked4pryBmUwNW5tiULVWPTk3j85nwOHmnitqc20XwqOA5oe+vruEJEHgZagB0i8mcReRLYjut+ZmGhuKqet3ZWMyItgWtyw+PU+f5sxuhB/ParUyk8cJT/fG4Lbe2BP8bmba/j6buyFwKvegz/q1+qCYDd1Q28uaOa7IHxXDPZ+i6GiwWTM6iqn8gv1+7k52t28PNFFwX0DG1vlzJ46vRzEYkBxrlflqjqKX8W5oQ9NQ1s2FFFRmoci6ZYL/xwc+tlo6ipb+aP739KUlwU3583IWC1+Hopg1m49jrux3VZ8OEi8m8d75kWSvYeOs6G7VUMS45j8ZTwuayZOduP5k+gvrmVR97bS1JcNHfMvCAgdfjaM+S/gLmqWgIgIuOAZ4Hp/irMn/bVnmDdtkqGJMWyeGpmv73RRH8gIvzq2kkcb2nl/vXFDIiN4sZLchyvw9egRZ8OGYCq7haRkLw4xmeHT/B6USWDB8SyZGp4XQ3XdC4yQnjwK1M40dLK/3ttO0lxUSye2t3NZ/uer//KC0VkpYjMcj8ex7WDJKQcONLImqJK0hJjWJKXRWw/uAGecYmOjOD3N0xjxqg07nlhK2/trHZ0+b4G7Q5gB/AfuE6Z2ekeFjLKjjayZmsFqQnRLMnL6hd3mTRni4uO5E//djGTMpO58y+f8F5JjWPL9ho0EYkAClX1QVVdqqpLVPW3qur1PHIRuUpESkSkVER+1Mn4CSLykYi0iMj/7uU6eFV+tInVWytIjo9maV74313SdG1AbBRP3VLAuGED+NZ/FzoWNq9BU9V2YKv7Nrg+E5FI4BFcN5WfCFwvIhM7THYE11byNz2Zd08cPNLIqi3lJMVGh/1dJY1vUhNieObWGZ+Hrdj/YfO16ZiBq2fIOyKy+vTDy3sKgFJV/dTd0/85YLHnBKpao6obAb8ckztwpJHVWytIiY8O67tJmp47K2xP+z9svn7yft6LeWcBBz1elwEzejGfXvns8AnWFFWSmmBbMtO51IQY/nLrJdyw8mO+9XQhf7hxGldcmO6XZXm7bVMcrp0eY4BtwEpV9fXep531d+lVpzMRuR24HWDECO8t2P2HT7C2qJKBCdEszQu/u0caQCL6rEtVRGwiQ7/6S2554iS1rz9I466u+2FkDx/BwQOf9XgZ3v7NP4WrWfd3Pv+utdzHeZcBwz1rpJeXP1DVx4DHAPLz87sNa/zofNZurWTQgBjbuxjOtJ0H3yzxPp2PWlrbWLO1Eln0A2Z//9dMzk7tdLp75vbuUjnegjZRVXMBRGQl8K8ezHsjMFZERgHlwNeAr/eqSh+9vbOaIUv/r4XM9FhsVCTXTs1k3fYq3is5REtrOxf34d1rvO0MObOTogdNRs/p78J1DchdwAuqukNE7hCROwBEZJiIlAH3AD8WkTIR6dUVkI81nuK7z2/hZPWnLLWQmV6IioxgQW4G49OT+HDvYT4ore2zy9h526JNcV97H1zfueLdrwVQb5cFV9V1wLoOwx71eF6Fq0l53lISovnzLRdz8bilxN50TV/M0vRDkRHCvIvSiYmKoPCzo5xoaeXKC9PP+0Rgb6fJhNRmYXpOGnoyuK4VYUKPiDB7/BAGxEbx0aeHOd7cyoLJGefVSrJu68Z0QkQoGJXGvInpVBxr4sVNZdQ39f5wrx1cMqYbEzKSSYyNYu22Sp7fdJCY9N6dz2ZbNGO8GJ6WwFemZxMZIaTNvbNXO0gsaMb4YNCAWL6aP5xDr93XqwPlFjRjfJQYG0Vbfe9uomRBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBFjRjHGBBM8YBfg2aiFwlIiUiUioiP+pkvIjIw+7xRSIyzZ/1GBMofguaiEQCj/D5va+vF5GJHSabD4x1P24H/uCveowJJH9u0QqAUlX9VFVPAs8BiztMsxj4b3X5GEgVkQw/1mRMQPgzaFnAQY/XZe5hPZ3GmJAnfXUz7HNmLPJlYJ6q3uZ+fRNQoKp3e0zzOnCfqn7gfv0O8ANVLewwr9txNS0BxgMlvShpMFDbi/eFov60rhBc61urqld1HOjPO36WAcM9XmcDFb2YBlV9DHjsfIoRkU2qmn8+8wgV/WldITTW159Nx43AWBEZJSIxwNeA1R2mWQ3c7N77eAlwTFUr/ViTMQHhty2aqraKyF3AG0Ak8ISq7hCRO9zjHwXWAVcDpUAj8E1/1WNMIPntO1qwEZHb3U3QsNef1hVCY337TdCMCSTrgmWMA8IqaCKyX0S2icgWEdnUyfiw6vLlw/re4F7PIhH5UESmBKLOvuJtfT2mu1hE2kRkmZP1dcefu/cDZbaqdnVMxbPL1wxcXb5mOFWYn3S3vvuAmap6VETm4zpEEs7re7rr3wO4dsIFjbDaovmgX3X5UtUPVfWo++XHuI5Thru7gZeBmkAX4incgqbAmyJS6O5N0lG4dfnytr6ebgXWO1CTP3W7viKSBSwBHnW8Mi/Crel4qapWiMhQ4C0RKVbV9z3GSyfvCeXdrt7WFwARmY0raJc5XmHf8ra+vwN+qKptIp39qQMnrLZoqlrh/lkDvIrrDAJPPnX5ChU+rC8iMhn4E7BYVQ87W2Hf8mF984HnRGQ/sAz4vYhc62SNXQmboIlIoogknX4OzAW2d5gsbLp8+bK+IjICeAW4SVV3O19l3/FlfVV1lKqOVNWRwEvAd1R1ldO1diacmo7pwKvuJkMU8D+quiGMu3z5sr4/AQbh+s8O0BrsnW+74cv6Bi3rGWKMA8Km6WhMMLOgGeMAC5oxDrCgGeMAC5oxDrCgGeMAC5oxDrCghRn3OVtXBroOczYLmjEOsKAZ4wALWhgTkQtF5K8iUiciO0Rkkce4aSKyWUQaRORFEXleRH7lMT5CRH4iIgdFpEJEForISREZGJi1CW0WtDAlItHAGuBNYCiuM4//IiLj3Re0fRX4M5AGPIvrhElPPwOuBC7BdTege4FqjzO2TQ+EU+99c7ZLgAHA/araDrwrImuB64F3cf3tH1ZXr/JXRORfp98oIkOA7wJ5qlruHvYmcLHD6xA2bIsWvjKBg+6QnfYZrks3ZALlevapG56XeLgC1y23Sj2GpQHb/FVsuLOgha8KYLiIeP6NRwDlQCWQJWef7+955vlgPM48d19Zaj5Q5L9yw5sFLXz9EzgB/EBEokVkFrAQ1w0hPwLagLtEJEpEFnP2ZQF2AV8UkTEikgw8DFyAbdF6zYIWptx3WV2Ea0tUC/weuFlVi93jluK6YE8dcCOwFmhxv/cdXDtINgObgC24zkgvdnQlwoidYW0AEJF/Ao+q6pOdjLsDWKCqC52vLDzYXsd+SkRm4rpzai1wAzAZ2OAedwmu73EHce0Y+QWuraPpJQta/zUeeAHXIYC9wDKPK4LlAa8D0cBu4BvuKzubXrKmozEOsJ0hxjjAgmaMAyxoxjjAgmaMAyxoxjjAgmaMAyxoxjjAgmaMA/4/AWUhUYGM70YAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"120d2857-9739-4766-bd40-29495deb0616\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"702ffe3e-4bc4-43bb-ab6c-e2d4d7614513\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5425\"},\"major_label_policy\":{\"id\":\"5424\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"5427\",\"type\":\"AllLabels\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.23, C/O= 1.61, [M/H]= -0.38, T= 878.14\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"AAAAAAAA+H/gKGpIMMdZPgzb4glpyF8+0eDazuSSYj7IUgweOEplPhVadWg15lw+1tN2oE/ASj6eLLjqMRVGPlse7ihPWkE++FMhs9P/VD6NYTFmBIVhPlcjlPKOB2A+ebXAT/IsXz54hmlfZylTPnjNwQ40+zs+K43V9j5XKT5ecfuVjNxaPk0Kam1g21U+GbKiAloCUT6jhgQVxHELPpzJ7NqjdCQ+OVH5yCcvUz5gdHQP7DZQPk945Mdr3lc+tsREn973Uj4jcVROnN1WPhkgVkvCRU8+x1QQVaBRTT7emXzcDjdUPt/jOS+gm1o+5uPKvefMUD7wRjqs71dHPsJVh+or6Tk+ympbpTNsVj6GCa0mnf9DPqjxqxUFeFQ+5ETn/9yxLz5cxqE9DB4wPmINHgav+0o+CxCfU2NNQD4YxehmCPgyPrvAynoRnxQ+6LAfWKAKSj5lVEg68KU2Pg/d27J5BzE+wSnF8OSrJj7sA/LbP8w3PgLlF9CXADQ+tArYVvptUT55mQ/HTmNNPm4BSx07Jkk++0/Dt2PaRD5F6s8A9LdJPnTBKodL2k4+BLiGIqPNSD4y0xr08ko9PqAAqeNBZiE+CEanJARgRT6mhSdV3fIfPsCdWnyzgSI+HrXxW+MSJT4zc+Kb8pMlPhwSpgy0FiY+udIQRCxCJD4qEUD8uJ1CPtKdHUWCrUI+Ha91PCNUQT7YVTsLuBlHPkriS343eTU+RXO8WFDIFT7Agz3GJjHVPRJ6lLR65kE+Oe8NXGeTLz5cC5cBDMk/PqYYHuSt3jI+x/5oqUamSj5Q8kYWBqg7PlLHxJDKUCg+ui+RrkZlNT5iY1jGckc2Po6gS/4VkkA+HuVYRB30ST7UgQNIyHkpPqbH9CAaQUc+WM8wcHuRQD7UVlgu4v1CPnLIsDLC10M+XRKe+Ha4UD7S+a4DaLxPPqLnl/PoJEw+MKf37W82Mj74phrEPXtDPjtPjbCT9UU+ChbOg+ngPT7UHH7LC2hDPqSmTy3/KU4+sQvMdV6lRz6Ob5zvduJDPkud0iEEEU4+Owq6oF6ETz5PwRLHhpdGPrdFkuQbwkc+HrS4h2J9JD5MMK8TBR9DPh5KeguLNFU+IEwCfr0hXD5MblviaE5WPkZ6DjYWY1A+5zaLOVTlTD5v7JRhWkhUPibq2uQt+FE+oCyKE/iIVj4d07Mu6GpEPh8nUwPMcFI+6ZAYMlYDXT4qQck/9vZfPgMt5wGNEV8+AMYHV+0oYz7FNh0wjTVpPvyg6MWzdWc+3CpXq6oGaz6qUcZVQrpqPnL6i/1Axmk+77ebCkdYbT7BEgeu0l5xPlOy8v+4qnM+OMr4iJczdD6w2f+O/bd3PvYPCdQ3Jnw+UuzbbV69dz5aM4QKiGx+PoifUk4Tanw+YaJEUflefz7tUpo89bGAPkp5jrvczoA+z55GI3/wgj78Ah2olZqCPrMYBimfDoM+mLtN2kIVhT7CbI2BRVKFPno+3K5exoc+wKRZIGXphT7/e7rs3eKFPplcGBkzOYQ+CCrO6WiIfD7xLAVtPR94PqUqDKLb1nA+ufyxwVJHZz4EoK0gEd1hPiZstBZ/S1k+4l3LcdxmSj5NSSv+q1NVPqKJwuwjnVg+8jGWl7cxXT7fyMEi1BZdPrSq2lRlR1k+ayuYHqiFVz51wnNGVgFaPrWUjlhZb1A+Ie202LZbUD7yoCgXbM5RPh2PbeS4dVI+6hPj4CYmVz40mAXX6/paPmJNPwclHGA+WPJZMyq+YT4I0w7ILv1nPsESTkMDMGw+OYLQcqClcD4GcNXZUiF1PuqC+MEQSXs+NMjWhzNefj7g1SGJ9BiAPtWA5D8ZnoE+kt8dvcKghD7YuicoBriGPvmALkAZBIs+TIk3bXjdiz7RKFyx21eNPrXPPB4KU5A+7mBcaiajkj5OfhUPgY2SPlkxJ0EcHZQ+bgY8b2BwlT7gqxgmFOCWPgdmuMPdPJY+yZ9PaQXDlz7+C/+HLluXPjv7nSrNuZM+uh5T7h34lD77917CyKqSPp3UZMj8pJE+lUogwe22jz5hTvgwLCeLPu7IWZ2Z3Yk+U6PY8PuZhj7zu/22ASmFPtYz3b4HXoM+TxjuZ+HVez5dpxOhEV91PgJ49/8zhmc+lOuotdiwUj5S7KmTPLFCPofODNeBS0E+pHKnV3ZHNz4wRJ7c2EQpPokAEyW9OD4+e2qj0gwdRT5VlZxFCdk6PhXczA76KUI+ojSkzcfKTT7uAOiSRW8zPvLezet7W0Q+iDPMeMx9Uz6Uu5Q6N8ZOPhosBaEvJ0I+7WFwiLaiET4wp+utgWtKPgyVLXSJhUM+Oq8+0XssMj4dXEaw1JNDPnz8FiCiwzc+Ctw4hJIbBz6UHqe4ZJMDPq6wUYgPnj0+LqRL5X9DQD5c65NZw45NPiL7JYHFqlI+ARHrfpC0UT5S9rUbzxJcPoKXVKCqtEc+RjUC6iM4Sz54/K1ley9iPpHSxrRAJFY+sok+ie3GUj6Ot3x5BodgPuJ01OVFiV0+Td1J7u5xXj6sJfEhvsVhPiFDI/AMxmc+Qy8DS2dFbD76ePXtEOtpPotTPFGhwW8+fy2OgbxQcT55fAKUHhtyPiovBmop+XQ+x3O99fWvez5+LpPXQAZ5PpbCc0eKQ4A+6f4R3XRMgz4ismKJjqeEPvSMQPiCoIY+LH+U+krJhD4ZC7GHeTeGPjdr7dI3jYk+2hTwXYBhiT4dsPkaZj2OPhmUCS5hr48+QmLTo25OkD5862J/+XWRPoOus0B9WZE+XDaD0HidkD7C3YncsfyNPg2ba/VaZoo+j2DideWtij4s8n9VxoWEPnYvH52NTng+PpciiXGpej6Dh2ZW+lhsPuZCb9srX2o+wg/yVtwWbz5rMW8ijShiPlg5zFgWlmA+GAk56buBXj72SEjojchnPq+0zBdfuWM+x/LsZc4QZz6NhT2qq4RsPigaPUNCnWg+PsaatHdVaT5tGeWjuLllPhucoHsRqV4+xXGFIQKLQT5oZeAU9l1ePpqZYPPsVVk+YyNwwIxxZD5FZHwhuQJoPuoPc1UOzGM+ejatXMtLbz6ydD1OtLNjPrg6fhnqEFU+5u+9vWtpYT4EP48yk79YPth9G4+xHmg+QZftblRmbT5l3sWVKbZmPqJkdClbS2c+74/XHJKlaT7d6dzXmtJjPsweh1BPb14+cCDItif2VD4Ha6ic8FpgPsVGqEWD/mQ+XQs9QFSzZD4LH8e+U+FQPjgnb1rJZGM+nvfuzX8qXj56tJNa0K9lPvBvkjktvls+IrVdpJXhWz4c3HCWPPhfPj4eJn7+k1A+3/HWyjqkYD6EGQWEyB9KPuhXBRqE51s+z+QYjtzsVz4wHEX4kRhXPqraOuRNRVE+nJ1zsU/LRj5masq2ux83Pnw5CbKrMkc+JAXJkJzHJz78YbgqEy1cPgpwch/rmEA+Kmg5ELu0YT7aXDP7XlpXPl7xwVRTrkY+2EM6Bed4Lz5oKktNriRrPrTxXFOSpmE+Gyny6btxUT4s7DLM3L5RPknWQYBoLGU+xNeitepePT6Q2ZlY/vI5Puq3ATkLRjw+DHnUxrAcPT6wynUtI75dPgjUbYZLGEA+EYxoRj8hUj6IV7yW+EhlPmTkjVaPuls+oqfydgWvUD7kjE83KZVoPrOuH8WmYlQ+ylsJKFCvRj5gdMdvielnPr8ej14zj2E+mszv8vm/Wj5AZ2Tz8nJqPjbgFMtWrGc+EFTfzpXgXz7K6zNtdVJMPhGARvhkqFQ++nXhGFqAVz6qtgwQUBNLPsJdAH9oCFY+LjRepAQ0XT5+epei0uhaPiizZDhUaUY+MSvxfYccYj4MXxv3rI9YPtIevU5t7ho+IghT0soNVD6gA2/X8GNhPjFPp5b7dmE+uJRGgp9bXz7CdsuKkNJhPtVxTWVSTWQ+Ytz7szekYD4No/KgJm1lPu4PTb0+bmU+MpbudFuhbD74ySDdM/9ZPj+PR8eOgGg+WDyRnO9ibD5EidGXiFZtPuSwKgfbem8+5nNGVWzKcj6SrBt0YZ11PgjlBrUhMW0+6/6CHZ6GcT65SMCMzzBzPhZurDcc7XE+zquv3dtBdD7hjSo3nTh2PoO4aCZXCXU+j4JygZMaej63jUV5Ay9yPug6ng8sb3o++in61al1dD7snJKZ1qh7PpqRJ5pF5Xs+XQU495lXej7sFe7ByaJ/PivV/lCVT3g+D9480BiXfD6Ps4Hkl5N5PjHhWZstk3s+Ek+sAC1ifD4eOA6ql6R6PkAad4gdHnw+e7K8k29xeD5IDZ+kUT97PiU19OYjyX0+zGhVdAiTez7/r2vuqDx5PsqPTi+xG3k+m+pO2fWsdD6lb9Nqvpp2PjNR2Hl+KXU+Qz6WrXLJcz68/beBaHR2PqTjklC+P3Y+Zsw+NuuKdT59ymCSdIB0Pg4zKxdjcnY+QnRCQtZhcz5fcVHoI4JxPmz76a7wRXA+AKIXcdGGbD4ryOoKrFxsPjBZURMu5mw+xt8se+C7ZD6N6YuzXvppPlfeReLs7mc+Kiw9aVFxZD5+gg9effVnPmExgZ8VoGk++1O4H96iaT645oVVrPJqPhx9mq2r+lI+fjqpQHbUYT7AGEeP/tddPlyhqBrQoUI+KDDaRL/GUD5awXscGdRHPkK6mM03pk8+cLrepx3+WT5cjZpE7LlWPvmlxW0bEFQ+juVixdlcST7U0k6gnQNaPlAXRVmqinA+ep7uwib7VD7OhSPujpFSPiHh/Ww3oUw+WDlzu1QNQz50fJKkXkswPkComl/WG1M+5BFaW68SXD6mN3gKEA5fPoYS2uM1JU0+0YFcu+72Pj4zuBC2RIIXPp63PiCz0Ec+bEo1rhjcRT5Kt2t6yFtUPsBirwrxX00+cHletJgdTj4aaVpFt/pDPtzD5dYC0lI+g2dxDkwrVz6tpaFAOLhWPrUSrMng4VE+1swyxYKQRj5ksvrQDN86PqzqX+yenTE+Z6hWi+uWUT5o4Vf6vfNTPlX438GpZk8+P1l+qD1YVT7AFiksX5lZPt5CvPB+UU4+PHGOpye8YD484vAHnn1ZPkGeY/3DpV4+pPkwjhvBRj50VXMcJgBgPn/G2DiAxVY+r2q25k7oUT6Er8/c6JJTPmBxNkFeJTU+s/6Zo5vZVj4wnaXGFMtXPqrJaVmeb1w+2wBcEzqpYD66ETInvf9aPmr9m80o6jw+pbolKA1wWT6NChmDFvdTPjRDwTdVL0g+Uithaat8Rj4/vlK4CeRTPrUaVvvebUg+6N7zk7ybWj6SkWavFNRKPhWgwAOep1k+yvIs6jxSWT4rDt5El8NMPtjhs+5WR2E+pvtkYHgxYT6nK5yja49UPtyiMH9GKlQ+OujuXeVWVT4dbZp7ioJqPhh076aaCFI+OYFXtyAMUj4wCZEhIhtHPtkXBZrkFFo+vTWL9o8AYT4hsK7MGDpiPlCmIyJZ5FQ+Y0aXAut6Xj61v9aDjHZjPhJFkcVBim4+jhUlX/d3Yj7bfbFwYQ1dPqqlaD+pIVU+zME2/rouaz4Y003hBzRmPmzaV3MMnlQ+ocJUjC82aj7zfsXcguRsPl6+hKLZCmM+kWJDvUxbUz4kMbN0nn1xPpIvLp5lvmk+NO1Lfn2gYD7R6QWsGptTPoyzlILBVm8+xAhwjXCIYz5MK5DKo0BoPiLB34+UiXY+U0O/MRVSYT4SyvwbQvVwPk63qkM9fXA+JrqCtBUMcj50vAFaXDduPlIQxGlgNWM+jLGgPo3UgD4yyHZcEGFXPhh+D8CmnFU+ehP67SzWUz4gV7DqFCRTPsbB/w4xcVI+HeEw8pwaUj6QhL7KpyV4Pkp1uerVh4g+LlWeff4+kT62Z1mJUBeTPovtNeIls00+9NrwtK04OT4mNmVROTeLPtb6A3tWJIM++mNFu1DVfj4Px+uk8NObPloGNlhQ9Jw+1lYadou2kj4eVdW73nWKPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5431\"},\"selection_policy\":{\"id\":\"5430\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5425\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5424\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5428\"},\"major_label_policy\":{\"id\":\"5427\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{\"ticker\":null},\"id\":\"5428\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5431\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5455\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FzDVsKrGVz6Kfs0/ILJbPi465rMbt1k+AZgYK0TPUj6tbpktsFlNPgEVsO+daUI+GrSfzJe0PD6lsM7xxMMxPlVHcHX3OkI+3nFAa9cVNT6Ib+9aosk4PjAtqatsgjs+haOXWzkrST4yB2iWtKVGPvR0094US2Q+aJsmbDWLbj7LO74LF3R2Ph9Kj3J1/ns+BOeFt9oqgD7oJPDlMcV/PgBik+pHhns+3ZJgPnHscz6ZBTOX9bVvPgAl1E5Tw2c+UPMJ2FENXj5g1zbGg9BUPhbSbl9qH08+fFVwUesEWT4P1ywUYktgPid6FFiuCFg+mewmyZpTSj7uOlXRAcVPPpMn2gkMplE+PTh2NV1+Uz5eIbAFzPJVPvnG6l/WMFs+KqkJv/nzYj6J6yaTS7tgPsyA4lRIlGQ+YPGo5YD2Wj6xm/3MjnBiPsuBxnVPSGA+R+A8AOI9aT4zrOVq4CljPj3xPGQZ124+B0mcxAKZhT5RA4yB4OeQPjCCTurJeZA+viAZ/P3diT5L9k4BrzCDPh3AU+kvBng+yCVkcpnTbz5mV++OpL5lPjpbqPK34F8+We5y862XWT6PmCKii71QPpSFwVg77kI+w0TdUlgVMT6qI7+p4ZEwPp+BnHqblCw+ZMvTHBSyMT4ox+xVuY8mPmHT81HUtig+sX66pFqJTj7n/j1bvpCAPjDc0YQKpIw+WZxWfXm1kj7UaLsqjFmYPuMJLvisC54+ocFgIwSYnT6X80qxhtiXPujMhAfGWJU+s6nQ4AXBkD5fuIudLX+HPsJNDLPGF3w+fZVdQn3mbT5km7tjlg5ZPiYRz0ROLFc+usfIxF4GWz7GsPfA1NBgPg58wOkAVWM+q0SkzXsaXT7DBQdouPBrPjtGYlXmZH0+PFuVJbDrhj4WGBwgH+eGPnWFIgWcQoU+gaCrP/4zgz4r4LJe6N6APuhbtd3I+ns+lLW30E4idj6yU0B36hFyPpTAhehJF24+GLiEM/TvZz4UCSPOsaFiPtp2xLmZDFw+w/K8X4RJVD5IQolE3UdRPnkmC70pRlA+bC5Ci2E0Qz7/mLvaQ3BKPiQ+l1sIq0c+I+lkU3I5Qj7PO4VzX+o1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5455\"},\"selection_policy\":{\"id\":\"5454\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"702ffe3e-4bc4-43bb-ab6c-e2d4d7614513\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"120d2857-9739-4766-bd40-29495deb0616\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 258.53, p-value = 2.33e-15\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"ecf74087-cceb-46d9-8b53-1909757090ff\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"0db2fded-7591-4182-8bf9-dead95c1f5ec\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"5850\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=258.53, p-value=2.33e-15]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5847\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5850\"},\"major_label_policy\":{\"id\":\"5849\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GsKmG4J5Yz72xUyibdRmPickbG3XWmU+Fp2VfCy5Xz4eY7LsK/FYPt1/gvAjpU8+M5wL1qr0SD6CA9c48xY/PvVXv2P0UE8+IE+NLEhyQj45duw3DrZFPvKFCehXPEg+CgoYy//RVT7F6hXxIaZTPrdYZmdCM3E+2rI6kYSyeT5/E9KhfMSCPhFC0KK0Ooc+3mY+3pa4ij6l++77FSqKPnKhSvaepIY+wqrD8XpngD6d9Raf7DZ6PhRzti8rh3M+31seY+4LaT4MR0f763hhPqgJtbDgMVo+sPkUZdUFZT7jHpDcKQtrPlLcCXCe4mM+VjjPfen1VT4mR0wA0oxaPgKPeFZYjF0+EBXfiGxdYD5lGhcsjXliPgbbPQXpIGc+osl/yJAccD4q7uKePBVtPjZnpIUp/XE+G5h4vPlDaD47L41Bt0pwPpr7XIxczmw+reQdCENEdj7C5bRNnv9wPqIOiBvDs3o+YpsBwTzgkT7oVsW9hV+bPtbOcTpifpo+iss70HLHlD6OWqY1/N+OPsJmsjd7aYM+NVTbfPfteT4DGhCp3MlxPuub6AR/JWo+xeGb4c4MZT5+PNmMr5tbPjPbA5I3oE8+XXf2p0nIPD6KYAy5SnQ8PvoqWzQLxDg+k4+8pJqDPj4eJ2cp+mszPpGjp4hmHzU+Ff7X/wyXWT54pD28kpWLPgLpb+ORwZc+2u1QOd3Pnj4FXCxrWOKjPqtONTk5bqg+gNjq+HEBqD7GoAxaQDujPiNdVAQ3YaE+cxh10UJlmz6/Et1DjVmTPl8cfYNaa4c+aiWFQ4c3eT7zHAqUWI1lPoh7QenDE2Q+Z/Wsv0JeZz4rXmztQjJsPjJ//W52QXA+CwNikMCVaD7KDc7CaS93PhsrWfr/Gog+OACAzJzRkj7in5Pia8eSPqp2iigJa5E+1QMvKOaIjz5KDhBTQtmLPuZlJObYLIc+6f6UV/1jgj5qCqoZXxR+PgXZ8Jl6G3k+hrFHfbnxcz4FvkuhbQtvPojvjkHlW2c+Gg2uJ13wYD7wOgiANPtcPopN1F0yOFs+AfF8Y+ghUD7sxFNWXydWPhqvZpCS6VM+0C5O+FDOTj698esB4atCPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5877\"},\"selection_policy\":{\"id\":\"5876\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5849\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5877\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5897\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"5919\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.23, C/O= 1.61, [M/H]= -0.38, T= 878.14, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5853\"},\"selection_policy\":{\"id\":\"5852\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"5846\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"kBuRpzgDYD6dzVmjJ6NiPrF7IplIOGE+hAMsHkuGWD5YCWf34cJSPrwM+olyJ0c+4K9sajSoQT5AdMlbQ5c1Ppsbzqcj2EY+4p8w04XbOT7Wze8u5TY+PmoWI8fdkkA+trajsvonTz4CLt+XMi9MPiaDxbKJumk+gOwdHSaGcz6UsmQ5Zth8Piwb5P2CFoI+Ki7VD2rmhD52e3aFhpGEPhPG0B5SuIE+GagAi1V/eT7YlSveaBl0PqP+GExiuG4++E7ZYdLoYj6mfgCnj+BZPrcZHhf0FVM+twvW+7rAXj6kk4RblMdkPlOQeym0QF8+JKaEgOfgUD4sj6bmM1JUPpwaw3A0Z1Y+WkVDAoyvWD7xCQ4OevhbPomUeOhAQmE+0uuBXz5WaD54QjN83QVlPm/zUkeLrmk+wt16T895YD6F/6ywHgVnPjywV85eTGQ+QIleKn0bbz7lOlpHl5hnPoS8WS/jmnM+NtZv7K30jD40s4MsFUSXPkrswakQxZY+CrIYctejkT5cf8kNkd2JPv0VQyyQBYA+Nc74pDHSdD472BrDbnNsPps3ZeUwoGQ+Bqi5p1jrYD5e3MDedBxWPon9DN6WA0g+/Nb9TuhMNT5ACVgyUBY0Ptmo8Pcl2jA+FHpcRMpBNT7ZtczX3r4qPtRXUX80yC0+Zl8HSMCnUz4ahFHzmPGFPhza2hqxBJM+QYJHvrgYmT6QUtGJ7oagPuhtFCPCnqQ+61fYAOCTpD6z3kKQy/OgPkAqXEa/Ip0+FAi2pnSLlj6iaFp/hDWPPv+L1pHbQoI+yo6xURopcz7I0LPcRqRfPijrgdMCnlw+VdlXvtmxYD4A/8rOf9RlPkMvLhAHsGg+kwDoR8VFYj4MVLGduYZyPi4gbvTHO4Q+QnIo5WyMjz74B78uX82PPkxDj9BQwY0+trQYCfzmij5tdpWNEoCHPvkAZxuIY4M+7o4qGRmVfj5uRX9R1fN4PssQITN22XQ+fpDzu26YcD65iI5p1bVpPh0ni/IbQWM+gl2DU/tyWz4eEzEu/wJXPtxEulG0y1U+KIvV4KEWST5HOk1oVZZRPob9UASxC08+2DRAyDODRz4j+Qm1rrY7Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"pGi8j8vvZj5Pvj+hswVrPp3MtUFmfWk+VJt/7QZ2Yz7kvP3hdR9fPn95hatqEVQ+Q0TVoJAgUD5iSfKKUUtEPihK2I/i5FM+T06Cb832Rz6HBWHYqVBMPnr17wjS5U8+uTjePAIQXD6JPjyWqjRZPtvvafU/iXU+NHlXBePefz60zfEmxhyHPvZovEfmXow+yc9T1mFFkD7Ue2dypcKPPtF8xM3rkIs+eAEHHksPhD6xKgEwOCqAPtZmYDklsnc+xmhjZAovbz7FTg4jkAFmPsz8JaXmpmA+hO0+TE2raj4R1c2uX6dwPnrwVcviJGg+iMoZe+sKWz6Q//gMuGNgPrQBFx6+WGI+c4ecEBNjZD7SLydR3fZmPoMhAyKR/2w+W50+YQIOdD7uTMngTZJyPrRUn2cNI3c+Oim7FBIHcD603sMq3xJ1PnwjMSUtqHI+uoQMe8f6fD4Srrz38DJ2PmAw24NR5oA+qUvLiyJGlT6c+gZP9nqfPmKxIcuzN54+CuVeLg7rlz7gmsGuM/GRPoe3IUNmzYY+Ndq9VL0Jfz7px5LwAVp1PjsAbCTNqm8+hBt+G0UuaT5PzngddY1gPm5c/SJsnlM+34t3gNUhQj7qW+CfImlCPo7WYjj4VkA+iVKOgrXiQz5Q8+fmhHg5PjibptGyWjs+xJyot1mGXz5r4pRCxpyQPuj3BKxyfpw+uSwt2oBDoj56ZYdMwj2nPm4vVk+wPaw+FVn98ANvqz7ZYtYjtYKlPialemUOMaQ+aRQafogfoD4t8QxIWBiXPr+sI3XZk4w+CrxYNfRFfz6CUbq5jUhrPnwBwmiG2Gk+eRECwasKbj6r3gYGA0hxPsLm41XpKnQ+gwXc2Lvlbj6Ix+rnGdh7Pgg2RAA4+os+T8drJgPdlT7Iu8ctKKiVPq5Lzehp9ZM+eqmiI2gVkj4UU0UMORmQPtPK4bAp9oo+W7aUIm59hT6zZ+pwdJqBPj+hwAB/XX0+jtKbPgRLdz6oeYTsgjByPvO3kpCudms+c2uapTwnZD5hse/otHlhPhwr9zRYUmA+bhyP1n+4Uz6RT1pEabhaPnHfpJ5MTVg+ZBQuFLcMUz7o5lKpanxHPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5897\"},\"selection_policy\":{\"id\":\"5896\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"Ab1yCyFFXT71maxwGPhgPse0Jb0oJl8+9EJWMwGpVT5EB5XCSE1QPs6rwPKGxkM+bKHaNnmBPT4+aFOkr88xPhY64+koeUM+QmCRv213NT6X++BMf/U4PkVp0GjGDDs+Nl/okUUwSj7hv7WOIsNHPqKpzhAzR2Y+VyeXelARcT7wNjyvO2N5PqZqqRrLCoA+9j+F4XeVgj4Vv00ogVeCPvIaioOvhX8+K4hPdpuWdj5YVE1XfKpxPii/krVGZ2s+sI0Y9at3YD70FvYa6kRWPlI/fY/MQVA+8Cb+jmpCWj7i2Bz2gUliPorWuLcP3Vs+XVl1DXW2TT5XNrfastdRPijbQyNij1M+Uqw/wyR8VT4lt3Nb2GVYPsbpUZuu2F0+sFHoyOsyZT7y7vWX19BhPrwN6e7BlWU+OU9c7KXAWj4xESOD7TZjPqeRpmK96WA+4K+kYeHDaT5gCoZTHXVjPtZXHUryx3A+Xs3DmGhAij7q55kHtqGVPogi5nW8SZU+BKUYYBVkkD6vx52iSd+HPnbY0EpuWH0+uFnKjtPJcj5gZnxkip1pPhnUKO/UbWI+3lqqKCiNXj65gh3Tg+xTPotrIys5/EQ+cKIIT8VSMj4qz6QiA8IwPodcYQwTaCs+RqixI9WSMT45pBCVh+4lPomwVMmn0ig+jh7EXTdLUT63OLjICLODPuczfFAVIpE+oJBXL4jSlj5FTFOg72GePpI+8QKeGqM+YShsya82oz4GrXzGogugPnZ8MGrk5Zo+d5ReO1adlD6q9q/OgDqMPrIaj3htNYA++HJi0S7AcD7wD0+TqRRbPqWQ/ILLBlg++FwzzyIUXD7gRo3QAkxjPnzn1D8Rk2U+iA+kDYiFXz5ocwZyJqxwPotX9RtfsYI+mvuLYiwgjT4LUkqGEoONPtliq3+9u4s+YmjU1hoPiT4QUFWqIcWFPqhCImbW4YE+Bv7+GqwdfD5ln1DQkel2Phx/62y9J3M+zVWmPaCGbj6GK1FodZZnPh7EKVv/nmE+lltkKiLkWD4JfUPO6qJUPlI+DN83o1M+usuUSpw7Rj7w6jp2VopPPoARau1rjUs+/zHNV0WcRD7y73zu0eE3Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"tCWUsXNQaD738ezTwrBsPuptRXyaIms+nHvq4qvkZD5832eLh8pgPvYpInfgwVU+2PNUiEyUUT5jT61mGy9GPuq6ze5flFU+H+5RedkoSj6mbmjJXPFOPqFr1U0meVE+eeQ7zdyLXj6a9dCasmpbPp1cZUbrQnc+Lh/vU9wpgT6GCwZsW9eIPnwZ9yqeao4+48Z77dptkT4aHMhnVf6QPms10Cpmho0+bpFfKKiDhT5xS3BzrmGBPpSGowSzWnk+BxWSaBjQcD6eghPpYs9nPv9p9mj6EGI+6N+qgnXqbD5ysoHhaOZxPl9NNwS11mk+/sPjdJgQXT76q/CS+KBhPm6h1kSnxGM+91MesMb8ZT44WXQqLsBoPinB0rx6VW8+bGqLrKufdT6x9ufS0Cx0Po5H1BNyL3k+TYRhQdCTcT7e1YjB9/l2PsayCdt9WXQ+anFpX5Wmfz5UxqbxrUR4PrdiefbJT4I+FVChNUWglj7zYvi5qo6gPiR7/f4Hs58+EPJeQNAqmT62dldkV/CSPklh/Em/Jog+WSd2tQ2JgD7WAOIf9MR2Pt4xVI2U7nA+G5birgnTaj4he0qjbaVhPm4lcvwaIlU+JSZyAOeeQz71+LknSRNEPtjTQnEG6kE+cLvjEjC6RT4g/EWIsOA7Pt7upCx51T0+zu71UHHxYD4diOFXDryRPh2eY3YOYZ4+iiWlIZlmoz7oES8GuZOoPsReeW/Uwa0+n4hpKDTMrD6GlJzt3WqmPgt8kNN7T6U+OM7Fs5cWoT4pKmIg2pWYPgwea45HoY4+7uvT2m/XgD7usWxeXJBtPr6uBBEiJGw+KR7gCzpZcD67uiWFQYxyPqaKED5kuXU+Kf/4jF60cD4sqJUTrbJ9Pqv+vNighI0+owK6ZyMTlz6+FgKCTs2WPuc7P5Ez+JQ+pM/EvFgBkz5CZuV9sfaQPiSJJmbbd4w+z36qoSS5hj63uoExlp+CPu4y9sY3D38+Jji82yKgeD5CKCPtMkBzPvIa9CfLGG0+aewpOqluZT5sfOYYv6liPmEuTm6WZmE+JXyvoQImVT5gFIpxk4lcPnRVGCpvDFo+0JVnTC6AVD6Ba5kM2WZJPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5919\"},\"selection_policy\":{\"id\":\"5918\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5847\"},\"major_label_policy\":{\"id\":\"5846\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5853\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"0db2fded-7591-4182-8bf9-dead95c1f5ec\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"ecf74087-cceb-46d9-8b53-1909757090ff\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:42.276961Z",
     "iopub.status.busy": "2023-11-28T20:47:42.276419Z",
     "iopub.status.idle": "2023-11-28T20:47:42.280557Z",
     "shell.execute_reply": "2023-11-28T20:47:42.280909Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 258.53, p-value = 2.33e-15\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(258.53, '2.33e-15')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:42.289108Z",
     "iopub.status.busy": "2023-11-28T20:47:42.288553Z",
     "iopub.status.idle": "2023-11-28T20:47:42.291135Z",
     "shell.execute_reply": "2023-11-28T20:47:42.291460Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:42.294825Z",
     "iopub.status.busy": "2023-11-28T20:47:42.294355Z",
     "iopub.status.idle": "2023-11-28T20:47:42.297017Z",
     "shell.execute_reply": "2023-11-28T20:47:42.297475Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:47:42.301266Z",
     "iopub.status.busy": "2023-11-28T20:47:42.300624Z",
     "iopub.status.idle": "2023-11-28T20:48:30.841712Z",
     "shell.execute_reply": "2023-11-28T20:48:30.842078Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:48:30.851278Z",
     "iopub.status.busy": "2023-11-28T20:48:30.849514Z",
     "iopub.status.idle": "2023-11-28T20:48:30.862359Z",
     "shell.execute_reply": "2023-11-28T20:48:30.862726Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>3.900000e+01</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1643.101538</td>\n",
       "      <td>3.445700e-02</td>\n",
       "      <td>5.212732</td>\n",
       "      <td>872.451239</td>\n",
       "      <td>1.594124</td>\n",
       "      <td>-0.388629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>3563.637501</td>\n",
       "      <td>1.338718e-01</td>\n",
       "      <td>0.096611</td>\n",
       "      <td>21.230232</td>\n",
       "      <td>0.152097</td>\n",
       "      <td>0.028218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>93.450000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.966377</td>\n",
       "      <td>815.069560</td>\n",
       "      <td>1.329210</td>\n",
       "      <td>-0.439438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>251.690000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.162058</td>\n",
       "      <td>860.064555</td>\n",
       "      <td>1.496329</td>\n",
       "      <td>-0.408071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>483.150000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.205571</td>\n",
       "      <td>867.591715</td>\n",
       "      <td>1.560458</td>\n",
       "      <td>-0.390362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>1175.730000</td>\n",
       "      <td>2.336500e-14</td>\n",
       "      <td>5.276145</td>\n",
       "      <td>886.728505</td>\n",
       "      <td>1.681089</td>\n",
       "      <td>-0.372486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>20123.460000</td>\n",
       "      <td>7.390000e-01</td>\n",
       "      <td>5.385885</td>\n",
       "      <td>917.814148</td>\n",
       "      <td>2.005860</td>\n",
       "      <td>-0.319008</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius    chi_square       p_value    gravity  temperature  \\\n",
       "count  39.000000     39.000000  3.900000e+01  39.000000    39.000000   \n",
       "mean    0.790000   1643.101538  3.445700e-02   5.212732   872.451239   \n",
       "std     0.120018   3563.637501  1.338718e-01   0.096611    21.230232   \n",
       "min     0.590000     93.450000  0.000000e+00   4.966377   815.069560   \n",
       "25%     0.690000    251.690000  0.000000e+00   5.162058   860.064555   \n",
       "50%     0.790000    483.150000  0.000000e+00   5.205571   867.591715   \n",
       "75%     0.890000   1175.730000  2.336500e-14   5.276145   886.728505   \n",
       "max     0.990000  20123.460000  7.390000e-01   5.385885   917.814148   \n",
       "\n",
       "       c_o_ratio  metallicity  \n",
       "count  39.000000    39.000000  \n",
       "mean    1.594124    -0.388629  \n",
       "std     0.152097     0.028218  \n",
       "min     1.329210    -0.439438  \n",
       "25%     1.496329    -0.408071  \n",
       "50%     1.560458    -0.390362  \n",
       "75%     1.681089    -0.372486  \n",
       "max     2.005860    -0.319008  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:48:30.872724Z",
     "iopub.status.busy": "2023-11-28T20:48:30.871673Z",
     "iopub.status.idle": "2023-11-28T20:48:30.875499Z",
     "shell.execute_reply": "2023-11-28T20:48:30.875935Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>4372.81</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.204464</td>\n",
       "      <td>890.918599</td>\n",
       "      <td>1.637921</td>\n",
       "      <td>-0.381058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>121.96</td>\n",
       "      <td>9.790000e-02</td>\n",
       "      <td>5.385885</td>\n",
       "      <td>864.970662</td>\n",
       "      <td>1.756112</td>\n",
       "      <td>-0.350690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>310.54</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.160975</td>\n",
       "      <td>884.234823</td>\n",
       "      <td>1.498178</td>\n",
       "      <td>-0.382845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>254.00</td>\n",
       "      <td>9.330000e-15</td>\n",
       "      <td>5.028404</td>\n",
       "      <td>863.631775</td>\n",
       "      <td>1.393221</td>\n",
       "      <td>-0.418610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>93.45</td>\n",
       "      <td>7.390000e-01</td>\n",
       "      <td>5.326292</td>\n",
       "      <td>815.069560</td>\n",
       "      <td>1.926690</td>\n",
       "      <td>-0.405696</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000     4372.81  0.000000e+00  5.204464   890.918599   1.637921   \n",
       "1  0.600526      121.96  9.790000e-02  5.385885   864.970662   1.756112   \n",
       "2  0.611053      310.54  0.000000e+00  5.160975   884.234823   1.498178   \n",
       "3  0.621579      254.00  9.330000e-15  5.028404   863.631775   1.393221   \n",
       "4  0.632105       93.45  7.390000e-01  5.326292   815.069560   1.926690   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.381058  \n",
       "1    -0.350690  \n",
       "2    -0.382845  \n",
       "3    -0.418610  \n",
       "4    -0.405696  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:48:30.946130Z",
     "iopub.status.busy": "2023-11-28T20:48:30.922431Z",
     "iopub.status.idle": "2023-11-28T20:48:30.949832Z",
     "shell.execute_reply": "2023-11-28T20:48:30.950157Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"ad4aa5b1-68ea-405d-8270-30f03b9a7a04\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"8895bedb-65a0-482e-a097-3aed4a0b0f14\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6342\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6344\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6342\"},\"major_label_policy\":{\"id\":\"6341\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"6348\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"6341\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"6345\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6345\"},\"major_label_policy\":{\"id\":\"6344\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"RoDW9oI34z9xkBzRNDrkPyAy2VcnVe4/5zxd6Z0B7z+uR+F6FK7vPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]},\"y\":{\"__ndarray__\":\"PQrXo3B9XkDNzMzMzFxXQOxRuB6FO2BAFK5H4XqEX0Bcj8L1KGxaQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]}},\"selected\":{\"id\":\"6348\"},\"selection_policy\":{\"id\":\"6347\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"8895bedb-65a0-482e-a097-3aed4a0b0f14\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"ad4aa5b1-68ea-405d-8270-30f03b9a7a04\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
