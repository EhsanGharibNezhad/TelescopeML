{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:04.041418Z",
     "iopub.status.busy": "2023-11-28T20:32:04.040707Z",
     "iopub.status.idle": "2023-11-28T20:32:11.146720Z",
     "shell.execute_reply": "2023-11-28T20:32:11.147135Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:11.152762Z",
     "iopub.status.busy": "2023-11-28T20:32:11.151933Z",
     "iopub.status.idle": "2023-11-28T20:32:11.154438Z",
     "shell.execute_reply": "2023-11-28T20:32:11.154833Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:11.158635Z",
     "iopub.status.busy": "2023-11-28T20:32:11.158077Z",
     "iopub.status.idle": "2023-11-28T20:32:13.654288Z",
     "shell.execute_reply": "2023-11-28T20:32:13.654801Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:13.663243Z",
     "iopub.status.busy": "2023-11-28T20:32:13.662582Z",
     "iopub.status.idle": "2023-11-28T20:32:13.664960Z",
     "shell.execute_reply": "2023-11-28T20:32:13.665313Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:13.671839Z",
     "iopub.status.busy": "2023-11-28T20:32:13.671211Z",
     "iopub.status.idle": "2023-11-28T20:32:13.673520Z",
     "shell.execute_reply": "2023-11-28T20:32:13.673941Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:13.677243Z",
     "iopub.status.busy": "2023-11-28T20:32:13.676761Z",
     "iopub.status.idle": "2023-11-28T20:32:14.079299Z",
     "shell.execute_reply": "2023-11-28T20:32:14.079724Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.083915Z",
     "iopub.status.busy": "2023-11-28T20:32:14.083344Z",
     "iopub.status.idle": "2023-11-28T20:32:14.086373Z",
     "shell.execute_reply": "2023-11-28T20:32:14.086844Z"
    }
   },
   "outputs": [],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.090719Z",
     "iopub.status.busy": "2023-11-28T20:32:14.090091Z",
     "iopub.status.idle": "2023-11-28T20:32:14.091609Z",
     "shell.execute_reply": "2023-11-28T20:32:14.092162Z"
    }
   },
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.095761Z",
     "iopub.status.busy": "2023-11-28T20:32:14.095194Z",
     "iopub.status.idle": "2023-11-28T20:32:14.096909Z",
     "shell.execute_reply": "2023-11-28T20:32:14.097371Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.101094Z",
     "iopub.status.busy": "2023-11-28T20:32:14.100520Z",
     "iopub.status.idle": "2023-11-28T20:32:14.155654Z",
     "shell.execute_reply": "2023-11-28T20:32:14.155994Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"6b042113-ddf9-48c3-a77f-c00b2fcd4f47\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"623f6ab1-6669-48bd-8a74-4a43b48aef40\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1067\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1041\"},\"major_label_policy\":{\"id\":\"1039\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1044\"},\"major_label_policy\":{\"id\":\"1042\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"izvv/QWvojw4LSwb9WKCPM7nzHPWEp487/qqHHmpijyA/2Qs1m1fPBysj8zWqYI8giBjco68iTxnbzfj8OWGPLRqvOHeqXI8+Bp5R1NkjDxskOuFG/+BPLB9VoJzdXg8rgL+w5KMZjwq1gwhHbRZPOSbduhSPDk8HJZvezOvhjz6F3yca9mKPOgg6XYcp4w8p5opDAdogzyHh7q2b1KSPFDMonBSrpE8zh5ZbDNqgTzeiYiDSYh5PDXltSk8Wl482ujVQzyTMDymz3YYgmCHPDINuPuH9YI8goU3+chMeDxa0QwewqNtPPA12u6f0IY8I5G5UVdmgDzs4+W/v4FVPDRyfGiq1IY8g0owD8ITgzwKqQeaON5+PGLYMZ3gN3w8Shv/vclNRzw6x8XYcRCAPOzmGfpeRGI8zlGxTkzkfTxINjBZCyphPEDgYUAz32M8Fp0VUTekbTyVJpJNdEd9PApob27rb3w8SlsQHrlVcDxlfXXHmv9nPDLQ9rJShXE8fr1JTlzQTDwQQPjnXqh4PB7Dme5L1IA8jtsJu9a4ZjxslIhwF35tPBZzt3a1yHA8WKjduttPYzyA2UfrSpRfPNscgp0iMHQ8aF7kNaO0bzxclfwgw0tvPHyeZcORoG08VlQCNhkEaTzYsaDQ4n9sPEByLqiSOnA8UOtaWPfUcTz4zDlAHcxjPKI9Y6e7u2U8INScuYkvczxD+e7harl6PG5LjwoWnEo8fumQiXiURDwaDyURthk9PEhzl67CVA085PPmHOYUaTwndKlJPutsPEvBYf6wp2Y8Gl0IlLhLWTxo0HgGuIooPIPooYJuh2c8NFnL1zx9cjyZXXXJ5/lvPOLd+3bma1s8D238aDu/bzxGbHI0unpqPJdDHrrjDWw8pkYL116kbDwpMA6jLUxkPPGhYxFoSmk8huWV/ywOUjyLgkfO0oZnPGPoPveUF3M8stpStS6Lcjx34ry3z0NkPNd0wRLadj08ndHPa3nbTDyOMv5UnDxuPL6OiJUyjmU8YTpCEJ9OXzwo94mInRJwPHiKmQYGmWk8nfmOjd/+ZDwlkkP3K1NjPL+IJQzo7GM85y4E3xCrZjwEnADjBsFxPG6lCdZgQ3A8uWmXxGI+bTygTDweajtqPOgLLop2SGg8NgfptmvWbzwolJXENCJ3PJn0I+x4rWo8FJmNXiUJczwcrGQbuxNyPDzKv/sCqW48GhjkJAknbjyhOsUW1VVsPMpY92f5kHY8rZEvg/nUezy68pDKjCZ6PPeSbEqdTnw8hm8Ob+VkfTxCFvDBdfaBPFu3qzMop4Q8yISQBLG1iTws6cgrFlyIPOTB8Ma/9Ig8WzjUadTXjjyuojJONzCOPBRMexlMzo88J/kel+VejzzlXCBqMXqTPPI7aRIo/pM8v8qIbzG4lTyXTkVXlKeXPKQlhgYUupc8JQMD8cQhmTwNBfTuLT+ZPDX3rTs8hZo8ByMFl/QCmzz7VwDfOCidPJIV/oWNHZ48VqaYL+DvnjxFm+PC82GfPJpXWUIJDqA8bHBWflgSoDxlqA7ca1ygPGKD5i1Nn5s8bzJrQ72AljwVr60PYGSOPJ2pVySlRYo8naoG+21ygTylumHQumR4POgcTIwgKHE8/K+QxU9MYzwolEwlgVltPHTIdxhfSW48S3e8YypYcjzqMmqXK/NgPMitSB/3RnA85uSVSq7LaTxSt5ehnHlYPBFcKEgDa2c84Q1vTUrcYjzEeqgBnNFePBPL6a8kEmc8ZQ9NTE4uYDya4kTzJv9kPC/1Ag4ECW48zBJP6HDhcjxUTJU8u5l2PLU8eG6e7H486QI4rIu/gTz5z7i/n+eFPDYoRjYX9Yo8GgaM3iM8jzx4DEnC2yqRPPJAMOahIZQ8Nd117eeTlTyODkgg0OiXPHdQ0ljwOJs8N6oaM8TXnTzmd+I1gDCfPARW8TnUeaE8wcWuX2/WoTwW1CcV/OKjPGigW92wRqU8jL7ByHy1pjxbGJy5De+nPEKYzZ7G+ac8riLCalbppzwj2KLiBdGnPJDADtWI4qU8daiS9s5NpDyi7QDdGbyiPCSvSpMlIqE8wCw0MNA8nzzpE4DN3iKcPIYHfgCtXpk8CZZHp9CjljxsNv7TmeOUPFGkuO2ERJE8l1rZnYtuizz/yHAAw6qBPCujBhlkNHQ8Kd52hppIYDz9NiubhGJUPI4LlowsHTM8r31QOdM1GDySIxLSyRkyPLgn0NUeJj484sqhBpOAKzwKIRlsKFAvPJg7yOjejzE8rOaDm6l3MzzAkT9OdF81PJyyIIxS/Vs8Gz/znI5VSTw316vNaXpNPABTpl/+KGE81utLzRBgWjwc6d6JXvZdPN4pC6pl0lk8NEpOwApHRTwuubw80NVGPCooK7mVZEg8ZmRq+v21QTy7BAICRmZTPGE4bwLaRUg8yjVJ3IxxVjyG2rkpDOQ6POWOeFr9VkI8uo57lMrUXDxYwVeLz8pcPK7Q+HYg02k8LmoKU5bhbDxcOgr+g55mPPIvTLQ5mWQ8sfNvsbkQcDx9JSmFwBFrPJx9zV9HD2s8tHfEPFPTZTxBLuyrPntqPKQgULe07W88svEnXcIIcjx5fDR8+lN4PJRotL7+QXM8yoQY+ds7dzwmj+bQkjV6PLvxjskucHw8YiDKaPkygTwf9yicWAGCPJdyXu//4Ic8K3SIYehrijzWgSaITUaKPLJnbXDTYo88bEv9iglVkDyzoch6DlyRPDbue/DHkZI8iPOHU02Pkzx4Pkyh24yVPGNfkz0uhpY8lTV47WSoljylnko5EM+XPGTXc2ZMlJU8CPNKpVlPlzw5Xw1RV3eVPFulDIs/ppQ8rGGE4UaHkDzcPzDZ2v+LPOxYxTskF4Y8fqairng2gTwKJyfV+Yd2PGzAAmsRU2o8Xa1StmG9ajxgfqN97rhrPP4+1xocL2o8czvP+Eqmbjy3mYaAk+5nPFnTeDAthGk8viR/2XzMaTzCKXt3jOxwPEyWbemAxm48ruTQVNoabzzfMAQ4l/ZwPHdTOF8td2c82LimQIqyUzwEFad3H/NQPJAUu0ukw188Sb6MZ6bRZTzvJzfiNJZnPESue2S80G08h6mty1v5YTwZaccsamplPPXV/7/cMGM8MUgk712kXTyBseVcqLBcPAvXQuYIqFo8bvSRGB6AazzsChzepttwPAAQ1ooraWo88wqLf3nDZDx8aPQMG6RqPInRaWVrKmc8Wq8bHqyHajwudTSwWqZePJwnphs88GI8nyTP8+l4Yzz/xbpwEmNcPPHZpiXXX2Q8xcMt1iifYDzk9tG30Q5sPJoU+q09MlU8GT/EwcapTzzSxie2J5lYPH5yNaoJV2E8M620Qk9EYjw/weSDWWBePARg99ivJlY8jxPsMMgjTDyEtXPe8DtVPPboV8KQ9k08o8MLqd22PjyoVXvWnAn4O8O99yFQPy88aQiQVLa+PTyxom6OVyM+PDDt6pH1CGA8WwI7OuTnVTxphrz4KN1ZPOL+FkqGf188OrYmpILDXDwOmx4U7INZPOJ/FoRVRFY8PCEZXvLsZDzhj5B81nprPOilXhR4alc8OjxwAwVDRTzw1o6hrmxNPNK41h8sy1I8Cqed7FfYNzyq8FuMWAVQPNlkoawB9F48csnA806NYTwnWUeBElBUPBx4VyNXzEg8ZViKBIurZTxJNMkSooJkPBDweUT7AGk8aQbdrU8BWjyYrhdn+/RWPNZ6YU/FckU8cs+x8esKXTw9TKfxzRJrPNpUsHvDC108QZ/S+RjhOTxxp2orD7FfPHRel+7Q8zs8nHb/pHMFATxR2kv95D5NPNygEaQ76kw8LKuNB3BgVjzuBIlWyHZXPIfbTW+WnVg8Asjj8Yl2VDzZo6R5UsZZPJaqW0ypgFs83tBNiWPZWTwoj4FGTctcPImciwyTE148G19/nNP5WzyaDDNH7jBhPILTDW3s+GI8zjzJ62i0ZDzeY7amk7JnPHEWCjpHWmY8GkYT0SGlcDwbwUTpoGJyPM/qUWOdc2U86TDwYIxBbjwYa6B9CkFwPDmPYjA7OHA8ZMTJ5Uk5aDxMU6C79qNzPLm23SJtuG88iw7SY3sbdTwah2Qi3YVtPGVodHPjenQ8zjRXxITHczwSITEoYJN0PEhxy/bm33U8NS94KvKFeDxQ/UkbreR5PGf+Ana8oHg8ic29M2/CdjzkFzsn6ch4PDCEYbJOHXk8y6PNqN6/fDwcA8rNrVN5PDTerjYxr3k8nXKV/UAkezyO9aFl6pF6PDUHG3oh1Xs8jB9eJ75pejwFLjIEgUJ7PLjQCvTVdXk8wwdHd9wIeTw+g4TOJ8R4PGHGTLXAOHk83O/lDQPidDznSJCZuOh4PFiKhr3TX3k82ssyygxedDyqPobMZl53PAGztdfg0HM840IMu162czyb8cE3wqxzPFG17IluK3E8kve2op3ebjxWnCPJdE1xPFd+BH7wrHA8CjuSdH7ZbDzH8Qwxi0xtPNTk1vl6m3A8o5PGqASVZzyBWJyMdRZnPLWJ+bbOWGU8+qoeMUE9ZjzszavJIhViPChXdUIM4mQ8e17ytMCdYDyxchs4fzdmPHmwXgFGYGs8bdyy2i5rZTyCpvCqhz1ZPN9Z6x6WmV88mrPx7MbMWzy2scgCMD5fPA630o7DBlU8AztPxoVKQDz5PHtTi6RIPJ46Ioum6kg8fmD5lrgCQjw+DtkqT7hQPI1qZQiNf048nNEFOulESTxeJYsus1pLPByZHRURhPQ7Um4IU08tADxKKpe8s7hCPLLTIPIVn0Q8Rc65vWsvPTys08xcsgg0PB7+xtgF6DE8HFGCqbKOLzz8pXahWU0rPFLC4ZIoAU88DDWsmfqgOTyGAY2KgWlJPGGWNdDK5FA8kp47D7VFTTwSGfMPj0ZIPCdISebGuz48yPJW2zkrSDyAvtALQ2pNPOScleHlhEM8LeGH/u1EKDwK3zDGUF09PJVw0/+c0EE8pnGOnJHyRDy4ckk5hhRIPMhzBNZ6Nks8jHoO3NVhTTxtjZ0GGitNPEB40DagSU08+Hb/1sDQNzydTz3UCzFMPDobVYo3HkQ8nr8/DyATNzwfI1UnRKcXPJrR0Qvk+Ts8Ni3nhvsESTzS4Cuf7yhEPNoo4W7HmT48EJBqn6/hNDyO7uefL1MmPPrU/T0Ihk08XT0KCh4WRjyecmB/Bko+PETGKPgiIEQ8Gs7tCiK8RDxvQQ4KuB9APIhpXRKcBjc8ZaA8IZCbKzx423w70FMSPMiIO2OVVTQ88mQPU8PyMDysd3M9vftAPN48X9EYfkk8RY/gxACMQjxYw8Nw0TM3PEzQjK9CnyI8TyHkDTizUDwKgF8Sz5c+PE6MePIl2kw8fqceJvuyQjy+hxPIYTsoPMLBezOcTkI8vtwGQpQzSjwQK2r4MYFNPLC8ZtdnZ1A82WOYsjYOUjwCC8qNBbVTPCqy+2jUW1U8DPz/Dw8TKjzqm3P4so5KPOZLmGH0RkY8dgpTdHdyFDzsdRn2D45bPPAXUnCgpFc8cAk9tCQXOTyOcbpRzD40PFazb97nzC48kINqGTccJTyYp8qoDNcWPH5AAvZYres7/v8XQG+XYjy0Xl0esQxhPF7G1DSAUlk80ogWxv4sRjw5skpuLSY4PMgeJslD8k08GEvnZx8sWDxnw511jq9gPJC02h45FuI7obsSnWdxUzzOytF81LRHPEVJ2KrUnj48VIcTfnEvYTwEpvtPa2RVPL56oEfn00A8KBx6+Lz0aDxksgSx46diPNqy+fS/MGo8WPvBPKINUzxUymjw2idSPE6ZD6QTQlE8Smi2V0xcUDyKbroWCu1OPH8MCH57IU08dqpV5exVSzx6LjnH/1ZyPASTArHDDHk8S6oL3i0pgDw8euhdLtKDPKrHVhdZkIc8McpPuNqdVDxLzQiJdWd2PILNj/zpInM8dJst4Ly8bzzimzvHpTNpPGf1+KPBoHY8bw4qMthTgDwqpHoFB293POtWQk27bGw8\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1067\"},\"selection_policy\":{\"id\":\"1066\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1039\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1047\"},\"selection_policy\":{\"id\":\"1046\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1042\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"1044\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1041\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"623f6ab1-6669-48bd-8a74-4a43b48aef40\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"6b042113-ddf9-48c3-a77f-c00b2fcd4f47\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.175797Z",
     "iopub.status.busy": "2023-11-28T20:32:14.175265Z",
     "iopub.status.idle": "2023-11-28T20:32:14.370800Z",
     "shell.execute_reply": "2023-11-28T20:32:14.371235Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.377119Z",
     "iopub.status.busy": "2023-11-28T20:32:14.375925Z",
     "iopub.status.idle": "2023-11-28T20:32:14.379628Z",
     "shell.execute_reply": "2023-11-28T20:32:14.380063Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.393340Z",
     "iopub.status.busy": "2023-11-28T20:32:14.392215Z",
     "iopub.status.idle": "2023-11-28T20:32:14.396484Z",
     "shell.execute_reply": "2023-11-28T20:32:14.396994Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:14.401833Z",
     "iopub.status.busy": "2023-11-28T20:32:14.401358Z",
     "iopub.status.idle": "2023-11-28T20:32:26.521033Z",
     "shell.execute_reply": "2023-11-28T20:32:26.521440Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.3542845129966736,\n",
      "    'gravity': 5.029223108291626,\n",
      "    'metallicity': -0.35198339223861697,\n",
      "    'temperature': 821.5851338704427}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    5.029223   1.354285  -0.351983  821.585134\n",
      "std     0.185733   0.228299   0.077442   31.756938\n",
      "min     4.662761   1.015712  -0.452529  742.883789\n",
      "25%     4.896337   1.211851  -0.404744  803.930664\n",
      "50%     5.029743   1.310954  -0.367864  822.387787\n",
      "75%     5.125402   1.417342  -0.310573  847.643921\n",
      "max     5.379990   1.987007  -0.131000  872.035889\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"0f4df624-8d0f-40d1-bb6e-b3d7240512ec\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"9915a4ce-d070-4ddc-8bcc-daa6f43df96c\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"l+uhPp5sMT6vxEtZH5o/PnGQQ5rRWTk+v36TtkTsST5fhA8pN8tFPrjJ7XiOm0c+swnaMbC5ST7I/NrYX39OPiixqU1wD1M+wUKh6zwHWz58X2VgTy1jPurPLWQXCWk+XJQNKbDVbz7Dle2arCpzPt28xXG3I3g+4AbYpl7EfD5oaf8zclF/PmBCKIYv2YE+RZQJKL+Ogz6W2Jc0kEuDPpWwNubGbXg+cZQf4CZCZj4UgnTPHzROPk4fjWCtlVQ+YvkcQDX1UD6i/wBVTAxDPuG6DbmSyj0+pOwa9kuRTz77CuHkt7diPp+/Bawj+XA+rVyFzwnbej4vcg2fP5KCPoblCvVM7og+0uSLx/d9jz4tnTG3EpCTPtbyvjg0vJQ+RiQhtCbHkT6mF04ZEoWLPlcM4Gp8IIQ+Lk7+03EVdz7nMhKT6UFOPkbIVKiPoBU+kQxWYNeaLT47m/Rblt1BPvZRtxK5/Ek+bN7wKJRLTT46XpYkks9CPiDbpOIjsTg+HfJ6mOjZND7K8P32YYRZPvk2hdAxOFs+BYgmV0UIXD7N6TxIU/xmPrODdKMuyXA+CF/WxZ3CfT71Z+JkJaeFPvdFwZd6xIw+Ix3zqtCxjT5XgoL+3uOFPhh1Juajkmo+Dh/w8jwMYD765xQxmmdiPjzjGAoxRV8+Jw2AaqQrXz7NrLBDdJJXPntFeEIBSmE+0x4KC2BTYT7/6koTMMNXPu2Iu/C1yVU+KS+owR9hUD7G+FvdJeI8PlBiGw2eHEg+oPjutTz8Vj6ClKwF4ZVbPt8tWg/21Vo+uAA1hg9XXT5n5aFgHGRTPqgNzQQqrUg+cgMhpWP7Uz6xcvgu525aPlZvSGQ/IWo+QQpfuscQcD4sya0of6d0PsuvZwqTOHs+8WM+n4T/fT5vXHCufYV8PpXOJTDUCHk+AwI5s9nucj6CMvEjoO5pPr8xMcZOPmM+SMDbhorSSz7sXs4LyS1MPiX4aFCReEE+Cnt9oB8TQz6l8Vc0IRFIPry0J4gjI0s+1mRzIA8mND5LXGpIlUpQPlKvQ1SGfEY+dYSw6gVEWz6YykU6OBxQPjnJMw8Pl1M+RcuK7CFoYj6bVb3ToKRmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1362\"},\"selection_policy\":{\"id\":\"1361\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1390\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gLXZ4VjkPz5F7/QVZzhHPgszTp62YDM+HC53XqxgSj5riEptyL9DPpqj5t5rdFM+VA83jGdpSD7RZrLcFfRFPlO2n8noMlM+AiJX9wAsWz79l1q2zL1hPuoQr8VBB2s+wEtSARHrbz6wzvHinRNzPhPvoDdTI3g+0wrxDe+tfD4fIQ4SaSJ/Ph4FxmcVvYE+pd3BSYafgz5DI0GWUuuCPjQDFmajbng+eudAtYjoZj64LzR9iHBRPlLGg7jcdlM+Wjxgt5pKUD5KZLaqeMpGPhx9i9WhzUY+SaFcF552UT6o6wD1H1diPvWPnAi5AHE+Af8U6vA5ej7qE9XiwmKCPu4Qfz5GPok+AmgAoA5wjz5/I/n+kLGTPiPV5Fed7pQ+BuRWMTcvkj6REtBPyqqLPtk9oiZmJ4Q+y9BCgMJhdj42nIV5SKxPPl9QDU1CFCg+kCGRE0IcLz4jnY73YZgpPmYv/7doADs+3/KeHq3kMz4KiH57vpc4PgSY8N3gC0I+DK0EvCyNOT65RS5btWJUPnHzStZHP1g+cU1CkJp0XD60sYjHdY1mPnfi3ydXcHI+BDnwt0i/fT5y3/W0d1+FPnMEizDv0Yw+qRYfGtVBjj6/yiLTX2KGPsjpSxD492s+7vWKI+q6Xz78Y75jC+pjPk2pfcdkB2A+7CjYnxChVj4mKdkyQcdUPs9QA2koM18+3Wsqqe4cYj6i9qpbmddVPkdpqVsNKFc+nLwVCzlMVj5pKtX45SxLPtopV3DTVjc+HavdhxlaVj56ocL7LfdaPk874F95flk+p5ghbOrbVz7VseXHYlhQPnoMKd91RUk+8tZJlXMeVD5X0vJTRV1UPoaw2ykkyWc+oyDKOPr/bD6oXVwqkod0Pu86TGcdPno+K862N5kffj671MrAqOt9PtZR6mwrZXk+RyO0Zq5Hcz5aSuGwV4lsPlPuaY1iqmM+KkMSyFvkTD5QY2+4gqVFPopYylHnLkU+x0NqAXBROD4W4xXgK99JPnmEPmla00E+JUqojuMkRT6GP+eUx8lRPrrJ2BGF7U0+4PQ89s5yRD4Q/aF0HF5RPnTGYHi6Cl8+yDfZrnwLZj6gDkUNZb9kPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1370\"},\"selection_policy\":{\"id\":\"1369\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"P02FYaqbQj5vpELkkuM2Psck/SeqfzY+UuIrx7mERj4bKrQ5vatDPvzN/HBf3Us+joFch3tVTz7pmRCW2xVIPubDL3IRaVU+xhoWPn08WT7Ftkgp5iRiPjqHqGtDCms+xL+TjbrQbz4Re5ExFp1yPtEYpG37znc+blUxaOyFfD61G54zbFB/PuGBQWhHFII++kWy3jWWgz6J9eydFVCDPn1hX6dmGXg+ajvUtNxbZj7c6DYfaFtTPrBzwEFr01I+IFfM2HspSD7PzyKXZzpKPoZUzcnvWkc+zcUb9MqSUD4OFTBJFwZiPuKkbp8f83A+v3OdQHGceT5RlJ+0a++CPjON0kEdUIk+QtimP57cjz7rylKR1MuTPnkdvF305JQ++5ntYSiukT4EDwbRW+2LPr+HSfHpsYQ+LLPCbneRdz7b/EY4D7FOPpRTie2Y/CU+Eez2iYZ4Oj5sd089R6I9PpdcplY/+kI+CM8lo+UkNz5DQj/izwwwPtEzPZozsTw+9gAIQx7sPD4TLoqdachVPige1hRPTFo+p6tU9jvLXD4OVB6VTIFoPvTtrkhVQHI+LfkM6rOJfj5NQbZPxbyFPqyQ/VVXtow+IaepAWm1jj5Wzm3+PvaFPv7LJyuHbGs+zu996fORYD53UBesibBjPmYdGZxl9Vw+PKyigp4eWD7snzfhTXtYPoFCd7xKSV4+HvG1DxSwYz4vBVmPkp5bPl1K4JzfkFQ+n4yEGfbCUD7uqDU7ij1LPis6YnRzwEY+mvmL0Yf0TT6eD2REnnRYPg2MFgPlLVc+E7WjufIrXT6hik85xyJRPpChpR60iUw+tmQ6f27DVD5SXQjXurtZPknnw5LEd2c+8d+stJlHbT66hZt5N7ZyPhKKes/DLXs+ByB+eCdrfj6x1MhQhHJ8PpsfA86REXo+XuDCM9Jdcz6UouWCiLNoPnN3bSeZNGc+ZoUa8CzRUT6dP/9xFuA7PprURBZ43UI+EAHgmfj9UT4GImqu1PlLPh714IR1wUA+4yGlHhtnST5JIR5Ep2Q8Pkhi3FAjPEU+xBy802o6Uj5G8mmHNw1ZPk8Qg4Hr3Wo+7NaIimbRYT6VcD4Wp2phPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1378\"},\"selection_policy\":{\"id\":\"1377\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uOq8nKm/Oz6Vy0J/ty0+PhkIdAHv7jk+ujIsPAMgST6MwFUAixRDPvmpGR0QfUw+CHPlPVlpQT7vDV6F469GPhbU9joqylQ+6yxdwGT6WT6/egMz3WliPuIQ6aLPz2k+Knz+bboabz44PtcQrHByPn+ZI2oWOHg+HL3isJaGfD5dgZJHVOB+PqOl5Cxw1IE+l5tQfpylgz7ZRlJXbGaDPneAhdiQkXg+TarAeVEcZj5JHwUu7RNPPtZfSouA6lE+D5ZjGc2VTz7mX3/1GmRBPt8X5LxdvkM+BAX0puWTUT5haJYx3VhiPkUNUXm8o3A+FW+Jcsurej6gmRXjW6WCPvJqIwDg+Yg+8DI63W2vjz5HnWleIqGTPvpIzkT94pQ+XiacYojrkT4jByCUxs+LPnCfE1J664Q+ETuGBMtKdz5aQ6jZSfBRPsn6RHxNJDM+MaPSKdVCPD6Dgt0Rqsk7Po6ZSPkSdzc+dgE+2S1oQj7qQBUdRDJBPj78YRiuETw+8lQLkYrjQz4vqMJiX6RYPuVNl+f4910+kIZYGh+PXj7lcuQ9Lu1pPisPVzT/sHI+PdUnTkEwfj5ObohH5aCFPtxjRZgMM4w+9HMMJyn6jT7340Xerg2GPkMhGrF7Dm0+6yaWuKYsXj7Rlw+9cj1lPr2w//Dncl0+5EAI9+0KWz5In/tJW0pZPga/WpxEtWA+HFYCV/y3Xj6dp2LiAUhXPp7eW9iWlVQ+aRzGMR+lVj5Tq78RoH1NPudmc2yMwUY+JrrO4A56TD4/k7F/QxRMPhv3PeuPZUo+1oA6zD2jVz7RocNDHS1UPjNXuyffvUU+6bel0wQYUz4HfwTZGRFWPqC1YxEtfWI+DRlcMhONbj5aeYbuUXR0PtO18CXTa3s+evlGscoqfz5EjF0l5VR8Phhc7PVOQHg+lLph8niEcz4iAI4nWdBqPmceMAYhyWQ+Ww55DOZZUT41Ii0BF7VEPhgPu3J3PEE+0Dp1Uyj5ST78V2cs9utFPrr48LhLKVE+FDn5VtscUT7abss6Dp9PPl39F86k8lE+TL0Sv6rUUD4o+1CSVdxXPhe7XYA+ZFs+oCRPIOB9YT5INk2Z1bFaPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1336\"},\"selection_policy\":{\"id\":\"1335\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"vJk1B7GdMj7DTnqMA0hFPn8tu5FWgjo+iTLStoZ5Rj4VA+EAzZBCPuTDAaJvdks+CrfhvxeMTz6wMC8SttJIPuhIUQuJyVQ+p7vUmDqeWj4kQ5D2GnVjPop3BhnlKWk+Nw7DAto1cD61f/t0BMNyPg+HjQpR4nc+qMy5nXrhez4gei/t5VN/Pnot+OEFx4E+3MAz3cCygz4LimCF5bWDPuW6Y4GdNHk+GEMPciF1Zj7TOVng0MtQPoczcvYig1M+wJ/wxKTUUD7mOj9EvyhHPsy/WWHDy0Y+8gzco86IUT7cQsbPgeNhPlbvxeEutHA+bpv35IzZeT44lGQhD1OCPlEvfQQ++4g+a/VETVKljz6E/8vRj3iTPujW79lghpQ+70HPo46NkT6GfZrAXvqLPvU5B8f5joQ++UkB+IJFdz4iljBRY8lQPpfH3hwf3TA+4NrQMURQIj65jyaDjp8vPlO2yhdxHEc+s8X3OTokRD7UA+PKzbA5PpelYv1xekE+3JWAeEA9Rj6F12zAA8tWPk9ZvAOpy1w+irUE4A+NWz4EvN0bsxNmPs3jTFCrFXI+Z3e/L++Afj4NloPD/1OFPoDy0aCUIow+eqZpuuIKjj6Dtb0/4NyFPtoy/TNdEG0+cfIWU5PtYD6tjG052WFjPsAzwHGueF4+JNVadkRaWz6tfbQ/8cNTPlmG9rf/xF8+Uqzq6TS+Xj6hmAVGuvpWPrIC2UaOIlU+o6K/if/RVD5sEvkIgOtVPm42RmsxqkY+ofME84rlSj4HFp/yXCRPPlbAKzxYGUw+RSQIpgj/WT4da2j/bKhXPlzyjClD/0s+MqKophR2Uz4W5VM6qRxePkAgy8ac4Wk+G8rbc3PRbT4noY4RpVJ0PmYIuoRIvnk+u6jJoAsDfz74UNNvXrl9Pnu1KvbjJ3k+JeAmll4lcz6nEYhy9QRtPrHV2CdM4mQ+4sb+tVYUUj6TEtjpUc9APtcJgEdBsUQ+wFPm3pxzSj6yqjqUKp9EPis33OXSMUM+QgOYMUgtTT6835CKRdFSPtmS6PFX6Ew+DbH7Z2IrWT6cQz0g2PJLPrhcVWSxo1E+MqtLJR81Yz7hNgsAWzxjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1332\"},\"selection_policy\":{\"id\":\"1331\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1326\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1324\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wJ9HHgZPQT63Bn4OgxZGProeu5KZpyk+x42xo3gHQj5iF8bs1YRFPvlqlE9sKkk+JDzuMYMZRD52M+LxFcVFPsDuBBIhG1M+cL5tINh2Wj42jhbsXgRjPmYTW22tYGk+00SXbfcUcD4FgAPNA7NyPoznTVHsknc+DlD7lz5yez7/D6ahyth+PsJa2v6a/YE+a+lpFJmLgz67fFlCKN+DPseCX6n3H3k+0Ibw7SSiZT48I3c7jM9QPqM4UYT+cFA+hSrcHuouUj7LLG0tCw5GPoBIjQ9Sd0M+NEayeq/tUT7x7cCSxHZhPu5b5WLw4XA+Kv9ns/NDej6HsSOCowKDPkcQF8aZEok+msqLfe/ejz6luLT8AduTPr1Kh1eLNpQ+SqgG3u0fkj7+K1YRnyaMPmXJ5sUSpoQ+e5O87mFmdj5OCt2Ut95RPsny9EgRVDI+t/Fgl3iRQj4fPVoJzswwPtc5Y98r7kI+mJwyV86MTD4yuB3jyVFFPqKEeY4ajyU+ImYnyiX5Pz5XHHnsUidaPoql9q6MfFg+0Hw0JuSNXT4gHcQL4LtnPjvXYR2y73E+2IzGllJzfj4nW5/MbSGGPojzJClXfYw+6Fcu0xB5jj4kIHk8lhuFPlMw7x/bjm0+TIND+qa7YT6AvwdhG15kPr3E33BK31w+W1wMuIWyVT4IRzhUU7xcPkG5Nf/tSl8+iiMdRraUYT6mYXnRN1hdPmvxRa4byFY+sHglxO/3Vj5TwxJiG70jPnt7muQY2EQ+5sOQAPGLSz4KmQ4002pRPgNdt9T5mFE+L6j/BG9QWT66Ff0KUcJXPmZCszeiIUg+zVz1OWJBUz6DmSOW/aJbPqyGjmGvMWg+XpRYoUFBaz6i/Ntt5nBzPko26X/Ok3k+AGDcwpgJfz44MWDfh0J9PpKsu/r4N3k+kmr2gubwcj55iZG60mloPpULD5r7rGQ+NGelkF/7UD6y0+eJY55NPsy2h4BZwkQ+w30KapF2Rj5i5fKgMQ1EPjAwO6iOekg+URMO8em8Sz5xY92vscdAPlJuNc3oW1Y+N9kze0dsVz6Ch2MX17xYPoeAqZxYD1U+/PkWpwskXD6rIasLgddpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1372\"},\"selection_policy\":{\"id\":\"1371\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QMgqoVNwNj5+8Lg11CFBPqKVk/CwJjo+UfLL7/SLSz5t/xPGD7U/PiobGLd5eE4+zuNT9T1WSD5Pp0jFsoFHPrwi0BwtK1M+Y7Vc/IS2Vj7RF+7tlExiPk4BLuX8Y2k+HoO7eTw2cD7+ueBJEvpyPtum5XTW0ng+kIDzrJO2ez4hCyH9NDZ/PuXEwycaBoI+w0Vfu6+9gz5xWI5ZacCDPmc8h+oUkHg+s4BWvQKCZj7w0a1Ozf9QPk96+wEfw1A+b+1XNVM1Tz4ExvRKYs9IPrjQgZBXP0k+iwVa2yWGUz6/IMPNOR1jPj+fa2tvfnA+L8vlJ9HPej79yVzB9Z+CPt4PbCgqaYk+Lspbjr6ijz5bZH8gULSTPpBWduS3xpQ+YSOEpVXkkT76paFWyDGLPrm+kQ7prYQ+TGAKsCtBdz47ffR/1oZQPolPjpJAoCg+25x5DiPaPT6rK/5rGmI+PouiECPzBj0+nHQd9A+lST5RpuFyFH8oPge3UjbXQjs+q1LZH0/vQD7hJsa56+lYPnbsL1V2HVw+2Wlw0oQUXT6JNqCRIHVmPuI88JMYA3I+Gmu200MvgD6jdZF4Pv+FPigHonukZYw+9z2NtMhrjj7ZkfQeKQ2GPltfQF9dS28+vKfuQTEhYD6XFOmPzb1iPskTTv/E4lU+XiVBmT8IWj4LzMlaABxaPtIudoZv1lo+jyI8ZU96YD6/Tr4qHR1WPhVB8tVCNlc+hwFEmBJ4Tj7+tsJBivBGPnP57FGBbEM+8L+Kp/bvVj6gQpVr0EhZPuhrbCpApUo+VHSBFeo0Wz7vKKL/vuhXPnSdXZEQUDo+jCgM2DeaTD6kVRhYru5aPuoZz54r32k+5E5qx4d1bz5xodNacPdzPv2CWeQWBXo+HkHpCSRpfT5OCf3pKh9+PmaM0XgdUXo+wEvU+cv9cz5vsuXlTm5rPhCRHcSv6WI+U2drDbk8Tz4gF8R9MYhKPtIfpT4P6kQ+qpw/6Al8QT774dLngPtFPvX8csThTEs+ZoqmX07KST6UF9vuCsFJPiqEOLmGHFE+dQcmRDS9Vj5eTPlpoRVVPpfw4v9OL2I+QrHjloxqWj7CDf9Hs09qPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1368\"},\"selection_policy\":{\"id\":\"1367\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"agxlYxq7Kz5nJ8HcqbRCPuXHAU58NjU+SNMAHOmdQT4LP6cQjq1FPs3S3DL10Eo+R01NR3/QSD6HEYOgm7NNPhUBTUEiylY+EPZ4oWL9WD6qipFnVZtjPtnXf+svd2k+qmmkfQ/jbj5ftO4tKShyPvWe29RbE3g+OhEab8GCez6xXUwe8eN+PrNDfvWTCII+PRXPOt0wgz5wJq8OWqWDPhGYDubGgXg+3XVY5WHaZz6rnUFiR+NPPq/s2XDEcVY+a59lL6cBUT4sSRuz/ktGPsSvGTv1E0M+iswxy8oZUD6HcMpFTfBiPo5ubpSEMHE+GYFThKYaez7T9aqBMHyCPv45/GKtIIk+Wm2wm5/zjz5eneLp97uTPox6lRpWn5Q+IvIzNIz5kT61t/A6Ch2MPsBeB0FxH4U+/j7j6dpedj42xWRp2E1OPikV7bnOEiM+LAgW6JMnMT6gqCeUIFQ4Pk/aWy1JskA+7c6lXI28PD6UdQCj09ZBPi6C9VxWlDw+Q86JacTARD6P13K067JWPhNwDNcK61g+mfgfA/qIWz4x0NGX8zpnPuu5tSlxjXI+NbMat/zOfj6v5YR0Z2eFPs1OKQg1DYw+k7+xSpnCjT5A6bB1pdGFPuiLlKWw+Gw+/V7Va9uJXz6ozjEJspFjPnbp0ti3Jl4+bsBKnu37WT6FapSUNYlcPoxZ0UP0Mls+7ZfHxbWaYT693/2ATuRWPkXeKAHVNlM+4/Exrjm2Uj5M71v5TJVCPsHUyJUtWkw+Wetlnsc4Uz41hP4P4F5TPhlbXAouj0Y+q0hhry6hVj6QE5uu3idRPnOxmoc8B0k+gb/pW4utSz60uq7+rzdaPi8LQMt/nGU+9PjgyYx/bT5FpGG+38JyPrgHZxxFx3k+ajO9OJ5TfT6zn9XrzxZ9PjVqmh5q33k+wahA7geEcz4L1EIsw6JqPksM2idt8GM+I2zlKM0aUD7bvKKm8mtKPtxfMUMtvkU+YqELNLHzRz64yQfz7FVPPsjpeRXXTDc+5T3v2ijNUD4MXy7WFg5APtZ07iHB60w+t6P9sj60VT4/F/TH9XZLPpRnKfL6JF0++SYPONo4Yj4IeN2GXLppPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1380\"},\"selection_policy\":{\"id\":\"1379\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LhHi4KhpOz5Q9vrj9dVDPg/UCmbLajs+En6fdWypRj5WmhqcCC4oPqBsOBkYak0+Xm1U3RqOSz77dqCqemZHPm+cp5t4rFI+OmdGvjgZWj7fkYBZoIxiPoJu7b/ljmo+qvXxiNRocD6nX6424W9zPshZ5IH+6nc+S5MQ0RsVfD5bxG2SiSp/PmT+WnqNA4I+rGjM4Ye7gz4DaDyEZZSDPnifyKf9SXg+ZlYBVRsSZj5fsXFEiHdRPiCiVqAca1M+Jrs4j08wST6SeonLeeZBPgR2IVhSUkA+2sFV16tRUD7ac/JB3JNhPrnlr1cM/HA+09arVQPGej7UB4UMK4CCPnBPE32WBIk+le2N6fe5jz5yBBLah6+TPu+6eJhEmZQ+q6GCP/bdkT4GoMDNX8iLPqe1lt0+7IQ+haJEG2xrdz4Zgwi8vQlMPuPsKiTbfCg+aAF30s3gOT7uchrRCXI0PgnzH7wFljI+/S2uqksJOj64vKCXV7lAPj1BPla+/z8+BCxWVu01RT4xq7RJJnZVPpi8gPu5+lc+dQzXz6SgWj5OjPJ1X+NlPkurneA7n3E+08cB62fbfT6egFfD5I+FPgkATLLhVow+CTYICg7tjT7xePax+0qGPvrjOKNRfWw+s34Bzf8EYD76CDgVtHZiPtEHblxfq2E+8aLrWcUDWj6Ju+nFHAZXPoWspVS1fV4+1q6qdvbsYj6gEgZnLdVXPsQBfOQ3elc+qt/2N+osVj7vgim6Hl5EPoxR8aXWakU+FGNLYll9Wj6tSk4jzgdUPgCmfPBa2FY+KN/VM2chYD4pFxDGbIJVPtuPZx9n+kc+T3nJukQXUT66/YKERY1YPhJCK6kwmWo+F0vvOW9GbT5sxvMQ/yd1PmuRIbov0no+Askvb8RdfT5uBVuKFnp9Pg3h4H6+F3o+is9jb1yBcj7yHWSRmJZrPqW0d6nsimg+MBOw8APvSj5Ou6IPiD9KPjg6/8XE0EI+FdMMLvT7Rj4ZaYc5dDIzPsq4fEnADlE+lMoidoDdST5uqKNRuX5GPvtzWWH4mFM+ovgGhfUxUT6bm+pcl29CPs5saF1Z818+WBcsrRFDZD50GqeASrhuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1366\"},\"selection_policy\":{\"id\":\"1365\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MneWZCgdQz4BbK2QAupIPu2mZXjxJS8+RGRNCmXFRj5dgkTg1dNEPop/Ty/IZFA+K/PXZW0fUD6shg41HytLPnHL7EbN3lM+nj0FuM1TXD55TNnwJP1jPoiz4Z+lkWk+CP5T5Emebz4+grBrUFRyPpwuzOi5NXk+DBm6KllifD58iL+25XJ/PjdysF8+3YE+nKkyNt92gz4v9JyKp4CDPtG67/FegHk+toX6gwR1Zj6NL5RNTCdQPs3JHPbvbFI+haOr+1YLTj5hCAC7MqFLPjiQbYVy4T4+wJEROTtvUD4GqNB1EyJjPoeRi/ElwHA+4kB6LCTgej5vPIC4XaWCPkJ4ItCK+4g+oTkf1vzWjz5VEuOqP82TPuEbJoLexJQ+EQ/I5UjxkT7MD8OOZNuLPsmQBo/HaIQ+DAJmWrXsdj5KnU8fKmpPPkjDvDveFDI+OBtRwMY1QT4rEoLDzh47PndZx+vHCU8+oiyeD22mRz5srLXMEMM6PnmeDChS0i4+Xcyb2yb+ST6tPe8yKyhdPniq1hbH/lw+9UEZbjlgYD7x0Xki3BxnPn+ZJzWtd3I+oQ29MItXfz6E0wqjl5qFPgSBgUsI/Iw+6YI2trBUjT4+EhDpXAyGPiY2jz62XW4+pSneoZ6KYj4DzW+sA3ljPkKClf/bHmA+q2UdLNwiWj4+6Ze70MRUPtaNDB6ISlw+j6YA2m9lYj5PqRALCCFbPop00El6ZFk+cG5PVgEbUD7bzkqI2xNQPn5+VLQXek0+mAlX9qpERz5CTgRYdrRbPpIUbXoHNls+RnxKYO99Yz5oehQMrDZTPj0KqnCP5EU+aut6Z+c5Uj4ayUuFK79XPvXyE6eECGc+5XeQsRn+bD6AaKJoBUZzPrb7cUelfHk+XzA8Ey1SfT5XFoR0bQ59PperTa2Krnk+7k+5v2rscT408h9fPfJpPkk+z5NhvGU+7xm/giVdUj79Wfu6P1tBPmIdOCapD0U+D5zLIYmrRD5I0c4Cjxg9PmCgmOQTD0U+BrEb0Rt8Qz5NnAFux5xLPhOD+U3EXVI+GMGBfYVURz7f1JEtFhJaPo+etQZof1c+6oktjop2YD5wBJ0m9K5nPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1334\"},\"selection_policy\":{\"id\":\"1333\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Wmt7xDYqPj4uz9Ki6+BDPuAgemOtzDw+pyxQsIMETj6Ivc+NC4REPmtWDRrA3kI+vM10bGYFST5MmZqz3HNLPstmMxQmRFI+GdnJHC9WWT7mpI9rLFZjPmve7HcJ92g+TVQJuIn+bj4caL7XTGByPvjCnl3GI3g+fFM6LiJOfD7WdQyIoMd+PmbJIAZQ/YE+YOjeCDV1gz5xwz/fG4KDPj5ZjZU+6ng+syX5A8T2ZT6L3wRyORJQPouCxysAclI+i+CEGgSaVD5CmM9vZThGPkwfIdLYTUc+9nUp96RyUT7/w7MCdaFiPtAHgZmbgXA+/t4NvO4Iez7mNlz228aCPsLa16/z/Yg+jcJc4jL+jz5/Aww4C6aTPgxKr/X0rZQ+sMJqcVP0kT7O8ZNaeQaMPi5XOzwExYQ+oLSuXpYFdz6IZrIdfqFMPlsbw3xA3R0+U4JbLLt1Mj5+HEhMVR4qPtm0hBqVezs+GjqWGA8HSj57CCpAbOQuPv4Jq6oraTU+Y1jHCPBrQT4089kqia5ZPvwTvwB4fV4+sgs8QopLWj55Mbp5i3pnPmUby9jthnI+zs+7oxYifz6aOSVPguCFPoys5RgRXow+KwYMXRXqjj40gKtk5B6GPudnp9BJ/2w+UuvRlBCfYD43SaeF39ZfPk1QY5Q9x2A+iz3Iaym7WD6vqXhgbkhXPmUIqkuNSWI+uLsKPR5CYT5lEiIAk/dZPnk7JUX5c1Q+n4DTaPKBVD4mqGxG7fszPsXp0CLEK0I+9HuhKE5RUD5JikTzmkNHPndaxm5g21M+WtY4c0RcXj6/Hxt8KwJVPubciHsIgUI+oP36tBKKUD6K8Ni5/eFaPnA8cfJ2AWY+XqvbK28obj4x7NFSYip0PgZMKCRkJng+vBNbF1dafz4GJVuknYp9PmKOXbCGAnk+jkupTVr5cj5f0KLyo5JqPrjH4SQAAmg+EHJ+HRGIUz73kTY87ChKPrpeOhwEz0U+uXg857UvST7mi56POKtKPj0eCW/qukc+7t4A78M+SD4TmTGQZ5dKPjpVbcXs2Eg+9fqcVTlDVD7jFZ2ShtZVPtKlqnQfqGc+pVKwf/91Xj7gGWoCf0FnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1388\"},\"selection_policy\":{\"id\":\"1387\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"mP0VmYXkPz6c7CLHmClFPtwXtBFRgTg+jkYBUE9lRz5uZjHLONI3PqOFroHnvkg+LiazDuviSj5+opTCBnxGPu9DeTfvPVI+C+aox+NCXT4CrF3/fxxjPhz8XaEL/2k+evlRUlPVbj4BF0vm+CdyPsijWVfQLXg+/iC7XH42fD6jlWurvbZ+PqHhR14dpoE+KeMIQzqJgz64ECRDK36DPnV+Kv/8gXg+OWbfQO7+ZT7URdixw8lQPnh7PZrUfFI+3lzZB98mUj7PdUG1C5NLPs/UAclVNUo+IyeqIOTZUT7nezs/fK9iPm1jLk3JfXA+/fJFliJQej5tSCBtEoqCPhYtmAXrhIk+PFtwzg3Ejz665UzyJauTPuAv1igdv5Q+smHcPm2zkT5d2VuYuxyMPhy6Oe3r0oQ+AHniez/Zdj59lnCIvrVOPin+Y24JdCg+Do23lWbFPz7doYWJvdA5Pugh9nk+lD4+aE1YPL2rSj6ZLBlzgAE+PvXuYrh/iDo+Sn8Xl32fLj7M1jPbSFdcPlE9nau0vls+SRQvC9JUXT7FZ6XKKjJnPkYfXWwFknI+UgdgGKvUfz5Z2KjqjiSGPhCrM4mX3Ys+Vnrgw7OSjj4X2Ggv9ACGPsCf996Z9G0+MtyddES0Yj4XPbF75EthPgU4moOL7l0+XWCe5dn8VD6q7RdniRZZPhuWNeDm+WA+trhH5PchYD7Y1f6HeYJXPkMZnn7181Q+CtcbVvnTWD7A0y7z0v1JPs/xvt5F3lM+sN1gwJMPRT6wzVmp/p1DPr03iL6hXVI+8z7OR8CPWz6eRh1MFBdWPrbTz8eE/Uk+cdfHTqv/UD78as6u0XtaPuGhEp1U/GI+pwEyWvo6cT68q/S92qN1Pgh8wMadkHs+PXGzS5nKfj5IlTTRXFp+Prz64xcI83g+gngh75xKdD4LN5uDhQ5rPlGUmoonUWQ+vdm8pSmdTT7JQl6T0XtBPt56g7UhlzI+ENfEE8kqRD7gsVehGxxEPj5ko4vtNkg+vpGYDuk+ST70jLL0Ok5PPlKygl7wCkc+m8gj4d5ZTD5BozVgVqpVPmqgNE8JP1I+mfQ4Gg7LaT52hM9JyWtnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1356\"},\"selection_policy\":{\"id\":\"1355\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"imOofIs7Oj5rpoJkPcZGPnM/uvgo5j0+nD9mNoM4RT6MnkU2w9I5Pooe/YwhRU0+lMbek95zSD6uemQoYAhGPvbh2k1pV1U+nzFOd+kvWj7haXb3GbRgPu1Z3iUSq2g+7E1HFs00cD7LCn3rEEpyPigy4DhEqHc+B1eJ+Ep6fD44wlRLV1p/PtBwmYYJ34E+m99yjzlpgz4iIyMAOFWEPiih1eKnZng+icY+nbnRZT44cI56DaxSPjWH8JQEQFA+7Ez5HY2fTD63RYwjTbJEPk9T2naLIUs+ExZGIhgkUD5rL9Tw2etiPvAkrzgY83A+tKSntKpRez7kJKniCPyCPr/9gXDAQ4k+DRRXY4O3jz5/5as4xn2TPjB0Ty458ZQ+yB3xHYH/kT7eF/zL0OaLPhXCG/dzZYQ+M+Vm6NJCdj7+DbwmzdZQPuZ4lqV32CU+StooTDAHOD6G7cKUdUc/PjjhrXOUNjY+UyrYOK1VTz4OAy7u6iUyPthZ3KOTrUA+M+dac+z2Mj6uikw6c+JVPmYUJR1vOVc+oHlZ+n83Wz6Vu43yD2ZrPk+SjgPV1XE+Qaif34jffz6hs2oIF2CGPjGjzFfGtIw+M8T4MQWYjj4lVQgSxr+FPjkTlWLd024+JPxOWVooYT5xrhXVnsZhPljxzF7WUl0+rnHHGB7yVD4lzXVH6NxUPg9/Fw1IImA+PAlA1qtHYT77R0sysSFYPjvv84Gvx1M+PG9618AJVD72aFCAJkVDPuE3/EWgvEM+t0qDrL6mRz7FFpfBiZVSPtP7w0DIDVk+bKO8U9miVj5NSokN3ZNZPvapdA5XHkE+RDsdv1V3VD5Q7gffjIVaPnSRQEAYyWg+uzhnKQEraz49r1w46P5yPmo8hfG3GHk+wBcMfyStfT5iF9vjAsd8PlgY8XmG7Xg+VFwGfgUTdD4wGAbBXslrPutsX8v132U+36MHx+rjUz7QeXgDIJpDPv8YaSL/L0Q+6nwbA70NUj61sBBxkEJFPrRjDs74yFE+2SUZ/M7tUD6bI7t6nalAPgjRgUNOgEo+NW6WDN49VD6Xhr9nNK5RPoqnduhVGl4+6ZFxjrbBVz6B6JWqN9N0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1348\"},\"selection_policy\":{\"id\":\"1347\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"AVTOg5aVMz6Ge7LbbIFCPmcTXAW9rDQ+TbBdCnjbRz5h+dISHHxAPtN2udoZ5EY+3qeLSKfqTz5bCIUWkxlKPs5QHt+uxVU+9Gr85Zd3Wz5457xy8KRjPiQ6NI6jaWo+12iWKs0vbj4dNgT57LhyPmcskxodKng+3tnRXunuez5wgZ0r1cJ+Ptv5h3MyuIE+Ie2nnUJegz4r6aQD7FqDPrbxdwg/CHg+1ZPxnhKQZD7GtgYQBS5SPsXgZxlRN1I+Bh/TEW71ST40EMj7N7VDPgIGFpTeTUQ+VnrMnjUhTz4l2oYnIwFjPn49xsZxeXA+jyyrvmTaeT4lwBqBgnOCPsze/HtyCIk+Rp0otLa9jz7t1+Adg72TPgl59sw9opQ+bfNNbkvNkT7EguJ5Co+LPnZW8BUNeIQ+0DJT7d24dj7hHZCzGtJQPgTgjmm/7CU+Y8Q6PjO6Nz7KqoA1SJw4PiU4HVQS2z8+HsM2moQsPz53JyunwogwPmZ53VMXdDY+RXJ/MovqNj4pUy8oU9hWPqiynZ89wF4+e+6bX1S/Xj6tZMl8XCNnPg4pgKSDlnE+KxMdKdM8fz761BfufXyFPlDEpmC6oow+Z5i+1mkjjz4MKeMWvteFPu9lpEXxtG0+KreWoVt+YD4P8VtV5mZkPg5dt0TATF0+6aGG9a59Vj7kwbedy2xSPtmgkEyjHV8+Qy2bCzH4Xj5x6RvkfJpYPnDo1adFY1U+IhZmLfMvUz530EsUvgVOPgPpVQ0nkj8+yrEPYj5cVj4wdi+sw9xUPt5ReLhMbVM+dcTwj02GUz4J0qTgiOlUPqtdFZZykkQ+G/MZDmnjUz7mfClyPOtdPpVqAN9ef2g+R9XpdMopaj5hhPYbEWpzPp/+hNcJBns+s/4pilYmfj5CuVX4Tax9PuvjYuYiIHk+Nzjvt1jScj7oiQRcXmxqPtZsOk8hLmI+OKtpOyqjTz5QWj0J+NJNPq6M7K1mpCo+5syNTr0hUz5oP1mVB6xDPuwkgVP74Us+aoW8wWKOQD5mUPXRnMtLPptV3AFpaFA+t+LlJ6n4UD46Ff35mOBQPt8V19pKKFY+ZVLYybVdZz7D88AKufpxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1340\"},\"selection_policy\":{\"id\":\"1339\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1326\"},\"major_label_policy\":{\"id\":\"1324\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"NWOWXwAFOz4XesP1GvlDPu+4kS/Qm0A+4ut/HIf7Qz7ZtjE7LYRAPumIn3eSaUk+aAKTtJITRz41OwS8NutNPgMGf/Q2a1Y+wLccWFOyWj45jrmW705kPj0s1Aa6TWo+078vwVibbj4hGFIvDWZyPo0icuNC8Hc+PNsxPNL5ez7aCtElac9/Pp8QZR/qJ4I+VvlSrn16gz6QM/1ddZqDPnROCorL+Hg+OqAIRCrnZj7xf15wYRVRPheYhgc7xVM+7eDy5Ak5TT7xWu68/Z1JPqskycF7wkk+Z/LbxJyZUT5r2l9ESj1jPqhYgg/QsHA+kf1RYgFDej7FF+hz8CaCPvXsB+z23Yg+jFdbliCXjz5w86uMmbWTPpNerhFsu5Q+eOlTDtOSkT5msN1yH56LPoTe2ZqFNYQ+aUcbQZU9dj64Kfahx85PPl7pilL5DBI+dG6FEjnHFT7L6KkMlYsoPlLgRk3Ev0A+4McN+41RSj5+2idIPvIyPtYH5jN34TE+lCNLA0maQT6Q4S/WDElWPpd2C4nw3lo+C69Ly7fPXD5cYlys/FdpPidR8PHQ93I+QfqSklLofz55DUJYK9yFPoubNVGkU4w+KwbOr8HzjT6e4IzPuoiGPuuRKRZpym0+QeiSDCFRYD5VvthRAKBhPszSSahOIGM+HG2dqkroVj5UVXo4TjRdPrGI158x9F4+/qidxRcqYT72Nvuyq8FbPrt3KWi3sVU+sMFHbMrFUj7U89AvM1FGPoUTvGWatEU+/i0kTsZuUT7EpGsQjWhTPs/LpqcaLks+eL4BOfjUXj4928+HDZlSPmkxFq4E0Ek+0juKnodBUD40dNYD7IpYPheZOkCzo2k+WJe4VPfSbj4fUxbLCv10PovW09K3OXk+5H4nAvYyfj47itYQCbJ9Pth5qhIpN3o+5/0rlS3Lcj4oYSrEw01oPt7AbBNOlmI++U8u9odKUD7I3QttfBk6PkBDsNybW0M+u5M+/TaCRT46IKqU9mBJPgixDCDfqD8+9tp8hKObRj4HYn+pdhVEPppxugLRyEQ+kQlUMwPITT4/NMW426VTPjcpjAL5lFw+8J4dT3DDYz5sgNrTqEt0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1344\"},\"selection_policy\":{\"id\":\"1343\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dW+SSzS7Qz7yW4rAtd5DPgFykXcXmjE+Td4S1bCgRT5x+mJQur5DPkWWN3ZhA0o+fA6w5rdGRj6rrJdLRUxNPkvnQz3CYFQ+uToIZbuoVj4484qrPWRhPgRGU23Vumo+oMxuE/qdcD62PzR+p5ZzPsp8eVE0EHg+8bykcJIJfD5CK/3GBoB+PsaB5z5J9IE+kU5RP1pFgz5qaweQOYqDPuIHQ0sMvHg+kqrZHbUKZj79UnNoXEBQPluR1fjbUlQ+P11TiqFJUT7d9WW6IUs+PthfhTzVBUs+Fne1bFh4UT7Ji8OUz95hPo2DntLvbnA+tDQZ9qm5ej4IIEyZ8UiCPkR6qTGFVIk+E72212zJjz4bqJLOhbCTPht+6cn9Z5Q+pRQsUYfpkT7VChPtwEmLPi4WmChPfoQ+sYTnxri8dj5pS7hh70JPPmNfu+4DRSY+01snbl6XJj5FhhFQFLBJPiaPrZ0tHkY+pqpeyqkBSD5dy/I/k1s6Pu7/fziNRD0+N1Cf+jFFPz5VxB8hBvdXPjQD6qbK3Fk+d1bXtxu9Xj6+y8PmB+NnPhaB5d20g3I+3igtuGdJfj4+PMt0yPqFPi7KYGGNfow+lnn19emsjj7txRIXNkGGPvjIcrcq8mw+EqepqSx1YD6Alkm0ehBjPjYQtRCTxV0+tfJyxx2TWz6v2W7KsNNXPhEOKXzCl1s+wCx4OM6GXz5ySxO7ZghcPvO3M6jYbVE+zg2M7zSUVz59lD9yuq9DPlw+1ObsQEE+yohFJ2pDUT4M0INeldNUPu6DUqHRbFU+vuTCGYUQWj5cviq4vddJPmLfsrfmtUU+u+woJdTmTD4JMxPFUo9ZPo1Aj1HC4mk+tpQLdaLHbz4Tv+Sq309zPlMrrtqQSno+v0UsdEL4fT5tTw8/sLl8Puu3ShqJFXk+7XQrnOJAcz5/kRZhYbNpPumdEOAk2WY+G+kD48zNVT7NigsjYgtCPgS865PFnkM++7AJ+hn6RT6T0vfSY5RLPoHGzqed3Ek++jQIGiIPTT63seg+ahpNPlvnzX8Eo1A+uUobShh0Uj4EY8wd2Q9SPqXD5oz8uVw+yDDiyRHaZz4t0i/+t4BkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1360\"},\"selection_policy\":{\"id\":\"1359\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"pNthcXoTQD59U4nH1y4+Ps2UHmdZrjI+OJmwrLR+SD4KEcgQuIhCPjwteUWIVUo+rfpyqp8DSD7O13modZxHPtJ5NbiLQlI+nykG+ff0Vz6dsRCCJR5jPrNCWegmqGk+1uck18YOcD5zWToLSwpyPriKKoYk1nc+9yXTNMGyez7pkmX07y1/PrYFtpybAoI+M3q/enYdgz5jQqNSKq+DPqZsZaV7bXk+e8EYsUYIZz7z0bdphn5RPuClKBW92VI+qSTwkIQSUj7qR6TgrPNLPoIJpD1KrkM+9mwmES6UUj5nX6F7UqhiPsDIFbk9EXE+S2auxN1Eej5Vje6MYHmCPpxnInAstIk+LHntr0mCjz4fS5G0ac+TPnzzQhQ2kpQ+TuOmDGABkj6bg8RYC/GLPnNsa4MQfoQ+6vHcRvPNdj4SjoDisRBOPskYvd2Aqi8+CiNBq+trJj4Iv+5/P6w9Pm4PbC/3gEE+UITusNVaQz6Y7H/kV7UyPlWbRIQlFkM+2GqM+VbeSj6SzuN9sEdXPsPChZe4ll8+ZniwsYEqXj7ToINuS4FmPoJLYkGdCXE+ru7m0veSfj7wCZ2iSs+FPg2az65GZ4w+kNWQlU6ljj4crIJAL8uFPoEXeVQc2G0+DU4e88k0Yj4m2nFXCC5jPoBEyEU14mA+CNwteK4kXD5vGkKdGn1YPgdxZR9hI14+UZngVuMpYT4M+u44G5pYPvrKGxRZn1I+tkZVK59bUD7J1t0TE1JKPgfGrtPJZlM+FjAnzvDfRj59UUXVx4NUPpmf5LRcfls++a4LoLmrVD7pkgA8ozVRPo69TNRuwUk+Z95U0KxaTT5bwaHT9WZUPpdw11g5gWY+PvvJ+7R2bz6fHm4KB+h0PrRRvpwua3o+SLK+ACbrfT4Z/ejegrV9PjPgKnQeRHo+VFJG6VWbcz74fuJRAepqPrn06d1+D2Q+q/r/MHu0Tj6sQb5wR0BIPsg9oW8GmkM+BOISA70SSj6/ZsaRXhlHPp0hEVL/zkY+ENwQQzZPSD5+HmLitDw9PtOjLWuVQE4+C61zRQhlTz6XJfFbkSZXPszBXWGDg1Y+NtX1XZN/Yz5fb/F++JhoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1354\"},\"selection_policy\":{\"id\":\"1353\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Q56qvzgzPj4iRGeVpHlCPqCM9TSuwjo+AVMbSC9KSz4rzBgysU5DPoxcxtA3ikw+YIfivScART6oMI28KMpKPuoRU/LtWlU+t4H7URI1Wz4rpTqsAq9hPl7atv9chGk+TJExugEFbz7qidWvqlVyPkP3TwzxfHc+KClznJyZez6cj8g2geB+PuBaQcMsFoI+dUVoz+uKgz5MLLjhrZODPtcrKyNNyng+dPeYZqujZj5jDZ+aEnlPPt0sNxQaBFA+Cd1sNclkTT79yeiRzZtFPntOgvIhwUI+F6dN9bqmUD4yfaIg4KhhPgGUk33linA+Y0Px6cQTez6ryehRUoaCPjZldXOQLYk++/A9B8jfjz5FT8JblbuTPl7Ri3vVe5Q+CY+V0CDYkT6PFXPRXbyLPm9laOKYPoQ+NJwv2FBXdz4rCp//AJ9PPg2T7nEFXBk+ZGZDr2DvNz5t8oiYFxowPiZsZDZMDkQ+Xqrkk5kNQD6NkiXds5w8Ph0jWQ/87Tk+VsXbxh67Tz40VDE0/lBVPrsJyE1Ew10+FiJGmnV2Wz7uYuEIt9BnPn529cJsenE+dxJfURWNfj4RNuVKtsWFPhYWAqjLAow+73lgtstHjj66V2Z2hLWFPgraAIoajW8+UG5ZTlZZYz4H3GfoCntiPnE5PvObWmA+nGRBBdw4XT6GIJFs2mNUPlhbp/D4OF4+kmxcZgzFYT4ST8TsmhpaPteu+wavalk+j1SOOXZwVT7L2m4Urdc9Plof8Vh2nkU+Y9KzPWsVVD7asEMrb/5LPoCtj7B1+1U+TuCEhy8cWz4A5uJtW3ZSPu03sbQNN0o+oIpegDghVT5y5/5Z6fFVPjgMusyh4Wg+Qvn+i5oEbz4lNB9NO9lzPjBWZa1iIns+awIVlK1kfj5BeoFYh818PrD3tzxLOXo+u8hZnKovcz7e9gzo7blsPhUSJ2kBmWc+EsYUAlG9UT6Uq6S0uKRAPjtaiS6e5kM+j9O3PGYOSz4t6IyjUdxEPnGN0bzLQEs+pw/ZnzvPSz61grPY3otWPv7uZFMX3ks+H8uwC4JVVT4QJrlQJBBVPq08Ph6PJmE+L2kKQI/LYD57sAKV3plmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1350\"},\"selection_policy\":{\"id\":\"1349\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"JGv27b4uOj7N3a5t/GNBPgnT7aei6D8+KxvSNgdWRD4WQwUNwxVEPm2azfS5Ck8+p4m0iZgsST6fwbqAMWFJPpV6CA3aKVU+iAipRedVWT5S+V/NjnhhPkaEB/XZUGo+lml69C8tcD5DORNvbGxzPl3/oe7GjnY+Ud+znTW4fD5LA7KXfYB+PrbtPh/f9IE++WJdrtnCgz5uZGRODKSDPundkPGwDXg+B/iPDrPJZT5onhz5EKxQPvwcv3u3alI+o93TP4YhUj4N8QMvCqRMPnW7hvfxO0c+JQJMngxDUT6t6ccz2JBiPhyvHiIYE3E+rhehi+n3ej5pY9CbWoKCPtU+smKRIIk+ZXJmfR52jz7GBBbyVbOTPkWZAELZ25Q+p765X/XPkT7cYpHhoV+MPg8ZiGe79oQ+D2uhTMfMdj7qrdTHTm1QPm5I6LnEEy0+ixscIwE2Lj46oLqE3Eo3PnZRrYRsqkA+jr278/o3QD7YoJyPIYwnPimDJfb61EI+kV9FInr4Rz4a9Q1A9gJXPirSq7J3pVo+vsjSwyCLYD5C0Fq4SQ1oPqVhJE9wS3I+WaN/R3RGfz7/ZV4od8yFPnkdeiZVPYw+Yj6kHxmDjj6Qu2YzOR2GPrZQUvBJeG4+jN7wBx5yXz7oPSEM2IBjPpDosd5t/10+/3+QapegXj4PwTEkxvZVPrAc5IxnFlo+EWaUgeAgYz49Q1EHTB5XPhuX9nSI5VQ+KRhbpFCZVT5Zd/QxJXdAPpqWHgQiQ0Q+0tPNj2t6SD6BhJ13/o9QPu8iXnMaSlc+uBr22NYqVz6wG0ZztLdUPp2dNkJgYDc+tE2Dl6fvUj5iPQvQczpYPmk7kFUD+Wg+hvwiA7H/az75F2ERKVN1PjbW7uFgKHo+/dnDflQGfz4WvD5QarR9PrrkjsSiZng+JQQxDUtIcj5kI+81oCNrPnPOZWNnqmY+13R/0GI/Tz46YT5TivxMPur/VCm5DUU+1jO12fkUTz6fvq0wBDxFPpWMAhAnakc+rS3pklE3RD5AjcCi7aJJPlu/q2FsFEw+Yb0SMwWeXj5ihdhPjNlTPmH7OBAou1s+Hvnm23TUaD4JrrExu8NqPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1376\"},\"selection_policy\":{\"id\":\"1375\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0oXnksdPNz5rraTvw3UuPudVG60gUTA+t1FZjJytSj4O9bMIMxYxPr0bqxiIGUY+wsIY6mLaSD5ON9L65mxHPghkVuSpDFI+OTvr9U6+WT5LFdFOy0BjPioVXglr+Wc+YHgyLSVOcD7NZkmF6X1zPqF72jKAr3c+BOZ+JFRefD5v7yRm+pR+PlP283uZCYI+MT5in6CAgz4NAEn9RcCDPqt2HG5VNHg+pk7YXE9HaD5QNvomA4lRPlBwjM1akVI+Kv5yKnhdUD5ASUKNOwZGPu+edO+3WEc+JjgfD4vbTz6pIMJ//J1hPsOM7CChXHA+OlCwYFvseT7IytBqMY+CPkrISVX364g+25zBH0a+jz70nsDAk7CTPlSt8lSs6ZQ+WZb1maMtkj67mOdnWdaLPvclV1DUiYQ+0oz78/CWdz6OcWdKMilQPtKiFbAl8SI+ZDrNEddAMT4Knfbz4E0+Pv0EqYAxB0w+q0zWDsMoQz52gr+CYhBAPr2KIumaUk4+DXpmDdcSQz4lJlfgM6hbPhf0SXMtm1o+ybRh77glWj55unwXNFpnPqMV4bc5y3E+InvXZyhKfz6g98NFCVOGPkF27PeWW4w+UgxXsDtcjj66wdyFBRSGPti+A2C2Zmw+3HteR4HQYD63cAJEI9ljPg7lXaAPLVs++Pi38/+hXD7VeqkvJ3laPh8ogL1ifWE+iS2274jiXz7r/8VkEW9ZPsB9h+vo61U+qFGRlyt3VD7W3lW0AW9DPsDDoU7yD0s+dUeh5rJBWD68VqlkCZ9UPtYYDSc1100+Imm6TCFSVj4hNmh/Z1paPpBeYmYHklA+NzHqWphlUT4W32fQc4daPiE+/Gr98Gc+n+0f4YPpbD5bk4ifD2pzPuXaXQ5fiHo+Txf1ih+gfj4mLPgW8Xd8PqOSxhSmy3g+upWSEW1fcz7EmDNho95pPtHQj+5AFGQ+cvGf4/gFVT6zAjIlWBxIPgQelDpNRj0+Lwo3J2iDQj4uoY1eIG5DPiK47z+USzk+PPn+m7T7Sz4vLLw1u8o8PutcFNmcS0Q+5XtgrvJ+TT76W2/JPEZUPuk8iGMG11Q+r9G0h/UhYz6VkXC8VzRuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1390\"},\"selection_policy\":{\"id\":\"1389\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"aPN2vDQSND7hTKLokpBCPoDdCXm/2zI+nFRZ5jYRSD6sLLrLh7Y8PhnqCTTXhk4+C9z2OfanSj69yLyN6IpNPsmv0cpcZVM+rDF/PBg+WT4JgegU5nZiPke9asjeQmg+LSEhPLYycD6Xr9PD2uByPntoL7Z2X3g+RTAmos9/fD4bySU7wgV/PnNxWXxG14E+qfHKaaqAgz7JBinyUQWEPtArtD0TZ3g+SlfGOizIZj7ExlUXzslPPt/8XP2X5FE+6XkDbjUyTz6BFsDqCPJJPn8n5XBpSkA+cqxXOvezTz71pRqjmlFiPn0YuQvXYHE+uId90F6Oej5G4Xjkb5CCPof83FaSwIg+a0BgTJ7njz6vuYO3M9aTPnVNvEXF4ZQ+BAvcjmz4kT5K4UFI+R+MPkprI747zoQ+MxDNlqTddj5pg6YKD4xNPki9+HmLTTE+qROV5gKDLD4YyP/d1AgjProKq4tpBzU+seEUVudMRz7mkd0+xUNAPnQDSb+eBUQ+q6JC0kgLRz7STpnFaBdWPs0jLkA3C1g+7OQzFyMXWz5n8oe+9vJqPsCdVUGdW3I+90Oy9NS3fj6lvl/j7FKGPt5H45JlSYw+ss+Ohudtjj7p0m/0mk2GPogAZugIRWo+4D88eZ6TYj4PpzoJ4qNjPu7Tby6RBl8+XIEoh+YDVz6YdlIpbqhfPkKhK8tf6l0+QF/v64twYj76dpPwwDFZPnUvVGyBAlY+etj2rdKqVT4deswALV4+PkwaUSvaMEg+cSuMkoq3UD6v7R9NRL9WPjUSm8NeClE+fCSq9n9TWz7NxFkX0ztSPutbitSZQFM+9enJh5kVTz6dZzxkhcJZPn8AUZaiFm0+Wk9ecvzjaz4vXtmHdLFyPncxgJfBBHo+RXrmAjsqfj7mQEcOe0J9Ps81KOb9x3g+J1l6SpEXcz4e+g7/RPprPr9btbBR1WQ+BFmTKIo/Sz6vl+xfxNNBPp3p0plox0E+jSp4R+KORj5aBAyQg1hNPmr3tpWu3EU+eaBQMDyBSz6RzqyulKxCPpEwoAsksE8+jUDbRVt/Tz4R7+snCcVZPs1YgEy+UV4+CHm19jcHYj42DE/ej9psPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1364\"},\"selection_policy\":{\"id\":\"1363\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uTTKtWaUNT4pjjWNLTlIPqwKxc1TtDw+sjRgNQfQSD5NjdwvpvRGPmb0089JJVI+twV9GalgST6U9cMrY1pKPvxXVEcNAlM+C1cypwcLWj4+hqkdcplkPmj/lh5QX2k+dXm0XrJnbz711lF3ecNyPrD06PEwjng+Y4GeuF7aez7q04JN/XV+PoQ5Akbw7YE+oAlKdLdugz7kGW4HXHiDPiITDr4u5Hg+N2EmP4SNZz7+VTCf6+pRPkpyeq1YZFE+8twXKd6UTz4+1FHwN15DPqXiUbEE20M+qeXObt5dUT4Bn03gREpiPoWbJm3WI3E+eyxwMCn4ez5Ra56hZXeCPlV59hfDYYk+G4qaSoiojz5Paz5n9JOTPpbKY3v0wZQ+SIPtHdDgkT4qvj9WjzOMPhBqzJ39n4Q+7OJdJ5/Wdj576br5nOlQPq/TqnqPCSk+gu7B/DvCLT6tCDro3zdAPgFx4aV81UY+eprWlUGURD4Qq9/k6SghPm9qst9EJjo+z+KUCfuBOT71n5gO4TlaPh+Z6ry7UFs+QPTZdeQBYD6qI+xazONqPt5RB8eisnE+JRspN0kUfz5/QbgJQzmGPrVP5SLIoIw+UMgnn22Mjj4U06eY6LKGPgKtfzuCCW8+JedDyZI2ZD65xZJuGGNkPj73hPmdMWA+BkfUuNfqWj7//SLkbBhZPhVqDerOjmA+dOzVPp6jYD7ru29OyuBYPnsqEr/km0c+HlH1/6SyUz7hBfscqqU0PjBslm7CVkk+gfpoTENTUT50YvzZSGhVPorVBq3qxFA+P10A6WtfVj5VdUNa9YVaPlytOvkddUM+WxI8E1OEUz5Desf7hBtWPt1w0HnoWGc+a9UIqRUKbT4xNUHTNr10PqHSxrS6Zns+CEwevbn0fT4AeHNSh8V8PkJz1CGPy3k+zi5Opl1wcz45zu+EPJ5qPrjWJbpZfmU+qrFTjUtKUj5RLq2iseBEPoYue75eRUI+yK9Dv6B+ST7w5dB7GUVEPgjmxVP3e0s+hPZcVuXORz5s6BCD3ctLPuZggVbze0E+wm/jYyD3XT6gtvNii9hVPtWRaej/wlo+NqsFUbRhYD7id0+GLyNtPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1338\"},\"selection_policy\":{\"id\":\"1337\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5AEdz7TROz4nwECwxuU+PrG/G2Z9fTU+nUqx5RK2Rj6AIJ0ds4pCPu6N5ek7gkU+tMkpLBXrRT7YF7KQyoFMPv5X4uRkT1Q+0I6hlo5aWz5bFVPAzothPkUf5qgxU2o+LgIRsaXmcD6v9xeC2nJyPm9f+gJMSXg+dp5rRFwpfD6eQvXz1pR/PpxwKqf3H4I+3ESclR6Qgz4rALb36xeEPumkX/iKCHk+btWeFh8YZj7BQ0aq/shRPt75kr07OlQ+8lfX9emjSj5Yg5TwtQpIPi+BfzObI0Q+UosQ1BsYUj77o1BnRiliPtxK8zVpDnE+1cSLHyMXez6KYpPwipCCPtbCHgmgSYk+2WlOv+KQjz7O3KxV75yTPrw7AU5tzpQ+wMX2qUfikT4Cq+mqseyLPkR9SEuglYQ+qKisBe38dj6Sd/FQDTVOPqNOV9OEvR4+wo45VNxXPT6dtZZFzIlAPs5FIGT5zzo+aPk4/zFvQz6iqlJu0EYwPoyGQ854MDw+RMQ6mbSpND7ArAm5aptVPt6VOXcAXVs+PceSP3BSXj4n+RywIIxoPiAj/g66Q3M+varf+pS+fj5OrJbRscCFPilFjxsduIw+ttJ+rhfnjT4zR2UsTmeFPkwIHBXRz28+gGzxQYPHYj51A/lh1/tjPpvfKzyGBFg+gflQkyvyWj66NA13gvRXPmnjfiy6PV8+LxUw9BHdYj5+0QUXx+tVPuKTDW6AnVM+eOr0qEhwVD6ixXaLMVtSPgxJEnzGv1A+Xj8dqF3AXz4C7asnQ9dQPsKyGT3MUFI+ZC0kMb8xVT7ZY0w3jihWPiMug7OjKk8+hGx9hHAeTz5V2mY0mXxbPhpAd2CComg+5SDQuce5bD71Vl1t77R0PgoidOj4iHo+JneBT00afT7v3zP1Q/h7PsGsG+xqG3o+V1HE6yWTcj66R3fy0aFrPr22pTum7GU+VRtnaurJUz4l70CuDSNAPq+rrzNkVkg+Z3BJCFtZSj7pgTjqy7dGPhLf1pT+9UM+342Hhb8lQD5zTw6UHSVPPsj/213FfUk+HD/zE/01SD6ykBb+q1ZTPu7uDwekuGE+5Sm3u4BwYT6K40BJffZkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1352\"},\"selection_policy\":{\"id\":\"1351\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1329\"},\"major_label_policy\":{\"id\":\"1327\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rpEzzRzJPD6rqtN6CmRCPnETb71izDM+cGGP4WbmSz7xGw0vcwJKPqFtxHLzaEw+uaNTvSXJUD5KbZZgvrhHPmyXwJ6q31I+zgGmYRboXD7EE65ZnnFhPhVd+zW63Gk+qAtCkdcocD5xuLfBvndyPhuVW8uTAHg+ZpjuJ4ScfD6LiNKdI9h+PsZmW+hH2YE+IRBsbnmIgz4ajQPJwqyDPv/Px6UTXng+OgIF7R1lZj4pgosFsqVRPtsU8ufXFFQ+1dd84LvPSj4Aj4cGjSdEPpaH/fitw0Q+ZOlMsEmbUD5uR/17PbdhPmtKfFZyUHA+YjK/chcsez5Q0FH2kxaCPoVQLCxwV4k+17q468fYjz7LE3+YH6qTPvZksjtGn5Q+hZN7YPmPkT7qvZBnhLGLPikM+hlxxIQ+MBX0sjMVdz6xRhd/si1RPmZ6jxHYLCc+d536941qMD4n1hEe1dxCPoomwzpxgD0+3WOGXcDpPT4nm4t2dd8yPkYWjHApeTU+6jd9cNDrPj5zVimT6EZXPnYVssqBMFw+qjhe6X2JWz4F4JpJEbJoPu761QXuXnI+0sklaLH4fT6mSv6iQ5iFPnfIKvm5PIw+vqEeh85Pjj5ktLMk7EKGPteIqrog+Ws+kUpkmaJCYT4qqbXAS55jPvEKzQMzIF8+WYg/LwoEWD51P1c3HsNcPinv7MuF118+T0tWKyBkYj7JeXy61eNaPuzPaVDsYlU+cAucV4jzUz6csnW5RmVQPtIsoZMJRkY+sy1Z8HsJWD7/KVd7PctLPuK95rjoD04+yYuuj6BDWD5HnY3FDd5XPrGHnLl0JTs+bkWBGlnUVj4aNsQTunZUPnQD9zush2w+2fGJ6ShvcD6nqf06VNZ0PkR8f9g2HHo+w0MC4INLfj61K5U84JN9Pnx6/xQub3k+y/uSo4URdD6Thuku4XBrPvsZW3/bVmM+O0wckdW9UD4dIhQAaYhFPsumxZHRuEk+JYuX5mWJSz7ZYko1/PRDPh8Jy+ZgijA+5nN+o9rpQT4qUYkCJLk1PqlccuVDfko+ZZVVR7stXD6vIe9fsyhQPvfj30r8yV4+eeTGxSVpXj5qt3z8zxNmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1374\"},\"selection_policy\":{\"id\":\"1373\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IudGT+iNNT4MJ9B4R+VCPmpW8G7ZpDI+G997S9RVRT4IcddMKXZCPo8rJur6tE8+x1ERMpMHSj59NhLD1RdHPmBkYlUKnFU+M/jZ69h1XD5n0bSW96RjPjWvnaK7img+rN3qfckXbz5nY/R/tONyPsYUC7UEcnc+7byKBZOPez7BR94xgil/PgKWx7bw7IE+EY6sXUWcgz4IvIm2xQCEPhUKBCkO5Hg+rOylqPrHZz5n6OUZVj1OPmfgnM9do1I+G+Nq3no2UT4a3GZFdXNLPsqhMKW8lkM+LrzzsboyTj4//YjR+DBiPsB0oeGPPnA+lQHmzV52ej4/JJrcbNqCPlqX+tLi7Yg+UbV0zSavjz7nprChRKeTPoOFgP0BBJU+vqYkP5zgkT5j3kJmxe2LPpjcK4FN6IQ+/gzO26Gsdj4q4yQqHzNRPmE2BHm3dCw+q0WnAd5gQz42v/HrcCw2PsTc+10HXzc+KZVaYWUwQj7M+7FLllc6PpBoF02WXEE+InV4fpBLST78HVfTwjhXPiGqN1vrblg+efUwJBadXT6U6i7vfV9mPuhOOgrDDHE+8NHEdg8ofj7PR18wpdqEPnMK/0cAh4w+1Ruc+NoGjj65jE8+jXuFPs0J1HSlfG8+Y25zbA8wYT4bzvnTmj9jPqGY8LRxQVs+A4lLvaMBWj5aFwoEsZtQPnh4rIp1FGE+CBXuKUDSYz7wGxyqT3VbPgTF6bd0olA+WkicRKPKUD7dOl5Ti4VFPhBPkujsSUs+fjZTC6BSVT5h/bgoQlVQPvFjUUc/C1A+pZwZnmpYWT51yikzK5taPmntsEvx1EY+7gCR1FdaUD42DiGiNiNaPo60daDb+mc+bMpWvNGxaj6eOaXNZD5zPg9/nCoCo3o+q82cJ19nfj46IrFARht9Pn/hz73iWHk+pW6iL/dZcz405YUoRnptPnBP1xCztGU+o8Ln2y0LTD7Xk7xgJo9RPiZK2TkZvTw+L6iY9xjKST7sBSyNCaNJPjBw0Y2X/kU++LB3cumhRT69xb+0yQ4vPtWpLOz3+kk+r1xlA4ffUD5BtBPbNqpSPkxBh+S3HGM+hifWLmCKYT5hE1gT21BkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1358\"},\"selection_policy\":{\"id\":\"1357\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"yiesZNJCPj7RDKyYd51CPhrr2PCSRz0+jOMxePvKRz4aqtSd1JBGPgaU29QavEg+2Vee7iDDTT5ayD1M9cVLPvLbyYlBr1Q+i2phYpUUWT6HGs93ESdiPpVKNZ/OfWw+FhrXlTAPbz56ACmGrS1zPnz26hboXXg+1o4+o2rIez5+yjz7PW9/Pns4QPcw2YE+TWkEe53jgz6MORJgdueDPo22LQ48Png+U4TXQWEiZj71YGOd+MZQPok0P6tSfVU+w7YmCErQSz7iUI8WdwdNPnJuX9wUxUY+dSt5GaLBUj6mRlBCdbphPl43Nq4OCHA+YSFFXCFGez4nh+y09HOCPiy5KowtRok+TKcFJ865jz4IcQOGkJWTPhc1hs4LzZQ+gz1bxeIskj5si9LlAwqMPppmnZ/pHoU+87bbUjvDdj4TGvZmblRQPmjoqHE+Nio+7goraxWCQD7b1jtapLM8Pq602LCZuig+HzdhXmPiST4BVkODzTosPkZIQxXM+DU+01Kk+cTMNT6j8nGgqIVYPsC8ZLjmYVc+2KX5MDyQWz5X2Vd5syRmPnSIw930eXI+8ThXltOAfj7rSAzp3cOFPpcqTY5Jnow+NhIi/VDxjj7elt6GaHuGPtCxb1c3QW0+3KHKhCvnYT43fEQFzm1jPtK0RPtWCFs+lHlVf418XT7+KLfBGhJaPt9mIH/OOVs+jshuodEoXD7qwzejK6ZYPoXZuUjVFVE+zZ+NQp64UT4T73Lwxu9KPsoortz+304+eoyvf7wuUT4w7pY1u0xXPqcJ47ki6FE+OSTLBQQzWD5k1YauxFtTPoYczyVwq0w+g8bCKOE3VD7mesVMjtlVPh3oHVUYPWk+RBg0sKYbbT6q9mS9hNtyPjFSehLbXXo+9rD6P6AZfj4htwDch4h8Pup/SKwlS3o+AAxbdIrGcj4/qbn8gx5rPj2kE1Xkp2U+5JsF6c5nVD6ztuaYtR1GPm5+0j+wSzs+Z90sQlVlRz4h6viSzY5JPlwYw6qb7U8+btzOaPf5Mj7Gv3L+v+1OPiWHNj+E0VI+cWt+mIIEWz5aPLm9OgxaPqNN7G61+lw+ChSLRlrPXz4Xa5kHjO1oPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1346\"},\"selection_policy\":{\"id\":\"1345\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jGNEf1gBQj4WY09f+5JEPvlj70wrBjo+trbFuAxEQz5jyXkzsxdBPlVYXYfev0Y+un0Q2aGyTz5DrIUi6/dLPuhKxVtPXlU+/fYhT4vOWT5iBl7FrS5jPrie+4UWBGk+rJqWzULvcD6/ljko/IRyPskHAUcFdXg+nugOR7JcfD6UICf5XG1/PjMl05nvAYI+TgxLFzxfgz4CiTgRtNyDPn6/NhcuPXg+k8e3QQL8Zz4FfgmKs91OPippBgQJ600+vnYPpN4oUD6REldNP/hDPpEAJwAODkI+7cQdyxdyTz6obxn7UZBhPnEL+yVM3XA++pcbHVvjej7cleMBW7mCPqnaorkUSok+EnHjnAiSjz5oroXeL7aTPlMA1ZQZD5U+7bB0szMAkj72n50JRuCLPvQOPE7maoQ+6JRsLRdudz4x97TlmcdOPv1ubiVPEyQ+pQrscP8PIz6bHEfRG5s2Ph21F5R4sko+FcsnAfdINT6ICXtfPvYuPhI7NI0wTiU+DpZUloD9QD7XBPoE2zpZPm0ATN2lbFw+cqSX7qUIXj7fkoqkrjdnPtYjNkhPRHE+tcAImkEgfj6zULJG/22GPv3EsTKH64s+gOoE1ar8jT5WwWMV5WuGPslda7At0Wo+cVUMrA+lYj6i34Jy9t5jPkWfNQ2Y0GE+QWtOAU8ZYD4ibj4xnjFTPkzUBnIvtV8+04HFN8aLYD7PGWQbI1lcPleC+aUQcVA+gY/8v4EMUj4xVE9gBrg4PjB9QnoE2D4+CKOSlVDkSz6/c2NYsUFUPl5SUy7tiFk+q7lCop3bWT5AUskGHn9QPptCISkd508+fqNitfeXST7giVeUBLFVPiBZdhg1p2Q+xbXm8ZZCbD5whEEc+rNzPkI0djwf6nk+tahwdeR1fj7reK+x2EN9PoUjXSLxuXk+9LYMQTIrcz5JDN8OQ5VrPodBMuUVgWM+lpzGGheUTz5OaFYrqjRCPrI1jjuWVzQ+2oe2v2yaRz7xzkeJ9GFIPryXeHibz0Y+A07HMQOiTj4sytU604EzPhKYJZ4v70o+dZRvbZIIUD4sKaNcB0hSPnKwRvUmnV8+eXu1QN/hZD6dWRRddyVnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1342\"},\"selection_policy\":{\"id\":\"1341\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1327\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"clzyukAqNT592KZ2idNAPksMuxHxFTk+llDz68GcRz4XpbjpA6dCPsMCo1DtnUk+KQJs02K0ST5WRM/Zsi1JPq2HTnjJz1U+Ix/jG4rQWT7bQNOxgHJgPvctVgkz82o+43CdU7Clbz5LDULjkQdzPud1wWLhy3c+JaWDF36LfD7dQSykK7h/Pk2vgwQPCYI+EbKfXZirgz5SLZYEHa2DPpqp63cZtng+FczrY4U7Zz7i9XWJhcdRPoTyy7RDWVM+8HdT9SR9TT5cKmKa6vc7PgYmX11y10c+o1wB8f70UT7yXUYEzjtiPryvmFfIK3A+e7vQAPiRej5n2MFcwJOCPpPkp0pSeok+JA3Wj8GLjz7U2ZfGfK+TPrbC0TRM8ZQ+8tuViurokT6pjPGa8tmLPjdXPRpWioQ+aRlhs4cmdz63d5/uMRVNPtGhPxZe6SU+rmY0EzmnLz74ivc7rjYkPhNBKADpPkQ+ReFTYskCQT7nlNZXx4AxPjTtOqhe8jk+e0tG7wL6QT59fng8dlBXPu7h+rJwLFs+FXIr8G0wXj5dL0GuEf5oPtQxZiQGV3E+VVKBmykEfj4+Gmc1AM+FPjLtifpwk4w+I4TmPFp5jj5BHdWhntKFPor0scjV5W0+isWXVuYuYD44TmB3otZhPoWvq+wI7ls+3dZ7HeO0WD5rvLaQwy5YPuNM1Yct0l8+R6rqZXneYD5xorQ2hv9YPpTJeJqSw1U+FjBRhEFtUj4Z2zdm6K1EPj8th7hf7Eg+Tve0X2WyWz6COlfec2NRPuNTA2yiu0o+lT9S4JyrVz5otv7vdOJSPkMGxuBZxEM+OoRutiP5UT7nUB6+jpZYPgjRUYNTFmk+srZKHTWKaz7FJkGuw2p0PmA+ZL/Rj3k+ewyxb4LBfT7SuViGeS58Po0IXq6G7ng++lPG649Hcz6RIAuDewNqPsg2kwo7yGU+LBKWhgstUD48S2el6vFAPvCqewu/IDc+jd2BljBRRT4DSZS1Z+1LPuf7qzyPl0Q+yqPLPc5xRT7PMvKWvFJQPrLWyGdEE04+gSTj3m1HVD6X1DkwpsdZPqzGOL/9WVs+16oWBrHwZj4AhbvJyFFfPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1382\"},\"selection_policy\":{\"id\":\"1381\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"1329\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8lxhiPoNOD4GBLaKIUs3PjAUn7f0hC4+zHb8RIq6Qj6Dl6X/krZBPlNYddtA8EE+z0CZJnw9SD4VSe+ex+5JPvzHC9XwrVM+IIsBzqLNWz6nZFv0c5hkPgNlm206DWo+oXpUcB42cD7uM+LUWuZxPrY2KRhyPXg+wTQySOdRfD6eJzRjzCZ/PjIKPYXC/YE+hK//ziiNgz62Cq2UkmqDPnyDGGJgMXk+gM4z0pdHZj5qIXnAeHhSPqiq4knoblE+4td525hsUD7UWT8RjN5GPib9oH5E7EA+U6Jq9v/DTj6BiR7ELMpiPkxtzej0PHA+0HPnj/COez61L6Kgjp6CPqMsu1rWL4k+9uT4Fk+ljz76YE/ZcZaTPrNTu6BC75Q+FEa31Q+6kT4F6KBGi8yLPqbC6OSeiYQ+zfBEgzDYdz7pmB06WZpQPocNFHx/gyE+eYTo7RLzMj5UvHwN7iw2PlJZDxNCVTc+iZKzPEGuOT5pq9Zyd+UyPsj9YGa9vDM+w9CcU8bmRD7yiyoTEIxZPlHixUZ7+l4+6F1w05hEXT4fyzFOdHJnPtDqMSAz/XE+tcuat1++fz7ekCYMMpCGPu7cG4KQqIw+v9Xav1TAjj7Jv7KyK7SFPphCNXCH+Wo+z5dta0/rXT5buRcS1qBcPkRnI1Oa6lo+I+tBEInlWj4ukkZJAlhdPmwBhBz2vF0+hERI68pLYz6F8+Ug26dYPjjdIAnibls+O4vNckBPUT5qNsH2aOI+PhK17jeeRFI+E2KASCQqUz5mI5GUjE9UPoym33z8z0o+fW+b2e9MWT4PNPzhbTVWPvA3Zw3Rik0+PnNOYFwkSj7j3ppS2WNZPk4CfSEaKWg+tjxGSC2ZbD6K3bmDXn1zPj8n2OR6v3o+MJgG/Gqkfj6GirKHXJF8PmheMfmuAno+uGbie6oscz4PBgtPMtlqPgMwClfOxWU+RMEzeE7+Tj58U7da39VBPrN8ndgLnT8+YA8Zgz5TRT4A1LQy8GdBPlQmqGW8MT8+eImYciUgOz7DQD2RDpFNPnRe7wIXNEs+BFJ0acgMXT5PmnZx36ZcPpzrnzaDhl4+WXeFWX5pVz6wl96i6wRdPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1386\"},\"selection_policy\":{\"id\":\"1385\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gCUIcGQKQz6YTgJHolxEPqAEsLOaOjo+nqxVe0VkSj5uf4WzEAlHPv0GBr/mQE0+wgO4qwm5TT6yrMF9HkxMPkIWJau96lQ+KEpQtD9/Wj5YIdKsDwdjPkHx0mwIVmw+abhYqssUcD7F66KgpqtyPnZO12qwrng+CGvEshtYfD7XUcXgzM9+PmPk1U9JwIE+OzJYdlelgz6b67Hk2YqDPnsu2rQ5YHk+7yWKyKHwZj6q/Ev56ElQPjQUi3jdSFU+xm/bqA89VD7YkjTsth5GPgJ801b9tEk+JJlDQsDTTz4XIFZHlZpiPnK/Pr6mcXA+cg3o//+gej54lx33PsaCPrLgeqFOMYk+WBlRCMmMjz6S2PCNxsSTPtr6k2X/5ZQ+ZbHJPEO8kT6Q6vCdwTGMPv5ZqAEZe4Q+0ybCSyTYdj7WrPWUICJRPjUBlkMcBTY+9scTtfWwMT7ZXPxsH2MpPr7hNR7LmkE+TigOmOh5Rj6SC5hdPSM4Pm3rwLaL7DA+AxdQE+mYPD6ElGHJ2hVcPsvgEMrbjVs+/wrcXcgIXT5DpW8Z6ZxmPvv+1j10VXI+gLrAJju+fz7tKYs8E2+FProSzTwiPow+mF0Udy8vjT5k+0BgNwqGPkCnam9cam0+Isj6uxIHYT6coERzQediPnLpIhMcUV4+sqpID/MtWj5HtPMeFw9WPql5F8DWlVw+BFcJQBJ7YT6ax/Pg8BZXPujYllzjHlI+kIR7b/rQVT4Fb+xEDeFJPkIDz+3/50Y+O/sOH41PTT78hffKaMVLPr4UL0CjtE4+eM7NECLgUz58J5kZUmVbPjHFglVKH0w+MFFfATpsVj65tuqTN5FWPp2Ulk1Lfmo+6Hvps/5ebz4u797R6BN0PonEfIBmNnk+nm/zewSLfj6sXsV6KeJ8PhjqRuIXKHk+FQ/D4fMfdD5pw9vUPBxpPkhhG+D9P2U+7j8dzlJUUT69wzMD2D9JPo8dj1hsN0U+tEMcFK9lUz6o7/1eiV9BPlWDjCUeJUA+if6ZJEjORD5Dy4yZ0Wk8PnjSaXbF8E4+jUPtDI+eVz61F8MYcbBePg72sFnSe1w+qxWf2tvcXj6iGxPmbtxmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1384\"},\"selection_policy\":{\"id\":\"1383\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"9915a4ce-d070-4ddc-8bcc-daa6f43df96c\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"0f4df624-8d0f-40d1-bb6e-b3d7240512ec\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f4858e71-de13-4a28-a366-ce44d7b58fc6\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"36ff20e5-41a9-43b3-ad21-c72781fb5f4b\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{\"ticker\":null},\"id\":\"1772\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1775\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1775\"},\"selection_policy\":{\"id\":\"1774\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.03, C/O= 1.35, [M/H]= -0.35, T= 821.59\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GFmCSYtgUT6Z44vQcm1UPmbwm6zlBlM+KiCqHR5nSz7U77+rC/5EPl+KjIDLpTk+X96Kwa2vMz7GfDhm95EnPnpM0/6Txjg+EApyrg2BKz58n7zBazMwPpvARnPkPTI+lgbE3pAZQT5vVCBik+A+Pp9V+DqE1Fw+KF6vcik8Zj5Msmic6f5wPqfoNMH5YXU+YVUUXFi0eD7pw/6pMbN3PtHv7yXht3M+I8P4b7Huaj409T2mWQ9lPpRiuRWp2F8+7d8yzT8UUz5Q40QQIcZJPqHCmvSgq0I+8rinj0o4Tz5HuXErBMdVPnIUGqHqFVA+zigj3V7IQT5oh33bIjVFPlZFi0154Uc+CrrdOHAJSz7/TTDKXdROPsVtQxLDR1M+GURtI9CYWz4EzdAziuNXPh71k4cY010+x5nbO4lXUz4gblK0oF5bPsU4eRAPYlg+eEyT08IGYz6mP0M5jh9dPs5OSjMFP2g+viIP7y2rgT6cc+BKQHOLPjxz/FhNvok+1XA8garfgj51/e82KNR6PpztMqo1bm8+icfJgSEdZD5RR7CJNGNbPiOhDHCE5VM+THlkEfvVUD7su1UMo+9FPoFnJvXXKjg+BZppz5yKJD5Mi13neEckPiJQiB9EGyE+16OSL7PBJD4P/oCrozwaPuN8mwawwB0+NuBlAmNxRD7Ts/5emhd4PguGiYCuKoU+V7QypS/Kiz6OPjEF8n2SPuTRF7nmu5c+z7wmjLfjlz4xWxJ62x2TPtrF4xDSg5A+tzAxNFUTiT5yEIVt7TmBPoKw0SFP3XM+Ao87AdpUZD4TP7HeY6VQPoNaRu0Rhk0+74YqSqjGUT57k5o/mmRWPq/7XKkbS1k+PJfz8j9LUz4yU+94o3FjPrJgHmgXKHU+nQuD6UdFgT625HcooFiBPhpKT1kvJoA+ApyQHbUKfT7Aln8mKyF5Pswq9vNJlXQ+Jm61sQ9CcD7EcFbE4q5qPvxdCSGhDWY+oEG8cdBIYT5uYkpEs6BaPm8JLC6Xy1M+fKkVFEupSz7/LyhN1uhHPhuocPrFt0Y+kOnh9wClOT7xgsx550lDPkSC9KhNZEE+X8JlUvanOj7gBXypt+kuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1799\"},\"selection_policy\":{\"id\":\"1798\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1769\"},\"major_label_policy\":{\"id\":\"1767\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1769\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1767\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1770\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1799\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1772\"},\"major_label_policy\":{\"id\":\"1770\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"36ff20e5-41a9-43b3-ad21-c72781fb5f4b\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"f4858e71-de13-4a28-a366-ce44d7b58fc6\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 136.65, p-value = 1.48e-02\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"2751436d-cbba-452d-b83e-187401968e47\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"1dfc2a89-79d2-49a5-9296-35120595312e\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1995\"},\"major_label_policy\":{\"id\":\"1993\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1996\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"V+jYKPelWD7PYRhHexhdPuEwJVFqC1s+bB8ALSBQUz5XIqyM4HVNPqm2zYqh5UE+LFZsuEdgOz60pBHPI00wPqqeYhlfTkE+VYz9tqYVMz6Tbr5M74U2PjKYiKGIXDk+M7TBU+bwRz7kkofauK5FPl7U1A4NcWQ+Fyzzq4h1bz4oe7D+XxJ4PhROQn8eSH4+4h5Qyg97gT6l+9GFysOAPoP2k8+L23s+Ema4wFcHcz4HtRUs8sBtPsG2Klf8l2Y+iwASkx4ZWz6RTRH0IktSPhCpVM10V0o+wJEJNrX6VT6b26LXjs9ePkXqbaRz2lY++U0y8cNFST5fZT/7/hVOPsQ7/gTq5FA++FgBpHEeUz7az7OgHMhVPjISeostJls+X1J+zWp2Yz7klJanv7RgPjOsTJqu3GQ+qA7iTg79Wj5jcaSWijFjPnEZczl+GWE+RZbVMBmeaj6+FREEu2dkPv+Wz191DnE+XuZdTMT8iD4/lFy5FWSTPpKX9VnKHJI+JvWCW71Yij63Bsg2WKeCPsPZBqsy23U+pGdriRb3az5xZ3IQCCFjPiBBgNbkwVs++8e4BnC1Vz5MLAKU5PhOPiP1s4878kA+7K508LHJLD6DffKpQVwsPsoai2KMxic+2HX/E1zULD4rqm3ZIkUiPj3vrsgl1iQ+mehSl2ChTD7HQbAuh9WAPtkWXso5nI0+olLv/5mHkz5ylohhogqaPvW8xohSyKA+b+q/muT0oD4DDZCZsS6bPqFP0izLQZc+Lbl4mC6OkT7jZGBjSgOIPthb3KYgiXs+4KuwpFQXbD6mGzfETwZXPi3wjTz4a1Q+wx8rb06WWD6N8GNmFBJfPtOZy5/Ug2E+0bw3yDa2Wj6MoTJH+zxrPmkZ/86k9X0+iXtrCN/DiD7A/FLMXvyIPhdIYy+yUoc+QGHjORv9hD6mRGKNeCSCPkz6qxL3pH0+SNsWwXBYdz6RCAbwkh1zPiTruhsrk28+Ot1gm6KmaD4bAJAbvuhiPgZNqLQkBVw+/EIgnNd7Uz7waRD6LMhQPpLKxt4D3E8+uMCsZfHaQT6YKemhzQtLPkSf6jJXUUg+rNkkGWSWQj4EN+kj+ZA1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"0T4MWbH1XD6u27ok/TFhPse2CamEPGA+UMSLwkv2Vz7xexiSmpBSPp9hyNyfIkc+/2o116j4QT70pkvCKOE1PuD9AWXsakY+8bZ3nOuhOT7pg9PkGSE+PrcxSD3E+kA+iZ/H10swTz6aOdl7iyJMPkywzTOdZ2k+03srhbdRcz5eEIX+Ki19PlrY3+ltM4I+vKblLAX7hD4ZkDfh0hyEPsXhUNMl0oA+xhVQyXMydz5Oi8Tue0VyPrEEPvc2XGs+3FkTamnQYD53Xrg5Uu9WPmctlQSjulA+6GotzSe7Wz6AFUquHtpiPieKYSQMrFs+ofaXw17dTj5vT8UcJHtSPgA/A+qI0FQ+HvHMAeuZVz6Kmh1CDPRaPuoFXUi9D2E+OZbuhLhcaD6O8Dn51NFlPoEkpehaTWs+0v/e1P1HYj4dmZfK3SxpPs2ZlNUxV2Y+z+cXdRVncT7mSwhbdbhqPm/0W7pni3U+bHww2M2DjT4JJ8aZ6j6WPnaHUNyRxpQ+rg2N8TvPjj5H/i8sICOGPkPJAIO1aXo+MQI1xp8vcT7LaYt2G4NnPrJc0vQZLGE+DU1+PYbJXD7MDrSq1dNSPhvpCmxDIEU+IAEARb5aMj7h8V0l/G0yPhq8+26AhS8+6GtAdYwdMz5Tzr9bPw0oPqGshfeF4yo+JnQdlkvEUT4fEdRuQ22EPl7QXjlkzJE+IFV1Ah4llz4w883ZOmCePo+GVVOqR6M+e9zbhxxKoz75mGggI5iePs0JwQsn+Jo+66mPWHavlD4jLgKal8yMPr4b7IboA4E+LVpVUFLacT7aMCkgOi5ePlVjfaPp81o+KtVy8fkKYD7/Uk1BsXVjPvnIag8DBWY+ByD2oAzSYD6IklzOZ25wPjNgu4eOjYE+2zUAnuHAjD5iMI+zu9mMPvVYsf+41Io+gCRyCNsxiD64QJNSnRKFPpwXwRpaWoE+Whr8jMd1ez7bX64My4F2PnjkLg56nnI+SkIoqZ4abT6z6jhOSGZmPj/VF60bp2A+0JqkRaZ1Vz7yKNhrdVJUPhd5gnSDL1M+HMjzzxfsRT449Pl9eDdQPrY5gNaaYk0+7CQFg5SxRj6KMQzPUcg6Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2045\"},\"selection_policy\":{\"id\":\"2044\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2045\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"2067\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1993\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2001\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1995\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2025\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=136.65, p-value=1.48e-02]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1998\"},\"major_label_policy\":{\"id\":\"1996\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lJPyQNTNWj6WDEfIOr5fPjdPnNE5wl0+3vHF9zWjVT6ORjdsxaVQPiQMy7MghEQ+FZZrs8yoPz7Upa5IJhczPkVOMr+l3EM+o6G6KclbNj4++ciYhFM6PtB9DI4IqT0+3qnEFZmQSz4/ZjArouhIPlVCUSFV7GY+74iS7T2GcT7DxZp+xZ96PrJ/wJS+q4A+z+Kaewo7gz7fxYSzTnCCPgfdGrvrv34+7D0ExeUcdT7psmeC+pJwPrldNKcZ+mg+IVqcs/hcXj4E1uSWOp1UPu+BP2td5k0+VH6bge7aWD6nwQ0N8yBhPja6Z+Q/Q1k+TSJlWpERTD4PgTLNEcNQPmK9gHe52lI+CyXnUi5cVT4ytWhxFF5YPgMPGg7Uol4+THQ2qZHpZT65QmhQSkNjPlroeMEEFWg+JgdQ/ITGXz5ABZ4wNC9mPp/ZgwdYuGM+8rKCDSK2bj7SsIwvGJBnPrfFFY3uTHM+ZTFHEklAiz6kXZEpgNGUPoQPIxuucZM+agGIpvyTjD5/AnwxPGWEPoPRAxd0Ing+A7bqCisrbz6e6H7DEVJlPkJ9EmAMDV8+hIobIns/Wj55klr6IyhRPh9v330/CUM+SyydnstfMD5RmCt9Dk4wPnJrw2gGpis+ahOgP93DMD4/vJYaMSklPu9NGuDV3Cc+OXTj8H0KUD5zKcJOZaGCPuXtRo9ATZA+4VMyAVxWlT7RRKudbjWcPsIhDm7+B6I+deNNkYAfoj7+UvxcauOcPresSRz5HJk+jDGEeNIekz6DSbH+8GeKPqpJWtp4yH4+HbCtovzlbz5AJjDyRJpaPsGpBfDwr1c+DGUIKSFWXD6jpT+6XX9hPmYxm9drxGM+b/4RBSgtXj5O4/Vx5QxuPnR2nXcwRIA+stg1U2DCij6RFvE/DeuKPoZQipe1E4k+4MIqIXuXhj6vwvrvipuDPmGKC9JqFoA+0XoJJxxneT42NFr+rs90PgUtBs4HNHE+wo9EoqDgaj5ndeQ0g6dkPsL7aweuqV4+5m7i8L54VT5xSfQyUY1SPjDv8rHCjlE+akTQmoTjQz4Eie5OX71NPn1stQT52Uo+TP8UTvyjRD5HtHp5pSw4Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2025\"},\"selection_policy\":{\"id\":\"2024\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"R1O50v9OcT5U9Ll0RiZRPtf9FlpvPWw+lYWhpE80WT5H0qjBo+gtPrJHC/LL4FE+dFnkxsvQWD6BvjVoGTlWPr+Ob6UcO0I+IGqPBrfpWz7JE8Hjgs5RPjV+QdMSW0g+LI2svuiYNj4JHz/6DOwpPj1gdz2BnAk+zJu5POIqVz7OIZibAphbPqg0BYHioV0+frvcpBwyVD6+hN11zS9jPkxPtvOXoWI+nhXmOSl3Uj4Kr+rW6z1LPgAQK40fSzA+VfdnawzoAT5gn8e1jGlZPvywpUQRvVQ+A/sVtS6/Sj58TVd2B2pAPniYZsN6bVk+c09YNXhkUj4qJXyeh0UoPnvnWFeC7Vk+QJBo1DfNVT54FL6z579RPrCU4U4iVFA+YJqNTBIkGz7eFGOOC9RSPnhNeFPyizU+FJ10DO+9UT4tAhtmhoE0Pur5pV245Dc+MZh0mVvvQT70CVZJlNRRPkOBIxwZblE+iJzZdZwnRD54YsMrzs09PuaUrn/i5kU+TEIZUbwgIj69QnjEHztPPq/otaHxdFU+Ovs7UpgpPT56OtvpYg1DPjJ8xPyI1EU+HgeUXndJOT7oRkOhc9A0PpJyNBDeyko+vFdyco8uRT4mchaa/AxFPpYnHUiKEEQ+wdzvPNwOQT7YZ8akPJFDPnJMnrFfcEY+3kX9hJvTSD7Wfvn4P8E7PgqJVMyYrj4+jqGxHHtGSz7dkayMQSFTPqrP/lavLiM+Zk499anhHT57ttYS0EYVPtDwe+EdmeU9S85pBeOZQj7IDUuOzplFPk2wLhg5C0E+Wp/24fkqMz5MBV4CNbsCPnkNsc2uFkI+7q3GDaCiTD5kD2YDRfFIPn7ztyHZizU+1x+zUtMgST5F/COn9hxFPnQhsnGxiEY+zhYpQSQtRz4sxId5x4tAPjZpC0P/xEQ+UwNqnlvgLT58bgt+OZxDPjDf6hp2CFA+HlDW6uhgTz6WT3POQEZBPsgsud0tThk+WVQON5r4KD5t65So0FxKPpZdy26V70I+zCBxGQe2Oz40SeYiUqtMPhSJlCXbAEc+0o1xXeoCQz4F0Aww0KFBPjuhT4amUUI+m5hkZgEART6fdND/zZJQPkIx+K6omE4+2toH6jW4Sz5s17IjVA5JPuwX7G9pX0c+U36kekDhTj6y+VLKTZxWPhYCdfyCRko+3dKvnbLkUj4tqBCNkhRSPiUjgAAN504+iO0sJSWgTj76QffnkABNPljI2dCmRlc+frI13tvtXD5WzzKrRGRbPjx1O/o64V0+LUyFGGdEXz4f9/1DT0FjPqHTmpNiT2Y+K9GO4r78az669M8P8rhqPhAv9Watlms+gHo+JAcucT7etqTf6PFwPsxkCUKW/XE+j6b0zafhcT5axpDwJ2B2Ph9bYqILJXc+DkdgA0lWeT6dFAHXc857PpjHmY8eG3w+LumOLb3/fT7Dx41pB15+PvrsoKxjEoA+/U/C+qN+gD6tkWRM4fCBPj3v7TsgrII+CtI07fNTgz6S+ajbg8GDPtCr+oICXoQ+IlIExzCLhD5JY/LLdRKFPtSgnJoy7IE+CG6w1TJsfT4RFtiH7wR0PmygAOKVb3E+C1hF9fdUZz624iG58W5gPgp7r+k0Slc+4/7IXoZkSj5gw1zkPDhUPlIqWKVXBVU+nDxzUFinWT4BmxHmQuFHPr6OefoRGlc+tNjR8+pwUj5kXvImR6BBPmC8n5s1/VA+KJcewB2RSz4UtV2wELBGPuu/iDWpG1E+z077WVEsSD7Ggty7d5hPPoSq2aRDw1Y+vyvN0DbTXD4By4jBcGBhPoYPCyy38mc+N0yNYLqvaz5HeugmOTVxPuOgW7gIVHU+V6TkYZ/jeD7SoGEwuY17PmM+QeAdRYA+QjDMsO2PgT5MM8/a7ZiDPkrAsHUxeIY+18W8ujbOiD7eDKwWIRuKPskxXPRydY0+1diLLhZHjj5IrBiurP6QPgyjhZPNTpI+c6cybNuskz44+Q4k8uCUPjpwijD8DpU+SBE+kiwllT5TN4jyXDSVPi04pTDvnZM+XdoGaaRSkj4e2hb3NwWRPgIoSgQQV48+icw++8DCjD4CsCwl/ROKPk2AvuWbq4c+hSle901DhT5HyGeNg7+DPiaF7rOSboA+p94PRmZGej7zcyi1SghxPprC2AwVm2M+dGHcHYbOTz5O4kJOlQlEPl59JxTB6CI+4vln7rAaCD7kQEC3BCMiPnr04SuzZi4+pjoZVIPoGz4QHZHJ7fkfPipC8roFDCI+VML7j2IhJD52PT5DJD0mPkYiPfYUTk0+5p48sW+wOj52ychGPz8/PikkicpFTVI+ygcTVWZNTD4/uvA8lSxQPko3h4wfDEw+Fs3HemdANz6u82hwuho5PqRPaLdv+jo+VBek8Z+0Mz4/WxBQkLZFPvnr4Ew2VDs+oarzclJrST7VtKyIqaIuPkKBcvQ9BDU+b/tRlcWdUD6zQz53v7BQPnqPcKU6HV4+YJoIvsbvYD6Zssbufa5aPnII1A4BcFg+G5XtJhUrYz4R8aSElj1gPq0kTYSlU2A+0HAsYG18Wj454WQUjChgPmt8eBJdl2M+M0/Hhj5BZj5eSoaUKjBuPrDCtYdbB2g+XGayM1EmbT5O/KZUFYhwPhAFXr8PCXI+/nDBlBjvdT6/SlCYHRZ3Pk/qQ7dVyH4+w5tz4SMfgT6tXYtOIR6BPoisaAKIjoQ+PPkKieuBhT4KnSOuK/uGPm8/235Rtog+pv+n6K8qij41Yn+p6fqMPjBdzil+co4+Qd10nkjJjj6cHZg/MEKQPkZBq4Spn40+1pd8q9kUkD4ePc9mCsWNPk8vxWROyIw+V7QnM6Enhz6cavF/ALaDPorFMyAEQn8+1Aeyn0V6eD7LHHV7kxlwPv6xIa1W52I+Y/MJQepLYz7QFB3GkBpkPi3t+jPCFGM+86s6nqtxZj7MPXFJGJxhPuC+UefG3WI+HiGPRLoqYz4hNSYVcURpPlHN0x5VFWc+qCItNflwZz5lYxocR7BpPqyeTRj92WE+KC23kkccTj7aItq4DghKPsoRellWgVg+rkivsTTpYD7e5EFrjl1iPkSBgjB4Umc+k6DXcoM/XD6vWrofu+dgPtjI/h6Mb14+8sTofZ2cVz5m+CW85/RWPi5qhJzcbFU+clhLhNgzZj4l5LMXlldrPvtPN8ZXg2U+/Ilx+OD8YD76ExnpgORlPuxq01bHHmM+mFba9xv+ZT4pK6cywYRZPoz0umUkrF8+ZXYs3FlaYD5oiiLWMvFXPsNmeVEAQmE+wQjyhV5HXD4fcehnIPhnPgivXJ8nL1I+4t1V/09HSz6bvvkQ90dVPuFduB3/IF4+P1vB8zXfXz5W6ghYSJxaPncfUZVHfFM+QsuZ+AzbSD5VzZYZQ9VSPj7aL9Uar0o+HmvET/F2Oz5seRk+85T1PaV/+Gc1Kyw+O9wJgjLsOj4OLUZEZmM7Pgh2fKDAQl0+ONRzAB8RVD4cQIoNeclXPouChxV6FV0+UtVkY+2pWj7+VkUZ8r5XPio5RP7czVQ+IeIGfpmgYz4VEUvyEOBpPlICrDFdIlY+sBWv3gktRD7dQzpojQdMPmyvT7Oq+FE+CKA99p/jNj6utuu64d9OPkuaU85p8F0+T1nmfZIKYT7mL9BQ3ctTPrItKqo5Qkg+YC8hxjxHZT71xIFE+TZkPnJAO4Q5vGg+tWkD4kPSWT5RFC9KFuFWPnWMWMFgdEU+Ho0eaGooXT4OraCQz0drPkiVXID5X10+sDD4qYhEOj4x15mcYiRgPtqWxzgClDw+gM0O9At3AT4XipCHsR1OPv4dpu/K4U0+vuq7GCs1Vz4VrReVAGxYPur3qYwftlk+8n2yGyNzVT7MERCB4RxbPlJgIsIuCF0+IykqvNlhWz4ADU0ZtptePmWU9+KUCmA+72OjTBnyXT7nxVRKGndiPhKcwn/ocmQ+0bfuAIxkZj5n4VHdoLdpPsLPxH8yV2g+lAo6qewvcj5M6UqhJih0PoKDVXYtmWc+xHkUBbSycD5wljjzWQByPrF2EI4BBnI+UYieRf8Baz7LpPknjPh1PqOa9CESzXE+vTy92MnEdz46nWGpdq1wPtRBjFT9Nnc+VSm0AYN+dj5oZ2/b+3l3PnuoBZE8Cnk+ISqs9s0pfD7wN4S6RtV9PpY80ESPd3w+N061WWVkej5UEOhgS9V8PnBGDWV/T30+qZrNRn/UgD4ImstGTL99PnGiMW9RQ34+7Fi1+WwKgD4KLQZSQ4F/PqmQ/C2SjYA+3sBSNDeEfz5VTUysblCAPqXb5p7fkX4+fpIMvfwmfj5y8WPL5ut9Ph3PrTH7kH4+bvKwWNJieT6SnOpqoV9+PkKTHssvCX8+WeEpouj8eD5yaGxe98F8PjfTVoOqdXg+ux5Pg9ZneD74etCq0m54Pv5alsLaYnU+gszvQm5Icz7ZFe4xXq51Pjf5+LM79XQ+rU3j3uMucj5o3OV2dYVyPtP88xYLD3U+CEQ/47n9bT5OOx6/83JtPvL/vJjrTms+sjL9W4aIbD43DmKelURnPoJAhUQR82o+6B62/mOBZT4sG7fAQ9ZsPuLcGu5r0XE+ebRK3xX2az5wxIH5uoVgPile/iaevmQ+tzlFy01NYj68GGnTgqBkPpA0Evas11s+XAKzlxWiRT5o6rGCYmhQPnrUXKv2olA+uNIwxkseSD7eqgD92XNWPtpv367MiFQ+HAlnFY4PUT5fgazQBIVSPthkdVon2/s9mkHB9HAGBj6eN1LJOY9JPmqDcCvyOkw+nTcLRAEIRD7Z71oYRZM7Pjs/kqWstjg+aK328fvVNT68hWP6NfEyPnmCPreSkVU+8YMu22fgQT4rIAgM0MVRPgnai1FksVc+Zpdnf8eUVD4j44QQ/BxRPiMXdIz+uEU+uGFfkK0gUT61xq5LX+ZUPjdw659Tz0s+rzCI92pVMT6QI8w5AAdFPlrNNHFglEk+nvVK87MnTj526R3XfmBRPgh/uRAVsFM+UwsAKclPVT5byFhK3zVVPpJ9z6bhWVU+qLUb495nQT6Nmk0j+qdUPioi7sEtjk0+Y0NjUfD9QD4zsVtaLXYhPqAAJMhStEQ+39avAPCPUj6iboAo3/xNPtluXcnA0EY+zuKfHQE3Pz4UeyTqKrowPpzrwirVLFY+isFQICyhUD6zuc4xc9xGPrdheowodE4+Gqm6iK5zTz5C132lRIRIPjIJNjw6jEE+DESl6QoXNT6IqKe5fxEcPsaSw2ppNz8+2NmUWZAUOj4IGLvMOzJKPmZEkTINtVM+IMJzQlK+TD5WAtJPgwVCPv1aRK/1/iw+2Vnn+HEQWj4HaFw67+1HPngvtSLUnlY+vHGtUYljTT72L16HLBYzPonjLm/850w+vNbA3cS7VD4zwvWnrmZXPqQu1TuyFFo+RG0W9tDFXD5ahgMi+3lfPmeKRSOgGGE+MagZ5h/rND4h1p6TtFpVPrjN14EU9FE+mVS4lhSEID6GH3aIvE5mPsM010MWL2M+5osqon5nRD7f3W46UYBAPsq59AgkKTk+GEroRp1IMT7p5coI570iPlQFo10Fw/Y9M3jLJOylbj6wz5Q/QStsPtq1GW0d92Q+zv0zN61mUj6Y5SRoUxVEPoCFkBu49Vg+pT3vCjQxZD43Le0hUPBrPjVP6dAaWu4931hnxaJZYD5gHkATz/pTPvqDXGpC3Uk+ql9O0rQYbT4aTP1VWyZiPtKdZn4rnkw+VAIFFIdEdT43uNmEOt5vPhAWzhtPa3Y+x2przJlYYD48RbRMtjhfPjLiln+Lvl0+4p1cVaFCXD54jrP9BMVaPjSsq1SzRVk+kt2XM6nEVz4TybFw4/Z/PmXZ8dD24IU+q0IVhjNLjD50pL284GORPgZqxhCIuJQ+h9ltVZ0rYj4z3xtjb8qDPkETwV1Z8YA+XNM3ltopfD5+knH9VWp2PjGdPS4tLIQ+TLhyZ8stjT42Jrcq4/yEPrr+i3RqhHk+\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"2001\"},\"selection_policy\":{\"id\":\"2000\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.03, C/O= 1.35, [M/H]= -0.35, T= 821.59, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"nbQ4P+kHVT4aGwHdL6dYPsguPDB9fVY+oOHITxbTTj5AYH05mAZHPiYykFQCATs+VfOjPkQwND4DFRo6/j0nPuYMNK/tCDo+rNJIv3AuKz5g6FTbNiQwPrT7bVHXJTI+rNuWJy3cQT7qqQlazURAPp7pGXEER2A+ToAXnX1vaT58WyGM8clzPpZEqAqWJXk+MeXkLqkWfT4/jI90cOl7PhZJ/zYpAXc+138d+QUQbz7g2prcsw5oPkAw5v0umGI+qFC4wISeVT5GZuzWcMxMPgu4HB/oXkQ+F8h1wEknUT46brtV8gZZPh4FuUFvz1I+eV47IZ2URD4CxrObElFIPjrxsxK0NUs+Ui81r163Tj5TFMECTHFRPitavT5ETFU+p/u/IQ20Xj4d8I2KytRYPtcjzkDP6l4+xk7y76r0Uj74KVOscVlcPp2QVnuLZ1k+KMM63HG/Yz4gH/MbgzZePot+YoztlGo++4YSVk4whT7AuxYz5v6QPrx8sIiFwY8+uf2LoSiahj6eXLCUPHZ/PrKDAGd3CHI+mlLMCvSWZj5+yCknKudePp5hxw0KO1Y+29cAAaJyUz6ayHVpgl1JPgyKDrPm4Do+sKEdBlQkJj502Z2KxzolPuIym0HNRiE+vuzuLwzxJD5rjoSVktYaPvdDEtVdhB8+ehfqV6TWRj4WtmLosaN7PhkuQ11flog+ONR/NxJ/kD69N2oEqGeWPtjztMDLX50+SizFv5//nT68P4lr2lGYPhi3909rJJQ+tJqsvMbbjT5gCPx9O/+DPqIPtiwXFnY+CIKXP8+zZT7yCSQaSgVRPlZveDhW4k0+aPLjCa1LUj6iceIoOXxYPoRcoeeQeFs+wEjOkeHlVD7pGqTj7YRmPoTWUxhBpHk+lnoI+TdrhT56DWc/Rb6FPhKlZcg6YYQ+hQnIQHpMgj4tFnX1KV5/PucwR/POZXk+Pxilv6nkcz6MgbfhHUVwPrsf71LD0mo+RgEc+yjqZD5rzDLYFPZfPsH5cMrhlVc+eA0OfOAlUD792WRfkJ9LPhXqlOVZZUo+bJu278jiPD6DK2MnrIZGPlz6SG/nEEQ+p6A0wdVIPj456FmzlTAxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"RjlWod9JYD4Jf8bZompjPtM3fjl7g2I+7HKnx+DcWz783K+7PshVPjX/TT3Ah0s+apwZlKqQRT4mQVB0TY86PheWyqbUtEo+8NnQ81kgPz4OhR4raUFCPvZ/VeUclkQ+CDz5gYKiUj5KkSt+O8ZQPgybiNGlkW0+t1GZDL1Udj4FGIq4zLqAPhndLCSyxIQ+BlPDX8Dqhz6excEs5euGPnw4mx9XP4M+7Lt5jcixej5i+IEWmx51PjKLglAEXG8+zTFAU7aNYz7leFPCPNRaPuolsVvptlM+SZpgoUlHYD4xzD3vbL5lPk5vFocQt18+EHPHyULHUT4dH4tMml1VPieCp+WYGlg+bbIzTq1cWz4RVhDg3EpfPu5hu+6x/GM+xOqMwRx5bD5kjYlbLxxqPmRfRfFQWnA+w99WhC9MZj6EdRKLrzFuPvBqXFHqvGo+XlFlH2nWdD4K6Y9odwJwPihM+lNmT3k+5+095yGokD6I/wsgGqSYPqrg7XGZApc+jgLCVehGkT6v1p8YWg+JPlQfB8dwPH4+toyEBbHfcz797GhzjjBrPnPMLlmH72M+lx6bISqGYD6lQPq/hqFVPjiZN6ILokg+vocrOm2tNT7oQwg1uf41PgHS9cefAjM+dbBIZzQPNz5IMWvqGOcsPuJ5q9V89y8+tdzRtampVD7b91Kp8XCHPr5E7G9RT5Q+itPkyqUtmj7zKHabmgGhPpjJwfsWYKU+xTC5QjE/pT4gszcnfbqgPlaim+iGFZ4+vhWyksFPlz5TRbM/U2iQPtlB/0NtvYM+Ge/hAhUMdT5HIR7lnxdiPuyN52FbN2A+2GsWpEowYz51Eg7gnsBmPoq0ZTuPzGk+D9oqPDe6Yz7a1SOAbspyPqYBEWNAtoM+Z5uxVsQMkD7Ujz2g6guQPvr7rmYwxo0+O3yNAXziij5I+jrlAIiHPk58cyrueYM+Y91tjo7pfj7g5vwaQFp5PizKlPKt/nQ+H4+2JIxrcD6YhK/9+1NpPuJ+MyK93mI+VNC2ZZ3LWj7kJTY22kpXPlZpG3HY6lU+HjvFvaRVST5C8zw7CXpSPk/vEE2F0VA+RK6Pu40jSj5VgJs/tSg/Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2067\"},\"selection_policy\":{\"id\":\"2066\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"},{\"attributes\":{\"ticker\":null},\"id\":\"1998\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"1dfc2a89-79d2-49a5-9296-35120595312e\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"2751436d-cbba-452d-b83e-187401968e47\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:26.527125Z",
     "iopub.status.busy": "2023-11-28T20:32:26.526486Z",
     "iopub.status.idle": "2023-11-28T20:32:26.531414Z",
     "shell.execute_reply": "2023-11-28T20:32:26.531924Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 136.65, p-value = 1.48e-02\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(136.65, '1.48e-02')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:26.540451Z",
     "iopub.status.busy": "2023-11-28T20:32:26.539773Z",
     "iopub.status.idle": "2023-11-28T20:32:26.541694Z",
     "shell.execute_reply": "2023-11-28T20:32:26.541998Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:26.546543Z",
     "iopub.status.busy": "2023-11-28T20:32:26.545698Z",
     "iopub.status.idle": "2023-11-28T20:32:26.548813Z",
     "shell.execute_reply": "2023-11-28T20:32:26.549476Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:26.554335Z",
     "iopub.status.busy": "2023-11-28T20:32:26.553263Z",
     "iopub.status.idle": "2023-11-28T20:32:34.793661Z",
     "shell.execute_reply": "2023-11-28T20:32:34.794027Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:34.813126Z",
     "iopub.status.busy": "2023-11-28T20:32:34.812129Z",
     "iopub.status.idle": "2023-11-28T20:32:34.815622Z",
     "shell.execute_reply": "2023-11-28T20:32:34.815944Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>126.844286</td>\n",
       "      <td>0.713581</td>\n",
       "      <td>5.131115</td>\n",
       "      <td>811.685413</td>\n",
       "      <td>1.472696</td>\n",
       "      <td>-0.345582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>164.235285</td>\n",
       "      <td>0.485750</td>\n",
       "      <td>0.059099</td>\n",
       "      <td>14.861799</td>\n",
       "      <td>0.148052</td>\n",
       "      <td>0.035320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>27.540000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.020058</td>\n",
       "      <td>789.844381</td>\n",
       "      <td>1.267978</td>\n",
       "      <td>-0.409940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>45.935000</td>\n",
       "      <td>0.498035</td>\n",
       "      <td>5.115402</td>\n",
       "      <td>800.949310</td>\n",
       "      <td>1.377818</td>\n",
       "      <td>-0.357977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>63.070000</td>\n",
       "      <td>0.999000</td>\n",
       "      <td>5.129105</td>\n",
       "      <td>812.451843</td>\n",
       "      <td>1.516578</td>\n",
       "      <td>-0.338869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>107.945000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.169784</td>\n",
       "      <td>824.396901</td>\n",
       "      <td>1.563799</td>\n",
       "      <td>-0.326777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>489.540000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.198267</td>\n",
       "      <td>828.809245</td>\n",
       "      <td>1.641084</td>\n",
       "      <td>-0.300756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000    7.000000  7.000000  7.000000     7.000000   7.000000   \n",
       "mean   0.810000  126.844286  0.713581  5.131115   811.685413   1.472696   \n",
       "std    0.144016  164.235285  0.485750  0.059099    14.861799   0.148052   \n",
       "min    0.610000   27.540000  0.000000  5.020058   789.844381   1.267978   \n",
       "25%    0.710000   45.935000  0.498035  5.115402   800.949310   1.377818   \n",
       "50%    0.810000   63.070000  0.999000  5.129105   812.451843   1.516578   \n",
       "75%    0.910000  107.945000  1.000000  5.169784   824.396901   1.563799   \n",
       "max    1.010000  489.540000  1.000000  5.198267   828.809245   1.641084   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.345582  \n",
       "std       0.035320  \n",
       "min      -0.409940  \n",
       "25%      -0.357977  \n",
       "50%      -0.338869  \n",
       "75%      -0.326777  \n",
       "max      -0.300756  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:34.824149Z",
     "iopub.status.busy": "2023-11-28T20:32:34.823219Z",
     "iopub.status.idle": "2023-11-28T20:32:34.826643Z",
     "shell.execute_reply": "2023-11-28T20:32:34.827025Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>143.63</td>\n",
       "      <td>0.00507</td>\n",
       "      <td>5.186197</td>\n",
       "      <td>800.808390</td>\n",
       "      <td>1.486827</td>\n",
       "      <td>-0.348853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>48.04</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>5.108851</td>\n",
       "      <td>801.090230</td>\n",
       "      <td>1.641084</td>\n",
       "      <td>-0.409940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>72.26</td>\n",
       "      <td>0.99100</td>\n",
       "      <td>5.153371</td>\n",
       "      <td>823.821004</td>\n",
       "      <td>1.516578</td>\n",
       "      <td>-0.319445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>43.83</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>5.121953</td>\n",
       "      <td>828.809245</td>\n",
       "      <td>1.541917</td>\n",
       "      <td>-0.367102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>63.07</td>\n",
       "      <td>0.99900</td>\n",
       "      <td>5.129105</td>\n",
       "      <td>812.451843</td>\n",
       "      <td>1.268809</td>\n",
       "      <td>-0.334109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square  p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000      143.63  0.00507  5.186197   800.808390   1.486827   \n",
       "1  0.676667       48.04  1.00000  5.108851   801.090230   1.641084   \n",
       "2  0.743333       72.26  0.99100  5.153371   823.821004   1.516578   \n",
       "3  0.810000       43.83  1.00000  5.121953   828.809245   1.541917   \n",
       "4  0.876667       63.07  0.99900  5.129105   812.451843   1.268809   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.348853  \n",
       "1    -0.409940  \n",
       "2    -0.319445  \n",
       "3    -0.367102  \n",
       "4    -0.334109  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:34.864708Z",
     "iopub.status.busy": "2023-11-28T20:32:34.863735Z",
     "iopub.status.idle": "2023-11-28T20:32:34.868335Z",
     "shell.execute_reply": "2023-11-28T20:32:34.868660Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"a2fed9f4-f323-4869-b6ed-e61799cefe76\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"36b03574-4af8-4140-9880-304eb983eb29\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"qA102kCn5T/KL5b8YsnnP+xRuB6F6+k/DnTaQKcN7D8pXI/C9SjwPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]},\"y\":{\"__ndarray__\":\"hetRuB4FSEBxPQrXoxBSQArXo3A96kVAKVyPwvWIT0AK16NwPYo7QA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]}},\"selected\":{\"id\":\"2300\"},\"selection_policy\":{\"id\":\"2299\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2300\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2294\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2292\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2297\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2297\"},\"major_label_policy\":{\"id\":\"2295\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2295\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2294\"},\"major_label_policy\":{\"id\":\"2292\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"36b03574-4af8-4140-9880-304eb983eb29\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"a2fed9f4-f323-4869-b6ed-e61799cefe76\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:34.872160Z",
     "iopub.status.busy": "2023-11-28T20:32:34.871649Z",
     "iopub.status.idle": "2023-11-28T20:32:34.873207Z",
     "shell.execute_reply": "2023-11-28T20:32:34.873572Z"
    }
   },
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:34.876906Z",
     "iopub.status.busy": "2023-11-28T20:32:34.876380Z",
     "iopub.status.idle": "2023-11-28T20:32:34.878107Z",
     "shell.execute_reply": "2023-11-28T20:32:34.878437Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:34.881677Z",
     "iopub.status.busy": "2023-11-28T20:32:34.881053Z",
     "iopub.status.idle": "2023-11-28T20:32:34.941325Z",
     "shell.execute_reply": "2023-11-28T20:32:34.941648Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"43315322-16a7-484f-8476-1bfe7406173d\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"b85b4ed1-4e6e-4615-a72f-568c0575a498\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2508\"},\"major_label_policy\":{\"id\":\"2506\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2652\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2514\",\"type\":\"Selection\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2511\"},\"major_label_policy\":{\"id\":\"2509\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"2508\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2514\"},\"selection_policy\":{\"id\":\"2513\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2652\"},\"selection_policy\":{\"id\":\"2651\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2506\",\"type\":\"AllLabels\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{\"ticker\":null},\"id\":\"2511\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2509\",\"type\":\"AllLabels\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"b85b4ed1-4e6e-4615-a72f-568c0575a498\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"43315322-16a7-484f-8476-1bfe7406173d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:34.955461Z",
     "iopub.status.busy": "2023-11-28T20:32:34.954756Z",
     "iopub.status.idle": "2023-11-28T20:32:34.996814Z",
     "shell.execute_reply": "2023-11-28T20:32:34.997144Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:35.009167Z",
     "iopub.status.busy": "2023-11-28T20:32:35.008160Z",
     "iopub.status.idle": "2023-11-28T20:32:35.012150Z",
     "shell.execute_reply": "2023-11-28T20:32:35.012722Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:35.017705Z",
     "iopub.status.busy": "2023-11-28T20:32:35.017234Z",
     "iopub.status.idle": "2023-11-28T20:32:46.979447Z",
     "shell.execute_reply": "2023-11-28T20:32:46.979769Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.1358166714509328,\n",
      "    'gravity': 4.686373710632324,\n",
      "    'metallicity': 0.7881323178609212,\n",
      "    'temperature': 941.8753234863282}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.686374   1.135817   0.788132   941.875323\n",
      "std     0.148390   0.133620   0.108031    28.644382\n",
      "min     4.461123   0.877037   0.577868   880.009949\n",
      "25%     4.564400   1.043832   0.716209   926.638824\n",
      "50%     4.684673   1.118597   0.804496   946.390350\n",
      "75%     4.778849   1.231474   0.865004   955.886337\n",
      "max     4.987113   1.429834   0.955990  1019.346863\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"cc0aff7f-4c83-449c-b710-0b430c87e109\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"51db1e3a-e51d-455d-b478-00c36d87be30\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3029\"},\"major_label_policy\":{\"id\":\"3027\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ei13iDymQT4DeQ9OA4k+Pmy1ITSznEA+k3eZ7HpLRD5fWWX4CNA4PhG9cOoIwEg+pqe5NsISRz7W54EiePxIPnZsiQ2QtFA+s2f2kCUjVD7ioYSkQG5bPoh9DGecumE+YRugdyMQZj7V3SE4TeRuPgWxt2vI5XM+wvxfDH9geD6NgjJ6VK98PvpkuPa0XYA+lijlae7lgT5B600WAyaBPsAnioKZb3Q+r/lzQRO5Yj4TLbKHZXlTPgbfqMHpPVE+IinJcC8cTT62TQj5R1lHPlNd6LEpQEc+7jRitBoHSz6kEnyDcVBaPt3c5QR1JWg+B3dr0R3kcz5i8TKglGiAPjOSolpyqoY+RJ3fVJUGjj74DHPnfIySPvSdQbFhkZM+iVO7KkfSjz5CQ7SOVlWJPlnuFftB84A+cWziFx+vdD4eNVejZ+VPPqnP8cgHkC4+fOUXIVdqVj4T1O8eeAJLPtpzy4ut4lQ+FLG+1aY5TD6fbi8j+9BSPv/ErI2p5UY+2hI2aYdSSj7NVPwb27NUPpwyLNAIwlc+MN1XV7D2Yz4yW3q3Fn5rPgcZcnOseHY+QPRT8ZP9gD6+gW77MZeHPvDVcb0nl48+DYxqNzIUkj5mTuG9jqOHPk/v77sAm28+yGDuCGipWT7GjZZjz8RiPpHlNCP/Ml8+2cXEu40tXz4L/jAzzxNSPsdqwh8mhGA+1eneyLdPYz53iLoymzhcPnUvTCGNLmQ+TgbmYSF0Wz7QZEqq6g1ePioUFD2mkl8+jL8UVyW6az4E5fYadfd3PmYkOEhXlYE+fEVtIRCvbz4j5fIxUplyPs+/HPduClQ+5aaur0nWZT5uZxbVobtxPslpawJKKXU+ez+q9cUwez6qYD2EzZWDPslF3J3vGoo+ydxsMJXOij7qY3PxCEqLPg3l1Z2oQYc+7O9hWaiUgT4CLvBcHBx4Ptwh91d6eHU+fTQ+3P25WD7az1jhPWpbPredbz1WB1U+UGTk44O0Uz4fAVDR+rtXPnnwH1ipSlk+gC5ajy+bUT7xpPzauV5YPmSOsCcUSGI+nDfh3Xm0Zz543q5sjABpPnsebIB+J3E+3PAZMWoQiT7iOoj51AiSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3039\"},\"selection_policy\":{\"id\":\"3038\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"X+L0iDJyPz5iAGc72BU9Pqw7A0mRDD4+TnTULdliQz4J7tqFWz4/PleO5LlQCk0+xbo+NJyHRT7gDo761MRJPgxlJYacz08+yrlQsiK6Uz7tyOFI3AxbPtmlBWTcBGM+0WUDFK6vZj5NxPM5tYJvPoejKYH3JXM+XXMjSNHVdz67Snl7n1B8Phr3xwQJNoA+2fEZxpkXgj5vQPgGSlSBPprFV/s4rHQ+RklGDf74YT73c8I9cKlTPkRte2b0eU8+QzcUxKxxUD5uFtP32dFCPsrYuWb9zUY+zEvkw4TrSj5yVoplSlpaPiKJPMGqAGg+hc6JZLJvdD7WF0h2NVuAPltIsGIgAoc+0Wy6GRYbjj4sUqua6pWSPpT61SmEF5M+O4iL1LHejz4vC1eVb6WIPp+Uwjb3I4E+jR5r0dSZcz4Yd/96CC1QPnQLd97Rqys+ek1TcT7/Xj5AJLjopVZZPkMUzIn2Hl4+pXL3gqV2Tj7jj0pFt+RCPtBahhug5Uc+tzMXVmdPTj7f8CnoeDJcPgCGdToddV4+Wp/+AhkWZj5jWeBUGypuPiFWbHnepnU+BaGbYi1igT4M/HmiUmCIPrteNt4usY8+l3vQsPrPkT5UTOY5kRqHPsVs0SInsm4+ooTRLPMeWz6vTWOngzZkPkbDCL/Ud1c+P2JSlL0nWT5Klm7gDzNSPrkiHUV4yGA+eIKQJ86eYT7APL7MODpfPrBWnw76JWY+oFcN79qiXj5z9OOXYLRcPpgoT7xgr1Y+MDc7Tnhlgj4YIVudC+aEPp2JiEQ4PqM+KnA3prMZcD5TWWHg2I11PkhuwaUb+Fk+VAhKCDspZT78eS6Q+cJvPmRHZUzXaXQ+cDvrZUOYez5LVpNMF/yCPmPtsYuBdIk+Qji8R20JjD5NZ9S0wXGMPpCv9h+zlYY+ssXnCgmagT7i4I/8d/R1PmI5jnEKGXU+BKMisQycWT6VuAckwKpePnnjaGpQtVI+YNvf36bLUT7KUbypGiJYPhIvZxxD7lg+ADyn4k2KVz53ENROSd1SPtBVhsRztGc+RliHXkvkYT4+vLzekI5xPghmkkhdaWk+q4T2qolxgT52o7h+k/OiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3057\"},\"selection_policy\":{\"id\":\"3056\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MG3kKPHVPD67msaM0ko2PvTbTxS/fUE+lHGFwP4YRz6ttpI0A986Phfvn3eI2Ug+e1eSb0VFSj43TsOx8lNIPhEHzPwjGE8+gQJCRepoVD6Zhl+qqftZPmkOWRJbBmI+eFGAk7ZqZj4YTIiZiPluPj/k+gT8pnM+ovFRJIy0dz6PWbOPrhR8PkFspyy0doA+rjWep3ovgj5ftdatgHWBPraX77Qma3Q+wNKEjvxrYj73lIbfmP5SPm0cmTl/WlA+5azaLlAaSz4MwJQmCgtEPi3KI9UVVUc+ODd2XwZ2Sj61Ei1Z6BxcPt92ZZLiQ2g+w3Dbc9HcdD4wAvpMZEeAPnrPAxAyu4Y+4jUrt0tOjj4DevaX6Y2SPlWsX4+GJpM+mMZI68L7jz4enFU/TSuJPnaK3gdIx4A+dv0AvTE5dD7NXznH6P5OPpSrh2z2q0E+pf/tn3LcUz6io4e5vWlOPpSkd2FAoEk+cS53SvFkVT6eiwR/+9dKPgHPPqBMlEU+HrKh+G+CST4qJGrXYClXPmXkGmYKCVw+5gvwtCJlZD6nYtPZ0qFvPqQsqszsonc+UIgpVztzgT6t6ppFDnyIPjKgM1vrf48+7tW1/7jOkT6GCnmKZ/+GPlznBN4EY2w+vHMznA6FVz46G9xdBVdjPgKH/HUE8V0+s/nC8o5MXz738al+5zlUPqkg+LDaG18+g7bxyNooYT43Ck+Wt/JaPoNayqDOfmQ+JCxLrwLiWD5YEJ+aT+JYPsXHM658cl8+XM2cjsxRej4Qebgaho55PrCVnfXT+pA+8u/+qQPrdj5UeMadXJ5uPoqGx588k1Q+eWq1H6Wjaz5opXvpJENyPv/YnZIO1XE+66LyIxPnej6n7Fjg836CPuukkrB88Ik+woO5VfsjjD6rCAP/tJyLPjpmOeSLO4Y+E7h6j/ZZgj7hPTHm8JZ4PkWqEAZiiXM+RpwvtjibXD5YT1g/JgZfPlQlAXNxhlI+dHPmxP47Sj6QxYKsKLlRPp9jRmv9ylY+msN+bBnwRT4YNbi2ZMBTPhtuDnZqOGU+KH3IywYeaz6Ps/Zx8VhoPkXVRVesSHA+vq/0Qwx3iT6vjJmZncuEPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3051\"},\"selection_policy\":{\"id\":\"3050\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8k6pwxMoOz48GF+bUA8/PmroaW/K0EA+JFToWhOARD6M3U/8RFE7PqmN/tH3lko+I0kuCGqdST7WGlpHlXpKPgPlzlDTuU8+bbWzM3QtVD6a4C7/7JRaPrGqe5fSSWE+T/RFDtntZT5LKVnBPMBuPmDRIFet2XM+Hk1n0jD3dz4ka5WJLyR8PgY4LApWQ4A+Yse+8OkVgj7PBbMyxHyBPhSXVIAo/XM+1t6SFuQHYj5kobJQbmJTPnZ+bh/Ns1I+tMh2GuzzUD6nSwlVATM/PvljD/5YFj8+ouvtWuf7Rz4w5PZpB8dZPins3haP/mc+/SlAixutdD7674rlC3KAPoy7i5FwyYY+nC0hEHrGjT6PVgCkx0WSPgP1quRKJ5M+laewIFQXkD6OQxGuoNKIPiN16SVTdoA+vKVHRbqvcz7TTdtnRvdPPmZ4Ll32djU+559NHjUEWj52p86ooNE8Pnrf9rKgIEY+gZHjYtCPSj6C8HfLRWpBPs7u31cd/io+0aPX5omUTT4pacdS5qhVPq1f998O1F0+49uTZYZfZT5l5qq5lL9tPkDXgJgcDXc+vFCiJ2eUgT5KnSs7rLKIPoRbuxaHC5A+FGS4V8tFkT7pohSrIISGPpV/YfLponA+Gjg9SZdnWj6RFAbbr0NjPtO3BQEcO2M+NYU1cjcUYT7o707JPWdaPv8oHOh8IF8+FQDhxG01Yj6Reyc46XpYPvYU0b5rTWM+zPtvVSAfVz5T6FZFY4NTPg4ps32O9lc+Bi1tkgQOdD4Zk/j35Ad2Pucw/z+y3Ig+R9TDrdmIcj7Gi2/8lmp0PliyORITlWM+rQ6x0yhrZj7WsOE2koJxPt4gZSKNyHQ+Hzgi/oBbfD4JLKIRvgmDPsPzfI7ZN4g+8R3UrfyXij4eh9h34W2LPrrAH9384oU+LFp8K1z9gT5SLni1hNx4PhNmgSW7k3M+kTLwC3MCYD7zkoiKq3FYPq0LPjVwTFE+aIaQ1WH9Sz5yyz0fOUVbPhrZJbeEMmA+wunE8jAlSj5U0TojNGldPnyHDh2FrVM+caHGMVfuaz5/7BsUqRNxPu+YOe8q2nA+/1DrTlKQij58FeNVKhCRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3063\"},\"selection_policy\":{\"id\":\"3062\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8PECkT6tQD54cwLHZJw9PqOiEytQZkA+Z4V5K7VkRT4LsUFpGVk6Pvn5MaKGckg+eluvmk6SSj4zWIilGyVIPl3GNH5sRFA+PxcLHYx4VD7r5/wIT5ZZPoOX8v5hhWA+fBjDK1kJZj4Qp01JabNvPkO0I1j7S3M+5nLQkUHddz4VGT+yK5R8Pk0KeDdfOYA+bj9apHX7gT7tcgu/34GBPiIU9xwhnHQ+8Ib9vObOYj48sFNtoeNRPs/GuSxfJFE+3R2h2E+KTT7aZD56aw0+Pm8GUBigTEI+vDk97HsvTT4MYC6zD/RaPs+AwC9FHWg+8SMo3ur8dD5P2ZgJElaAPnat7FVznoY+MIAYrmM2jj5HtsOhYTmSPuqBLF+rq5M+6gDC5cYWkD6SG+Cyv+SIPokV4Cz644A+IpxrOPVrcz4BJeHxIFpQPqUL/GcEr0I+J56JyeGAWz49DEhbV/BMPraz9KQesEs+WsAuai6LRj4NjOTYDb9OPsNXuasjn1A+e/wH5Kp9VD7lG0sVm4xUPl/GslOwY2A+z5SAXZvoYz7wXNX/6dJuPhubdcm9MHU++uFA00HdgD555Fw3/dmHPo3nsnjppo8+tMaX071EkT5a7zqh6xmHPqwdLwbKIXA+DgeBDiA3Wz77Mu+3YwFjPqEZ0+EY12E+fWWFW948XT5Kg1fRTTBQPmAecWWcQWE+Q62F70o4Yj7Savdkg1NWPu0r3/mIj2I+RqBf8xDVWT7G0B8ExxxWPjsKxcrEflI+6ce04MGyfD5+nxAk/ntxPsgHgbCgTog+YSl7X3ZwbT7Lc+Ds+rpxPiKh3nD0O2U+tJkOb+BBZD6GTLyZcepvPrr6eRD2OnU+qOSHiw8afD6x+xeCsBuEPoZx5J33t4k+E4hjTpUHjD6w+JuYKMSLPsBie24D34U+BXvYa/pmgT4a/BIxmkF2PlSn9g3n7XU+pvhwL8JaXD4sD5gyLSJjPgLh+5d0Flg+EGQiTHtuUD4d0ykDz2pSPu7YMUR+klc+HuABNmQ9VT7Tzep8QF5YPregDP85mVk+pLK6Ow/KYj41leGQ03psPstRI83NxG0+xRbAuZodij7XjsML2HSTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3043\"},\"selection_policy\":{\"id\":\"3042\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ThgehNb7PT7iPsqDiO05PpQeU3fb8j4+HU9GvwViRj6OiU19awdAPjahre8OEEM+tbiDpd4WSD54FeP2QJBIPvX+asV23E4+AX0zV2e7VD5QolvKmv9aPuwFF63RJGE+SMdtBqSjZj49Htka0P9vPqdKaRqA4HM+NgfnOHZleD4rhy2yakt8Pjlu3L3pPoA+ZVyNN5P7gT5ICPQzIh+BPsBvTC6vnHQ+xN/22UJDYT4OSa2jdBpTPkEkfLOYwU4+rCrVlknMTD5q8ojl0wZCPlxiXmJfk0M+iF4w2iyAST4mbcp0Y5xaPkyACAuBQ2g+YpTAKcIVdj7VXA6l2UmAPgdFh6fAuoY+BlwmkQR1jT6/sNtNASCSPpAhgTP6tJM+Wwn0mNE6kD6vrx3/tyGJPj1ZdNhltoA+X0eX0zFrdD5dxHP5kalRPmzY95KqyzQ+P8kfUxwGVT5XjTrRBCBMPnFMBkFyKFY+EsLESb8HVT6nwBt4dRdNPrVylVFVpDw+Xw5D0mDzTD5SBQvZJXhVPgjDsDSaKV0+X5FppjGpYz6piLjthxttPtYa1jU2D3Y+q4ar2/f9gD6vcBOn3ACIPj4SQfRmc48+A+5xQAIEkj4XP/Tv0tyGPgYN/mKNE3A+p1aH/gzFXD7SFsB7jYpiPtSiLrhGPlg+YjvLwMyrYD4gCjrWB1JaPgoNzkgaRmM+A9cMdjv3YD4o6dlakqdXPv/XqT5P7mA+NKCSYOAVXj6ls3JeBoZcPqWYwB6PNGU+riEucYoBjz7EbvwrE0h3PoCdrQfbH5o+BFZsT41ydT4yLQeHTndxPh7TTCkaZVc+iBb/QRGhZj5x3RZOAaxxPp5pG92viXU+ALbEC24rez5wxOB4CWKEPrkRSwbMHYo+fQmYG5d8iz7WePXyEuCKPrSJCVcEnoY+BsH2V1f6gT57LtjfHJR3PiCDhhP05HQ+TO+nUdN6Xj4SsmuZdPlePn2Xw7TZflc+UX9ypMv5UD7viO243mNWPrQGwYch2Fs+5GS3JM4dVD4qon661bNQPrTUfuO/F18+McWiN/19bz6joxsJys1nPt0YPoW/XGo+vgBl7yufij4UApG85qyNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3091\"},\"selection_policy\":{\"id\":\"3090\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"N7ytbkF3Pj4U9aotM2s6Pksw4b1gEkA+l+4xs1EcRD7J0ix6aFFAPpS30048TUo+9F9qlT7VRj5WKoZTRQBKPvteX/tdvVA+6nh5i4+8Uz55dnlGuPdZPuwe8h5TumA+v7115JXPZj6c/t0AlYtvPsAnoxHQInQ+OZoK4ZNyeD4NQ8KXUHd8PjovR1TlTYA+YYmTn6UIgj7izDpsLwCBPvSscNu1dXQ+bnDoaBN5Yj5gLYd7L3tSPocjjEme5lE+ukexWkkHSj43+jQMA8BAPijAburwgkM++sjAzPMzTT5Nl3OyA91YPvzuqg+Bzmc+CFOAOoLQdT6Yqo9QtwSAPlU2q2v3ioY+48ZxSR0Cjj7jDNWUk4GSPufFEkNcKZM+sXzLEAkFkD4ZKC3oqmaJPjyDxRTa4IA+apA3pSh3cz4C7EtZT+dOPinC8wImFjI+wNbc6D7HUj6S9FuJmfZGPsd3GLCtX0o+WB00X2s3Qz7wh2FR20BQPmBv8xRf+0A+gph8GkL2TD7wBUXx9VhWPrqf+pGmXGE+5Qr2wwTBYz6MgZf9V3VvPufTelIOrHU+Njn1VPQUgT5Q1IacNJiHPkmeSwBCHY8+Oq5UY94kkT4yPE7unymHPsJQHjBy828++A6vK67iWT7Vw8i8K5BjPiRIiw9I6l8+6SzCT+0rYD71d7SkM/VXPokg8VGm5GE+NgvtpUh8YD50RGIg94FbPkUL63XwDl0+JCBdoQaPWD7jseOV6HNdPipfOLZJ6mU+P3lXxM++dz6/TezQzUV0PoQUfE6k0aE+PVZl4ZnLcT5J2BJLEhJwPs7yh1cSKV0+HSt3r+A2Zj5SnYYNoulwPoL3jG7LQnY+DO/ENMlifD4VlonVOqCDPhqH83NooIk+ZIOc8FI9jD5GCR34v66LPoAh3mdvM4Y+X5Cf2fQugT5Ujg1jibt4PgzaXPz9qHQ+xOZy7dUHWj4ZH6K/qgdhPkFB8fDZXVc+txYEl5/vSz7qS/NltEVSPtl6e17fNFo+sC6l/by9UD43Do/7ChxPPlODhogDIlU+X8UWCBcwZD7+gFnsVs1sPgs1Ktik/nA+OScM2Rv7gj7J5WECVICYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3045\"},\"selection_policy\":{\"id\":\"3044\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BAbvfCtnQT64B03TmkM+PsgAM6b7gUA+E/0tF5gCRj5bHFrv7no9PoLGjhmItUg+vCaU0hjmRz4I4UijXR1LPtZ5AXnxUVA+kLDDHDhCVD4Pp4+l0JtaPlF0Dbts0GE+WLZ8D74nZj7dshhUjIFvPn7Z4l/YF3M+s9jRkHcgeD5g+IdJhVN8Pr7dSta0LYA+ah7YNgjhgT6ISNDjjY6BPlt6d4EaX3Q+A6eXo4FPYz4gCdEf2PlRPrY3hHm/41A+XRgxaz8MTD5ugkfwwWhBPoUV0Qg0OUA+hCyyhldOSD5ZISI3JxVbPjI+G7+KTWg+zUipYTm4dT6HClilu2+APgbDegSfQoY+MR7cvfiujT4ImK46FoCSPrRX6J63MZM+bxwbWnkWkD6C0tDi4OqIPtqWCaLc/IA+t+wrjh1tcz61lMKrxMdRPjcaYIqx5jg+9VzFXfkFQj4qOviO2vBFPhUXMAjlqls+gUpjVsdqRD4lvi6xoIFDPud6D4fRoUU+En1WlzaPUj7DAc0qjN9WPr9nO1H5tV4+7eJHoMUZZT5ua5qDkjZtPtgPFqa2mHY+ZqU2GxwygT6x9p9IaAKIPqsEVUJAuo8+R6AFG5eokT5IbxEqaA2HPrV2A6BUaHE+tz+bhSHUWD6C8GwLUNBjPrams/YhnmE+85jUbqPoXD49G0+9r3VVPm3725uP22A+etAI+nUUYT7+zsnQevBZPoqQgR11uWI+I2MfxC23XD7xQ8YcPyVdPtDYr9nTwVc+5rRTEqJleT42v4irmJBwPpYFZrnhuYk+MBkkVlQBZD5PPUctr/9qPtv/P5cBCGE+b7e0ZthgZT59DR34LdNrPiWGiuRY8XU+opymRRxcfD6fgIZfPECEPrKzFz2DWIk+OBScmfM8iz6c60eqbjeLPq09utqKL4c++FYxGigbgT6qwPEO2uN3Pt1kCJntonU+kfXwyRuqXj7lGxPUuhhhPo736ilLzVQ+6xnmq28xSj5+46YDycRYPqZVjvg5Zlk+FZzIEO8kTz6Ik3q6natUPu25gquICmU+XLpZPw6YZT5R025S/2VoPk2rM3iSl2w+DSxv/UMUhz7MUqZs/EubPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3071\"},\"selection_policy\":{\"id\":\"3070\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RJpV7t5fPD4VM91TY1NAPhigdgB8MEE+/OjnBROURT5aRo1a/GI5PhP7jo6On0w+IwF+64cpSz7/WDoG8sNMPsptHmrIUlA+KnqdlbpwVT42lCofqdhaPtkzrIokN2E+RbPvAmVuZj5UQ8QvXDJvPuRZJY5RfnM+E8WJY9o5eD7/3KqLHmN8PtswgQ9IVYA+ch8VyuQugj6K7YfOL5KBPsMEZcLKWHQ+IzPUIYKgYj47MPDPj+JTPoU7oMMNVlI+2G4q9RIiTT7enY7u06c6Pi0WNmem0UQ+LRHrTWtiSj7iwwj9URtaPsFyZB39+Gc+YOu+dtMQdT5+/QrG75OAPvq/ep0ylIY+tWd8qQcijj7Zm6STEEySPgOHbgeDI5M+DU4d/hxejz4H9saa7YuJPpkn3diKX4E+VRGVDbadcz6RhQDhFYJQPksGqH3hYD8+qJImkmwrXT7zb/I2rAlMPlj0yo23ZUg+RssoCsiAUT4FmnNnmC9RPkhy1eGh7EM+bEb+9vRsTT4AeklwYMxTPmfw1/KQkVc+JFEfw/FVZD79Z2QZ/6xuPiKoz7VX+3U+gjx9oz+pgT43mizz7+6HPnv6zY1Qw48+Wi9PX1yBkT7bkD6WNsaGPjOviWOMzXE++VIewFdsVz4cXKTWlPBhPg3yKRBrPl4+KK1WjkiaWj5QDayOirNJPhzF0Puk8mI+9aUWfZCtYT7cl71wWLlcPsh1dLcn6GU+b+Dq6zdwXj4FdqCRPWJYPqHKwJjMcFk+5oPnJVqpeT5XyxnzTB+APlWyaLZT34E+mseAjmnxdT4gxuO3xcJ0PuCRvDFMK2A+SzuNNUvqYz5Ia+GElhJxPibm8ecpbHM+ve885HhRfD6nIzwUnTeFPsWhggOrKYk+9qMW6YCTiz68gy6oroSMPqzDEV4BOIc+q0CENgQ6gj7yMGeqFEV5PhqTrqHSmXQ+eVM0/ODOWT5z3ycWFidfPqROU6X1P1E+rmqol6IIRD4HQon5aI9XPjYS4IvoJVE+XGdVSyv/Sj6I0wM/6+xLPv3C+RR1018+q4TWcdFsaT5exRAHCyRuPgFHaqCRl20+B6OSn1DFhD6Bny0EdoKRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3069\"},\"selection_policy\":{\"id\":\"3068\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3093\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GEJc10L8QD5NsctEuCFAPlMKoDx40j4+eCkI0qxYRj60rUQ6YwU5PkKaCzHgx0g+fNmrHx+XSD5O4dhXYcRLPlxPtaWqLFA+h2FBswgTUz7Ds/aFJ2BaPnBQg50rF2E+k5XHf5JvZz4EZoOZ9KVvPi8Cn8EZbnM+jE8e7P6ndz4t614N67R8Pv9tFdolyn8+jJhWZ/c2gj6Yo+v6MwaBPiKDuIhUu3M+pOATrgYBYj6C/DWL+VlRPqHwKPZMQVA+RUyQRV5ETz72v+CQZKtEPpYuKnPGwUU+89OoEJ2vTT4JIQPvpPRZPvM/ZOGs8Wg+mu+M1KA/dT7r1QZyOXKAPjogDdZ4toY+1qh6xLwhjj7NSmnziYKSPr9PvbgKMJM+2Tr5xmyyjz4Vki58uJqIPmM0eO3+t4A+BsC/wD8Acz4QwQ8UdmlMPkyRG4sHsTM+f2ZNSYyGVD5JAqYUR0lAPl9DS85tPk4+x7zCKxQYVD4OEDdN7cJTPhT75TPoR0Q+Ns1BK9ftQz7l9Ku6k6dVPggUdNaX1l8+IJ7fn5InZD579+cLENNsPsLbKS4hrHU+yF5Sh9OXgT4xayMKpt2HPpwOlk08HY8+EPiw0XhskT4bwZ33MH2HPu2dJFoS+XA+xUSbZ5xRWT5xhEtNrFRiPgGVTkU45GE+bveydIFGVj7ZIQrO4AtSPukS8wFWfV0+xlv2+VToYT4JUM2cV51YPmpzo/kUzGM+4G6748KXWj5aB5OL2G5WPsPd1vFiB1s+05hFxzo8gz4IvcB5w1GAPuZ1JQXaFps+TeSnCKAUdT4GmpPIUVlyPu5KBiHfJVo+ITiYvve/Yz7RjU+X7rJsPoP1Ltdmg3Q+uBa2ErJ5fT7BqDlfeA2EPpBvd5IYrYg+UYBXfOCGij5RIqg93VWLPlwXTE6fAoc+5yvVWTGggj6WmXM1U4l2PiX6/bPCTXQ+185ZwQQLXD6lWBdhT/thPu4eRoX2jUs+mbSqWm2xTT5Zb5J161FVPpmxOfOxLVI+WavF2UkgTj754uTRalJZPv42v1uXr1g+15pqakHgbz7zz7Xo8DhtPmFHj2z4bms+hmzVUaVKiT75Qk9q6cCaPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3049\"},\"selection_policy\":{\"id\":\"3048\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"/QKjauoEPD6QPl6kDsY7Pj0GOKiByUI+1SgTipeMRT4exqtlZ0o5Ph1nTkWGT0Y+Jqms0x6TSD5gwvumnMZLPl1ofCDfME8+bSAfMUAmVD5JQO8UxMxaPuy3neiRTWE+4XqVnC2HZj5qg/GLqX1vPjAjFBN133M+zkkd4Mjpdz46U9aPY/57PirTu0q5PIA+iflNA8cigj55qfV6ikuBPqtcRAvUR3Q+9xE20kZXYj68sl7w0MNRPoQoO+4fUVE+2IbXEQJzUD7txGp8lx1DPpeAYHzNtEU+NmiTm08ZTj4ZKTcI+2xZPlnddUZ6vGc+n/86vwSZdD7BYlNfXaOAPmHp+8pRKIY+pjYvWtK4jT7LJH5PFZuSPikoiGcSJZM+1eAWp5u2jz5D/ga2YxaJPn83o/a4CYE+8gnOSxhvcz6/B/xRT+1QPpzD8aasByw+V6yYsrVEVT7rSTzVCDJDPrYb2pRDzlc+F4SOPVLnUj43yZ+e/whQPg9YzjOL9zo+7t0mpHXLSD4SU4jVYEdQPsblfmbhsVw+52jt2GTdYz7i2ozjc2VrPkCIsPL1i3U+oq2FONecgD5Y+XavB8mHPm2gF+mpGpA+GJmBotePkT4hXV8GRjWHPrtgnBfA6W4+meGmBKYgVT43RheOjbBkPilfwJX+Al8+GjjMp5WhYD5jlS2Kn+NQPhUMn4nx+mI+iAqydyJ0Xj54z1fvBwBfPklmlspdPWE+lONVBzNTWj5V/10abbBYPkjZ5FA70lI+xP8qaGxTdT57bD7gmIt/Pj8aMGV5aHQ+0+UzeoxLdD6uaPY7UJVsPlXdqIPX+Vg+inNpOTlgaD4UelxAsZhtPuTrGxZHFHQ+CzTQem4Kfj5vfKKi93KDPgmkJT2ZFoo+t4ZX3uxvij47CZBoKzKLPsip8Q4AT4U+3GVcqoLsgT7neP+5S6J3PrSO0oTH03I+5GYFeT97Wj5A4Lqkw5lfPiOu4ohmR1U+sEHpLmDgRz4CtvHdpWVZPgzraCFNX10+elxzqtrrVT6CbouiXTtSPpUFm4Wqy2A+mnHrK/V3YT4HkfSFSkhxPsmYwSeDz2w+WjVj3sZwiD7/c9tugWiSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3087\"},\"selection_policy\":{\"id\":\"3086\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MA1947kkPT4nCtc32vo1Pgfml3LQNT0+YFt2srq+RD7z73cPmf9APpSsD3ySj0c+AKt97yJ/SD7FeOGMIApMPlD/TSLXqlA+exhR78k/Uz4FfmDpZMFZPjf1jrqSZ2E+5xioru3PZj4zA2lLEehvPisgcLJ/pHM+kvAHWIkqeD6DGpOvEEZ8Pl5q7nXrCoA+3hi4hRUMgj7eyK2zQWmBPlgwm+P9pnQ+GfcQa/YbYz72RIS6DORUPpkBd/RA308+4ZZq3fdwTD7VTrzZidFBPs6jg/SeQ0Q+XeP23tBgSj6JIVqFUHZZPpDIznqyXWg+kVHo8AZ+dD6e/zdTHW6APjr5gVwVpoY+is19EO8yjj7OM/b0VnuSPrYt3LG5mZM+WmHzsrq1jz5ggkwkaVaJPnx5wp0Cs4A+jvAGrgbkcj5hAYFBihxPPt6FdNwWxjo+fyvc1V+eYT5AYxhhCBBRPnKFQUEGH1Q+5nWsL6MZQz7yLcwM/hFAPuNrPo2wYEU+03QM1d4kUD4UH19Sf1JdPq0hWTT2Clc+I0lXgARRYj7U749PC+tsPj8gQJ49DnU+MunALII6gT5iGLhSluOHPiK6YEOqbY8+KkryUQ1lkT6r4Sk/mb6FPpctZwJntm4+gYMu3iTSUz41CJ8tXEdmPmvR5TdTmGA+zg4JPD3oWz6mOUxBp5lRPooDFZ6PbGA+MH/+TVQNYD4jvc/Hr6JbPvvEi7DovGY+QhorgwGiXz7A0hhNMd5dPgwdS9G0Y1Y+GXh+gUlchD6uTib+rNp6PtYhBtV5Dm4+Ge85sBsLbD7mXoQTGsZxPlgzZQKCj1w+e8vzkeogZz4sM1NIS7FxPiweSlsHFHU+hOqJPDLxej6OJE/OpR2EPjdzQYC2Zok+pWCi9ZkJiz5Ix77gDICLPo2RYTAX3YU+zWB+7dlwgT6uPpixfzF5PpCbsbxy9nM+rN19+W3KVj5NPdugAxtgPsn46hcX5FY+sF1pZeyMTT6OkIclZKVXPjvjIqopsVk+O7V2022WVD6SPAGzH9ZNPuPQUkB9DGE+DFAhfcJrXT56E5wydSBtPrqJ03lTvWM+FkbolbqjiD6eHDsWWkKLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3073\"},\"selection_policy\":{\"id\":\"3072\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YqwSvSN+PD4RIRtrpBJAPlvv9KjtIkA+wJ+Cjik9Qz6bg4PhIfU5Pp3LJjUTtEg+E+OqX+g4SD77c3OWbTBLPj+lOTktIk8+Ok+XyH3CUz4nhuUASzlbPuRqGyuuFGI+Ie82gwBxZj6o8ToWpIVuPk4ssBiF+HI+rYXYPtrudz670qj6hgd9PikRePJzXoA+fZJwUuMcgj6fXxS/DmeBPr/pXbMTaXQ+S0ve4lTfYj41CbTzddBTPsgZSFKDKlM+G2xzGx2YTz7c1Xb1Q4lBPoQFw+GIfUE+0NQ7QZboSj44q1mKuBJbPoa9giV/SWg+FjuGZ+AqdT62bYqszrCAPlg6OGa7hYY+J6/uet3mjT7oNxhOXmSSPty1J/FPgJM+3XinOZgfkD5SflFm7QaJPtdR9YQ5bIA+5dZJMFOhcz76KMau3DpQPjjS9dPU4zY+75moaqYJYj7Yb+WHBwZQPmlbm33D8VE+lvSi4rn2Uj7shL4Js7pIPrvF6nWrV0E+rIc2GlFZTz60ejlRnTFYPsTKawHiM1k+xBMpBm0yZD7q9eW5fopvPiyKPNduG3Y+ffD9Cv5FgT49zJ8e8zCIPkV1Si0G+o4+PI+I1twIkj7IKpe5sGGHPj4zyv3+bXE+B0RBgS5iVz56OjYbL19jPsGTGaQAN14+vpTaY+MbYD6xSpmNem9TPiYCUgXclGE+TcGdehkUZD4QfjULzF9YPoZ4U8A6ZmA+qvDXG+f/WT4n2AR4byVjPjNgJAr5KV0+ZCwxJ1d8dD4WnZu6/ANxPmxsmKx4JZc+TrglV3z5dj7CTxysU9BvPjUwaC9Cels+E+L/1tYYZT5+pXHLbRZxPnR7qLcEcHU+4Xj9BZyoeT69ijGDeSGEPg2pBZEK5Ig+ndqZxzUjiz5oEbZN0KWLPia1td4gBoc+8v5vttSegj5GHXGEG4t3PiVHTbGPRXM+xhJAgHrCXT7cM8d1vPdgPlkwtdS101E+c7mxrXbaRz652+NkcrxWPqKjAggZ0lE+iqDrtwA3ST6eqWWlHStTPiwDze20tF4+/2RUe4vXZT5UdfRiqmdmPstq2v4kunA+3NGqNgGOhj5n5oEDOoyWPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3053\"},\"selection_policy\":{\"id\":\"3052\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"3032\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9D6jRRMDQD7OJgS/BiI4PrTXCGEx8z4+rdog4JGZRT6jtoNOenE+PhGX9lL2qEw+Tse6i7LISj5vBuGart9IPthL489dIk4+cqDY2P4AVD7xuqw4bz1bPkK2ewMC8WE+K2n2PucRZz5A8wYlovFuPtBBU92NcXM+GdQ9HWVfeD6etx8gGT98PsBMnFKKgIA+kZMb4Ch2gj63/fssDl2BPn8zyjqoOnQ+C73KPA2mYz7kA/k1qHtTPtx7Pz4L7VI+AIJqL0kQSj6Huv7OztNIPvjr2a2nukM+iYACjpKWSD7vdah24jBZPnTbIjOLnGg+mqwdGwx8dT4VaRou44OAPgMCdECUsIY+/GK/jJpKjj4zWiXuWYqSPuX7sH29wJM+43U/xnEXkD6nT8E3xvmIPn+zTl1634A+8cVsv2rscz4tGZybFONQPk2uOvKGnDg+JNeJh/QPVT55uv+dkYlXPnhvk7fRgFQ+yNB8dsVgVD5U09BAe2ZEPoU0usJWekM+ZyPM0D7CRz7LcUxINoRYPrXtFLlx31s+MdKXude8ZT5115GEI1xsPs0hxyn+fHY+7kYDIltrgT59v6G4+DGIPvgi8wxWqY8+hj52zeyCkT7GI/oQqDCGPpBuJC8hD28+kG1OdbwaWz4J4FeR20ljPkLZh7zAGl0+0tpRqshlWz6JL9EuEsdWPlE0FOX+7WA+XxY95mOnYT6BEYFdcVhaPkXKxKUOyWQ+FqH1O57xXT5PyO+ClQVbPuSJ3/MW7WU+u6Pu9ECHeT7gwGde0TJyPn64O+BTjI4+cVjzpQqvcD6nuD4dEmhxPuHrleZG21g+RWokDJSNYj6G7rZrFeJxPmEjLcqaEXU+O/8Dvtmuej7hszigV36EPmgB9/iSwYk+wa+JTfjuij5y3O2q2d+KPg0T032lu4Y+PEK6+gcLgT5cJ9uFKsF3Poah7cj483M+kOcRgK8VXT6SKe4OKnddPh5X8bLH4Fk+TgqjRnuMQz7pYog/xkdSPoUvCIb0QlE+ME1+p3daTT7Ubt2CiLhVPr6n0gKGCVQ+0uNpToSJZD4PbmzfJdltPlwon1+UsHQ+RIXO6ViwhD4uobSoMLyPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3035\"},\"selection_policy\":{\"id\":\"3034\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LTbc8Op4QD7mV3ytojg8PlmieJfvVkA+IA9a/4yiRT5kw3WpmpI5PrkMUuqONkg+EFnWN1cCRj5JZhcWkTNIPnlIEifDeE4+c/XQTddGVD7z4H4RBCdcPmwepB3uOGE+iGvOczPKZj73MuSkjFpvPjPZ3XmEAHM+UiP7gnNddz6XvqpCICl8PrfSQ01eZYA+zEOXenzFgT5Rtz9zlFeBPmYmU9r9l3Q+RpiY1UW2YT7HDpueaLBTPgpVVIY3f1E+Z7UByBynTT7ojUr7EaFBPv04kbNJG0c+hwbz93NMSD5MoAMNz/lYPkDVuVwwbmg+pun20d3VdD6LaBVSSkKAPnVtmsFGeIY+YkkcI5XdjT44q0CQgFeSPtsBsmhw6pM+uAWgrjQOkD72dVyuoFmJPugnRQglmoA+Ulr7tsOfcz5mJm5nNJtLPiR6GIK3HjI+tkIeSAYKUT7Q6mCXukpVPji/Om9pTlA+DCScFyihVD55TAP/LEZRPnPQBv0CGEU+riLrnAHNRj5vCjoGl+5XPmLFZgu1ZF8+A2tsS4VsZD5gRW6mXMJrPjMcyQtZkHU+MPWOZKWxgT4crFHnAjCIPhEkI5rX1Y8+p1c38aAZkT6Npd7VsN2FPrb4jpVRN20+DMvi9ebXWj5jOm3b/BhkPgma78WaSWE+8/fpHgLSXz7d2GyI5YNVPvDmP8bQamQ+qXq9aHLLYD4bZnMtm/BXPrZ/JGBremI++Uhxsw8bWz5DtPjbN1ddPnfAQr+jZlc+d38zx4uaej4WuOmjtXprPnb5HST4AIE+czZ598FmdT5WMyVsmN9yPrNjGuDeG14+1J3DT8B1ZD5jzbehWq9tPr4o/+ZvF3U+3M5KaVvoej5t7RkVYOiDPhWrC/ZvkIc+Y4+MQrhSjD7iTTTlFpKLPjC+pS3+yIY+XaQ01hYXgT4z3C7rrS54Ptp6rzehrXM+4C14vvPsXD4rEtfjrcNgPpx3q5Cy/1E+2x45m/ceRD5OFy2Hs0pYPhFuTgIPflk+lAa65OVQUD7emDEFI0BRPlmkS+tNMl8+NQep88+JZj4muRvlhPttPvIYjrWVpWg+xniOAEvshj7u9CfyyOuOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3061\"},\"selection_policy\":{\"id\":\"3060\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"6xTHltXxQT71/L8uyTg/PqGrTIP/OkE+YGZpGooBQz4pHhY/Avw5Pj60UsTpNEY+RH6vC7hSSD7I9yE1hxlLPlOqLdOhDVE++FFQmsegVT5M+Lpm/4hcPohiOdLqBmE+V4P8V2s2Zj5gKTUbEUdvPnABthTr/3M+w7S5N+KHeD4oTlq7aZx8Pthe164sWoA+rmx/SHYagj4yvSRX51aBPmNJNk0xs3M+J4gM+ha4YT5CrAly/6NTPqvjyUYFpVI++zqdxvnvSz6exGFcrypFPog/ZxhebEM+mM/PhW4FSj44H3HGZodaPjB+WNBut2k+rC/mPMMpdD4I4hxtp5uAPgXdhOoexoY+ISsvIhdsjj5x4GUpRYuSPubvFZoAHZM+Gid7nQNUkD77ea8SE+aJPjfKtASJwIA+JOmGYC4hdD5wwE1N/S5QPrOgd9xtb0E+/iRClw/oUz6EPMYx/mFVPui8OPMDoFE+86jnzYO6Qj5TVZb6JepQPpQF4bvDy0I+nYjfXM7BST71jQtzzgNbPvrW6vi6p1w+cJbXZcKjZD7Hged3l6htPoBVyp/zUHY+E2eLWk7agD4Mk+9XLYSIPotYJ90AzI8+c9IEdW14kT6Xl9hXPYGGPmtUb+vjjm8+ZhQQkfRgXT5P3LHskLxjPtWZLcKc2l8+lP+rkd79Xj5VDwB+kNRTPk08OaZWrGA+XK55eJMaYT5aECQbJ/BcPphUUn0HMWY+4/jm28TcVz4CiDsk3RNbPghi6bHPm14+Ej+W01gBej5+/TgIC+N+PgjUj/3o+6A+cH5/h+xhdD7WGKPU6fdyPjuWZIIbDFk+XtI7vOWcZz5LAlXI61pvPmGxpieUhHI+PRo7q9REfj4hquFLhtqDPplDH/0iTIo+IFShgSLEij6wXJhH9ZCLPpmh2tgMFIc+CZwX35gsgj6Vkb2ZtvJ3PlJU8rEaznU+FFLVaLvNVz5QPNMcegpiPjQ3OpSlmlc+HFjostxBUD5a9cIwXj1aPvp0NUpTplI+XrUdCsAVVD4vnqtBOoBWPgXHzMtQ02A+4lh9cZDHZz4CBEDLYoVnPrZJm/182WM+JIIZmazbgT7HPXUilZ2PPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3093\"},\"selection_policy\":{\"id\":\"3092\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"KtIVqNDGOz6c+Y/lYLY3PgN92BqcekA+TLdS1wfKQT44aCOMSmo+PlkXiupcsEo+lPrSNGpkST6YoQXh6rFKPpsOY6V5Z1A+kBJN0MCmVD6CNNw2ifdaPrwO39WVPGE+y37ZA+uFZj7OX6GHIi9vPlhVExS5bHM+2q4TexMReD6X4B9I4Jl8Pok1E5BJSYA+gZSenR4lgj4E5wmS3omBPuU7refLc3Q+VFsU0kKwYj4qGzfjY81SPhS3U7LeOVI+rZGUkHXPTj4uqM4KDyFGPvuiRj24cUU+Iq6XwwEETD7pvojRStdZPquYod1452c+fm5kJvEIdT6fKu/AbBeAPrM+I8hOSoY+liCKlOW8jT6ZCruzfJqSPiSX3MpMhZM+gRx2KYggkD4mLnxxL2yIPufSZA6osIA+B9CpalK0cz7i3bWaQnFQPsvhXKw7XjQ+8chzEl0eTT7nmbIBxntBPozqkGOcI1Q+EGO5kKUSUz7f4z3w/Q9QPgbDFb/2pD4+KNj4SO8xTD5ewmNQUaVUPrFQtFuRwVc+vSo0+pKjZT4ddJ4XOKpuPgwc0q6knHU+EAU/mQItgT7hbDCnleeHPhhcJ9SrdY8+VZ67RolUkT5aFfT2F3aGPsPJGqjCo28+YqcTiOfAWz5aFOcRl3NjPmnMtx7Rtl8+9CzJO20gXT7ynwBeWepQPtS/J8HZwGE+UAz/q5l7Yj4u5EXe8+ZaPucWe/SVn2M+/TbhFoM4Wj4FHNowYJ5bPkHje5h/emE+vPzLAf3efT5GhIt7D4V2Pqn2d8vu+ZI+8Y087p09dD4ON0u41B9sPsiNqH2RaVs+ntSHF5sZYj5vbvT50GpwPvxPMtUyXXc+vDjEmbVgfD7uoIEHr5iDPtPuqFMN/4g+amaSMu5Jiz76BCpIaFGLPtAlR1Y3BIY+/FI5kyH5gT72RuCISGV3PgfsMEOndXQ+dWrxhZSGXz6bs5XrlABkPrfMKj1jBlA+L3vKIKHmUD5yKQMj0BlUPiaTkczwzVI+eM/YhFDuUz7V8btwaABfPmikYund71M+u+w9Js6Uaj6lkUCUueZwPnHiOZGSmG0+YuviHRRujj7+O4+VwWqSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3089\"},\"selection_policy\":{\"id\":\"3088\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ItEUiiuXQT5OXE+Iw/I8PqiEc/W8UT8+HW6P9j36Qz6ZirvwhC44Pj7T7aGeR0k+TDjc+t72SD7dzGLtAC1NPkSu2XmY8lA+dvTzxvNsVD6WiPyA/z1bPsRWgbcZbmE+fdCc6O4RZj5MDwZaKeVuPn34skB3E3Q+ZCw+G/vJdz5Zoz/jeo18PmPL83Fa8n8+nRp1UiL+gT5eHzxZ0AeBPjCKj0RqznM+w1c4C1/ZYj5atsgiCUxSPsysnEDnE1E+G1VRcqM0SD56IVMTgWwzPqsqV+NKUDs+v3SHUcB3ST451objIlNaPiW2e5qO7Wg+ZJ4veinTdD7vxgXlRjOAPgTRo1MzO4Y+jXuTi234jT7iAcKBe42SPtC7+E1KXpM+v2hzo6P6jz5kaqRymPuIPgENZ1cuBoE+RAc9q8y3cz6cEEUeb91RPvA6faRj4zc+kloRr5TUXD4fKQISmQdaPuKYtTs37kw+t/l9oxr2UT4Y3onpyKNUPhCcw3JBckY+aBsmdPTFTT4g2p8wJMxYPoFOUxL6qFw+DRExV6wxZj6qoAfJ7ndsPlr2qDTGL3c+vIlj/UIzgT4Xnv6G+MyIPlTOVmA/vY8+R+1ODyH0kT5A1KuTvISGPoYwWibBWXA+1QCLrkmuWD7BzMuiRvFjPoFoz25i7ls+59oBkTwkXj5QpIo01eNTPmpWWKbnq2M+/f7h/OpUYT4dmvv7V/hZPsFjQwwnimU+MDsUBVByWT5ja5ZAFwxdPuKHdLP/ZWI+SF/yew//fT6QGP1C0ZxwPiCeaKOUvpE+9BFpM49Tbj6vNNTGWbRuPqw/0BBYXlc+yyaMNJ9Paz5hFh2cEgduPizfXDlQeHI+Wc9ZTLo5fz4q8DK+9SGEPuNYMuIniIk+HFC3kcZViz4V4yAMcDeMPj4bEhknJoY+0+Yvz/Dugj7/StlIK4h2Po0DOlnlgnQ+U2ndOuGwXT4+WI8vjmZhPsDW5QTo11Q+gUoV7FQ/UD5/S4s1q4pfPi8FUFoyClQ+xhuuJFtuVT5ydKs4AWBXPgXDmK2rKls+w2IgI+3nZj4i48y7AOFzPjbFLKWMT3U+9DYz050ijD43M2rYyPuCPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3075\"},\"selection_policy\":{\"id\":\"3074\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3030\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ePncdG5sQD50XEPWvUQ7PgEhCJtb2T0+iUmEuivgRD7iWSdXR2E5PvFH5+ouIko+th6fr0o4Sj7A4NuUrRRMPsXr2RVPrFA+Kr9ECu+DUz6Jr68TBXdaPnnswdEDw2E+3PNjQMFZZj7GwEnr0fRuPpJjlftEg3M+ot7eADnDdz4XaJvfndN7PvXe5lNiSYA+RUgiKrfugT5eluRet0KBPq3XtoaNL3Q+qaA1nmW/Yj7tu2HQacVQPoW8oe2tEVQ+ntl6037nTT6MD4anEUdHPqGxl86PFkk+hXlzuimqST43kkhuBaBZPoE3jRlYXmc+iTiHSkfydD4Dh80r/Z+APrtVtTj+aYY+n2fKWKLsjT5Q0NOJx0OSPiNKq9c5l5M+Rso4EQxFkD5KjPgAz/KIPhTNCl3CRoA+FsDTnq5ecz5cb+mcIN1PPmlxBa5EIjo+iMjwsPYBXT5ZupYalg1FPoiPUh55DEo+KSAq4OirTD68RxSu3EVMPmnVbYkxvUM+7C8nTT6iTT5k2+kEKXZTPtj9/j2TR14+S0w20IZsZT6d2/M3yX1sPlzvzOVFbXU+iP6xSzJogT78z1cAZDSIPsuPApDgiY8+iFogy8TskD5UuS3fdumGPt40ibbMzG8+++1KUZR1Wz7MuWSBFZ5gPiQo5DwLVF0+Qoct/aMGWz6zFSA75KNTPubaOXrkFGE+jSkH06LZYj42NI47dXVZPsH7Z8Gh4GA+h6AGaFvnWz4dK+YjChVSPpouNYH9mGg+nelbiUK/hz4XVQImouN6PkgGyGm4FaA+pNgC1s0DcT6lwTtRG153Praj2YXnPVc+aD+zLDoVZT7oW6sW3G5xPnHuFvblrnI+uxS7NynefD66I+lmtRmFPke2WW4n44o+xrX7lBBYiz7IpGVaI+KLPvn7p0f/BYY+ubBgFnimgT60gVuo2ip5Pnho2w8E1XQ+1nmgb1VmYD6q+fqj9fVhPg+fW87/XlM+fIl3O2uNTj4oIqx7GklTPsQSwjJBCVo+8sfSTo3YUj4kQGrgU2JQPk/nSE3oFFw+Ie1rYgvTYT43btACxJtkPmM4fewiiXU+yK/6YLBThD7yQZP0zCCaPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3067\"},\"selection_policy\":{\"id\":\"3066\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"u1ef3aisPT51M5ReZ1o+Pg/ZDn6khz0+Tf4SsXmTRD74TazOBV1APgGGqvxG3Ug+7DzEClVEST7lG+Cm+hNKPg3OpQgqoU8+HNMrmekaVD4lcPZiDOpaPhJdwYYDFWE+gP3+4C51Zj59ZboDFpdvPuwaK0C1fHM+Xqjknn3Adz5MSwe0IFx8PlnKHM/FXIA+4XFeKB7ZgT7ffolGAy2BPvrPEF9HQXQ+5wmFAcszYz6xaH7TLhZSPlFghsrOF1I+CDp4HK/wUD6QFSMtxYpDPsHeEQy+qUQ+cMs1YOvjRz5Uc25V0rFaPjj4jMouzWg+nTawE1+rdD5k9lFySQ+APrHk020SX4Y+rB8L+VPSjT52xfO9rrKSPuif8DyVjJM+jEJgezXjjz6Sgq3HlbOIPqCn6SLP+4A+MNmwYce8cz7jrIbq5tlQPl4aktHnBTE+vqst/8+8YD4YpX6bBmpHPgTJizQ+1Eg+1thNQky+VT4lTvO6kYBHPpCvJLxVC0M+MfWXO5klUj7INKPbeqJbPlP64J1eP1w+xT0kBvOOZj4greznfbFtPs8OKvGA0HY+J3qqA9+FgT7yqsQMlOuHPtkGfL+9UY8+atvQeQNxkT7vP7cCmMyGPiGtCRurwG4+jstxm0TqWD5TrVGOo0tjPjlaG6lts1w+V2zCytRqXT5TOubG4vNQPilh0k2iamI+UcH65srXYT5h8hqSudhePstMkooNaGM+n0aQE9bUWj63xt/h6/BaPr9cucPTJFs+ozv3BAMSfD5yjqEr6WRzPvNpUtDjbXw+c3VXININdj6K0R6i65dzPowZ7ZwFNls+5HyVMIadaT6iYZejQQhxPjSnye00GXU+sFdfEFQiez7XkzTcxSOEPtG+ae31/Ik+4nSLdrCDiz7eeeliQJqLPi9xwloOb4Y+TCuWELrTgT6roVnT50x3PodNIO49JnU+NlRds5dcWT5fS3aGdixePvvPvbmFnF0+5B20vb4LUT4UmknfG+1XPqsXQKhs/1U+nlbQsOQmVD7JV57LoMhYPgI+a6z6gGA+AUHBG2F9az7IRH6KwmN0Pu1PXWusQXA+Gj1yvAbsiz67nUsnqsKPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3077\"},\"selection_policy\":{\"id\":\"3076\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hOJ3VyPwQD7u4L78niI7Plcoa+w2HkE+VKFQBAlNRT6d06MsU/Q5PlEIwzxMBkg+R5I83eIPRz45PJwJm1NJPhoeX13Sj1A+NDh8WN4+Uz6iv0jEf9RZPmNyHIMNA2E+qdJpYisCZj7hWNkTXHxvPoywZx4p1HM+376xv73idz7dAV/NB098PlvoNptsRoA+/Lk5WcFJgj7wgjBKJkyBPhEOjxdGtHQ+wK49B3UjYj7a9XDW59FSPr9mIit5EFM+FCrAiigBTD6UxwTP67pFPrUw+yJq40I+2bmrRSS+Sj6EmzRtv5tZPiucAdE/RWg+J76uQwtkdT5vTh+F2IyAPi+Pc4CqnYY+7hYP2fD3jT6ip7YDo46SPuHhQiLnFJM++0spznQOkD6oTElyhKyIPm+N1XTOwoA+m74mnnH8cz5NX5wFqq1NPripq9bXgzc+ErEuq2o3TT4SSLNyWS5IPtuZuJJxFFA+IZtxYHzUVj5LdvIOI1tIPpkbEDtb/UA+MkULLEvpTT5QkXyeFwhbPgYU4zpKYVw+N4PNC4zkZD7sAlbuEKVsPt8n46MEO3U+e7dknyKtgT7/IrTmTE+IPik0RYfqFI8+9P3u55ZokT4by6GkgWKGPsGmR7F/ZXA+US77nV40Wz6y6m71FSJkPnVRM0sBa14+/pZb1p/HXD7C/hZIsIpRPrKQxuMe7GQ+Y8dWS4jjYj46nh5J3+paPtOz0q5d0GM+XmwUBnPQXj5g9LqW4ExgPux3v2CRVmA+vLqBf9XFcT6cb+PusvZ0PvKsTW3OeH4+2X8bZGHZYz6fUH6kh+xxPun8/EEJOWI+owD8JVCvZj4wP0xG/QpvPg3QcHO8IHQ+c4qoeZPXeT6i2x1J8tCDPoYh8gYfDIo+5jjQPLeeij5v0N1xkQaMPoiF9/uk9YU+OGc0gUHdgT7px7DQjSZ4PoBD3zsRSXQ+PgL4g2sHXj6zynmuMmlePn+ErwEqUFE+YrXbOdAaUT5zVLIaFaFVPvxbci+CPFs+fdknzZbUSj6+Uj3q5A9VPlilbLFIPVw+U8DsJQYfZD7Paj4vfzBxPvzUY6QtJnU+6AT5A2hKiD4OwD4H0SyRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3037\"},\"selection_policy\":{\"id\":\"3036\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"KB/IYxeuQD5az6br9So+Po5z6hzShj4+YfaqgEDDRD7KmQspj8Y8PoeqnquleEs+59EbpnivRT7sVNeJQa5KPiPtn00kO1A+aUxo8IuWUj5kS5UAIE5bPtnlkDxTPGE+F2tW4WfpZj7sBuLTeOBuPvUShLQDnHM+Kje3BMcmeD6kWwuLi358Pn0MRAuuRoA+fl2+Ix9Vgj7GB3ll0n6BPrIiCFruY3Q+VQKudyoCYz77qU0lvXhRPgB9L8NXNlI+G+Fj0t86Tz4Vxp5Az7JAPhQT5wt+nUI+fY1ylT7sSD4raZW6AlFaPl89w5xppWg+BhMWv8cVdT6iowj+QmeAPjHeQFaETYY+Ut4njurvjT5J23mBgJ6SPp0vvEqZYZM+8wHTpg7Tjz55bf8L4QyJPrsS+vji/oA+Jr2w+HK4cz7TJsno+DZSPjkGIUGpdC4+jQ4LpfeSUD6e+vTh9QBKPsLYtIwW/08+y+cVQbmqRD5JlEoZcmhEPkS/AQ9Q8Tk+6iuLHEqMUT74W6UtWgJVPrcXNNAFqlk+U97wNT/cZT7Sl+suyHRuPlWPZjv3F3Y+NIW1Ail/gT5L2YKi1neIPtMSxaS9TI8+0iB28Iw1kT7cjWKGJCaHPoeE5n6UpXA+E21Qow/QWT6KhKOt1MVhPjKownxywmA+BP0O9JdbWz7BlKf0CA9YPqnrqtntJmI+ZfNTCMFLXz7R4Con48xePlqb8j16kGA+KP6sz2leVj5Lcm0CbVZSPgEbXRpE7lQ+MLe/9+0PgD6/hcUguX54Pn/Kmyjy2ZY+JeQ4yyb0cj53tCk9LQV0PvQB/hEUA14+cgbmiJtoZj69JAaqg0hwPg5QRdtzEHc+BhKNj9G7fD69NFiVLsaDPtgndKsd8og+LF5w15RMiz6y05g7SUyMPgMJh69UooU+pOCCBHF8gT7u7l80FZd3PpXWKz63nXQ+/Cukjc/3Wz7W5xRlBx5ZPmLhFrfmTFQ+X086/iIeTz4VT1Hi8X1aPgn92aIAOFY+ZN5UF8ZAWT7MIuZawUxXPr7Qw9kZLmA+91TTZdfSYj71VqsWPhtmPmGdLHddkWw+a3/WLxMkjT4BLGz/7QqbPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3059\"},\"selection_policy\":{\"id\":\"3058\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2aqfkm4gQD4H2qiF4ck+PrVdhaDk5j0+IZWIpapJRT5GT7Y1N3k0PnYpiZqEm0o+VFqsE1HWST7rtLxmLpRJPvqvq8+B9FA+02HU/vtAVT5njEAF0R5bPg0dzXIl52E+vjdG/HPBZT4A1CT/WitvPvrqWyClpXM+fXOT7+QceD7SEDOIh3J8PvN46uYOQoA+uCH4BqwKgj6IlkpHZUuBPk/g6upOAXQ+t7Qb4a74Yj6edUcYvm9SPgh51pxj3FI+3tlfXZGuSj7BtS2TSc08PiqfjTnDmUQ+lAy2X4U6TD4TvyoDPT5ZPmfoXzbTVGg+HpU4Nq/fdD4H2/T5uF6APuiausz3WIY+h4SGiowZjj6S+vNR412SPk+Pc9/Oh5M+KGZPmvsakD4D48y91IKJPg34d+6DK4E+nVbVHiVKcz72S9lUQrRMPrjWmF9n7iQ+KLDafqajSz7Z1SDrE8hVPoXRDVXvCVQ+7Pecr2OgVD6L9v1gJvJMPiIVycDlPUQ+pYYq0ABrSz7rRDHglZRbPuOUbXcfk1o+Sh7oINRPYj6ZEmmbozpvPrlSLfGMKXY+Kb0XsFlNgT6VSKtx1Y6IPnccK7ZXPY8+pl9dFJuKkT5GHtJZB36HPs5t6V6ynnA+KOb/Krc6WD4eSDrg0StjPrtTI+1k+mA+hSV2cXHtWz7vEPOt/LpYPp5y2msAYVw+hd4A+fhRYj7LYAHV4f1bPuNfO87KbGY+4fbhI/8kWj6II6ldzSFUPv4m5bOzREs+e/BGji/9dj52LRxR3SpxPmck5LII0pE+Ab1oCe8Aaj7/FGjNHP50Pqi2Te075WE+7f+ZRBhbaT67AUljMf9uPgBRFAXEAHQ+GxIKf3K/fD6UOxQ7o4uDPsLU1H9zDIk+vfp/TsvqiT7sWxsolU2LPh+wDpdlooc+frfpxOV3gj4dsAMhMtx3PsAJ4RJiiHI+/ENujDSUXj7obhm5A4ZbPgwMzn+YfVU+IE2sYlhAPj58wKTWlMFQPlQbvRtTClo+wCO66as8Vj75z5OCne1VPgoP/7S3OF8+XXqfheK1ZD6CbPwq9hVyPt22tv+7Ymw+Vr82StKGij4KvnFF8/CNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3079\"},\"selection_policy\":{\"id\":\"3078\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"Selection\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MEzMl8w6QT4HxhSniPQ7PnM9AdUQc0A+BpThjpHeQz4rYMEzbU45Pt98ubmAL0k+wPDLNZp/TT67THSeE15KPtn9uzmIk1A+Oj+phtcUUz69CfH8d/FbPpaaK3TW6GE+Iyc7JKxCZz5+t29CzXxuPrhNty3oBXQ+uDHBFB8veD7jKvUrH5p8Pi4NCWJgQIA+wRUcrF0Sgj5Cy3uFc0+BPn9jHK8C5XM+lipPb8oDYj5B7gMEGjxTPi2OvFvDyFE+4bu2OHz4Sj6dYuZLLshFPnaTOux7RUQ+e1nieI3QTD4kAs5mHAVaPhgUrHEvkmc+LyadbEu0dD7XS8fSRUWAPlT+iS+tnoY+MnnBakuvjT7Hv35dmo6SPmZT7lo8LZM+4BQyDYg/kD49YvOKgvGIPlvAlEQ0EYE+7piDz9DDcz4pItrmKxNQPlyIjWa+kzE+nFBYnlcaQD4d63L2N89HPsJVk5ngjUY+HoYW4WosUD6NjAGrW+dUPtcNkrBZiEQ+eWgca6HtUj7kRd6vaztWPqVCYrx1rV0+TkOzN6SYYz5dDI8tt8htPiyCK27GlnU+ytku6VsygT4WHsuEafOHPsgaI3ETrI4+CF17NEtKkT5soUuwlDGHPjROv01MRnA+QziG/ryaWz590OPhjIliPq1vg/Tkwl4+lMxqJnlDXT6/6+6emplVPqLp2nHORGE+GSM9t+33YD6cKVH9wwpePngZnNH5FWI+HSLXQKoyWT5ssgg1o3RdPmD8XBcSPVQ+3QjuKhOzkj6fJYId1+t2PhaCzId6Up0+C2f12/lvcD63uAvJ161oPq9eNhB3/GE+sovvAqC0Zz5pDaq2A2hwPsaxBoFamnQ+x/kQEj1IfD7iFaaVw+GCPutN+JU6ZYk++rWv/qB6iz7mEYSL5zWLPgIksAgPw4Y+pV0wWFOVgT4aaVH9sad4PqNjDPqakHQ+4uZk45p5XT5kjsJ0A7ZiPiZbwbjsCVk+ZnHOn+QiUD4wKV9CBEVRPkoGqOFUyFo+obWfQ7ekUT7Qnlzn/DpYPmnvJuHMGF0+oGTEQLyyYT7sYiPoM31sPiHEynPr7nA+kFCcjL7Phj5uN59Rhg5/Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3047\"},\"selection_policy\":{\"id\":\"3046\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"H99Cc2NDOj5CTMbeg4w7Pky0RC1jI0E+zEDy1XE1RT53CDhDk1tAPu0CpdHxN0c+DZ3zlGlpST6jKs91tmBKPp/IpKAmQFA+A1Ha1lQ8VT6gjs3T27NbPgmjQ7ex2GA+vcEvJ9RMZj4yPwZtp4duPsdhqm6mp3M+Pp1Nlpr0dz7LQ4lbw198PvVeP0w3PYA+fxO5VnMGgj66kMXfNEKBPnju8YaEiHQ+b9q4sM9nYj6tkal+82ZTPladyW55oU8+Y2OVYcGLTD4GEZ7j2FhGPh597+RzDkA+tWNHBC7PSD6zEHGRcuZZPodq0f0puGg+XN+99E5ldD4v7YymYBCAPtTyjx/CeIY+ZZnjoPYNjj7JJMfpCmuSPt3Tpq7+h5M+3yIA8zYPkD6XtQiZjBmJPnmwuNj1rYA+/RRLlj8gcz5yKzHWGuFOPgx9i2B+rjs+izsFJuEjUz6J02PrWmNVPqG0GuKweDs+1u7AMZHySj5swRR638BKPtdJzFX85EE+iNgW0zzvTT6nPOOU0Y5ZPmuG4Z2Vul4+sYK9rE80ZD4V4ZqpPAdvPsdScJGMMnc+Jypg/gYTgT57RFwuqcKIPoPnuRvSVI8+k25If6xRkT7Kx/4/42iHPhktFgKd428+MhtIX/57XD4zcskHFPhkPjQNdwHBtmE+ktBuz7D0YD7PkGbJQ2dHPlyuzdGk1F8+/lgyB8ywXT7JWJFr1wBbPhm7GVSjmV8+R4uX2ECCVj4DxVLveGhdPs65IpK6bWE+PocatMNNdj5l7+qtsLprPvY+mQB6CIc+gXZDsaWecD4er09Mho90Pp5NLF6laFE+CZ8Chh7uZj4bPZfmKNhwPiS18VGpl3Q+pJsI9wrCfD4iZHNwhO2EPhyo8IfmHIo+Bf231n/LjD6cgy/GOYiKPjJUiZ93zYU+WKrO3lM3gj6TtBq8xF13PiwTtwLiMXU+ltkxt/oKWD7QlZhKcERbPhkK49g+1VA+Xxsfyh0tUT7BQv9xxWhWPlCBUm+9UVU+3NffzeMdVT40ejakUAtaPhwmJe07sWA+m1Qe/2c0Yz7isCeu/aRyPr6bf+UPb2s+SlgR8P60jj4x2seB1/x+Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3081\"},\"selection_policy\":{\"id\":\"3080\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"o8KgUKNsQT5+eLqmdBk9PqK5EzfODj4+ggHMqKf6RT6i7eKB0U86PrQ+bYCG90Y+4tAQbLkgRz6Cny2+6fhHPpbv/2yZVU4+k1GmUUitUz64sQkoYM1ZPggF6FQ9g2E+gSHMvVGqZj7eUegzN6NuPpLFmDlewXM+K2XNDYxoeD5C2exsnXN8PuvWy/0OE4A+LP177Az9gT7zF3nQvSSBPkN3QEJZYnQ+GCjdrxXRYj6F2AYMZuNRPj5vYnglalI+XgCDx/NGUD5YZvt8Kp9APuHlYb2Ab0I+uLu+ftfESj5MAsDYhnpZPonXR76LoGg+RrH6o6jXdD4PFnGrjU6APuk340d4jIY+3GD+0sO4jT6OWZfIk2WSPpPkbP3Pk5M+4897cNsbkD4IuIwet0OJPjhtq/Lr2oA+EFk0WQxicz5JcM4Gdg5QPoFa2p/HD0I+VB5q2lHKYT4kVugyqWJIPi3zumzWN1c+ouXXC234WT6pl+f8o1BTPjcwQkrojD0+mRz7/iEPTT4yNFJ0YhFVPnSPuthOJlw+qv7Q1DBSZT4+e72+wLxuPsw0FUU5UHY+UHAsKiHMgT7HOuLqB22IPrgX/qfjeo8+y+qEFDqckT48UVEPDxKHPmTXTiLe/G4+z4Y00xlVVz6uLRNXQyVkPiuwqZg4oVw+1oT/9y8OYD6dHatr3/VMPq3YAL742GE+hTlrAcyjYD5aUw6vNKZbPmEuJLaWlWY+dE5vH1l4YD6+vkciIUNaPrHaDZQMJGA+KG81VxuyfT5QEihyFcNrPiulQIp09HI+UZ3p7Er1cT4e7hRTHNpyPgp1gf9iUFk+N4TMyHCqaT5hVBFJuq9yPgr7Zzy+QHY+PJLV268jej6ripJE722EPk9l7rapuIk++pVAzP+1iz6hrbiTubuKPqSpspRBmYY+Tk4hYdUzgj41Fm5qV/d2Pl/4thXz8HM+gJpJPnaJWz4A1VSb1O5ePnKJ1B9KBFU+t27WxH2pUT4/asn3ilZUPovoVuVS61U+GhlGKEH9Tz7fhu/agNZZPnvejVOfIVo+3VBfcSm0YD6B/wL3ZkRoPjeMMB8kVHE+VT2Fppfthz5BAdL4B0yPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3055\"},\"selection_policy\":{\"id\":\"3054\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3032\"},\"major_label_policy\":{\"id\":\"3030\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"mzWhSnAzQD6Y3WBL32U9PqiLto6NaD8+ztWD8LpPRz50U/UbBFg9PmAJOBptA0o+mngHcOaeRT5YuTf/c3NJPlDViwsC1k0+hbR59ScnVD4GMp+b1M1bPii/uoYDWWE+Pk2v2TmCZj5dwFmRUxRwPq2DhxbgVXM+KkyqQh8heD4XsmdrfxF8Po9Is4xkRYA+mvEGneXtgT5JvMEN5heBPro6ZxGgo3Q+9jCjk1WVYj47QTceefhRPkCPts15mE8+iKjT6zsgTD789eFIsghCPiCMbX8vk0Y+qpt0p4/uSz7dhuS6qaVZPhZgz2PvDWg+nG3paladdD554m6xBYaAPmOhVqRYZIY+jDCbjPEbjj4HKOFCS3CSPoKNSs8rDZM+USx5mfTdjz5+d/ik2fCIPpSUxVaMFYE+sIZjnVxrdD6QHR7d8lJRPjdGmrevFCw+iK5IpAVeUj70l69Rkw1IPvZ/+zd7Gks+NDbIRuw3UT7tN+A5QKJUPtUOF2t750Q+jGwPYTw5SD5VZcrQaLhXPgOMJrfVAVw+s/T8sNhnZD5dWiPzC9VrPvANHhRtbXY+BZq1i2hFgT5TFe8xLx+IPoM1jsIR6o8+vxSSbISpkT5CuS4VzwiHPmzRe6in/W4+z1Dr9WAiXD6JfZaVkoViPlRBRIxxGV4+eMrdYG5+XD4D7OA1C1NLPmwIOuiKrmI+iMM6CLrsXT4QdZAD+Z9cPu0Cr5w1dWM+DXgAhytgWj5gBUCNyAlhPi8BttnJFmM+1rexxe5ijT59pVaGE2F4PjPeUbId33c+AVtOpccqcD7oO0v1E9h0Pmfg+c1hTVY+GIKyg9ULaj7QlXmVUC5vPrwyozPhaXQ+OjbRfX67fT6cFL95UFuDPruWTMxlP4o+wHy0fxCfiz7fuEYHzlKLPhAXIZWFDYY+/BeIjCICgj6Q0YMzUEx6PgJVR22feHQ+K0+mirIuUz6qkR+FMBFhPtda2LoqiVE+EbMosAcUTD56Urq2I99VPjxanGjwqkY+brg67pz3Tj5+RNoho1FjPjNZs97hlWM+oTmxnySVaD7N2K9iCFRvPrdEs3hWh2g+wNsR3q5Thj6jegn0ZTeVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3041\"},\"selection_policy\":{\"id\":\"3040\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3027\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"sKcZNn/sOj4DXz79G4VAPqMpxqNPFUA+N7kZEDoiRj5iW5hE3cY9PmNlDMwRrEk+BlMaUK/zRj706q70zMJJPvedAvKyN04+88dAj04jVT71X9UauLBbPtYouoSPq2E+COcxChkkZj4Hky9BLyVvPuH0pkN6qXM+Hp97wsfgdz4tn4PuCU18PhL6hb6bMIA+0MKLQ3f2gT5zM+bkX3qBPryyMfDmS3Q+XMaREq22YT4dl+C11KhRPn25TF0L4FQ+zSLBy3tKTz4anzEw3qpAPo4eHABezEY+EfU9RiVhTj4Qw6VBUBxZPtEQeYQygWg+O9HSGmqWdT4+gQJ5X6mAPoc9Qsf2UoY+ueauOGp/jT5RHWLMMnuSPknEKBZRP5M+ZLdpQXT5jz6p97jfIWWJPsRX+HZk6IA+e/+5T2tNcz5s0TBh/exOPjGkdhCB/Ds+Mj/RkAKwXT5iX6rIlkQ8PgpB+1nir0Y+iOJnLv7LSj7MmLR5EuJNPmHtGoUq+zM+wuTGaZe5Tz63e7L0iPtWPnLYuA/WAlk+k4La1Y49ZT73yjSQnD1vPvYc6YQ2XnU+LEJQb73LgD74h6Zu3jCIPgCLtqfSJY8+WzSgU2v6kD6iNBLWXzCHPougTqRM0m0+R4EJ8EEdWT5t64n2ZaFjPsUA8c4fEl0+uGATHj5kWz4ffyVMB/FWPgYtwAaDm18+4ieqv895YD45U9rLvutWPt8y7BvecmI+t5MfAWQzYT46fmDYwGRhPlBCkzzuSV8+9A+OdkrlgT4+3P7npYp0PoNPLUlYd40+kwhNCG3zaj6az5FH2bltPrXdm0ARWFg+FpW2B3ZSaD5bWA3nMktuPtIGphT70HM+rztlQ21sez46ZG8V2BqEPoHBpcVLU4k+wHJmlWdRiz7mET0ajcSLPl1vt7rOLYY+txvJnwolgj6bQlAU7y15PmOtLRI3hHQ+mHbfibZVXT4u1ltY/jpaPo/LRKGIBVg+5G0h9EY7Uz7DvcnWajVSPtTuq1Mrm1w+s9pphOSuVj5MeSv0+HVcPp3+Cb2+N1I+F/j6kRqFcD5jeIWPYZFvPj6y3F7DWmw+FULpcY1Qiz4giJiN26SWPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3083\"},\"selection_policy\":{\"id\":\"3082\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"SgMexM+5QD4slDU95xlAPlagGFiJjj8+flCsuVnLRT5JONzGR+xBPmX8M5pskU0+rsZL3YH9Rj4H+uezm1VIPrerU4xTEU4+EEMkeaOWVT62ifCUvxBbPktsrGVED2E+iEHNS8aoZT7IRixDjtZvPiK1bvhQcnM+7MJ3mgxfeD5Pne7N06N8Pu+fhcBIP4A+MQc8bwBMgj5m9UFkGzaBPq0FqpjIdnQ+ac/K6TLwYj5CtIod51BSPkfYDqVBBFI+zq3NedSfST42jYyjFSRCPmNTY1rsjz8+Kk329HisSz5c/n3pp89YPvYOZ6U4HGk+z/jMZO+odT4SomsKjXyAPju2TgoodIY+U+QBfrr6jT6ZU8fm8bqSPpEge2C+u5M+y1yMKzEdkD4d57NnISeJPuwrHmOQgoA+JHeySSIxcz5x+rSxcbtRPsM0XGsi2Dw+KpMiKVatSz4O8hJgJ9lPPj3pvZ7oMks+6ABH8Q/rRD5bzgcfNbw5PkZM1jcp9kE+Iy1qVDXuTj5phFJnPbpaPgCHNscZAmE+uzJ9Y6UvZj5TUePW7F1sPtUATjwP3nY+0beioi9ngT4KxuOanp2HPjqiqD67uI8+hRd6UllukT4biI17kaOGPmlkV9irbG0+1pHofuSIXj6EIHiUQJJnPjEwgri8TVw+j5s/0zVFWT68szHrdaJVPtjpD5BPLGE+CVBUHCqjXT5yha3AM5lVPh4bRrSYI2I+CFeSbSdIXD6ka1g2YnxfPqJ9leZTTWI+gZhhaepgcj5nFOHbSG54Phdu9yg+9I4+83gQFBFScj7ZshN52lNzPtuKCSJD2mE+pgNOKX/OaD4PVrI0TmluPo6qeWskE3c+iw2IikhufT4sSwinFRmEPkZ+QmAyS4k+8Rh+Tg0djD7xrG/tTPGLPr3L7hPgKYY+wLdls6xKgj5ubD2kU/F4PgyqR3ReeXM+2l24YxBwVz6pQoPBngVaPsIjktP+zFQ+pImgZmSwRz6/rB+aaaJSPvxPu2QnFl0+LBQRKSlAUD6hqQ3WpchWPp+BLoG6UVc+3RoV3zaKaT7JKCSUb+dvPr39IEOEPWU+ncXNIp+ijT4hVHTd6ZWVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3065\"},\"selection_policy\":{\"id\":\"3064\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rBm89QuWPz6RnGyiqpI8Pqg3UudAwj4+/9Eei4O8RD4MDe66DPhAPpOcqXeg9Uk+q2EVWOD9ST5cke5zeC9JPq4wFNV5DVA+DiYHOGndVD6kuMLkhiNbPnb33Pbf4GE+96eNnjOcZj4SVMVF2QdwPmvB0EQWaXM+h9zt1Zo+eD47e1/dGHR8PpQ1mOM1QIA+u7K6zvf0gT46DIOVGVaBPnalJ/0finQ+UZkpFtSvYj76oxm/XFhSPv31Hr2oZ1M+i88M+jMkTD4xGNdlHgs/Pr7Cl1P/6UE+jhEW0wmaRT5WTF8HhJNbPiaABfSscGg+Rolt4zpndT51ieEXuYqAPpkET4LumYY+BPYJcCH9jT68U+iXr3eSPvcNFDaNN5M+a7FClYfsjz680nmVAPuIPlYlL+m37YA+E2rzRjKRcz4NQuT86+RQPksFFizqtDM+cD+hK+MJYT68uEwdNvZJPmIUU+Z1clA+RWLhrXq1UD7hXawUehlIPupl9Ccu5jg+2i8sGTUDSD7Mg8F61HpaPnLeVrofB1w+7k25aPyuZD5SkxBf28puPoVR9dAr9HQ+U7rr3ux7gT6N62fjtKSHPhrvkGZ9JJA+u0qVYg0qkT6v8HKwArGGPiRlVB2pQXA+DCTL+ZEXVz4I6FkbNdpkPsOIkHUHTl8+baxl8l9kXj4/JMv5WxtTPuOoM4BkMGM+SQjf5VVJYz55Iv4EwLldPkZ96MaE5GI+wACT64WKWj4V0WAshQpZPii5ufyL71g+gz08HSjtfD7vXBNhr3p4PtnrrPyKKI8+Guijs1/oaT76amajN1VrPj4mDi3n1FU+9+3yULwRZj7+onmMeIZvPkSxBs1YYHU+Remo7MUhfj58zWxrySmDPoCJaJhSu4k+JIjasBrHij4Xgn/JjN+LPh4q3vEHF4c+JDwPfN96gT6FXJeQt/t5PiVRtJpM4XM+CVFx1UGDVz6s+NRYwqRXPlzbq19TRlI+n8iXrKKnUj6fE2vgcC1VPva5OBRFdFc+aQmHK080RT7mWs+5gBFUPkbKmRekwFg+LDnmeLLwZz4jG1EkWORwPtNlb8RC4GQ+ARHJojBigz5ARg/u1qWVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3085\"},\"selection_policy\":{\"id\":\"3084\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3029\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"UnionRenderers\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"51db1e3a-e51d-455d-b478-00c36d87be30\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"cc0aff7f-4c83-449c-b710-0b430c87e109\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"75717ed7-71ff-4ff3-a2c0-1182c5e7697e\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"7c823834-19bd-4280-9c9b-d68faab8ab27\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.69, C/O= 1.14, [M/H]= 0.79, T= 941.88\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3475\"},\"major_label_policy\":{\"id\":\"3473\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"3472\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"3502\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3470\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{\"ticker\":null},\"id\":\"3475\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zhEwH30gSj6Y7cAI22NMPrTJa5c6EEc+3/hFYN8GQD4lKHrAjC46PiquMvX/Mi8+jGevYyhgKD4vASi0lR4dPqqoi1dPSis+J1ExfrEUHz6PjHYfSokiPrJWpxUZ7iY+2S8S+GgAND6lHyQrHcsxPr2tUYP7P1U+N9V68A7eXz7gCQFcc+puPsP+UxiImHY+DfROgZ2hfz58wvxqXKt/PuWzsssPZHo+phFydZgecT4cWCBbvQ1qPqT67dth4WA+Qy2sb1t+VT40Jb2ThFdLPtDRypEWNEI+jqAOSujtTD42MHTRoPpRPvm5E0FF3EY+KD3IoWstOT4Y1b8Vq347PjozmP1SNz4+/VfA1/zCPj6YecWfu2I9PpjWyOytJ0A+WNbChY1JRj76+uXAG6I+PsEKBKLwEUQ+tXon3U9BNz41GhrJUglCPrzwsbX7QEA+MtgH4RzwSz7xwdDUml9FPsNG0aVP8FM+MttldKOadD7k3Fs02dmCPqrNcJmNBII+dHv3+w34eT6Kg0HW99JyPjaZrhUYKmU+p2m5wQN3Wz6NEPTUBYdRPnWb3h5+AEc+pn6WaZ1pQT4FFF6UlgU0PuS65/D2tSU+qbLL5xDHED43mm8TM5QQPlu1DsGj/Qk+/J36jiXYCz6+vMYbNVAHPnoVS9Xumg4+AZOwBo3mMT6m3Xym7x5oPnBaJy09nXg+NNJVvq5Pgz4TCc4WTYSMPuzWqjNhn5M+3v4YIGR0lD7GzmEtv5yMPgnsLY6/DIk+LAmcJvNdgT57fEVDJ+hzPp4WN1WBC2I+z4CUBedMTT4h9R5WnukzPgj0JB1tzTM+BMV+11v7OD7KEnGHHaBBPkckpdoL60U+3uoQtSJTQz4mvGF8ejBXPvweXwBU3Wg+qiIPieFjej6mQHqkIsB7PszPPbcMxHk+arek513Ydj5ofx400gVzPpbRdi1YHW0+zPhThT4GZj6vgjjURIhgPuGMHSRGjFk+IsRIB1YPUz7gG9YAMuZNPgeJQW/2NUY+CeP2+UotPj5Z4mwT1QA9Pi2TXshO0jo+yS/KvCdkLj5zE3rrcTo7Ps7tzE3cATk+DrkkHaoOMz5P7ZOLk+4kPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3502\"},\"selection_policy\":{\"id\":\"3501\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3472\"},\"major_label_policy\":{\"id\":\"3470\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3478\"},\"selection_policy\":{\"id\":\"3477\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3473\",\"type\":\"AllLabels\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3478\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"7c823834-19bd-4280-9c9b-d68faab8ab27\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"75717ed7-71ff-4ff3-a2c0-1182c5e7697e\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 135.58, p-value = 1.73e-02\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"0198f548-4e86-4284-9108-175852224411\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"55315aef-6197-45b0-a292-7d470ccc1ebf\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3819\"},\"major_label_policy\":{\"id\":\"3817\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3846\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3816\"},\"major_label_policy\":{\"id\":\"3814\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"3819\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3822\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=135.58, p-value=1.73e-02]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3866\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3816\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"ktFNjneKVD6uGweStzlWPp+IUvkD31E+n8xWPWMtSD7ongNPr49DPmYrCIg46zY+bSyVECmKMT6wTmXzXuIkPjJO2+yKnzM+RRVvzj4LJj5NUTI1wREqPm4GVj4nLDA+aphQuwmJPD5NscEkp1E5PprT7w/kZl8+KoP0A2ErZz5cmgwiO253Pt08PIrSxYE+5zdR2KDeiT7slt+/eQCKPjrRthuEYYU+C3EztsOOej4v+jQ+jXNzPvp6vsEZRWk+/BjJaBJyXj5FzbGthItSPqqW/32gKUg+KLmdteIpUz68NitTcQJZPux9GvHR7U8+dKwfS/tvQT4IWem2i8FCPtoDzjJgckQ+rhg0TlziRD4EKXuGn8JDPiw6yde3NUU++N4A30lRTT5AjtyQMzdDPgvtSerP+kg+b0+bWIP6Oz4tNh/Jr6lGPpqdJqOWSkQ+8hUFAD1HUT4umOa0EPJKPlHh/zYwclo+lJNsbojXfj7YDdbMLk6OPhhlv1g6EI0+oN+s1GkrhD52P2X5SHB8Ph29PEoZIW4+BJ9CzsDQYj6Gja9DRG9XPng4Ru9BRk4+5XBfWedKRz6c+KdpaFw6Pr0XJB1LVis+PtDdjiZ1FD79ZjaEeZMTPnsS+siEKw4+0+jlbpnsDz7KmOYn/yoLPi1WMHr3yhE+ExU71kBwNj6BNpR0NJZwPnyz+i7tpIE+rit0bsfFjD6MAB1mdjuWPv43VtRXAKA+QPJGt41HoT4sPlJu9p2YPoq6thpW/5M+OLmBukCOij6vR8bdZNh8Pnyms7YE+mc+Mq1TLTE9Uj6rDlZg4mk3Pi7gI6FP5jY+NXsD+rq/PT6A7lNInTpGPv+iYtuDPUs+nOMKx3DlRz4DVKuAUM5fPp3XTf7WdXI+qow2sEixhD7avyJX2BmGPkGnXXpvp4Q+3pj2AKQ4gj5q6HnuBNV9Pq5aXzNBPHY+eYkLR52ccD4NVOgehZNoPpyXnHDstGI+2AUDt1ioWz4QHPo/2HBVPtzBKPYbk08+dupYI5uPRD7GdGrQB8hDPh6f8DKcf0I+f6Jx/3rLMz4hdOUw9w5EPkTYuoioLEI+v8drvNMeOz7ihL/ZV64sPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"vPEE/rUYYT7ac7LUP5xiPkNIZ7Uqa14+NKtMam2AVT4wLL0ncK9RPl1T4rzSYUU+CLn3q0j2QD7sHnWKx240PmdRvHo/20I+lC6KdkLdNT6ap0hPdx46PrRWhoL6EUA+M3jZIGuySz7QhSkDFK9IPrNIuOeUs2w+Q6xlVtq5dT44k7u6072EPpH8uU/E0I0+6aHkJdeNlD4gVnbXnqeUPuyd+3KLZ5E+Dk8zvUQ6hz5sU9IZ8ROCPvfRG219PXc+JN0Wv+qybj5sBic1lgZkPtVJKDFgyFo+KNtP478sZT5YelNX815pPoYMy57TAGA+u4kPcH2eUT4FMpNMyktTPpLEhpWGTFU+nWvg4Ep4VT5HFj4VaYtUPkavZ9rv7VY+ss8x9/mvXz6s9fKtl2ZWPvYzPKNvqF0+Lfxy3/OVUT4yOeQgxqhaPnd+MYkXJ1g+hdXablPlZD6VbqrjO6RfPgBAyS2d12w+7P6ddNoOjD64WqHMs5GYPjJFFgFdjJc+s+CznmdikT49YO3xp72JPuofWpN9CX4+JQISoPfkcz71MD4jw65pPjVPbG8a1GA+ALR4bpL+WD6qdmqrWLFMPj6jI33HjD8+/75PE1KRKD48mTb9hLgoPjqAlymnfSM+Yit1S8T9JD52Pg7wK4khPiTU7xXNiSc+bpdWGtGISj62LAtPtj2BPuBBKlYfS5E+o1VGr6O8mj6VjhAGk0ejPvwaGMizxKk+SNFh+X09qj5wRm7/wO+hPt28eL2jjaA+5hTsLNiHlz4y+ylDz52LPnhEAKHp/Hk+MW88Fz+zZT6Y7pdS2DxOPvG77sC2pU4+jK45cUsRUz5kXaer6AZaPoWkNYN5bWA+Ft29FXooXT5qM5oeH75wPuT6OR49CIE+IGtWZNyIkT5lk1YESkGSPue5iVge2ZA+DB4YfaX2jT5dU0NewkGJPlX/91MxloM+w+VVc+DcfT7OgWpf3Y12PoAhXTAml3E+JsPzer9laj6suI8HxexkPkZE+cHtU18+6wZjgZXAVT4OSqUky+5UPpp3TFeTNVM+fPBxN2xvRj6SHZkIiuFSPlEdX5xOaFE+qPjers20Sj67vuIZU9M9Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3888\"},\"selection_policy\":{\"id\":\"3887\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hdorxfFdWz6xAbadG7ldPnHoXFcXJVg+wgh8hI/LUD6k+z7PR3dLPog0c4C3a0A+Pk9CNF27OT5ExicE998uPoD4KfEEqzw+m9zg7nBxMD4g6PD0q5MzPutZsSEOKDg+NOJA/3f7RD47L8XK86tCPkAZ2HeDM2Y+7PYvbMWncD4z8OCleDqAPrcc+2xLy4c+7p4GyZO+kD7LELPb7dOQPokG14BNGIw+yoMmTNNAgj6E0Oy4t817PrqH/SYF8HE+0bS9+fn1Zj4P7f+LWExdPpUKFDiYblM+vLcePrHBXj7binQAFvBiPgGsERtI/Fc+9V+fFXtWSj6J3gcokKxMPn/G7a62hU8+9Hf6B3npTz7JqnvYuGxOPi4mJuNlxFA+lx9Zc08sVz5mnjC7GAFQPj6VMMzrElU+CdCZtZSUSD4k6rkCz/5SPqJmYm0xJlE+fmDd7vGIXT5W3Q4foo5WPlSYpKRaCGU+WyTqVU+9hT7SMIaZZdyTPt/7uhY9CpM+g1AKiRx4iz78/0835vqDPjw/PBwFjXY+p1EzB1hNbT7c+4qiMrNiPlPdPeuqZVg+OTaUDQNSUj58OR9wxu9EPo7X2oX2mzY+j1NfrfJlIT5d5qjfIEEhPtkE1luICBs+l6Uup+r4HD6p5Ae661MYPp3/g2mkNyA+/BC6wnjgQj73R1WJ0Ih5Pp6bp+2VHYo+vTVAs8OPlD7bDh85TmWePn0pN86F4qQ+xGFU2IXCpT6GZZc2vD6ePiIa1MpOjZo+wXgWRXxnkj6FjwbZAAWFPtsLLf71/HI+ykXmrdfRXj73emHB5PhEPgRWwEhvDEU+WY26LzqBSj5SquinG5JSPkVNDnraPFc+cqehPJmNVD5rCMU+s7FoPrLmYJ0oQ3o+dbFxvIDhiz5S8+cvNk6NPoeNuBXWLIs+dVsHv6QXiD7JI8BqIhaEPqysp+1RtH4+nrcw3b48dz7qVW/3z2txPk5tq2ic8Wo+CaM66/UcZD60xownMaVfPprSht69jlc+E76HiTEEUD5xhNoMz9JOPinHxHBhdUw+3mCV25QqQD6j1wuhBelMPnOJvOCifko+RG6KxhsiRD6WQGGDPxU2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3846\"},\"selection_policy\":{\"id\":\"3845\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.69, C/O= 1.14, [M/H]= 0.79, T= 941.88, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3817\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3822\"},\"selection_policy\":{\"id\":\"3821\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"iJIV9mzRWD7B4BpEZexaPuwuaGdfzVU+LA5Y2k8TTj63jrNOqINIPpc0kg7nIj0+MGosX0GsNj52IW6Q8SQrPr69ovdnSjk+xphWQnHWLD6KbmkQSyIxPmiqEYXZLDU+GwZGNJp5Qj7W5Km3O21APpSo0+ojxmM+zCMPeB6GbT6+0HfSGxZ9PvChFA+zi4U++upx69Ckjj4WhLh2NsyOPtu7gUt/lok+9q7LW1BlgD6u+O05UK94Pp5hjt9D6m8+bxu290cSZD5eSWdUbEhZPryE6gztr1A+Rhxwvn5tWj47sdD3IolgPmdJ7EOK/VQ+byZH26wDRz7QCb17evhIPg5Uyib7Yks+djqwK07LSz6dPl1PSXFKPpXk16mr7kw+RRXY32j+Uz7NFfWKSjtLPhA25wFb3lE+qZmk3iegRD62r1PhMiJQPiql7GFtEU0+COTHW071WD4AQu1ePSpTPp4LwHLRHWI+1yKVK09hgz6sxwwTVBqSPmjpbAlIW5E+rBkMAVS+iD60kKtPN9SBPpOuTullwXM+efDmteZiaT5obBTTtRdgPiPohm9+8FQ+M5Y22wyoTz78pJDFWQpCPqg/ZBBORTM+CJeJkzdxHT6Knnl3zu4cPsYKiTBekhY+EjxHaj4dGD74kkls5VAUPv6m072j9xo+YHKLgncEQD4GpiakfDF2PqOcW4bL84Y+Yymzv3RBkj6uY24B8libPmMdjKyyD6M+Qn0XyzwWpD5fc//rvSScPszF/zG+Gpg+xrUpSXF9kD4IwDKGZI6CPtPXL8zVX3A+qFgUXDsfWj4V2hw+MYNBPla90B/fdkE+UTNSRnYpRj4TczM+s5JPPmABr+B9pVM+hDLMwQdXUT5XrMRoVWllPt6NgfhYWXc++bazlFoyiT5Q3LSMg52KPml8bcV4vYg+vDaOvGnmhT7OfDiD4ieCPsVh+knAins+Ph78VmbDdD5o8qs4RgJvPl8JetM23mc+BLfkwzrEYT7x5Iu6udVbPrdqm473p1Q+unzdY8a/Sz6uJIG+RbNKPl2u7tpHvUg+GRAC16WmOz5Gut3U3JpJPolFeRdKY0c+pfQGpsetQT4m8ZPpIDEzPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"giJClHbqXT5Qkaj76EJgPvahUUfPfFo+bgrMG3eNUj6RaMpP52pOPsVOnXn7RUI+TDRYCXnKPD6JtfA7fk0xPqGZWPXQBUA+02yWPKl3Mj62YXjZDAU2Pm4JUb5CIzs+Tb47ylV9Rz6geeDdq+pEPuyJ3ATjoGg+8ltYnHuMcj4H+IVi4+mBPn6X4crjCoo+X0hUHL8qkj6L3wl8wEGSPjdRLLYbmo4+nliBPFYchD5aqOs3H+x+PqXeM17o6nM+M07F+6vZaT5gSMxhIqhgPm6QPWNDLVY+manm3vGKYT57ZBgJCVdlPpsON/IF+1o+e5n3T0mpTT6hWSnqUjBQPniciBs51FE+uVoi8tEDUj57C80wFDRRPhFaYPF1EVM+6SnaBjZaWj7mseYwjGRSPmz0eZZ8R1g+aQaPjAGJTD6SJCAka9tVPq96zimsw1M+em75wEoOYT6seDDfBvNZPgolidbj8mc+3yU/gE8ZiD74mf8fd56VPlYOCSQyuZQ+WocIEeUxjj5Eb/QelSGGPuXPKU+kWHk+a9k/rOSbcD5QiwFyr05lPoPS9GbX2ls+WCGNrf/PVD78za0aM9VHPnRvUfue8jk+mtv5kEkTJD51/ZSD2gokPuz+Ioeyfh8+jgcLckvqID5aNsYH8lYcPrsrHvR28yI+mK/oAnq8RT7o6YNuJOB8Ppma81RgR40+F0LNphLelj4E3Wc41bigPpc14u9YtaY+RkaR5c5upz7Xq5dAXSygPnhuqGPf/5w+vDsDQYdRlD4CX9ornXuHPuM/KjAWmnU+dhnc/znCYT7ZG6ZEmG5IPrLur3H/oUg+YeciGf7YTj4am7ew3VpVPiqZbRM31Fo+YBx3tyrEVz5/ZMUUEfprPoY/QEL4LH0+8asv5KaQjj5UChvT6P6PPqWeA2YznI0+LoCAwd9Iij7EykdSYgSGPsl7qsjx7oA+/lBlYxe2eT6gsojSfFZzPj3R3P0BBW4+Do+QErF1Zj471EZKVLphPn06ci6EdVo+yb0g4X8oUj4a8pktLHlRPvtvTYO9FlA+sLmpy9aBQj6A+pw2lxtQPl3N/6n7mU0+4+cN52+WRj4GkC4dXvk4Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3866\"},\"selection_policy\":{\"id\":\"3865\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3888\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3814\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"55315aef-6197-45b0-a292-7d470ccc1ebf\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"0198f548-4e86-4284-9108-175852224411\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:46.985950Z",
     "iopub.status.busy": "2023-11-28T20:32:46.984862Z",
     "iopub.status.idle": "2023-11-28T20:32:46.989731Z",
     "shell.execute_reply": "2023-11-28T20:32:46.990098Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 135.58, p-value = 1.73e-02\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(135.58, '1.73e-02')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:46.998803Z",
     "iopub.status.busy": "2023-11-28T20:32:46.998063Z",
     "iopub.status.idle": "2023-11-28T20:32:47.000375Z",
     "shell.execute_reply": "2023-11-28T20:32:47.000694Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:47.004236Z",
     "iopub.status.busy": "2023-11-28T20:32:47.003714Z",
     "iopub.status.idle": "2023-11-28T20:32:47.005485Z",
     "shell.execute_reply": "2023-11-28T20:32:47.005938Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:47.009320Z",
     "iopub.status.busy": "2023-11-28T20:32:47.008788Z",
     "iopub.status.idle": "2023-11-28T20:32:56.393118Z",
     "shell.execute_reply": "2023-11-28T20:32:56.393462Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.411240Z",
     "iopub.status.busy": "2023-11-28T20:32:56.410399Z",
     "iopub.status.idle": "2023-11-28T20:32:56.413845Z",
     "shell.execute_reply": "2023-11-28T20:32:56.414161Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.0000</td>\n",
       "      <td>8.000000e+00</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>292.0750</td>\n",
       "      <td>1.887518e-01</td>\n",
       "      <td>4.706987</td>\n",
       "      <td>942.430484</td>\n",
       "      <td>1.204723</td>\n",
       "      <td>0.837750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>270.0162</td>\n",
       "      <td>3.617975e-01</td>\n",
       "      <td>0.099432</td>\n",
       "      <td>28.979305</td>\n",
       "      <td>0.098375</td>\n",
       "      <td>0.065712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>82.6800</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581274</td>\n",
       "      <td>915.065552</td>\n",
       "      <td>1.095945</td>\n",
       "      <td>0.753631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>155.6425</td>\n",
       "      <td>4.162500e-16</td>\n",
       "      <td>4.672627</td>\n",
       "      <td>918.677236</td>\n",
       "      <td>1.136864</td>\n",
       "      <td>0.791841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>222.5600</td>\n",
       "      <td>8.500001e-08</td>\n",
       "      <td>4.689059</td>\n",
       "      <td>930.482269</td>\n",
       "      <td>1.171909</td>\n",
       "      <td>0.827616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>284.0425</td>\n",
       "      <td>1.450107e-01</td>\n",
       "      <td>4.706246</td>\n",
       "      <td>969.281540</td>\n",
       "      <td>1.299113</td>\n",
       "      <td>0.887986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>924.8000</td>\n",
       "      <td>9.300000e-01</td>\n",
       "      <td>4.930069</td>\n",
       "      <td>987.518372</td>\n",
       "      <td>1.346566</td>\n",
       "      <td>0.928412</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000      8.0000  8.000000e+00  8.000000     8.000000   8.000000   \n",
       "mean   0.680000    292.0750  1.887518e-01  4.706987   942.430484   1.204723   \n",
       "std    0.139971    270.0162  3.617975e-01  0.099432    28.979305   0.098375   \n",
       "min    0.480000     82.6800  0.000000e+00  4.581274   915.065552   1.095945   \n",
       "25%    0.580000    155.6425  4.162500e-16  4.672627   918.677236   1.136864   \n",
       "50%    0.680000    222.5600  8.500001e-08  4.689059   930.482269   1.171909   \n",
       "75%    0.780000    284.0425  1.450107e-01  4.706246   969.281540   1.299113   \n",
       "max    0.880000    924.8000  9.300000e-01  4.930069   987.518372   1.346566   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.837750  \n",
       "std       0.065712  \n",
       "min       0.753631  \n",
       "25%       0.791841  \n",
       "50%       0.827616  \n",
       "75%       0.887986  \n",
       "max       0.928412  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.422492Z",
     "iopub.status.busy": "2023-11-28T20:32:56.421570Z",
     "iopub.status.idle": "2023-11-28T20:32:56.424898Z",
     "shell.execute_reply": "2023-11-28T20:32:56.425219Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>263.01</td>\n",
       "      <td>5.550000e-16</td>\n",
       "      <td>4.687642</td>\n",
       "      <td>915.065552</td>\n",
       "      <td>1.177646</td>\n",
       "      <td>0.848943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>193.52</td>\n",
       "      <td>1.700000e-07</td>\n",
       "      <td>4.700139</td>\n",
       "      <td>918.070943</td>\n",
       "      <td>1.150081</td>\n",
       "      <td>0.771041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>99.49</td>\n",
       "      <td>5.800000e-01</td>\n",
       "      <td>4.690476</td>\n",
       "      <td>987.518372</td>\n",
       "      <td>1.296146</td>\n",
       "      <td>0.878518</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>924.80</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581274</td>\n",
       "      <td>940.493266</td>\n",
       "      <td>1.166173</td>\n",
       "      <td>0.753631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>347.14</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.674390</td>\n",
       "      <td>920.471273</td>\n",
       "      <td>1.095945</td>\n",
       "      <td>0.798774</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000      263.01  5.550000e-16  4.687642   915.065552   1.177646   \n",
       "1  0.537143      193.52  1.700000e-07  4.700139   918.070943   1.150081   \n",
       "2  0.594286       99.49  5.800000e-01  4.690476   987.518372   1.296146   \n",
       "3  0.651429      924.80  0.000000e+00  4.581274   940.493266   1.166173   \n",
       "4  0.708571      347.14  0.000000e+00  4.674390   920.471273   1.095945   \n",
       "\n",
       "   metallicity  \n",
       "0     0.848943  \n",
       "1     0.771041  \n",
       "2     0.878518  \n",
       "3     0.753631  \n",
       "4     0.798774  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.479821Z",
     "iopub.status.busy": "2023-11-28T20:32:56.470800Z",
     "iopub.status.idle": "2023-11-28T20:32:56.483989Z",
     "shell.execute_reply": "2023-11-28T20:32:56.484308Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"7205a5d5-80a2-4d3b-a579-ff37b4e0b22d\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"004b3c32-7925-4b53-86df-a505a27f7803\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4239\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4233\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4231\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4234\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4236\"},\"major_label_policy\":{\"id\":\"4234\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4236\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"4MlqeWME4z8qXI/C9SjsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]},\"y\":{\"__ndarray__\":\"j8L1KFzfWEDsUbgehatUQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]}},\"selected\":{\"id\":\"4239\"},\"selection_policy\":{\"id\":\"4238\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4233\"},\"major_label_policy\":{\"id\":\"4231\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"004b3c32-7925-4b53-86df-a505a27f7803\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"7205a5d5-80a2-4d3b-a579-ff37b4e0b22d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.487910Z",
     "iopub.status.busy": "2023-11-28T20:32:56.487377Z",
     "iopub.status.idle": "2023-11-28T20:32:56.489525Z",
     "shell.execute_reply": "2023-11-28T20:32:56.489843Z"
    }
   },
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.493330Z",
     "iopub.status.busy": "2023-11-28T20:32:56.492867Z",
     "iopub.status.idle": "2023-11-28T20:32:56.495120Z",
     "shell.execute_reply": "2023-11-28T20:32:56.496198Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.500046Z",
     "iopub.status.busy": "2023-11-28T20:32:56.499382Z",
     "iopub.status.idle": "2023-11-28T20:32:56.576982Z",
     "shell.execute_reply": "2023-11-28T20:32:56.577314Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"37e8ca2e-f940-4e8d-a657-8b13a6931089\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"e11da56d-370f-4b00-a3a9-98567de8071f\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4565\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4571\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4827\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"4563\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4565\"},\"major_label_policy\":{\"id\":\"4563\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4566\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4568\"},\"major_label_policy\":{\"id\":\"4566\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"4568\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"1lQKweW0lzz8qbZWh8SXPCL/Yuwo1Jc8SlQPgsrjlzxwqbsXbPOXPJBQF/DGXpY8sPdyyCHKlDwcQbeRBdCcPETFfa30aqI8Qp9nnnZSoTzghe54fSOqPIA83p9YNKY8cb5rt0cWoDzqnRSDTk6HPNcKzQoKzJ88M/LM+VA/nDyO2czol7KYPCKHBVYCaps8POC33ZHDmDziEnSJPd2UPFjohgWzhpY8svAh+OoMmDwrjAHJLnySPC8P/EKbPZA87gBWljMagjzfG581hcldPDGly0txfY48ylMATtRDkDzNxuguRNiIPL+lAEmHiKM8hr4maISPgTyyZQWRZMCEPN8M5LlE8Yc8yE0EnFj6lTwjqDAQkPSIPGpJu4FTv4s8sOpF8xaKjjzoCwdTiJiJPCAtyLL5poQ8imfSpseahTx+ujtP2xJ3PFzT1SbaKn48HvY3f2yhgjyOAgXray2GPP0O0lZruYk8FGQcZW3xgzxYcs3m3lJ8PCRrqHfAMIM8wYCVMK81kDzBHyQQTbqOPB5IQvpvj4I8ECLVIHt5Wjz/C/ZCGr5xPOi2qfybN4s8vO3n60+ukzxyDxqZY8eIPFcySytFJIY8BOP5V7VggTyy1HvwFlN3PLbGB2KGyWc8AoH8YtybHTxpG733quxhPGUpMYY7dnE8RAkFP7u1dzwKFOjU2vKAPG5MUcXHEYI80oS6tbQwgzxTlauNg7aFPOs4zLgxKn88q1elzlCRUTzqwnkfiTmGPPtGP871BYg80tc9I42scDzyn68KkrtyPBBoIfKWynQ8/FCofyXphzzcI1ZpXdR4PNujQsifPIQ8DcT/CtYJcDwnDrfSkVlzPGapC/2t/kw8IFFrVXerhzzYF/rfFAx2PKaNj5FeSYg8dUZ4qGipgjzCPXTMtyR+PIDFOBdZrIg87EcW2cviiTw+4x9eTtGMPGGGiCl4MpA8eT4lp+SJijz7uysRAF+HPPL6l8f/VYk8i/D9SvI+gDzOWfMs8ImBPPiYseFK7Ig88UMjyZKyhDwsNothnamMPEaKCY1UHIg8rhMwi5tFjTzNYlqt0gqGPJ1tCZVPGo48KEElQ8dGgDxYkSZpaoh/PKpH0EH5x4c86e1SSP2alTzt/3DL1r6RPMM27bOOFok8kVLiid3YiTxXofr8QjyNPP73hOAwYZA8WXG26vYdjzzXN4E+4IWSPOc0nQQgLZU8YT15TNRnlzwiM8eMWOKYPAbol+v9BZw82FugAkX2nTzUf2jhqKuiPCziUhqh1aI8g7cuB2mXpDzCMu2vk9ukPJgLzzf7CqU8klteSIdcpjxjO2lfG7ipPPTGRXvxkq084WCyM3ukrjxJ4+OalaGxPFhNdWc10LI8J/2YuK1TsjxFKvoaa620PN59TuWa5bU8PK8aHAQgtjzXEjW0aay3PBxx+4CS3Lg8wx6VzIp0uTwKZTBTGdS6PM9rvtwCPLo8hkUrzHFEvDzEPqS3pFm9PIdNBsdgs708BDLpTS50vTyM/K23Hwi8PF/zIAVjcrk8zsdqzrExszxbnHpI0KysPLGvKBMuJKY8wWBPH6ISnTympcHf+LKWPMQT8J4/JY88wNAeCeuliDxlTTohtxOPPBc/d2jTLI88wKKP+HKdkDxyE9b43Q+PPAGvc6VJEI88I0k0l7IBjDzTPPO8i6uJPKOrLd7fqoI87eHPU2pFgzyG/ZlKGrqFPLwpjgaKIoM8xGt3UxVVjDzxDsNzs6mMPGtKqh+CnZE8tA5JXR0LlDy8PAXsP9OZPCc1pZbOzp88JvcQDfMnojx+wm+WJjWmPP9EusFFN6w8s5wEaEt9sDw682kwZPGwPEY2Z5hJE7M8ywe07EQKtTzW+vDr5r+3PIz73syoPLs8dOLO+WVBvTx1wPbw/ra9PKyp6LD2ZsA8tioXvGMzwjy0YIZTAW/CPF3Kb40r8sM8G6qKQy42xTxOg9maVkDGPHhFrvqRDMY8AZA0jNo+xjwIEvfTXPnFPHNJVFKl5sI8Hr4VfFDbwjx2K0rxnm7BPMLcw2cZDsA87LxsVrhAvjyBXRKUUlq6PNx9A8z9dbc8ZjLnlPjWtDxxAsF8Ty6zPGCjsK4PHrE8nLwBrv9vqTznddP1gXmiPNfgneXMZpY8ZWx2UGVEgDxc+g9P0eBxPCb0F5SUQ2s8Woniv/tFYzwePVrXxZBWPKIW91CFw148AG/AklJWXDzcRJKgaYhVPNDUvIr8QHQ8btHTfcIjcDwYnNXhEA1oPKgqB5A5pV88PATz/54zZjwkc+I3oZRsPKq2R+pxV0k8oHNOSsh4UDzqC3mf10VUPDSko/TmElg8bGMNYVFDWDykInfNu3NYPNzh4DkmpFg8FKFKppDUWDwSfIVB6k5LPBwzWbvff208RojHMbZ2cjz9duKFfC12PAJdLT3nC3w8Rc54S1SOeTzU4kSx2RKDPEbsn7CGjIU8eDWgsdaQgTy+/o6xyGyEPLoaLPBpf4I8C6Opu4N4fjxgXtHKitWGPEz+JabqcIY8kVao2PVLhzzYA5InvFSHPGgxpZ9HKZA8nXn0BIWikzzdCvdg0ZmTPEBN0JrJKpc8pV1dH8LllzzDIsHrnJuXPD7CBMZ1j5w8BOA2CVleoTxycBcgIQmiPJi9gTu4sqM8WgirK4xIqDz3/kKmEDGqPFxRLVq/oao8BGOmLIjorDyeL+HBH02tPLn/IoHBdrA88pvjP9zgsDzHqtc4eD2zPPThTN700LM8MGH1yQiOtDycdic6Ica0PIrgqCy7bLU8ToH0B0hstDzmXhzPMMazPJwkrHw7OrE8f0HPcOYprjxG+lbQAGqoPLO/CrcGCqE87rc7uK6NnjzcGDAn6LyRPFm5Hh4urpA89DTHDlmLkDx4JfNliViRPFCO9r6lGYM8bBqH1httgjzrdTkwkOuKPG9oA4Z9rYM8VEETXD9UhzyPCpOaUSqRPBULPWHh6Ys8n7SbH20YkDwSPbFX61CIPEIP5+Xz14E84k3EjD3IdTzQ2pIz6keBPML3N2LsIYk83HmDxv4nhjzNXD5Or/qKPFUBYTy3Y4w8dqxx3LCIjjy7hQNoMRyFPEWrTGY374E8gQ1FqnkTgjxTgp9l+sl/PNI3StSfwYc8pdehsnUrjDxGuQfN2guHPJk3VqW/W4g8fIiE9lUYhzwB4EDy5jyEPJQyNOOG4388D7bVbfUZczxMFJXryASAPIzYjvCycYY8+JTzSVRVhjx+fF67D+2APGQcU9X2V4I8TC9PYbf2fjyOSuxqdUGEPFQGmMmKrnY8nFAUWZbrcTwWrZ6ToEp2PGqlxj4E9nA8Vuh48qoufzw3l2w2TvRuPOZ30wrjsnI8/BYog9rwdTyMGzQE5Gx1POAdyr3OFXw8wHzidLVGaDyrQG4QEIldPOlfApr/oHA8EUblusaYeDyZtEQuTMWAPE6as2EozWs8tLWlSfg/eTwgHA0+JD2APE7aAnKNY3I8MjVX6QgSdzzRI/o6nFKFPBJxFhdhrHE8opoEcsqmdjxuupLyv+R6PD6BxSqDnXw8BEL8AmnIcDxGzEYnRG9SPHxvqKqU/oY80H0pyrmfODymWTo5OTxUPOwp9f9BKGE8H962rUx3cTwg8ZP55x2BPHuZ1tximng8uq+zQJz9cTxaj4y99mqCPOzoygU4jXA85p80RVdOeDxab6jOrSSAPMEvmMX9d4A8YJmP4nkgfTxKLuXD7x+DPN7EUluseIM8owlZLro3fjzsSDna8ZxkPPWqx/mQo3I8GYrPPgF4dDzhBbtN19ZmPL0B+oU/8HI8TPB+4L0rZDwU0sUwxwhyPPqh3ZMUpGI8yq5CcNSSeDyFhlgTQ+t2PDbFPu35d1Y8pecZr08ocDzrOu1zuT98PDS7n9juuXg8NJZjk+w6fTxqzJAOcGV6PNuR639K9H48HQWYgM8HeTwln6A4dQeBPP+jYBmyjn888OAEh01bjjx/Xow1SSt0PPonIjbBwH08WE0LuiabhzyCeZURDhiIPAM12yupo4c8v7bNN0V1iTzLgDGQ8OaOPObvfNDUZ4c8gfqjSDVdizxWlKLBUp+NPF1kDu2Dh4w88b+q0yLFjDw6xP+gPsCSPK6+okKTw448myL8Bp7okTxAfjQqv8WOPMmXy4MbgZM8rjQPEE45jjyh2qUwoBWUPJ/W2YipTJQ8T8VKIaCwkzwlfeakOfWVPIVSHc1Tb5M80OYOatrWlDz0N5CPiwKTPI7YZ6svHJM8GAkQi1/zkzxyHhVZN9GSPM3Pm+cJFpQ85VmGfGuGkTykoJ8j0IaSPErEhjv16pM8yTLvnongkjycopaxXyySPDEToKyPm5A8XcVy7Ux0jjzSpgT0bCKOPIpBT5aA1448BB1s0WnWjTzplOJR3wiPPHbLoiNCeYw84uybdsvLjDywUiuTc0OLPLkkYn6C3Yk85IzNxMzjiDytXRGkaCuHPGHqMLYsJ4M8t4pkizoMgzwuDjYCtReCPESEwsdLr4M8xcbHsexZgjzFNV/5JtyDPBGMC2F4s388tBMXVhgidzyR9/Rj+It+PJcSlZRFy4E8I/pV0sscfzwE8N7rLuR8PB6KBHHF7XI8jHkgFq2TbTzE3r4rXq5xPI3SHquiOlg8cFGeE60eYDyYOa3RCCBkPMEhvI9kIWg8T2Iqre5WdTyg7wmVkFVrPNAWnpXDZHE8PdbDuHXjaDw8VG62CVpqPMg7ty3InmY8EcJlMINCaDwHcayy2MBkPLbs5xU+rGY8jbrPAxuAUzwt432iJqRRPFBrnkdaGmU8MY9Jjl3vZDxmsq1lr7RlPNFbo94IYWM8vQTQIPupYDxk/xWXlbE2PLRo1rrSP1E8jlHnD0DTXDzAQ03JX6FlPDJLFs6qjWE8xGEYi3NQXzwkLQR6kYVbPCqrRIegyWc8Gj2wEfutVzwNaG5mb5phPCK3RhqkXmM83p1gIWcaWjwQ86cKF5BJPDHDqdZ1xEg8TjXP3VW0WzxqRd5Y84hmPCuOPs9Lj0g8LtKHPj+bSDwyFtGtMqdIPCza2iTaMFs85DHKvR7pcTx2wlFubEpWPNUtXlKvnV08mkw1G3l4YjwS8RUJwphiPOJJ5kefamI8xnwEFFs4YTxcvRMXTZdfPCyBHgbkvVw8p24Xfml0cjzLlm7HArNNPNyJJBv0rjk82o6dJbqXYDziHoGyv/ZmPIauePro41486woucZ0aZTzFFgvaAg1hPEA5/RssPVk86tc36CgQYzxLlgzNSFdnPJaAPT5Rb108/AGefaMnWDwvQaIJa0VIPKwzPwSMx907+M5ZEfvkWTxer1dLF9ZpPOzvuJdsRm48fJ+juADqcDwQlhd7N2BZPB/SzpvM9GA8bEOGEGydbDwuUhKWprBoPPJgnhvhw2Q8tW8qoRvXYDzx/GxNrNRZPO2A/2oOr288o46iQA3zbjxaXQmettB0PK/7HdvfsGI8Hl0Vb9ZqdTzyR6wLBsJ2PMQyQ6g1GXg8mB3aRGVweTxOXfFaVHwfPGRYqyT9ZWk8lfKC5UxmdzxiG0+V/ARxPF6INopYR2U846o67/3cbzyM+CSGmvJ0PKebrBS29nk85teZC9AKYDzAOFvj7vtyPAQJT1VtoG88iKDn4/xIaTyOTWIh+biBPLi30/U5Ons8UdTiqIECczxAAXE292JqPA4Bem3eY3w8fusA5VZjcTynvVL2jDd3PIZ1QyXlrGs8f9/Cu2DVUTzImpy4Z65mPMYya+MvXm08RFYtMh7NiDzKml6WlG9xPIq0HFyPtXE8TM7aIYr7cTzOwwaIVy9tPAbrV8yaZ2Y83Agem+5FQTwo0zbPj3mBPOLiXVpg75A84oympRDGgTxrmUAcfmKQPGTsreXz4Zc8vvqAeg7ukDwEXjgYxROaPPhyuMl3Z588RZUFYmPsoTwk7AyqkdmjPNOiepW76508XW3b1lMklDzPb3gw2LmEPA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4827\"},\"selection_policy\":{\"id\":\"4826\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4571\"},\"selection_policy\":{\"id\":\"4570\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"e11da56d-370f-4b00-a3a9-98567de8071f\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"37e8ca2e-f940-4e8d-a657-8b13a6931089\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.595348Z",
     "iopub.status.busy": "2023-11-28T20:32:56.594861Z",
     "iopub.status.idle": "2023-11-28T20:32:56.632971Z",
     "shell.execute_reply": "2023-11-28T20:32:56.633302Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.647645Z",
     "iopub.status.busy": "2023-11-28T20:32:56.646529Z",
     "iopub.status.idle": "2023-11-28T20:32:56.651078Z",
     "shell.execute_reply": "2023-11-28T20:32:56.651785Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:32:56.667510Z",
     "iopub.status.busy": "2023-11-28T20:32:56.656055Z",
     "iopub.status.idle": "2023-11-28T20:33:02.370701Z",
     "shell.execute_reply": "2023-11-28T20:33:02.371146Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.7338177561759949,\n",
      "    'gravity': 5.312830543518066,\n",
      "    'metallicity': -0.4027919352054596,\n",
      "    'temperature': 862.2901428222656}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.312831   1.733818  -0.402792  862.290143\n",
      "std     0.068053   0.226809   0.063987   21.458237\n",
      "min     5.214250   1.453910  -0.463735  815.782471\n",
      "25%     5.273095   1.567445  -0.442266  861.826172\n",
      "50%     5.293845   1.655623  -0.413888  866.890717\n",
      "75%     5.349881   1.937678  -0.394602  873.795502\n",
      "max     5.434187   2.109234  -0.237968  890.403015\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"560490c3-126b-4c57-b664-1fd093d1da25\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"1e8f6a21-fd8b-4e2e-908d-10fe800a26ae\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"TYaZVWbwRj4smeE7b59FPiphQFQ/VUc+YRL9jIWFSj4eel+knXlCPpKTLEzf2EU+r6g5FkpOSz7H0H9yqkpQPgwxp4gw51U+ks3i3eaWXj681rbmXAtkPha3bptND2o+9EWrq22VbT7yqcIlYO1zPhZFK/8zbHg+XAZF+KgLfT42Jsnvx8iAPjg46u2Wk4I+nvy0CWjbhD6voMZgb+KEPk6UA5f3T3w+7BYJRNbcaD5v6TFBiSlUPq3X3gOcUFg+Q2D8YSrjVj7Af0PapBhQPmGXaiXhQFI+L+MmBFAKXT6z+gaNtX5mPuTFgm+V2HI+ytwgSKD+fT5bsxBUZw2FPpdATRfl9Is+JHY5unN5kT4OAQ4mAG6VPmqyrqdMUpY+WKRUw6MVkz71ISP52AOPPir+HFsMyIY+MfOgr6RAez7o+xtKi5NXPj6gxFcpGDM+DwjZgRmKOz6CvyzYZ70xPu5+fVPa3Ds+Xz2Cj5ovJT4zX3KkzYQoPvlM+tLitTE+odp8W07JTj4+/GQ4S89VPo8nmpNRklY+cs1RjYs8Xz5Dxt3RWdNsPnWddaDwRXU+6ZE9qMnifz6QsWToi4iFPud/fIcXXo0+IoWcf5rGjz5JDNnAJzSGPnGDsmazI3A+nZj1UAMJXz7C6/yP4ilmPriKDfPRsmI+z66MghNaYj5CetPVjjRfPhZGZU9kc2E+RIpngLutXz4kK5Ya+lVhPlbcXhyNllw+GutT81bpTD7lqvrEislLPiyvh+uz90s+vtt0OM+ZTT66XkBlbAJUPvNRATnKYVY+U6fSOEwlVz7c6VDVH65aPq64OLDBqFM+K/X4OWqyUz5ugpiIRGhbPurjQt81i2I+wt/iVV/raz68gQjsZz1xPh30/wOXhnU+XEhjOCXGej4V+33XcUB6Pq2um342ZHY+8cG2UNW/cj4SXZbJXKxsPsWPgJmYfmI+2AbauILlUD43z+yB/f1MPrKWreZ8kkI+vEwlFgu6QD42Z900oSxDPsCZMqXCMFA+LOXVVY3vTj5AOA+4L9pNPkZRj9snRFI+fhg/vsMtSD55pHyDYIlVPoLGNhKtxFk+47lrxj3AYz4rVPkcdD5UPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5242\"},\"selection_policy\":{\"id\":\"5241\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ZQoJU93wPT7dgV0HvnxHPrO8uy+lFEY+nnnpeZ7YRz5sF/pYTvc5PkzZudyIn00+GU1SGb5ZSz6C+fC318RPPkV52TU/9VM+IRBOdUuAXj5HhOy6u3NiPmRLO3RJTWo+VBkUmy2Xbj7FpUXcJKV0PuhJsnebyHg+LpVICFYffj7B7SMCBfaAPqZSWrknQYM+S1YbIJNghD5n6w8CQIWEPtPs30TpwHo+xGQg3HHSaD4HUHi/W4JWPuTnbmz1b1c+tT5U4rSjVz7fvzZ7jqdSPte/ukUNeVA+j92v8UZ9Vz7cT0IGGjJlPkZi0G2ZRHI+asewBrRbfT49yhn3S92EPpJVRd/an4s+9x4YCY9pkT7MonYtImCVPjddJEmk85U+Tu1l6y3Xkj7LYmngzmWOPtH++7De5YY+ZO4kLglRez6qlrFb42tUPrj/xUxF5zQ+PNQN4IqIMj5fbNy9KyMxPtPhm0vq4iI+Yz5X6TirLT7bIXaYRignPklrX48AHT0+FCLNl2ySTz4n4KlY9jlWPoBwpOYR81U+ULkBWl00Xj7wk+Md+HpoPrnSK6Uz9XQ+yxxdxyj/gD5etdlqF66GPjK5k3Bo54w+sTwpkBHRjz68WzSLMVSGPvgFZFfhVm8+xWk2jyeAYj4J5Icg9gplPhl5MzavRF8+0c3xTuOjYD5M1qtVSPdgPuPgrBsWIGU+WNF4JtIBYD5tmUzMcnpdPsbTE+BLj1Q+TIPVMgazSz4v57NXldVNPtbNloIMz1M+MilUcENdVT581VBqdlJPPl4LGTFQvFU+YywSffmxVT7TWs3ZGCldPm+DVlvV11E+Ta4nWaBySD5jCuRh2exaPiQ0lq/b72I+71Ei2/3ibT4xZzRkvU9zPrxOKM0z3XU+Pgetr0pKeT7aX3T7k/d4PsthXzi5GXY+fFB2jRgZdD5h83ruFkFqPvwVa3EYeGA+xXJxYpXmUD44IairqlJTPguhfy1wfEY+9PFNM/TAQz7Ujey7vQxFPt+iegc7BVE+V1ddfY+fSj4t+r5pkzRHPkbR+EGA1Ug+bEkOvdIhRT7+R8lZDBVSPmQ30SEQulA+4yCcLvLSWz5SfnD87jZlPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5230\"},\"selection_policy\":{\"id\":\"5229\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"f2K/d2c5Pj5lnpVlo8RCPlU4BfNwI0w+kiEviAKBRz65AK49TSxAPsTo2Iv/7k4+4uZPdr1ASz5SCMe+YY1PPqagiFKIAlM+9ajOXw/7Xj5q9Qmf9VJjPgaGYMBI1Gg+g8NPR4KzbT5KlEN7JFx0PpE5IwH51Hc+F0MC3KwQfT7dR1TuArKAPpH/m6pfiYI+NYX9u0VqhD7E/NsQs66EPj84ZrXFuXo+sEgxh0EvaD5KBf8o4ppWPloYhE+J3FY+4QhoXT7oVj4a/e1+9dVPPsw4CV0/uFE+8101MHfvWj6IAnsqARtmPjAef6NXOnM+PS3Z+R75fT6+gdBwdnqEPinCQ9HH2os+LCl95HsykT5XVaf6B0yVPkeFm64YWpY+XYheke+lkz7uBoRcSfWPPrqNh6EF24Y+woLmEre7ej7hT3zLBNxYPghKsWkE0TQ+++Zit9reOj76UeU4QCw+PqtlsnPWtTQ+zg+DaFDqEj7pCkkfBnMgPutXg1vjRTI+MR2hGSB5UT51uJHKToZJPsjyNi8UwVY+3kcLICU2Xz6TKouplblsPtBuscbAjXM+vMTbHA0Nfz4IceXbWoeEPo35JPz+M40+kFjha8BNkD5tjxXnyyyGPgwWKcIEXHI+F/7nnCEJYT796FaU0S1iPiHgDBV3XWE+t/tc2gV+YT4AjnNpdiViPmCrXLksxWE++EdsQLCiXj4AkKVCW7pePncAuruThVU+2uWHlax8UT6ipmRhwZ5XPpEAol6GvVE+V1I6B718Wz5H3NW3KHdIPmebuXBjI2Y+vaCd7WCAWD5vvU/qT4JXPqAMdY/IKVc+SHnHUrMFUj4ewyh+g5NZPifT5iY28lw+u3F0X3albT5OID5xt29xPlWTsrVMenU+nhu9Piwsej7Pf8bS6I55PtS2ZIxg0nU+QBMJvOiocj6O8tC4YPdoPkyapRAIxGE+m+hGdieKUz73sNvOqilRPnOb6E/tDz0+ZxfLWxHOTD6mb/Si4ulGPmVFvmfGaE8+qmz0gLYDRz4Fc4Hi7EVLPpy7ZOUiVks+E1ke5E8hUj490ZQaEN5cPhJK1C1G0l0+jUugeOhWaD6utarAlDhZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5234\"},\"selection_policy\":{\"id\":\"5233\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"g5UGqlwdRT6dL7myNkZDPj3V30rz8kc+eRDn4U0WRz6mVr+9tW9APhEq96W3bE8+lNDDYjjCTD5/PvJ6s7dMPtW9ZUibiFU+zooOmYM8Xj5uxV/BR/hjPmety/OitWk+Ikxv7Ywwbj4IT0bNK310Po/8JfAYvHk+ikwI5ZDBfD5yq2PmXUyBPsU7HksMBYM+4fpOyKYchT6Q8NdSOoWEPtTOiL6yLns+3TWJLQGqaD4XjfXS70ZVPtmKcU0KAFc+m3tWxz9zVz70ZCWHn7hRPgBU28TZs1I+AwA9+yKLXD4pNlWdVGBmPh6n3ktPmHI+UObiACGEfj57xyugIwSFPuqSLjsPUIs+auWB2GK5kT4YquhM1zyVPtag90kc3pY+euxQHq7Pkj5hXaYO66WPPu45p45TYoc+VWuS7z7NfT66mfat1KBVPnA+D11LBzI+igETVqhaLz5eNrgqF6ZCPlLMY5Ti0To+LEFd6Xt9Qz5Rl/0y3aItPoeJ1Gz66jw+OuiRE7paTT7OO/pgKuRXPgul0YwZz1M+ddgNboIeXT5iUEqVHaxpPllP39738HM+CglsHT1ogD7mS44ZQL+FPts7xwbmTow+6+7X26AIkD4WETd+R+mGPjwB7ytx1HE+Upmuuog2Yz7CP6e/+BVnPrtraM8AFGA+n1BqBOs5YT5kP4N+qMtePgEirDHLhWI+gMqrwZpkXD4nww0U0cxdPqB2lt3tLVU+U3TIw2F6Uz6pdD+NG9xLPpcmQ+NlJEM+YCkif4V8UD7ukKLRRX5BPkEhWK3usFE+TxDfUmpHVz6Lmzzw/pBhPiHAT5Mtb1M+xOzrAK+rTT7GLqD17qxbPko3anBkhGM+svoBcZwyaT4s2Dh70YByPiS+TRJM7HY+y7seOF3xeT6VmjSObFB5Pj5M27S9wnQ+yBt3n5XEcT6UCeRlcb5qPqK4kbuR7l8+/slP7JcATD4iX0wOMAZTPtqiDnzzzEI+R8yLnMk6OD5Y84WvS81EPpC74nDAS0U+2lGQnRGlST7TnmdPX0xFPg2bB3Y85k4+C9bvpyAWUD4UFAjhuMRVPrzASzrDF1s+vtirRfvbXD70ucaTCLBgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5240\"},\"selection_policy\":{\"id\":\"5239\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5225\"},\"major_label_policy\":{\"id\":\"5223\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"5223\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5246\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"KSuCXmE1Pj4BGLQ2pEhAPuZSxbWWhUY+ByTKFdK+ST5uYmeKRE0/Pot9PUDrBk4+yGX8cxBrSj6c0OBFrrhMPse3XKw38lQ+kT52AA8GXz4kseUX6NhkPnnZX41SoWk+couuNiaEbT6Nuj+tgcZ0PhLi1HVO3Xc+dRg9qCPhfD4knAmKqJCAPkdI/WYDkII+t8QVsQlRhD5xD43zv2yEPrbsmdf8fHs+D0kdUdPUaD4rZ3mwjWlWPghX0YasiFc+ItmDbJF7Vz6JBt3Ib2NLPpqGk6p8Hko+8dlf3l0QVz5xk8ctX/NlPg6yExAsg3I+rAMe4pxJfj7GwgsQF1CFPjPVZ/DRbIw+5U2c2DF2kT73i7fs2KyVPm8yT2sZKJc+Q+57CO/0kj5zi4uc3rqPPqVfV4eo4IY+B3oYaPDifD7mzMAVFYRXPpu4ao74xjU+TKBRgMscOz6kICcfYmQ/PvMY9YfOuDE+OKzhS43TOD4wfiC0dwE1PuQJJeW3STU+67FHG42YTz638IKXZDNTPk133ElD3VY+iINc8fDOWD4r2RfqPa1pPratSAhxtHI+QzufFmMkgD7qm8EGAbmEPoCayiic04w+RZGCAqKXjz7hPOMGIIGGPppHFzujRHA+cQvLjPgCZj6xihaasUloPm+wRZhrtF8+62o1sAsHYj6GPgcld+JiPvzdkXdS9WQ+BucgR95CXD6RdgI6mBlgPgVvo0BbHFU+kf8eO4ERUz5sX7BHqXxOPmfEV9gUBlM+Iz0DaNEbTj7oDmQ9+ixZProi1ZPmblw+Me94aMF8XT6jM1a38X5iPqPpY2ASL1U+ONBuFdk9UD4FpwWVYS5ePiakXOBdKGE+XN9y+wL6bD4j1BlVRUFyPtfZo1rOC3c+de8DGqnxej4wFwhgWj56PnFd+nCz63U+IpaNllOncj4FK0zO38lqPutQztEl3mI+oCgcSc/0Rz4Oz0UDW61NPpGQafTsbzI+CTfL4farQj614lN0eVVMPmCoV1J9BFE+Gh85Vyd/QD4/R4Da4S1DPnRwOMU2QVM+g0W0Jxp0Uz5OAbDs7hFUPlkpdJypWWE+N1HqmZeCWj7ecgack91gPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5238\"},\"selection_policy\":{\"id\":\"5237\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5222\"},\"major_label_policy\":{\"id\":\"5220\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"r3p+Iv57Rj6z5l8JzqZBPqubLJ5J4UU+8v5Mq85hST4Ke5hK+KQ8PjmeEPJixVA+glSF+PICTz5bOJQJOJpJPkzGFcwR3VE+udAZpnMBYD6TFVd8IdZlPia/C/5GtGg+H51mIxakbT4aUBWXYaF0PiS+DiPX43g+jSpP73S3ez618FPhCvCAPgEQEfAFfYI+o256eM0ghT54cDKgRbaEPhEMptq4g3w+FQ1LpZ3PaD4rpBwD/8hVPkGa2vtbdFc+3I49scmTWD7Ry6sVZhxRPvVAwV9Ch04+qKjZRkNyWz78Htc1UuBlPg5kHeZlrHI++2gbq7Vkfj6GpM53UV2FPrBRkGv2aIs+ojAah6KIkT5oVDheXS2VPqL0NqDQ3ZY+17SQL+2Nkz7gyQlUk1GPPqc/fTEy24Y+yNvG6LuIez6hYaqIlipXPtrwVysN+TI+KD6NHsfaOj6BK02Hl1Y3PirOCcu+UDA+V/qmrdjfLz4T2b6yEfk3PpeuZIhWTTs+92hUCsCLTj6QBwW7cj5XPnBHJBX3k1U+WMcq/CccXD7WvlAzyvlrPiVm1HS5AnQ+DwMf9rpYgD74cTP0536FPqyP3DD1rIw+vlsbKVIdkD6bpk6vysCFPooVeLdFV3E+IWTqj1OiYT5qX9SKp3tkPpEeqKrToWI+fnBKEexNZD5RC9Rb7QJePvRfruLw5GI+3U1Qwe8oXz5KfOvKLF1fPjQbDBjNk1c+mc+HHhrFUD6w9R1wTMdQPjS2jLP0jEw+ljUOtWj+VT5w0aw2zhdNPsi1HPaHEVQ+8cOp9BbNWD6/BfZAtkRgPnZ28j7VZlM+vZ6LicojUT42yDPb905bPlRCqAEC7GE+ER+YncqMaz78k6lqsxdxPj25AgD5RHc+uKFBR55aeT4jbq/xfLB5PqNkcgWlS3U+oG8YJuX+cT7HVjCvYUhqPjUmaSYvmGE+c5wm+YCpUT5QTF3JN2xSPjAwNIoIVUY+sDNVoQjuOz5Jj2xbWelFPsbISE1Rg0c+znQpbaV+Oj6r/Wv917xHPkVhgS12HE0++Nv4bqoWTj4gx6Lj7HhXPubZi7mjlFE+hFWns3W2XD6z15vr/qZZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5244\"},\"selection_policy\":{\"id\":\"5243\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MFvjHKa1Pj4+BpXi/MRDPp5xG1CK8kE+aIK6xG8bRD6+FSBdEJ07Pu29o4dn7Es+gfRaOZmMSj433H7IsrJOPhxP3rkxYlQ+q3Re/bybXj64Ob1zc1tkPlMVjfOYvGg+AFmDN3Iwbj7jlELVUA50PtLaICbU9Xc+ZtSYU+ZUfD4b/OhFJg6APhWXSrshB4M+C9/be9xHhT7uUuGlNmiEPpVEdve4r3w+/cMQyLCiaT5JO3qM6FJUPtKLxGJXUVg+e08xCg9fVz5izIsdUgJSPtRWGxH161A+NnaT4ImXWD72QSxYbihmPos7EFoO/nI+xpgvjFMbfz6VwknDkqCEPmwR2fQFVIs+C9zDOffLkT5TlwBwRiGVPi0UJKIAXZY+u7uwO+h5kz5AGZSxUBWPPtNmbpz90IY+jQg7cW5DfT4gln9OpwJXPmPOY0BzgzI+S8kXdnf2Oj4wzUfoC3NBPvxDLttYIjE+huobM5trNj7XwZvolnowPvX6TdCMsDc+2Lc6yNFkSj5VTaETMDFUPn6QaWjoSFY+S3heiI3kYD6ugafL9jNrPhsO8l6g2XM+y9tff7cKgD73BJZAe1CEPmsIk1kvUIw+HIFBze8HkD5VN1O3k5yHPt6MoVz2znE+v42yRXUyYj4FCe4BnqdnPnO+A6dAxGE+bw2ywcUYZT4SLW+98OtgPqpTKi/+F2I+nrolXNTOYD7gH/BkOSJgPvByGo0kGFo+MdbMygmMTD7pZj1pS39IPgdLnupRTFU+Bd2W/737VT7k1YvPcfJJPlczuNc6Y2E+u4cgR6GeWT7XErbK3jpjPrnYbyY/ZVE+aYEBTbHlUD4xlZQtDmFaPtnAlqENyGA+iUoIO4eKbD4xXBwpZ7pxPi7gHEuydXY+QjDJGP4vez4pJ19f02R6Pr52ThfbOnU+htM/NCTOcz5Z1L/6Qs1rPumap1yjk2I+UQmCF6ivUD6z7mJ16N1KPlJCyQEnQ0M+Dxd4BmxzQj4ewBPHlNU/PgEYsUWwXjk+jWIFmxqXST64B6xD3dREPmEiPuW+IFA+7uRE2hKyVj7DzjL1RVVcPrL4/fMhcWI+JPeomQyuWz6rSV48JndjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5232\"},\"selection_policy\":{\"id\":\"5231\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cb/ubR3iRD4OJxBtLEZEPkA/8rlvfUY+EWbk58R5Rz5vrWbN19k/Pp9L0znirUk+XmuzsGIrSz6koZ8noiZSPmBRvyn3UFY+wAH7K1hDXz4WnpnYsqNkPrSZHxjJHmo+WE4L9uZKbT4snf2vLZV0PnUGf3wLc3c+rjSROiB4fD7V9yrmgpCAPksikABfjII+fXGQxmDLhD7WggPf+7OEPq42+VtG8ns+RMB/FB/xaD5boq74tKxVPuuuqVaMoVY+WjsptHZ5Vj4GIkehKzJJPhjBNkZfmk0+p93NpJ2BWD6uhW49Fw1mPu4SLmjBQXM+P8ed/gwAfz7UV3fTzjiFPophtkqYbow+fIvkGLmIkT7UXeO/hVSVPocjXpn0yJY++igTCqL6kj4SCO+GEcGOPv/WR2oR+oY+qbT8/GMxfD4jYkA0hshWPq1sQAm4Xiw+QU4bmMhMJD41x5gCFRswPo4O2nwYTCQ+gMej/oBXJD5pg0YvquwyPqcm3qvYXzg+fURKch4FTD7xZ0h+EShRPgiAtujtMlg+arV3R1hRXD7OaL1cb4xtPiL3er00K3Q+pLY4jvs7gD5mHkU1VzGFPkLLe9CIT4w+UTDEJCrKjz6K+SuUN8iFPpkDP2TC4HE+nPrbcFQJYT6LP4bkrlplPi5H4oc9ZGE+ZG+TGMviYz60BOe9NllhPtkra4FkMWM+pvUm825MXT5Dd3Oz1vFgPgAvrEEO7lk+E8cVAtpQUT7LrW62cytJPospJcAg70w+pvUB/z56UT5oWQRJlsNQPqen3BkALF0+eIm64NSnXD5C/Q6vkWthPmi29WTky1E+JjxySAFoST61hH/yluBbPqnY9aMQYWU+Oijewi5uaz7olf0M10NxPiCKXFD/rXY+WvtOKbKsej6t59+af2t5PhTWhicSe3Y+Lft1rCpocj5iyEnOZQRqPkxmynuyImQ+DDdybP6lUT5WhlR44pRQPlHI4aXSMEE+j2A5i6p8QT5INvv5SQpCPsELoWgWTEs+IUzosXNHQT5Hr2wy4+hAPqOJ2JjezkY+auFxLU4uVD5DUjeImq1QPkl+w+uZtFM+Y7mZY4cuVz4HAlGpr5NrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5228\"},\"selection_policy\":{\"id\":\"5227\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"5225\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"3csD0Y50PT56EA8oJfFCPsZmRb1uNko+b7Ze5t2qRz67VjN3/ao/Pnu0JshtUFE+R2MdtlUKTT7wC2MKxElOPgaZz1r5FFU+kCL+3gbvXz7RJ5d5kTZlPiUSjYIl9Gk+b1Riqdufbj7hi/5yaYV0PsXB1DugUng+LjoA5wuzfD7Ghlc5TaCAPvXYEk2aD4M+eWyXG13wgz5vpRzpoN6EPjn7bAlsSXw+IdxxelwVaT5Thc441bZXPryt5qktdVc+9+OJ9Yp8Vz7rhyuvaGNQPgmGG7Hutk4+F+C0+3mOWT4Ec7a/q+BlPiMTYhIn1XM+NnTSGEGNfz7o1Ca6J1+EPt5A3SrQ/Is+I6J1VMk+kT6p5VNbM2uVPspkFMdtKJY+Q208gw02kz4dWbtJhw2QPoTAcTTU54c+I00jG7szfT7dU99+0qdWPoeAHKSh3DI+amNHUVKgJD7uHpOLfdU2Puhf+XNO7jE+nd2kc25OLz4BRS9e8JQ4PsLIf81S8To+fRqbGQNiTz6joe2u+E5SPhr+MT3T9lA+XfkbQm60WT4Qb1f5iK5sPiBoLQ17VnM+DZu+h7wHgD5w+I8nLlmFPiU0qoywcow+60IkXgV/kD7m42iaIcaHPsgDPU50VXE+eViiwYzSYz7WAZi1X0ZkPkTsEHn4UGM+eVRX8XTeYz6YjpBiUwJkPobjZOZsWGM+jGmiKymxYD7OrvspYhJfPkU141He+lQ+1HO353rYUj58KsBzhOlHPitnP+JFKFI+jPeEEqNUTT43U9pfJr5RPipPP571+08+BIrOAC9rVD7Y5A/h6ChgPsSDz1wtEFU+XX6H+pIgSD59O9QftnxZPg4yetQbD2I+bTJwgXhObT458MLLrKdxPt4N0pIsG3Y+4Pfensx+eT7bid8MugB7PjN7GQGK2nY+yxRZjtL9cj5CCaY7zB5rPur6yg3CPGA+e92wH34xSj5U0jJm/61UPg5uIAUcL0U+fT1srFx3Rj6qQcMeyyNEPrZfI9DzRFI+Fg52M9QhST7h12rhzS9KPobziuqRmEc+ZoN1ghNVSj4pIBXJcUpVPgR3OdpzCGE+kSM02QY6aD5cAmIgcu9rPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5236\"},\"selection_policy\":{\"id\":\"5235\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BEjUYQl3Oz54cAMFehZBPhVv15MZ4kg+MNGAiGXnRj5iWWqZNbo8PuHZQlWhR0s+jP5zWiaDSz50VJ/916tKPq1tUdqHk1U+M0PY/hMTYD4if1VkPrNmPm83solH/mk+LFfGwkmbbj7NCxSAygp0Psz6dv5KT3g+vm0Mmp1UfD5wvlHj7CyAPlpVLCwymYI+8cQvMOl8hD4QxkTBaNKEPqErrbsPa3o+tN1MP1bCZz7drAMuA5xWPpiZg8GEglg+Ch8Tk8LJVj6GG5LwPFJQPjKYkLW+r04+RnzitogiWT7trPhMXzFmPvTKzEstTnM+kMC3RGiKfj61CHSWm8qEPrKlhhJETow+LC8TU0/1kT7JPXEZ/nCVPtGb8xx8LJY+nA2dJkNJkz4xYdNIHbaOPs5w490m+4Y+yCAXbOkifD4bVpUUvNRWPssq7Br+KzM+iWyyw7s3Lz4CICimwkRAPjALS3EUNC0+7XQEEBH+Lz7nXCEoO4wVPkQKfEhjITg+l95tAci4TT4hGQPztGVZPrazrzpGU1U+FhtEizxuWj5EtiAoNk9nPn65rwwxxnQ+4OjXbxyVfj74jcM+fI+FPtWc08Y9oYs+1zyP8Ubbjj6djMVjbX2HPgjaFy4/lW8+LqdFrhOlZD6+TcbBfKtjPkj84UOVH2A+Yx62LfG8YD7SVDSkL7ZgPkblPjUIr18+5MhedcIiYj4uW1a3EYZePqQ/mYx8fFQ+jbdAeOJkUD6dGYy1gsxLPmubk7tuJFI+Vs5WlScDRT7zuTxApXFSPnKEaX5Hj1s+wtkrtVe2VT4338OFzd5bPmaXxfgStFI+4PLRvtD2TD6si8hlGnhdPoTS/WNu32I+XrfOPdkxaz6/f4bAOaFyPkLvaVuywHU+3X94Vy6meT4giyHDDtF5Pu0xj4HoZ3Y+aGz41Hiacj4XZGGqxr1qPmXHzRdcAl8+HVMN3/36UD56+lwt1tpPPvQ+MarkxUE+/68OYCbRQD603j69+TFCPmkX4iER9kc+AzG0a6KgQD4cY0MzuLZEPqTUeZcOmEQ+Cr+vBfJ4Qz4xwmrDldpRPppSq+v9a0w+OI5qqHYPYD6pqeCbmuxmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5246\"},\"selection_policy\":{\"id\":\"5245\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5222\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5220\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"1e8f6a21-fd8b-4e2e-908d-10fe800a26ae\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"560490c3-126b-4c57-b664-1fd093d1da25\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"43403d1d-07a8-43b8-b92a-ab7b00dd466d\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ffea2936-6c3f-4e0f-84eb-db8c0791abbb\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"sEEvzvMRVT5l2rV12ppYPm1pnQpU51Y+ApuCo41/UD51HtqCjVlJPqqOktYIiT8+PzP0mtsqOD6jT3XgRbUtPsr3wipxGD8+XJljp/3LMT66qV30Fcc0PqLPAOwe0DY+b4ZxWQxBRT55HBWoKjZDPpSrMQ9mRmE+MACeQOUqaj7ktgb+vzhzPn5VYhYI/Xc+7vpzuryiez4qyou4dSp7PpNP0F4Lb3c+kwzY2tTmcD4dyONJM7RqPg817ZpHUWQ+Z6TILW85WT5i+ijWql1RPiJLTR+gwkk+cb5dow68VD52JgVy/rJbPlUpLjz+w1Q+FpO0aZyFRj5JEruy4TRLPru4ojxUD04+f+JFyRuWUD4guRW/J9RSPtA22U7aZFc+jZleXCF4YD4ApAoD1eNcPmrt4+PdpmE+SYveu+DjVj7E38DlgppfPtFpye482Vs+e8Kic8RbZT5q3FRf9i9gPhbu/jI8kmo+7UGJ8kgpgz4YcxO9tGmOPrfZA2+MuI0+41xdUnUihz6CO1rMSwWBPgNQx0L+MXU+LwfxTbqqaz6YA3Kns+liPjIZUoWMfls+n+G7vdxwVj7nW+IQWmVNPsYmBpX1G0A+HttfPbnZLD6M2/TC2XwrPojgDxIPRic+/e2tOcBLLT4hPMaoI2IiPhoMZpVdSyQ+8i19QARbSj56aehLYUx9Pkpn6wtNR4k+vqvOAQuQkD7c0ipokquVPvJK0VKH5Jo+Ln9XvhXAmj5d6vNGLwSWPt0+ARjiEZM+SAmWRz6vjT7VW6dyJbWEPuDaM34ding+GBtFrYgKaj4sQcWEA7dVPi7nrxcDqVM+gN/VG6LbVj4gxUvL5W5dPpXrGoqso2A+HaAMzhSeWD6AQAiqXY1oPqhQxXCjnHo+CkRA7aOxhD6jkh0hGNCEPjJW4nMBcoM+qet2J7WWgT45aDn+wM5+PgKnE6Kef3k+h8FSU+chdD4fPTqKB3BwPl0uXigMfGs+0bSG3vbZZT4M6zd3K+lgPvyCcOu7U1k+2FObbPcbUj4K+Ty8xF9OPrG+YUDis0w+zjC+u6ScQD74ycEpjRpHPsU4M5iSdUQ+GDyz9V8jPz51RYJJjH4yPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5455\"},\"selection_policy\":{\"id\":\"5454\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5428\"},\"major_label_policy\":{\"id\":\"5426\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5426\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"5428\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5423\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"5455\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5425\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5425\"},\"major_label_policy\":{\"id\":\"5423\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5431\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5431\"},\"selection_policy\":{\"id\":\"5430\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.31, C/O= 1.73, [M/H]= -0.4, T= 862.29\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ffea2936-6c3f-4e0f-84eb-db8c0791abbb\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"43403d1d-07a8-43b8-b92a-ab7b00dd466d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 580.73, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"bca47000-f33a-4de1-b1a5-bb3187af92a3\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"acad50f4-0005-4699-bc34-25d05496e613\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5847\"},\"major_label_policy\":{\"id\":\"5845\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5877\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5897\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5850\"},\"major_label_policy\":{\"id\":\"5848\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"4ezWMhkO5T/kTulg/R/lP0cE4+DSMeU/9BjlmZdD5T8vaYzWUVXlP/n02JYBZ+U/aLCp86h45T+Tj90FSorlP3mSdM3km+U/Mq1NY3ut5T/rxyb5Eb/lP6Ti/46o0OU/c/G3PUHi5T9a9E4F3PPlP27fo/56BeY/xqaVQiAX5j95PgPqzSjmP4em7PSDOuY/B9MwfERM5j8PuK6YEV7mP59VZkrrb+Y/uatXkdGB5j+HokCfyJPmP/ZFQlvOpeY/R3L5D+m35j9PP6iLFMrmPyOhLedS3OY/8X9HVKju5j+j5xa6EgHnP0/MejGUE+c/9S1zuiwm5z+sAN9t3jjnP4s4nWSrS+c/euHOhZFe5z+R71LqknHnP+dWCKuxhOc/ZCMQr+uX5z82PSgoRavnP0ewcf27vuc/rHDLR1LS5z9nfjUHCObnP47NjlTf+ec/Cmr4FtYN6D8IPDCA8CHoP3JPV3csNug/SKRt/IlK6D+hLlIoC1/oP3zuBPuvc+g/8ddkjXqI6D/o9pLGaJ3oP3k/br98sug/jL0XX7TH6D9PWU3XE93oP6weMA+Z8ug/og3ABkQI6T9IGtzWFh7pP55EhH8RNOk/jZjZ5zFK6T8tCrsoemDpP3yZKELqduk/kzoBTYSN6T9CBYcXRKTpP9DVVuwvu+k/9s/TgEHS6T/k27sGfenpP4EFMGXgAOo/5kAPtW0Y6j8Rjln2JDDqP+z4LxAESOo/jnVxGw1g6j/gDz//PXjqPxCwVu2akOo/8G36sx+p6j+ASSpTzMHqP+0qpPyk2uo/CyqqfqXz6j/vOhvyzwzrP4NpGD4iJus/36mAe54/6z8B/FOqRFnrP9Nrs7ESc+s/VfmekQiN6z+emPViKKfrP65JtyVywes/VyQmqOHb6z/HEAAce/brP+caZmg8Eew/t0JYjSUs7D83iNaKNkfsP1H3AUhtYuw/MXiY9s197D+rItxkVJnsP772zJIAtew/gehJmdTQ7D/191J40OzsP+o8Kv7vCO0/kJ+NXDcl7T+5N79hokHtP3v5nSYzXu0/1uQpq+l67T+0BYTWw5ftPytQi8HDtO0/JNBgU+fR7T+hhQSMLu/tP6BwdmuZDO4/Cp3X2CUq7j/4/gbt1UfuP2iWBKipZe4/LXsS2JyD7j90le6us6HuPyjxuRPsv+4/R450Bkbe7j+8eD9uv/zuP4WwGktYG+8/uynltRI67z8v/OB86ljvPw4QzNHjd+8/LH3ogvqW7z+JQzaQLrbvPzpXlBKC1e8/KsQj8fL07z8K16NwPQrwP+7O2m0XGvA/RIts5/sp8D8LDFnd6jnwP0RRoE/kSfA/YB+duvJZ8D/usfShC2rwP2DNAYI5evA/0egOYmeK8D8mjdE6qprwP+317o/3qvA/JSNnYU+78D/PFDqvscvwP+rKZ3ke3PA/6glLPKDs8D/pSC7/If3wP8sQx7q4DfE/H5268lke8T90Ka4q+y7xP6s+V1uxP/E/VRhbCHJQ8T/+8V61MmHxP4tUGFsIcvE/F7fRAN6C8T+HokCfyJPxP/iNrz2zpPE/2T15WKi18T8tsp3vp8bxP4Emwoan1/E/uCOcFrzo8T/vIHam0PnxP5fiqrLvCvI/smg6Oxkc8j/M7snDQi3yP1g5tMh2PvI/Vkj5SbVP8j9UVz7L82DyP8Mq3sg8cvI/pMLYQpCD8j+GWtO845TyP9i2KLNBpvI/KxN+qZ+38j/wMy4cCMnyP7VU3o5w2vI/6znpfePr8j+T407pYP3yP8nIWdjTDvM/cXK/Q1Eg8z+L4H8r2THzP6VOQBNhQ/M/vrwA++hU8z9K7xtfe2bzP9UhN8MNePM/YVRSJ6CJ8z9eS8gHPZvzP+l942vPrPM/5nRZTGy+8z9VMCqpE9DzP1InoImw4fM/weJw5lfz8z8wnkFD/wT0P59ZEqCmFvQ/DhXj/E0o9D/ulA7W/zn0P11Q3zKnS/Q/PtAKDFld9D+si9toAG/0P40LB0KygPQ/bosyG2SS9D9OC170FaT0P73GLlG9tfQ/nUZaKm/H9D9+xoUDIdn0P19GsdzS6vQ/P8bctYT89D+uga0SLA71P44B2evdH/U//bypSIUx9T/ePNUhN0P1P034pX7eVPU/vLN224Vm9T8qb0c4LXj1P5kqGJXUifU/liGOdXGb9T8F3V7SGK31PwLU1LK1vvU//8pKk1LQ9T/9wcBz7+H1P4j029eB8/U/hetRuB4F9j8RHm0csRb2P5xQiIBDKPY/tr5IaMs59j/PLAlQU0v2P+mayTfbXPY/AwmKH2Nu9j+rsu+K4H/2P1NcVfZdkfY/iUFg5dCi9j/AJmvUQ7T2P/YLdsO2xfY/uiwmNh/X9j9/Tdaoh+j2P0Ruhhvw+fY/l8rbEU4L9z/pJjEIrBz3P8u+K4L/Lfc/rFYm/FI/9z8bKsb5m1D3P4v9ZffkYfc/+tAF9S1z9z/430p2bIT3P4QqNXuglfc/EHUfgNSm9z+cvwmFCLj3P7dFmQ0yyfc/XwfOGVHa9z8IyQImcOv3P7GKNzKP/Pc/6IcRwqMN+D+twJDVrR74P3L5D+m3L/g/xm00gLdA+D8Z4lgXt1H4P/uRIjKsYvg/3UHsTKFz+D9NLVvri4T4P0xUbw1slfg/SnuDL0ym+D/X3TzVIbf4P2RA9nr3x/g/f95UpMLY+D+afLPNjen4P0NWt3pO+vg/e2tgqwQL+T9BvK5fsBv5P3jRV5BmLPk/zF1LyAc9+T8h6j4AqU35PwOy17s/Xvk/dLUV+8tu+T/luFM6WH/5P1a8kXnkj/k/4zYawFug+T9wsaIG07D5P/4rK01Kwfk/qB3+mqzR+T/D0ytlGeL5P/wApDZx8vk/NC4cCMkC+j/7ljldFhP6P087/DVZI/o/pN++Dpwz+j+HvyZr1EP6P2ufjscMVPo/3Lqbpzpk+j/cEU4LXnT6P9xoAG+BhPo/+Db92Y+U+j+GyVTBqKT6PzHT9q+stPo/29yYnrDE+j8UIuAQqtT6P01nJ4Oj5Po/FOgTeZL0+j9qpKXydgT7P79gN2xbFPs/o1huaTUk+z8VjErqBDT7P4e/JmvUQ/s/iC6ob5lT+z8X2c73U2P7P6WD9X8Oc/s/wmnBi76C+z/fT42XbpL7P4tx/iYUovs/xM4UOq+x+z+MZ9DQP8H7P1QAjGfQ0Ps/qtTsgVbg+z8AqU2c3O/7P+W4UzpY//s/VwT/W8kO/D/KT6p9Oh78P8vW+iKhLfw/W5nwS/08/D/qW+Z0WUz8PwhagSGrW/w/JVgczvxq/D/RkVz+Q3r8PwwHQrKAifw/RnwnZr2Y/D8OLbKd76f8P2UZ4lgXt/w/vAUSFD/G/D+hLedSXNX8P4ZVvJF55Pw/+rg2VIzz/D9tHLEWnwL9P/32deCcEf0//5WVJqUg/T8drP9zmC/9PzvCacGLPv0/WtjTDn9N/T8GKuPfZ1z9P0G3lzRGa/0/fERMiSR6/T9FDaZh+Ij9Pw/W/znMl/0/Ztr+lZWm/T9MGqN1VLX9PzJaR1UTxP0/F5rrNNLS/T8aUdobfOH9P47MI38w8P0/H7+36c/+/T8hdqbQeQ3+P0Ck374OHP4/X9IYraMq/j9+AFKbODn+PytqMA3DR/4/Zw+0AkNW/j+itDf4wmT+P95Zu+1Cc/4/qDrkZriB/j8AV7JjI5D+P1hzgGCOnv4/Psvz4O6s/j8lI2dhT7v+P5q2f2Wlyf4/DkqYafvX/j8RGVbxRub+PxToE3mS9P4/pvJ2hNMC/z83/dmPFBH/P1dD4h5LH/8/donqrYEt/z8kC5jArTv/P9KMRdPZSf8/DkqYaftX/z9KB+v/HGb/PxUA4xk0dP8/3/jaM0uC/z+q8dJNYpD/PwMmcOtunv8/6pWyDHGs/z/RBfUtc7r/P0ax3NJqyP8/vFzEd2LW/z8xCKwcWuT/PzXvOEVH8v8/44i1+BQAAEAsms5OBgcAQHWr56T3DQBAhlrTvOMUAECWCb/UzxsAQG1Wfa62IgBARKM7iJ0pAEDjjcwjfzAAQIF4Xb9gNwBA5wDBHD0+AEBMiSR6GUUAQLIRiNf1SwBA3ze+9sxSAEALXvQVpFkAQP8h/fZ1YABAuoPYmUJnAECuR+F6FG4AQDBHj9/bdABA66hqgqh7AEA1RuuoaoIAQLdFmQ0yiQBAAOMZNPSPAEARHm0csZYAQCFZwARunQBAMZQT7SqkAEAJbTmX4qoAQOFFX0GasQBAf7xXrUy4AEAeM1AZ/74AQIRHG0esxQBA6lvmdFnMAEBQcLGiBtMAQH0iT5Ku2QBAcXK/Q1HgAEBlwi/18+YAQFoSoKaW7QBAFQDjGTT0AEDQ7SWN0foAQFN5O8JpAQFA1QRR9wEIAUAfLjnulA4BQGlXIeUnFQFAeR7cnbUbAUCK5ZZWQyIBQJusUQ/RKAFAcxHfiVkvAUASFD/G3DUBQLEWnwJgPAFAUBn/PuNCAUC2uTE9YUkBQB1aZDvfTwFASphp+1dWAUA/dEF9y1wBQGyyRj1EYwFAKCzxgLJpAUAcCMkCJnABQJ8fRgiPdgFAW5nwS/18AUClTkATYYMBQCdmvRjKiQFAcRsN4C2QAUCDbi9pjJYBQJTBUfLqnAFAbLJGPUSjAUBEozuInakBQOQxA5XxrwFAg8DKoUW2AUAiT5KumbwBQIl7LH3owgFAt0WZDTLJAUDkDwaee88BQNl3RfC/1QFAzt+EQgTcAUCK5ZZWQ+IBQEbrqGqC6AFAAvG6fsHuAUBNMnIW9vQBQNDVVuwv+wFAGhcOhGQBAkAr9pfdkwcCQD3VITfDDQJAFVJ+Uu0TAkDuztptFxoCQI7pCUs8IAJALgQ5KGEmAkCUvDrHgCwCQMISDyibMgJAKcsQx7o4AkAfv7fpzz4CQBSzXgzlRAJACacFL/pKAkDFOH8TClECQEloy7kUVwJAzJcXYB9dAkBQx2MGKmMCQJqUgm4vaQJArP9zmC9vAkC+amXCL3UCQNDVVuwvewJAqd4a2CqBAkBJhbGFIIcCQOkrSDMWjQJAUHCxogaTAkC3tBoS95gCQB75g4HnngJATdu/stKkAkBCW86luKoCQDjb3JiesAJA9Pi9TX+2AkCxFp8CYLwCQG40gLdAwgJA8u8zLhzIAkA9Sbpm8s0CQIeiQJ/I0wJA0vvG157ZAkDl8h/Sb98CQPfpeMxA5QJA0H6kiAzrAkCpE9BE2PACQEpGzsKe9gJA6njMQGX8AkBSSZ2AJgIDQLkZbsDnBwNAIeo+AKkNA0BPWOIBZRMDQH7GhQMhGQNAdNL7xtceA0CjQJ/IkyQDQGDq501FKgNAVfZdEfwvA0ASoKaWrTUDQM9J7xtfOwNAU5EKYwtBA0DY2CWqt0YDQFwgQfFjTANApwUv+gpSA0ArTUpBt1cDQHYyOEpeXQNAwhcmUwVjA0DUmuYdp2gDQB+A1CZObgNAMgOV8e9zA0BEhlW8kXkDQFcJFoczfwNAMCqpE9CEA0BDrWnecYoDQFUwKqkTkANAL1G9NbCVA0AIclDCTJsDQBv1EI3uoANA9BWkGYumA0AHmWTkLKwDQOC593DJsQNAutqK/WW3A0DMXUvIB70DQN/gC5OpwgNAuAGfH0bIA0DLhF/q580DQBZqTfOO0wNAKe0NvjDZA0B00vvG194DQIZVvJF55ANACp3X2CXqA0BWgsXhzO8DQNrJ4Ch59QNAl3Mprir7A0Abu0T11gAEQBHHuriNBgRAznADPj8MBED83qY/+xEEQCtNSkG3FwRAWrvtQnMdBEDBi76CNCMEQGK+vAD7KARAO1PovMYuBEBNSkG3lzQEQF9BmrFoOgRAqpog6j5ABEAuVtRgGkYEQOtztRX7SwRAGVbxRuZRBEBHOC140VcEQK98lufBXQRAiIVa07xjBECZ8Ev9vGkEQOS9amXCbwRAZ+22C811BEBd4V0u4nsEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5853\"},\"selection_policy\":{\"id\":\"5852\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"5919\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5845\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0p/BN0gQYT4ADAYkI/BjPt0CMQzBj2I+Xlr5WsrEWj5qCvitJ5hUPqrFzGffqEk+MCerrDy0Qz7YgBDD+UE4PisM9uh6VEk+xvZ1C44NPT7m6e7hXvlAPtqlz3UjpUI+4kzWHH1UUT6bpyy20VZPPhoTkafLHGw+sFV+8Lg9dT4tVrRQNyh/PlpX/eUmbYM+AvLHAihghj4Lew5ypwCGPr9fe46jAYM+RZ8c2/B5ez4xgP0Am711PpFCkLvahHA+fUptbaaYZD573vc5pmVcPm7N0OoBFVU+7XadZGnuYD46pII05oRmPr/khnSM3WA+/oSz9AFQUj7y0iNcRx1WPg6qsR6mb1g+S3Wbywf4Wj5LBtGsGJxePnkrNs07BGM+1RylE8S/aj6oSTpRHX1nPii0oPMKuWw+dh40CACqYj4Qc8ziy71pPvKoHr+Yr2Y+1XpMFOxmcT72En6fpWVqPpB70bNJmnU+jTg2qHj5jj4iy2vpjoCYPo4YIwz875c+itlYwAypkj6ah0DqSICLPpKGmPM2KoE+UoV7bJh3dj6l5wAe+71uPgIl2TwQX2Y+JccrN5Q8Yj54llvDOeVXPt3YRz1PR0o+ACXuOniUNz7jkGYDvYA2Pje6qxaHGDM+vOVHwFsAOD6VSDa/Qi4uPlLI4tjJpDA+ir/k+JRzVT601HzAMrmHPtupt6cEdZQ+6OX/Mc3Jmj5CUXJ9L4ChPmC5GYaxr6U+c/IGLZKKpT7W41oIbbShPpLN7eMvxJ4+Ye0by/P7lz4EFJeeR8GQPnb66wvs5YM+mOY/UE8mdT6Gwc32U6thPuLFMVJ1DWA+HYy/jNSoYj7HjS6zEepnPhb0gvrRFWs+VtRwoaYSZD6yy3pWTOtzPtP8N8X8gYU+4qOZxTa0kD66IoG/4smQPuZjytO/Wo8+dQsvJzxejD5fQ9L5Vt+IPr/rOdRVmYQ+RiXTjZhFgD7GDN8QvpN6PtDA1VHlOXY+1j/zIkitcT7FxOAB6WBrPibHhcs8hGQ+q1xTzetiXT6K3EcxO6tYPhnramEBTFc+/kf8iYILSz7d2HN6DcBSPjEqsF5cnVA+KFIzOklRST6+wkf1IiU+Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5877\"},\"selection_policy\":{\"id\":\"5876\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.31, C/O= 1.73, [M/H]= -0.4, T= 862.29, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5847\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"5853\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=580.73, p-value=0.00e+00]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"5848\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"AMIlOUr6Xj5jmpajKB1iPuhSuDMuyWA+Pq3PNxHJVz6wYT4qHBxSPoYAO3/rS0Y+kLM8WNLtQD48leACz6M0PopS7mhg+0U+CUa0tAvPOD5ErH+MP/c8Pm+NhYvIqj8+m6wk7sfoTT4IDS6lKCBLPtj9r22Wwmg+ec86v8XQcj7sV0m3ibp7PjZKimq2VoE+GtE+ZTvzgz7KltzVxZaDPrKI0Jlr1IA+po24O/greD4WJj4k2QZzPvuVVhs+LG0+o/ykD8ntYT4/xMijS5JYPk40N3/DGFI+vj5jCr0uXT7xUMWh9stjPhNm7lFa7V0+9xK3rjwqUD5iwQENRH5TPuQB8I5agFU+ougu5zi/Vz4iawzpngVbPqAFrWxNtGA+QwfHRZOUZz6fL5Mxi0VkPsTfHORds2g++85X8kaHXz4AB6F2PhhmPio6c9CIfmM+In/wkhDEbT6c+BXlAotmPt2fjjDP13I+owGSj3kUjD6CSk2X1YqWPgYhUKt3/JU+cH5LopzwkD5WkfEEPbuIPkQrMS50mH4+oKB77lrQcz6yKhoAQx5rPofseF9+pmM+BkGdI19AYD67iJP2ck1VPrBNNGpHAEc+AV+z5p5tND5/mGpGv0kzPrMAPwnBJzA+WhoFjrBrND7/m5TNoIcpPv3mWzB/ayw+xSOEinzyUj6i8XCqmUqFPvm3rOXmaZI+RTC5csM7mD55uL89ztqfPg3IddFw36M+fVlc4bLdoz4v+K2PoHagPlPrRw2zE5w+w7FzrL62lT5UDFjTJSGOPhcFMqmKqIE+o5LCf1uQcj7aH/BmBaFePgoRiYedmls+yJvhekAUYD76kDe8Th5lPu07lPf2v2c+5n0FE8B6YT50FcAQKstxPrX75y/Sk4M+E52oivGJjj4zsdB45MyOPpcPFabw2Iw+omC+KbsXij5xWvq1WcuGPhcoMDXz0oI+M3OPItmwfT5FtMIJzT94PpKgo3FKSXQ+rnojUyQccD5yYLQGmNxoPmmYVmQwkGI+8AREbhtZWj7wIgzTmP1VPky5u46v1lQ+avHZK+DZRz4PnPGbqstQPl+lcNQ+pU0+iFbnEuFzRj5CskLITH46Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"pF7wUmujYj6dfXWkHcNlPtKyqeRTVmQ+fgcjfoPAXT4ks7ExMxRXPs6KXlDTBU0+0JoZAad6Rj50bECDJOA7PszF/WiVrUw+wtMbMQimQD6q/Z39HXdDPv2E3KXidEU+d0OaQpa0Uz4XoZVjvcZRPlwocuEAd28+59vBIayqdz43qg918kqBPn5kcGGXg4U+6hJRoBTNiD5MX0AOiWqIPsw2JoPbLoU+5LCAeunHfj5M2rzdXHR4PiQ6dWmWc3I+V5g1y4NDZz5bfBNogBxgPo5malZAEVg+e04JRHRFYz6D9z/H1T1pPnWWFsBrxGI+BfevOsd1VD6C5EWrSrxYPjhSc67xXls+9AEIsNYwXj660Eo4SRlhPlJRvy0qVGU+ZzKD4fTqbT6xY+Fwr7RqPkZEkgFcX3A+b1U8l1yQZT4g3/dOWWNtProXyq2o4Gk+GbYg38/rcz5QLeZZSEBuPkNXFDfEXHg+uzdt4DvvkD7CS4o7SHaaPhYQ9myA45k+pDRm3nxhlD7efY/PVEWOPoJ3GNAzCIM+BGp76tUeeT5M0vOd2S5xPn1dORqiF2k+RE26Ssk4ZD41pCOQAH1aPgpkWxBXjk0+/+ooj1G7Oj5HiWLAurc5PrtzGCRNCTY+HrGK8gaVOz6V+mtYcmoxPiadlxnUEzM+T1tFZ630Vz7Gt4jWyyeKPr2bwmkigJY+i5tG8dZXnT5HxgTc9xKjPrOqvTryf6c+aYuxeHE3pz59zweBOfKiPunXSV1WuqA+/yjE6ShBmj7eIYJT/HGSPtXvpW5NI4Y+jTq9IEO8dz4fcyM6JQZkPj8Dn+CbTWI+cnydnmg9ZT6UiiWq1LVqPj+scf2sa24+xircL42qZj7wgTWcbgt2PvH9h1oncIc+O/nexXQjkj7b7JlCUy2SPhrcv4BH7pA+SLafJL2kjj5NLKo9VPOKPmevQ3O4X4Y+8pBeisSygT5HZfsXr+d8Pg7hBzKAKng+/gTD8ms+cz4YKQ39OeVtPuP1tDJJeGY+M1oxFl42YD4kloOP3VhbPuYcGjRTwVk+kp4e6CQ9Tj6rFfZYcLRUPrMBKFMZaFI+yE1/YbEuTD6daSaR/OVAPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5897\"},\"selection_policy\":{\"id\":\"5896\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"ticker\":null},\"id\":\"5850\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"IJVScni5XT4Yc5anWGNhPugJm9JNFGA+/unP1S2ZVj6Ms2uCBh9RPnY5jvxX9UQ+VjDTJkqmPz4m0hSQSDMzPvf2Of9UpkQ+h+IlRrgeNz7W09SWufs6PuM43e8Abj0+Yu20HdoETD48scy19HJJPtVdk4QabWc+7uwZuLHZcT6IqFqBTl16PuBQ7KQOgoA+vhIU/Cn8gj4n48Fk6qCCPl8M2e1m7X8+EqoCzFrbdj77Aj7bZvJxPjycVMmHoms+kQMfMRLeYD4amq9mmwxXPnpNkhSr6FA+xeBMIARSWz6EzntuprZiPho7MXjlaVw+8MemcfaeTj6A/aJxRHNSPrwd0yJpVVQ+WvZ9Mwd3Vj7jTbbtJ5hZPoAzvbKKkV8+kKabssxRZj5ic/2I1/1iPiiGZqunGWc+wlCJHYA4XT6OBbi1x6RkProtpyNsOWI+Ni+UVdvCaz54yVbobAJlPis+VO+yvnE+NzeTMqHtij5xYXdTMsOVPiN3ZzK1NZU+PNHcKFxBkD6gn38wG6GHPkOgO1cRHH0+wP5NRBXCcj6SDkdwHq1pPsi7o3VTkWI+Cjwc507sXj5w8vJ5VEVUPmTgDflsskU+OYMVlpIsMz4iK92oRgIyPtIJlgVy+C0+L9hvofH+Mj7ecIEC360nPsRuDlSteyo+PvjobWTzUT6f69HD3VKEPpphvonAmZE+AmO89IQ3lz6afGusRJqePpVuSX22JqM+QHAUhwwzoz5bqzIOWfCfPkaKV2m/AZs+zrcu8nrPlD4GTy4bzMiMPq8Q8TlkxIA+elfU0/aIcT5ZuGVtS8FcPoTTDkwc0Fk+bUqnic8aXj6KZ7HhgAFkPgjGEmg2bGY+m/mU85RyYD5DPb3HpvJwPmGQ3cIwz4I+gtNphbBljT462mL5B7KNPqZOONKP2Ys+YWQRYvMviT55aMqCq/eFPkC9XQQmHoI+aFBn5z2OfD7PP2d0rFJ3Pr2QFpywg3M+svi/ww35bj6qTLLSN9xnPqmUfMs3yWE+brtst5wjWT4CiD/Xx+xUPoK4IvhG3FM+cCqoOomURj574F2bjwRQPv06U6ctOEw+qtKD0A1QRT5YxHE3Uwo5Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"FPVZNtRDYz7opHWg7XxmPtL7xkU0C2U+vsoi4GbwXj5IYYTZSBFYPt5RC9NmXE4+NbbsRVSVRz6KLwz2qlA9Pl8hstKgAk4+ggVj6DF+QT7haXP44HREPkKvsHNGk0Y+EyPSKo2mVD79TkZbV51SPjBkR2U+ZnA+cr7iKMCheD7pAQcQkPmBPtRdDic/WIY+RtF7CSbEiT7vElt/ZGCJPk85CqaTDIY+PEobdUMMgD5n/bwmz4h5PgQ3dpJxOHM+aZG7qTpTaD5uEaCGWN9gPmJND8FYQVk+eH0UudAzZD7weYn6JVNqPvEr9SwmhmM+BKaTsIhQVT5kqKRGSsdZPmA2kBrjiVw+PPS4Ywh5Xz5a3/W1BNBhPjK9DUGyP2Y+GpOudLstbz7uH3cZY/xrPhRx7R03LHE+i5SjAcC3Zj6S4OAP0NZuPiokllrFJWs+D97OfWrsdD50XKVW3shvPvW4TnjgdXk+8ZzsDqiCkT7TNGB/6z2bPvm53uVCqpo+2OHUV70QlT6UbwGkdl+PPgI9kztlxoM+5AuplBstej5cYN3la+dxPjyODgTNLGo+RXDJ+gADZT6AOsQMH4VbPlbRgYEx3E4+x8bG3138Oz6k9u9dM/86PoVvjCrVNDc+SfMf38UBPT4mkPU9U1cyPkJZvge9CzQ+1obgg8XzWD7JvSe9hx+LPhzysMVIUJc+zmhDbxVcnj435K6kPLOjPisE6o6sOKg+pnT50hfipz7/cZyJrXCjPm8IQi9QQ6E+9CIJpGwomz6FAJcvKR6TPj3k5t1zB4c+tnWrzKfDeD7gpug2AvZkPgIiXH7cMmM+BHOrVEFEZj4EtKuEotJrPiQi84xtv28+Ea9MT7iyZz4hWjjl8eN2PkVpksfINIg+A15+SJW1kj5X2FCCwbqSPpM8rur3bZE+ibJM7ISMjz5FHtpwAseLPj4aFqSFFIc+WKLyJxJEgj692Vatz9R9PuPwlAca8Hg+U4MGZAnecz7gPA8xmuVuPqP5jstBP2c+9P6ccR3RYD4SMVCLrmlcPrAds8q7u1o+jGVQ2XuCTz4/0YlZi3tVPuS2tumhHlM+ptHio4RSTT6S4I5Z+Z9BPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5919\"},\"selection_policy\":{\"id\":\"5918\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"acad50f4-0005-4699-bc34-25d05496e613\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"bca47000-f33a-4de1-b1a5-bb3187af92a3\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:33:02.377176Z",
     "iopub.status.busy": "2023-11-28T20:33:02.376510Z",
     "iopub.status.idle": "2023-11-28T20:33:02.380734Z",
     "shell.execute_reply": "2023-11-28T20:33:02.381403Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 580.73, p-value = 0.00e+00\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(580.73, '0.00e+00')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:33:02.393240Z",
     "iopub.status.busy": "2023-11-28T20:33:02.392282Z",
     "iopub.status.idle": "2023-11-28T20:33:02.394466Z",
     "shell.execute_reply": "2023-11-28T20:33:02.394932Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:33:02.399093Z",
     "iopub.status.busy": "2023-11-28T20:33:02.398467Z",
     "iopub.status.idle": "2023-11-28T20:33:02.400712Z",
     "shell.execute_reply": "2023-11-28T20:33:02.401125Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:33:02.405397Z",
     "iopub.status.busy": "2023-11-28T20:33:02.404718Z",
     "iopub.status.idle": "2023-11-28T20:33:52.058145Z",
     "shell.execute_reply": "2023-11-28T20:33:52.058460Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:33:52.068553Z",
     "iopub.status.busy": "2023-11-28T20:33:52.068002Z",
     "iopub.status.idle": "2023-11-28T20:33:52.082760Z",
     "shell.execute_reply": "2023-11-28T20:33:52.082225Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1361.563846</td>\n",
       "      <td>0.001085</td>\n",
       "      <td>5.196196</td>\n",
       "      <td>873.721112</td>\n",
       "      <td>1.644377</td>\n",
       "      <td>-0.387991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>2841.633148</td>\n",
       "      <td>0.004365</td>\n",
       "      <td>0.089358</td>\n",
       "      <td>18.524580</td>\n",
       "      <td>0.136255</td>\n",
       "      <td>0.031243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>133.230000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.969568</td>\n",
       "      <td>831.294637</td>\n",
       "      <td>1.358596</td>\n",
       "      <td>-0.438643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>336.450000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.151284</td>\n",
       "      <td>862.722972</td>\n",
       "      <td>1.574898</td>\n",
       "      <td>-0.413807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>405.100000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.194096</td>\n",
       "      <td>872.944885</td>\n",
       "      <td>1.642717</td>\n",
       "      <td>-0.391567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>1136.280000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.254003</td>\n",
       "      <td>883.677612</td>\n",
       "      <td>1.713987</td>\n",
       "      <td>-0.366234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>16496.380000</td>\n",
       "      <td>0.024100</td>\n",
       "      <td>5.386757</td>\n",
       "      <td>919.245382</td>\n",
       "      <td>1.886960</td>\n",
       "      <td>-0.308209</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius    chi_square    p_value    gravity  temperature  c_o_ratio  \\\n",
       "count  39.000000     39.000000  39.000000  39.000000    39.000000  39.000000   \n",
       "mean    0.790000   1361.563846   0.001085   5.196196   873.721112   1.644377   \n",
       "std     0.120018   2841.633148   0.004365   0.089358    18.524580   0.136255   \n",
       "min     0.590000    133.230000   0.000000   4.969568   831.294637   1.358596   \n",
       "25%     0.690000    336.450000   0.000000   5.151284   862.722972   1.574898   \n",
       "50%     0.790000    405.100000   0.000000   5.194096   872.944885   1.642717   \n",
       "75%     0.890000   1136.280000   0.000000   5.254003   883.677612   1.713987   \n",
       "max     0.990000  16496.380000   0.024100   5.386757   919.245382   1.886960   \n",
       "\n",
       "       metallicity  \n",
       "count    39.000000  \n",
       "mean     -0.387991  \n",
       "std       0.031243  \n",
       "min      -0.438643  \n",
       "25%      -0.413807  \n",
       "50%      -0.391567  \n",
       "75%      -0.366234  \n",
       "max      -0.308209  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:33:52.092171Z",
     "iopub.status.busy": "2023-11-28T20:33:52.091518Z",
     "iopub.status.idle": "2023-11-28T20:33:52.093827Z",
     "shell.execute_reply": "2023-11-28T20:33:52.094227Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>255.57</td>\n",
       "      <td>5.770000e-15</td>\n",
       "      <td>5.217927</td>\n",
       "      <td>868.414368</td>\n",
       "      <td>1.648625</td>\n",
       "      <td>-0.380287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>438.34</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.238247</td>\n",
       "      <td>856.843730</td>\n",
       "      <td>1.671423</td>\n",
       "      <td>-0.375781</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>1288.95</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.969568</td>\n",
       "      <td>873.633240</td>\n",
       "      <td>1.402745</td>\n",
       "      <td>-0.377828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>148.16</td>\n",
       "      <td>2.380000e-03</td>\n",
       "      <td>5.160942</td>\n",
       "      <td>896.660177</td>\n",
       "      <td>1.701044</td>\n",
       "      <td>-0.352244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>380.71</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.194096</td>\n",
       "      <td>884.828247</td>\n",
       "      <td>1.569861</td>\n",
       "      <td>-0.392691</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000      255.57  5.770000e-15  5.217927   868.414368   1.648625   \n",
       "1  0.600526      438.34  0.000000e+00  5.238247   856.843730   1.671423   \n",
       "2  0.611053     1288.95  0.000000e+00  4.969568   873.633240   1.402745   \n",
       "3  0.621579      148.16  2.380000e-03  5.160942   896.660177   1.701044   \n",
       "4  0.632105      380.71  0.000000e+00  5.194096   884.828247   1.569861   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.380287  \n",
       "1    -0.375781  \n",
       "2    -0.377828  \n",
       "3    -0.352244  \n",
       "4    -0.392691  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:33:52.173416Z",
     "iopub.status.busy": "2023-11-28T20:33:52.137975Z",
     "iopub.status.idle": "2023-11-28T20:33:52.176530Z",
     "shell.execute_reply": "2023-11-28T20:33:52.176953Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"6013fbc0-b752-4d19-8c63-a0a3d7541a30\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"a62fc2b7-0d98-46c8-b666-0774c5130a2a\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"6345\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6340\",\"type\":\"AllLabels\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6342\"},\"major_label_policy\":{\"id\":\"6340\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"6348\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"1JXeGXCQ5D8gMtlXJ1XuPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]},\"y\":{\"__ndarray__\":\"FK5H4XosYUCPwvUoXKdgQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]}},\"selected\":{\"id\":\"6348\"},\"selection_policy\":{\"id\":\"6347\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6342\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6345\"},\"major_label_policy\":{\"id\":\"6343\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"6343\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"a62fc2b7-0d98-46c8-b666-0774c5130a2a\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"6013fbc0-b752-4d19-8c63-a0a3d7541a30\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
