{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:27.286665Z",
     "iopub.status.busy": "2023-11-28T20:39:27.285864Z",
     "iopub.status.idle": "2023-11-28T20:39:33.833634Z",
     "shell.execute_reply": "2023-11-28T20:39:33.834001Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:33.839508Z",
     "iopub.status.busy": "2023-11-28T20:39:33.838856Z",
     "iopub.status.idle": "2023-11-28T20:39:33.841033Z",
     "shell.execute_reply": "2023-11-28T20:39:33.841579Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:33.845353Z",
     "iopub.status.busy": "2023-11-28T20:39:33.844776Z",
     "iopub.status.idle": "2023-11-28T20:39:36.599939Z",
     "shell.execute_reply": "2023-11-28T20:39:36.600331Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:36.608479Z",
     "iopub.status.busy": "2023-11-28T20:39:36.607868Z",
     "iopub.status.idle": "2023-11-28T20:39:36.610177Z",
     "shell.execute_reply": "2023-11-28T20:39:36.610548Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:36.613812Z",
     "iopub.status.busy": "2023-11-28T20:39:36.613264Z",
     "iopub.status.idle": "2023-11-28T20:39:36.619181Z",
     "shell.execute_reply": "2023-11-28T20:39:36.619540Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:36.622939Z",
     "iopub.status.busy": "2023-11-28T20:39:36.622478Z",
     "iopub.status.idle": "2023-11-28T20:39:37.050002Z",
     "shell.execute_reply": "2023-11-28T20:39:37.050403Z"
    }
   },
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.055098Z",
     "iopub.status.busy": "2023-11-28T20:39:37.054402Z",
     "iopub.status.idle": "2023-11-28T20:39:37.057438Z",
     "shell.execute_reply": "2023-11-28T20:39:37.057890Z"
    }
   },
   "outputs": [],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.062186Z",
     "iopub.status.busy": "2023-11-28T20:39:37.061616Z",
     "iopub.status.idle": "2023-11-28T20:39:37.063375Z",
     "shell.execute_reply": "2023-11-28T20:39:37.063952Z"
    }
   },
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.067696Z",
     "iopub.status.busy": "2023-11-28T20:39:37.067110Z",
     "iopub.status.idle": "2023-11-28T20:39:37.069095Z",
     "shell.execute_reply": "2023-11-28T20:39:37.069493Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.073255Z",
     "iopub.status.busy": "2023-11-28T20:39:37.072628Z",
     "iopub.status.idle": "2023-11-28T20:39:37.132513Z",
     "shell.execute_reply": "2023-11-28T20:39:37.132906Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"9827d3f0-a8f5-4cc9-ad67-6595931c8001\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"bf59853d-37c3-4307-8543-17342eb43e99\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1044\"},\"major_label_policy\":{\"id\":\"1042\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"1067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1046\"},\"selection_policy\":{\"id\":\"1047\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1066\"},\"selection_policy\":{\"id\":\"1067\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"Selection\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1041\"},\"major_label_policy\":{\"id\":\"1039\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"1041\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1042\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1039\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1044\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"bf59853d-37c3-4307-8543-17342eb43e99\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"9827d3f0-a8f5-4cc9-ad67-6595931c8001\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.152009Z",
     "iopub.status.busy": "2023-11-28T20:39:37.151423Z",
     "iopub.status.idle": "2023-11-28T20:39:37.368450Z",
     "shell.execute_reply": "2023-11-28T20:39:37.368855Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.373412Z",
     "iopub.status.busy": "2023-11-28T20:39:37.372724Z",
     "iopub.status.idle": "2023-11-28T20:39:37.375120Z",
     "shell.execute_reply": "2023-11-28T20:39:37.375643Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.389791Z",
     "iopub.status.busy": "2023-11-28T20:39:37.389099Z",
     "iopub.status.idle": "2023-11-28T20:39:37.391569Z",
     "shell.execute_reply": "2023-11-28T20:39:37.392231Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:37.407758Z",
     "iopub.status.busy": "2023-11-28T20:39:37.405792Z",
     "iopub.status.idle": "2023-11-28T20:39:49.914353Z",
     "shell.execute_reply": "2023-11-28T20:39:49.914694Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.4260022322336832,\n",
      "    'gravity': 5.044936688741048,\n",
      "    'metallicity': -0.3492107391357422,\n",
      "    'temperature': 815.5237101236979}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    5.044937   1.426002  -0.349211  815.523710\n",
      "std     0.175016   0.289349   0.091679   34.841773\n",
      "min     4.759112   1.133344  -0.454065  740.525024\n",
      "25%     4.931013   1.241038  -0.424800  787.812790\n",
      "50%     5.016831   1.337820  -0.367429  813.710052\n",
      "75%     5.167168   1.481695  -0.285433  837.907211\n",
      "max     5.367931   2.479008  -0.149235  888.529907\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4b6a12fb-602f-462a-ad6f-84a441385a71\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ad1ecc5d-0e69-4ddd-acb4-1a6872dd5c2c\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QijIfUN6MT7QaiWVlExEPmhiU9vyj0Y+PN0SyF3wSD6I0+6Z1/RGPlnHMKcpYVA+TTW4uWapRz7pd0NwvJBHPqS1a2uGIVM+Ys7O7JXIWD4KFrAZrdNiPtXVnI6N9mk+vqykgrMUcD6svEoAXwJyPozfUzStPng+CzzVGH5ufD5mmdFWDoV+PrQo1AINxIE+VKQpO8Jygz615VhOvjKEPi8RX88Ctng+1knYYu8rZz56Fn0rPABOPg4T0Ws9LlI+xFObDADASz4IenbxT7xEPs0faUD6D0c+u7g2zbLwUz4qN9KDA7VhPrzuC54wfHA+48ZAEGzUej7Wj/bhi6CCPgn9cHwkbYk+R1A362fqjz5ny5XAx72TPg6shwXBnpQ+/pzpJED8kT7FZtUXePqLPn4g0BGP0oQ+pcosWMZxdj4pc3yRthxPPo1Ngc7kwC8+82b4F8MnKT5wQtJ1Z/pAPn6hLFKUZ0I+S40mwrY1Nz7uhA4818c5PvVvhQny3EI++Fl0DDXSQj63czOBhdNTPtCuGD77xVw+Ou38OF5kXj6AnWVGfzdlPpOB1Tk1CHM+/594jKbSfj7zvq15zTGGPshiHrxowIw+lHb9HcX1jT5tCp6iwUWGPkAP1oMXOHA+RwFM+PL4YD63fnrYRUBkPs6RQZ3X9F0+nKkMx/WiXD47ccGoHdtcPvCB+7XdJ2A+AwCSh/hrYT6z06Z3V6JXPteaAdbkv1M+BtMvDgYBTj4DhNs8FqVEPiGeMVClg0k+S6YC/JILUj4H8S6xmnVWPiXqVNwS10Y+HT1M9IX+Vz553Narp6pePpXeBviU5Uc+L+3T3ncxUD617ykTpkFZPur8SqrI6mY+W//QobqybD4jGRua+CZzPjdgdC4exXs+MFOlF8PPfT4puxGzcfh8PnLcNNPGnXk+nWXV6YhAdD4/NpVIclhtPmiAr4/7FGU+WEMXimSITD4s7Gb/GXdEPpdHGY7BIT0+VF4TqdH8SD5/Bt29Mp5OPqSbBj4ftUM+yAYm3B9tST6bn6UnjiRDPoY3PaXa80Y+OBXJBVYxVz5HEViWniNMPmhMfANx4Vg+wEqts6PUaT4oKmCVQAtpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1369\"},\"selection_policy\":{\"id\":\"1370\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"U7t+cIuiQD5UJb/IobpFPi1q+J2oJTg+9qj60QMeRT5rke0r7bFIPsPD4j37rFA+AGtC5SxJSD4x1K3yUH5LPro28oCEdlU+qBlSt+a8XT5t+Xu51ShiPom72qylFWo+7frrATazbz55hcz52UlyPi+cYjARWXc+tmiAlErJez767AZtsIB+PlfbL54Z84E+39RkLKGjgz78P0ktQiuEPpy2IKb+IHk+MEkEbb4uZj6AnwILfPZRPnxa3nsDo1M+VAWju14oSj6a5KmosUtEPgK5YNzhFkY+Oml/2yrtUT49PjyBKYVhPm8/ONMctnA+Rm41lrL3eT67BkS8nL+CPhdnpnM18Yg+uGMN/rWgjz7mKrkCxpaTPhZg4KD2/pQ+85aeDv0ekj6eX8ZnzueLPs6Dt86GqIQ+4NX13jlNdz4rz95LuR5QPqHz8Ljpdi4+8w0rXkKCMT6rMLRLIdA6Pt7jvw7xVEM+uuftOMD3KT6DrprRoGcxPujRuwoK7Dg+IxVxQtOwOz7gywW1sKdUPl05gM17El0+cQcZd9SPXT6HX2QHl6RnPr/klCjY0HE+Sh4JjmHlfj6UVhA6jhWGPsp+yty6lYw+w9/TPSmujT7rB8ei2AWGPgrsa6PL42s+8MKeD5DUYT5KTevR2v9jPt1JWnBrBV8++WJTKQL2Wj7R0u+/1vlaPnCK1tBMxWE+4FKtB2DeXj7cRXQCnw5aPv8yzIl2Llo+oyaFApHIST6hmPUqvLdAPtwg7C9sJFE+xUkmp8oEQz6f+bAhsGpWPvMx4wvsDFQ+u5fh7RzBXD4E9KzHzXlWPnvx1CWfTz0+9BgeVbgPSz5GBqEgIaxZPne7fTLRv2U+O9PvsZMWbz7oMQA9U690Pht7yArcbns+U3yRyRjUfT5INxZoaB59PhzA7p4SjXk+Y0ObRa9Ecz4vzoM9YUNtPu0bDGdhkWQ+cM3hkJpVSj6E6G3Jzk5KPp5xgvkRl0o+vRIaGA51SD7EHCX5N15CPg9ZqT3JNEE+uuqtJ1MoTD401r3nmGJNPjndxYl3r0A+0bxG2qRFTT4Eszk3qWNjPv26t885JmA+7wpgxmXmYT7hj82Dxs5vPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1339\"},\"selection_policy\":{\"id\":\"1340\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5ofR2HINPz6nNfXJp39BPkKfiQAEFTE+nYYoBQX3RD6bTMDHCuNJPlBlVbQJ3VA+6V3f6qt6ST5KXstq6e5GPh/BZNGcqVE+P0/YXPl9WT6lkJN4xhFiPqUEknEL+Wo+jAhCBpV3bz5Fijkb7UByPsEsB/B1M3g+2X3xgUy6fD4kuldAX6B+PiaVsUoHyIE+ORNj6VNJgz4wljV4K6+DPk6Pi7EquHk+URm6KAg2Zj6OjLSeF5RQPtSL9CEDeFM+JOeu6FNkRj7qCcV63kVEPo2ogYhTCkU+hMLSDEEuUD7yyUGL1xBjPldCwh1zJ3E+Ia4iZlqVez6Vj0j3ZJeCPuBm4nmFI4k+HHesPs8EkD5+aUB5A8+TPibUE/elu5Q+uIG85IjCkT4qhxerQNyLPuhNsyFtaoQ+cOCuNFgZdz67X8Yed0tOPnjniwN8fxM+PiuyV9rlLD4tuxKDRposPgmm7MneAjY+Zg3qVAzrPz6f8kaMexcyPtHCJ0u5vkE+YAorf4BRUT5o4EmKmf1VPkxbmIfPclo+l8elxv8pWT4Q/Ae5yERoPg5+A6aNxnE+Sxplt/ywfT7zOfiv5DSGPmRnFFm8RIw+BR40CJNVjj7NAbIGl1aGPq+NAU7z1m0+cG8qLHTmYD7/X2GgzUJhPky0sKq7CWA+8ttxGcWeWT7td/31WzdVPn6Awhy02V0+BaJladdeYT5yrov9wGlbPo89n6dSClc+JX7IcVIOUj76Y42gm7c1Pqe0ONTqfzk+A7ZdiDWRUT7CVU4Svn9QPm3NhXjVqFI+I87wEEV7XT6rJVdl4gJSPt4jnUlRz0k+Z+1ilBUuTD7zyI+JOi9ZPhi8KXGanGc+Nc0gF4lUbz6Z6jrhZ+NzPov5BA/YQXo+PR8AnL9OfT76/mEjnxV9Ppkhnx7kN3g+gntknmSScj5n/KcVZstoPm/qb2+C+2I+RrL2Sg64Rz6SqJzguRVFPvc82NMDo0U+TtuuXf4MSj4qvZLmbb42PjQeOjqU30c+GyGwo7rxSD4TqTZhn2xAPjZHJlQ68lc+R1cmmaIQUj5zrb1JxkxZPtZW+NFl1Fg+6yiioTJ+bj5oMcUb28RtPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1337\"},\"selection_policy\":{\"id\":\"1338\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Hb3qAluMNz5hlVIkl/5DPkMu6DusoTk+7jlSRtGXRT4+NjsgIVBBPvl6lK2WxUo+LooB3TXGRj7lv1XBfTVLPlOOtWz3Z1Q++QYZ6BkhWj5QPs+X7ilhPgPRK8iIy2o+7FVvHpKGbz6kWsscurNzPmRsDeEkTXg+5Eznk6Y4fD4CPoONj7h/PvgJpY6dF4I+KODeDXNygz7HbM113dCDPikzByPswng+//MtCSy9Zz7tIzelUpZQPkKR9R919lM+3taQ5UhYUD52fNwQimJHPvMIK0xBlkc+q0IfLgwjTj78CDISbUViPhcoT5nD0HA++CZ4m82iez4Pc1Ybd0+CPqoQvVCJ8Yg+SBJmmQnmjz6gDhPMjqmTPmlm3R9suJQ+jlOMA28Ukj4OgGXWnPCLPmP4SJSF24Q+fqJcx04tdz6TlTjpJ5pRPugeY91tlBo+FCxFYnSUMD63YZGkI2YxPnj1XOus/UI+2t2EGy7cPj4S/XGyvHw/PjLnL96WGkA+tmgjb0W8TD6kvX+asEdWPg/5nM3CbFs+zoRhPsgNWT7rmiRrrx5kPl4RQXyB6XA+kIxKryA5fj7ZmAVsbjiGPgdvB5362Is+LOBuZFqSjj6MO7DQi52FPu0b1w84wm0+tXjVilNqXz4CxgAHQGNgPuqYLlZhOV0+05cQ0rKFWj58r33B9+pXPkryuTJ3kGA+1IH5xtlgYD7A1cRbwwJYPp8/tRgRSFU+VnfhLFqEUj5DBALBOfBFPvgPILXcd0w+502eYzM5RT6ieXhBQoVUPpsw7736KVo+42C/QbtsVT4ACV4oQYtQPhGMl4TvH0g+YBOQAgDlVD52GqWkGSRZPhOmXdv1SWY+YpMWPB6tbz5ZvwR1uAR1PoDnnD7R1Xk+O35xau7vfj5p7hwtXP18PkAD2ibH2Hg+jOe3F4Tncj7rLVAd24tpPqQO6N2fkWQ+AmZMT8KvUT6aUDIHDOJCPqjHkYmGIEg+rJu2g4eARD467Cdlk7lJPvLSoOSVckc+ViKTRf7KST71vbo98VA+Pv5xay+TfVI+zuApTAdiVT6klGT4jJNVPrGv2CXN72E+psfNeH0MYz6BvYYnLzxgPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1331\"},\"selection_policy\":{\"id\":\"1332\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"D9x9zlRxRj5fo2PFggFDPnVihAK6oiw+toGNtGiyST4fVjOTjEtEPgzyKGfx/ks+Gu9ch5OzST6uHrh3e5NMPqElPjqha1U+9o+6/7u/XD5dsMpsU1ZjPjbU7WPYpWo+HC6Pci+ecD5LyAyH/I1yPsFEv4N9bXc+DLf+RoG6fD6+o3SYmMF+PqeaYdPsu4E+LS4pOR5mgz5kz/lPEZyDPuLppVM0VHg+B/+hTxYmaD4usaclSPhQPirsuDhutlI+FRWApmh+UT7MAzBEL8IyPjBpjx7lSEg+ABQABT5/UD4ZPfeSkqdiPqlpyDidTHA+tgsIxeKnej5z9nlTYJaCPhZ6wxO8Rok+7I6Loe/mjz7IONtYEK6TPrzDrvMNvJQ+9CV1PivpkT7wMQuJZnyLPjEpc38juoQ+RQomFbefdj5wTGR7J/pQPnTCNwOj2yc+iTxt//D6QD5ZgspLegA1PvwKzoFw0UI+s5CYj03XPj5P8hzsMJM3Pujno8/+zjc+MS8PL82JPz7cipBh1ZVbPtGs0hXUC1s+AJJWtnWgXT7DCbzxJHRoPgcm0f6sfnE+XSYuqSL0fj70xmWcwJ6GPtll6hgq6ow+5YeHpJjOjT5403B8yHWGPiWZ+WAM+20+Bzb44lXmYD7nqFnNelJkPshMe8nXul8+/YQvZuQgXj4GgQeP7YNRPjqNfhO6amE+Qc383A6QYj77oLQEUJ5aPpC0oaM0cFI+7EV66nbFUT49Aotxclo6PkaUbD8Dwks+i5qf7h0HUD4tpE0Q9oFRPjT5jrS9hVk+IQTfAKkxVj7GVW+rCeFZPmefW7Og0kA+e3ZsXba2UT5b+6UdHQVbPoDPWmtWxWo+yNoWCkZSbz4tGD0esgZzPhs+eYez6Hk+Gh8miYx2fj7rsqSDXNN9Pij9Yfwvtnk+EK1bkh47dD4ihHqhdtFrPs0bAmiXJmQ+n0DdjPy4UD5qQgTTu1lJPvV1hZBjMkk+ClGpinMNUz6ZS7E2JXNEPj+rT1T9MEk+ivHsPKNGUT7V+pvv25JJPuXqouG1plE+qQmNI3qKWj64lyOiwYBaPhfnMBSANmI+3m4JpwChYz4Q1Bp9OelnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1361\"},\"selection_policy\":{\"id\":\"1362\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"H8KXcQH1Qz7Aaw7qFplIPnh6ZFE75TM+RijEFm4TQT7zdyo1L59DPi3kQeXxzUw+4OSEOQvwSj79QNqJ6tpLPvmmlj/1tlI+vMMmrouEWz4qL/MZsRxiPlaZ37E82mo+pjX8k7+EcD7xjxx5e6FyPtjqETqmfXc+6VXpmavNez79W+kfYid/Pm/QFTBPEYI+0iQBUBRUgz6mssgDOQqEPlL0wFSj93g+bcLez8UAaD5aaaEGzz1RPtLEFbM9Y1U+gZa9lIv7TT5xiJxiIatDPljAfAKa50U+/0LKSSAjUD4WMdzGm9BiPhOWRRDJ8G8+8wflvkzKej4w88ziXNWCPjjf9kgXwog+iAZvTmBqjz51YbSjeMyTPlhzo9a4y5Q+Hcvee8bekT5bJp/LxvWLPqYWMl/qCYU+zSh7aDDCdj4Fo46hUSpRPgVhHxw7KSg+k4luJn+rNT60w+l2xQc2PjM+r+Y5akk+TSZjTxIVQT6A/z8Ud6pCPmMlL4M5aEI+LHiybH1XNz6JdDNHrMBYPl99D62EG1k+FyDpRv8IXj4vrcr0EsFnPsyHPx2iy3A+9Jnn9u8mfz6FN+/kgzeGPtp7XQXkaIw+tf4azNarjj4Rx77Hq+OFPjVu7NK1aG4+PAd279NQYj5eqIcw9z9lPkhRhNs6sl0+DgrmpAigVj4/iuSyYGlUPtHuQABuMls+bcZkPvAGYD6nHUqyyaRTPmxHNu5cuFU+wanv3vgZVD7q7SmqWVhDPphrOunWjUc+jHG9hmfDVz7htjSOuzZUPg1jMpEKk1o+LIOvQNyoYD4hBU8B4n1YPsEZ9frrv0c+8w/oZ7yvVz7/5xkHRn9ePu3h3jA4bWc+6LD8qEC5bj5Q0q0jmPF0Pgrr4QTO6Hk+Lg5UvmRqfT4EIi1Qp259PiMInbPsw3o+m8v1g4pLcz5kYRqex/JqPlTkDCr7dWU+ob04MfG+VD6fvyvr2gQ7Pnp55HHoqD8+UQhD2EcrRD5kUo25XFVGPkouW6L6xD4+TNjRMi+5Qz76eNhQzu9LPv1XcLArhlY+OsigNxMyUT55vdN5MgZEPva1kKII7lo+XvGuy0KyaD5bZ9f2lAtrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1351\"},\"selection_policy\":{\"id\":\"1352\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"B4AOoRJaLT7sKEVUIIhHPkUm7v2LijQ+uxtTKUF1Qj7AKZVLVBhJPhaZZrKkmFE+o+AwqTtKST72jWDkLu1LPidxXG8cWVQ+H0Llr7f2Vj5qhEooBPphPgX/nQieqWk+Puuy5RGYbj7J2KLmiGpyPmo3Ws9ZJng+RPH0bPklfD7ueJOXN8Z+PhFSI4zBPoI+qpZZkACMgz7U5DgBv5yDPi8Stjk0MHk+j37GusXJZT54/WBTHxBPPnAHFkS14lM+WaKlK9HFUT7FTgDSIsFCPlqQyXiyBUc+gTe5PQm2Tz6/pgsDvDxiPguc9cXjXHE+vmsQ1xIVez7DtP0KfGOCPs0y7e1844g+UirCnqixjz7pg5rrNpuTPoxddxkvupQ+AgDm7A82kj5fk8beqA2MPkP7s1FC7IQ+hSX1ZQ/Adj7vDzxMJwtQPpm/Mrw6EyU+PZsGSIhbPD52kyb0oAA5PlSOt0tXkT4+YW/VrlznQD52q/5NKv8vPpvBn6nHxD8+NvvmRMJ+QT7WsOUF4ttbPpoDYdXjGV0+RwEDjcpnWz5ecJoZaAJqPsKOYoqyiHE+KJCBltE/fz7Z3jvo/gOGPlBg/rT4SYw+w5yV6bgZjj4tS6ndHFuFPgb5gCLhM20+cakdNjBkYT4BNDbaXo1iPt5xvp0NSF4+5mks3QjYWD4KdMaJPcJVPlZ0os866F8+CJ1XIm8wYD6VQuw3G4xWPn3yEF3r5FQ+OSkoR6FOVj6CWyEmgSMjPkyMXXjEjU4+DWbsRIPeSD5iepz2umhPPjzhlwUXS1A+Vf8pTO9ZVz7iLgvV/CJhPmUUXMJ4kUo+/R6sqwLtUj6ho98NeelZPphoCE+bqGs+ahYzRww5bT70/P02ouV0PuAY+6bVA3w+PL09MBMpfj7nUiXY66J8PtQPpY/dmXk+C7EcGVm2cz7BPC7w/Z1qPmMFom1d9WU+Zwjcm52pUj5WS9xqq8xEPgJf3d8R4UE+zmQQRU+lRT5Ka/uaCj9FPv9xXn5lyUU+h2j2O+E5Uz6zhs9bHAk5Ps2GmfFrQ1I+6senC7+MVT5a4lo3X6NJPkksj6Fe4Fs+vU4vdNI0Yj4SX5fn8/BkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1367\"},\"selection_policy\":{\"id\":\"1368\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nbndiObXMT4PMftBKJxBPh3ozAdZsTw+zYfcDMDUUD4BXPx8GcdAPvzbBCMj0E0+PG/c/ZzrRz62kmjUd7xKPuwVru9tsFQ+UaycUsSLXD78Tt2i1ZdiPpcPb80wlWo+7JOFZwJ+cD5sB21lFY1zPsoz0nXyf3c+oOqkhzjyez4iQql//8l+PmQD14rz1oE+N+GAXapZgz7O9AWak8ODPvDUBeTcxng+SDfDX6syZj7Dlb51CcNQPgALAtT3JVM+l9iY8fGFTT5jbD6g8b1DPh/PTjx3sD8+7w8+lkFBUD4qpIpdOp9hPgHppUglY3A+u4sDZSoNej4sDEwLhnaCPsTZHl1+GYk+gwg6fL/ejz4y+3Y3Qr2TPtn1mn440JQ+Pqb9fnixkT5nKUwzYNyLPjDd0vFPhYQ+4V9TR3ctdz47xGk0oEFQPm5Jl2uowCk+buNEmvsZLj6rnlR0X48lPoPS7jHxj0k+JYpNe/nlOj7IWdsQI08+PimtMcYN2Tg+6tPYPGiqRD41UR84KeNWPkwNiBj2FFk+eqJMq0gsXj7q4Vq/PKtmPhPhJP9IAXI+lpVtc42rfj6jK4gFYx+FPrJhlJduM40+jEniYOSqjj7drMyD8YyFPiaPJ57VO20+7NjbPyaKYD6QCwepjQxkPg4JVRbOXV8+WLWV2sDFWT7uzgoPCUpUPq9ugMRR4GE+m24BUnN/XD58PgUg9UpZPstUjte2N08+g8S865/cSj4RVNgRbphBPgKDNMZMH0g+VGjJDqFAUD5ETtpSg/NCPrO+stpqvlA+sonLWj6xWT7zYB6NOzZWPj/Lov1+6E0+Qf2zPxZ6Uj7GbdNXeRJdPonGY455SWY+bHWgRwufbz7Q05N1jZ1zPjLkGeNXu3g+d9aqLvf2fT6TZ/VgqWp8Piq+VVVFh3k+xofWJ4dzcz7KKZLY0KFrPlg6mL0vmWU+kerO87cVSz5fld8wD71OPv055ERPfz8+1Zz810NDUD7nQWwbuChFPoh1dSfyn0c+rK0AQy8UST4t6aqYnwRGPsx7ZXFKZFI+1jJBmpX0VD5FqZ8mR0dSPlNlsyWVZGI+nffoRBxsYT4/rU10oH5nPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1345\"},\"selection_policy\":{\"id\":\"1346\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1324\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"1326\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dyJFY06PQj5B4qAzJ+k9PmKvy+afzDg+khrGmGL2SD7WLiwcbO5EPr49YnT3lEc+wokOcf11Rz5/0H3b8RpJPlGuPiEqgVI+Tb2ujLANWz4yNF4Cg4tjPn0H8EZK3Gk+XtCI3nYfcD5nMOTCXpByPi1hQv7++Xc+0WDih8hHfD4g0ZRCJvB+PmE4QfVixYE+6AeYGle+gz4KCSsXBJiDPg0VaGSYvng+YmWMptvJZT4EoHfdtrRQPtJ0G/VwilA+ogLDiXjQUT4i9d4CjpZCPhjloI8l90Q+PW93OpELUT74U11czrNiPuy0ElDG4XA+hpLPKhd+ej46fgM9JYaCPpmLr6ReHIk+k7ziM+7Sjz6fL3zd+IGTPiKTmm2fCpU+PgFuSY4Fkj72Sp4/8cKLPj3DSD6d2oQ+Xs/9HSkxdz4dGy0mt6VRPvlBj8XH7TQ+O77aFwbELz78RM2DMLUyPhe3PNQJrTw+EBoLQYReQj4hz1GW7XkwPrZTIeXziUM+dCUsY8aRUj6FaE/R7DFWPs9O0XWSJlw+ZU4jSHniWz5++J3BnnZnPuh0qAgjL3E+erzu5lknfj7PFh6MGUuFPqjXTrTBbow+voLPjro4jT4KhrpiVl+FPu1AQRpbpW4+y4erMZOXXD7QWOI3kxdiPpw7MPcUIWA+JP5AeQOsWT4EPO4aA5ZVPgvbw/Lo8GA+sc07MYYaYj7scvHURjhZPmHCjIDYl0w+3qjv4i6NUj7kusk1WZQ5Plr/BoBUsE4+idJDHqOkUT64wEvYXgVTPpDDrdiW0Uw+vaLTsBV8Xz6ATd9xK6pQPpcEq6pk8ks+rdbg7i6UUT4ly2x55KtYPnk1aFsvEmo+lD4LpGXybj5FnVa/eS9zPnKK8eW+Wns+kH3ChWlOfj55brG+bBN9PjNi4imql3k+Ei0kW9Uhcz6OMeiJVipqPm5GUBpSSWY+UOCQ7wM/Uj43ZLsHW5lEPtgcmzVXBUo+i6RD4f9WTj5kaxda18dEPmWE5Tj6Fkw+zsFMf7xvST5Jfvl+yplSPosCQ+o5eVM+spzQTFO4WD57k7aVaV1QPn6VrVAggmE+3Fc96m29ZD4AfivvmfFxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1343\"},\"selection_policy\":{\"id\":\"1344\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"yf6ZoOJMPT5rIfDn6yhCPscu0l/61jU+8LSGXdcsSD4dAfU6Eb9EPiGRhcVwW0k+17oR7rXVSj6+Oq6dbnRHPswABsBuOlM+TK5Eydz/Wj7V+HGevERiPlULqKKzF2o+M4xmDzXwbz6hK5AVEHNyPmF38iXnqHc+QUGLKel6fD7C6IAJMbl/PkBoa5XzKoI+vFk7a4Cpgz4It1yRE5+DPnOKTT/w2Xc+a9/Ed5LrZj5gQwPmlbFOPn6L78ZBl1A+YRpO7bwoUD5me1CIykpCPjk+TJgeY0M+C1PRnHPGUD6x8MXWS/FhPuwOqXRL03A+WrXaSl+Sej4QicG06LiCPuYxuc7kXok+c1CFJxiDjz4gi8Ru5a2TPrFBQD9gGZU+S7SJLpkUkj4V1xzPYqOLPhgWhIg7mYQ+izkQi4jBdj5O75c1dVVQPvK2TrmjwzQ+RF8EMTzaPD4EgwNvObUzPqNbgoT7XkI+joflOgyuPz4hEXy4Sk81PhL7tUW4Cjc+s5VEw+w0SD5z+AeCWfpYPgT5iAULwFs+GgYBzOIAXj7zoSXMCAJnPiq2Yfa6PXI+7+Dc0hSpfj61HoFPmZWFPn2r9hA894s+MKzTjsqEjj7ohcRDv+CGPg4fCns5120+4TelZS83YD5ggu/PEpRkPgfJlaM4yVo+7KLI4AsLVz5Jc+KM1e1VPnrxxmQ83lw+JV7ypWAlYT4+ebU3505WPvXZbGqj0FI+WcZp56zGUD7t54c+/VI/PjoV14CauEA+a2lCU8+TTz52czk5JxNLPu6r5+bomlQ+leOBVNSmYT6LBhzGV7FXPnZJ99lvE00+R25jy8AIUT7pY4WD5sVgPlQwagE6o2k+ImPW2eMobD4Gt9xmlCtzPm/bW6nvxXo+HoY5wxv1fT4fCRGvj4t9Po98z/w7rHk+yBf05JOddD6osFs/NfppPgb8WgKt/GM+LwNnzl6TUT6IlxuaTyNEPlso0l/fuD0+GwwNQNLjTT472BA8E9VMPhL2X4sZy0c+NfvaAiQsRz70D7vc3pRQPhvXpNDSFlU+jm4U/0aXTz4EhoFGAQRePmKtzi3Q5VA+IQ02rUYCYj4AMcaZy7BcPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1333\"},\"selection_policy\":{\"id\":\"1334\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"upVoER9vQD4sAS4YPStEPtr433fApTk+4nvrZeQMRj4gYY6BCtpCPt/cB4rHdUw+gTSq7wDhUD4JeEntkEZLPtadHQvia1Y+6+cjc0ewWT4mx7fm6vdhPlZvnbNCLGo+i6Eje66ibz7DnMRP2pVyPqfPzef+LHg+kuNIF/8jfD4fnqm7aoV/Ppt+lYnz7oE+OEKzjZEtgz4zShkwmKGDPga3QMYRaHg+prQjAauXZz7cS38NnMFNPpv4h/rVi1E+CJOGvt7fTz64pMLun7JHPofosvKZK0c+gIaH9j++UD7P5CXFT1djPqElxrVrInE+mZAu5v7cej5FxRY8xo6CPqBMuQmIEIk+k8CBY0q9jz46/wNAr7CTPhzwfJj9vpQ+qW+Ez4kKkj4BcpxczLWLPlCm80KrAYU+J+lFlefmdj7T9dUSneZQPv28tLDPpyI+GDjS3l6fOD7Vki2TDkE4PnRRbpdtWEE+VYbDuN3NOz4JSktVCqYnPtME7oAWIEE+sFPqvrNaQz71GCWcnkFZPpSVylYZRVs+/UHnPuByWz5vD5+tthtoPsVsekgg5nE++Ttu15nPfj4iNC9BROiFPnNjwsf1aow+SbBDxcK0jj6j52mTHy2GPgd1ZNx9Lmw+/adVAgZjWz6MmHcyOU9kPmaVoA+XdVs+ZvDfu6FeWz4pPRrGSvZaPuoOdOabDl0+g6wHDrxkXT7ZBYeFOiZXPk6gDK0wJFQ+hVUksPJwTz74Nr52rMVMPvs71R7aKUs+hy7i8taWTT5NL5eYndJVPvWEdzBZKlM+Y42ky/sCWD5nne+kEIJaPoONinVEMD8+c1EzE+MbRz7IH728JWVbPjr2iw3oN2s+z1dKFuJJbD7nH2UdBNBzPvpZx5OsBHo+oAYbNvZdfj4dTvFSaX58Pk8Dc5KK5Xg+SLtZNmQccj7s5jF15ilqPmkSJmp33mQ+L2WFsMNpST6e00lpRQhHPrO46WWpMCk+Xmq1klkCSz41wdRhbvRJPqb9ZjDTdUE+leaYtWaWTj6iy21GpSlEPonN+GJIlks+UaRV2HogUD4phcz+zDthPp/Go9eGXmQ+NDc/xRYHYD7sKblxV2tpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1341\"},\"selection_policy\":{\"id\":\"1342\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GzdzRgESQz5IcLNRNJ07PodOeLT6DUE+NuXbbvuZSD6m8uLIp0FGPtxjNMJQB00+LsMqWOAtTD77QpCkg6xKPp080xEhQVc+yg4fJhqHWz7E0kCABxthPt8ypH7VpGg+VFWNt+BDcD7IMmMXh8JyPiv+Th/ghHg+fa09O9xNfD5UbOpe0dl+PjXfRQKXMoI+vSbhcJGWgz4Bmva3Hs+DPqijBNTKYHg+5I4H0tC5ZD7szubEfgtQPtOKZ6jwZVM+8z8UjTsSUD4vzWGz0O1BPqoxjvwbYUg+ltEbOm7LUD6yrP6HvdJhPmILbqxmjnA+AA7lE53ceT75D3Tn5aOCPoh3A1AlQIk+jLNt8s2Ijz7t3ZOFv7GTPrrF2CgEs5Q+0yv3nbS3kT7/XEZ5WRuMPucgO8QsgIQ+hHB5SdBldj7aG361vD5QPu057p4tgiQ+hxKLPvoRNj5MDrEloQBBPuvSh/HyxVA+GgCpXRNDQz4x9QwQwb05PtIdGmH/Pzc+YlUDZxuCND6MbSyJG+JYPm9/jlFelFs+qsMOFBiuWz6dn8+vX/xoPnUjdH9+O3I+gk7UlQlUfz7mcqAzELuFPtNv2yoQ24w+bbCtbA6Qjj4750q283WFPjNHp9ier24+jJsv/F4HYj7zuHnqmqVjPj94dG4xdF0+GV/yk75hVz6VYIXXhgJVPhXuO5keYVs+7QdZ+qbSYD46L6BxYMFaPqCeD+mHi1k+V6Gd3E3lUD6tliY6NBBCPiwNdUYy6Eg+8XHD6YOZXj7y70sB25ZNPp2rGx+xh1E+PieIyCzwWj4yr2FYtwJQPheMxDwSbUY+fAYL0ok7UD6OZJPnJBVYPo0POD5kCWo+JKkMnG4Naz5doLac58pzPqsx22X2fHo+yPDnnPcRfz4k5hjQYhJ9Pr2U/g6c1Ho+2LkwhkOhcj7uqamac5NpPmGYQfVCsGY+dr6VYw7uUT4qtv13MXxPPs2D67ZkLEQ+zY8u2pDiUj666KrupcNMPt5Cg2P+m0U+22jTRBDbSj49/XWIpbxGPkUuVIrSG1k+Jxu6t8D/TD7Knc++pD1hPlxVGWr+lWE+0pWsXETNZD570UZL47RkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1335\"},\"selection_policy\":{\"id\":\"1336\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rGqpinhAMj4hA/3we7JDPveOn7/NhTw+oRahDRisSD4SKBWNe6lDPrLGoTn0Qkg+kqXzgKHKSz7ZOMGvmtdKPlt1lbIyTFI+w69r2gIsWj4KTOxBfBhjPnGWe0ab9Wg+VnNK0epZcD4psFmab4JyPlgixnzztXc+eYg40vahez4mYi7AmG5/PrSVhTKc+IE+AZCP6gXRgz5BIIkg/rCDPsxywutFNXk+/LrHGQXBZz4NGCw26A1SPmgp2XbcwlE+IQ7CxWcMUT6rEMF7SXBIPqTr5FlSekg+s8vInlaSUT7UIkfbqnViPqNkgK7MKnE+fTxxjM8Vez7SuTbwz5uCPiGtE/gC+Ig+JqF/2QLbjz7jPTKI1KuTPsH/xpz73JQ+eJtAVz3tkT5PnY7zfcCLPitLtiJIEYU+3j3U/sA7dz6Y/eexZ1FRPuZUCqmZ/jI+admG+UQtMj5HgNNcfq1DPkWRn57GxEc+8q0hdNcORT5lx5Rtl48xPmeBgoeWTjQ+hg2eXeBiNz6Q+2s44HFUPkWzm+S4llk+arXRUrGqVz4xHNNl2EdnPvJKfmppXXE+pKpolA8Hfz4kImD5c06GPuhgcNx9/Is+Vnc+UiXrjT4LKl0oP5SFPo6Icl6LgGw+pz2Jiuj6Yj4t6mWG0NBjPqeEjOtmrVs+mirqyvKTVz5AWmntxslZPv1hrgGfbGA+NFjr7xi8YD7G0fGfEHJXPrnA06MYJVY+hF0CqeU9Uz5fT6kbLEFAPuqtGSkMYUs+9XhguW3cTT5e5BP8InhPPvJZA5u4/F4+AkC027xjXD4cXTRi2FlVPhqywRdsq0o+rjUBDoMaUz6ruOiU7ONcPr6GfxRo5Wk+EuxL8arVbT4n2do8zq1yPvQPO+BLPXo+UBL8E5ptfj4mCg8GxrZ8PgGsHfogF3k+WCJW0/p+cz6iUiCUUydqPtRQclDoCmQ+Z0KSkesfTT5etitoZZhEPtCABc7kB0o+WWfa8hrISj7mleTbGU5JPmsfCnSrG0c+i0FiZdWSSj7sSqTBNWdCPsntiaOC1EY+0kIHy2f3Tz5P+T4TWYBjPrzvTmiJP18+U5+fCZ54aT6hejWTxCNpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1349\"},\"selection_policy\":{\"id\":\"1350\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"9FeSbB2DLj7yX7guPgZAPqlIxSX2Vzw+z58Shg4BSD4AwbAu+zQ5PiTsFVdi91A+/F4unl23Rz4A362pTMVKPuFYPWWvqFI+2li3rwuIWT783dIcdcdhPltmPMYVTGk+C1PrEsCtbz67GBc9+lpyPtWtAPXKanc+7uYy54JqfD7gq1n/hR1/PplSutN57YE+yalQhjmugz7hh3LOnISDPpRm95L2y3g+fe6TfNwNZz7sqPq3zbhOPqlwmDB5Q1Q+xPmNkybZTz6BqCs3wR9JPpo7WvGOC0Y+EIrZDKcGUD7iHTLeOshhPkMZ4butt3A+9MFJ6VFpej5YApHLhZGCPm7XEastQok+mBaar+Gijz5/JCixCsSTPoGhw61JwZQ+mMX4MGbMkT6GvKMC3uiLPkZzkcJKCoU+hhANnMSadj4vrzxIp+VMPnfDTuGekSc+Hjuu5TorMz471ELstsc+PiVPwXrLNj0+ayEv75IITj5m3a0uQ7AxPt3FzjUurDw+wPpEQqbEOj43kY6u5qdYPoZA5qfGylw+P81bQSJ2Xj7uqFLks3pnPpGqS9ZkiHE+AdB11dc7fj5ucblUvIyFPqYJq+i1M4w+b47dci/ojT7VZGtNWKuFPn2E9GZrz2w+mrQonrssYD43P2FQqKNgPrMAuchxdmA+dH+UEt+tWD4mM/Kb5iVaPkFLxMa0vl4+xhB+Oi9UYT4214iII4JXPp2h6tS1wVU+U8foW9+qWD6IqRHoUShIPj1f5fhxbE8+5TfwnzFEWj65KlyJeG9UPjPXhJn8j0g+yRzTDAjHWz7CMc/voJNYPjpeSPi4JlA+KDQpoNSLSj7Rlh3KVwtYPjbdfEdMu20+08a2xIsDbD4SChWIXt50Pn1UaPh0NHo+8drycKfBfT5UMYieF9F8Pj/URrpHqHg+sZzkTfabcz6GMIO3ZJdpPvf+A5ByzGQ+5Y54qQO1VD4BNLivc4xCPqrr7BMq00A+Nub1n2MGRD578wLhs29IPg6AVWumwUg+VpijQf0UVj45DsB0sG5LPlBvgRVRl1Y+acgKemAWVj4RqN2YpTVbPgtLd2tNwVU+AgUxQBGIVD6iqVKARH5rPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1365\"},\"selection_policy\":{\"id\":\"1366\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8lmvZPWtQj6f7EbgCERAPvzGd6lrYDc+M+xm9dKGRD7s4hT+fFVDPntpeUzJl0Q+4i54RznVSz50zkDXoZ5MPoYNaHI+RlM+1tDc5iSxWT7NYz2cL1liPtA3S/2/z2k+NRW9/YAKcD4bggtkpjNyPqCB0+XX3Hc+fZfwyNs3fD4QUy/b8iV/PgIwQo4I0IE+e0tOD0RMgz6ZS1QqNeGDPor9CxSrEHk+kiKVI9iyaD47D85jW3RRPve9vcL+3E0+0SIck5B4TT4NcwikqMU9Pm4jxRKnO0U+eC0uBqCjTj58Ol9qbhZjPiqvuTireXA+ZrWKhM5aez4ORTRBTnSCPr5C1QSaU4k+6U6nm8qPjz4H9fwea7CTPqkSM8auEZU+eQWON4bDkT7ZfofiUgeMPlIaVWBj84M+RblXSScmdz60YN8WVeBRPpf4Uy1ykQ4+Wt7vChzh8z0PTTC8ky80Piclm94XHT0+TnZfmy2QRD7Q0PVImHsjPlJUio7Igzw+87NCPzBKQj4xwC5dC0RZPkG1fxfl91s+2tYxHB2xXD682QfUDmxmPqnYkTBeH3E+R2VpXclyfz60shARygeGPns7lAvqrIw+uX9drxsmjj79dqlABBOGPtnUZgRbP24+vDCX9GKBYj5/XjA4GJ9kPiQEHg6r8mA+UvKFnVWtVj4120YZ2w5XPte8QRx9/WA+BXBRTFRmWz666y0nEwZUPm7bP98jmFY+zB26sHedUj7sO7DEqVo+PpWWCTm0xUM+icRhl31yUj5HPLvl4NRYPqKIHymVp1Q+XKOZIr0RXT5Mewfw2hRWPlg9+KN8wUA+HcCFuYnKUz6cgzDo5PVVPpIuYxI0JGk+xhB02cDWbT570IyP5tV0Pnwc4nz8BHo+0Hl9hfQkfj6Sqd7btN19Pve8HX8Mk3o+TuLUeWMjcz4VBKRh9lRqPq6Q9LeaYWY+boqESCScTT7vPBViRthFPjuLo8TrCUE+f95hCn1CTT4TpdQvbjBDPhPFFCa2SjU+64LjhKrQSD6N+4zIwDZRPv25EXWqM0g+QhI6H1LvVj6ILxx448RLPtt79jaTsGE+sJd78V5wZD6R+kQXidtiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1363\"},\"selection_policy\":{\"id\":\"1364\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"OuRekSiPMj4a5u2G7qZEPiLreUvpeTs+T1bG2V/ERj6EpzeUZhJBPotTcGv00Uk+hJUFDQdIRj5WkXEYDYZJPssVWjH7oVI+e/et/wtMWz6Jkr+m5m1iPlFU+iubIWo+XJD/WsdJbj62F8h8KmhxPk9KyVn9C3g+DmAmISXrez7eg5qJAaF+Pgtk1CKAooE+dmH+c7Kqgz6JapcAGE+EPnMXgRBZS3k+2ISauwLPZT6xBTnrIqlRPrDDJgNdB1Q+osuYJ4khTD49JHUYTgdDPtds02ZK8EE+uHAXGjehTT7I+wsRPk9iPrKPa6NBVnA+xcrrUc4zej5N5qBLArGCPrROeDayRIk+AoJayNCojz6KzjfyuIiTPpUMuw0Zs5Q+Zuxe4jL8kT4DcNzbMuWLPo14ZVmzmoQ+i8nzwanJdz7BJAnpNipSPhTBCXb45Dw+wi3VqZ3yND6Xq1l3bHM+PuxsW3A70T4+nfpgd2/GRz6ckvSTLi01PnREFGoPBT0+5n3ZemiURT5ujhxxeyVbPmNdzh7iAFo+cHc1E+8MWz52pvDwC3pnPlyR6kAX7XA+iVXFYh83fj4bOafNBgKGPrt7ip2aEYw+5hlotyRIjj6k/BeorYSGPmW8UnrwDmw+0tffF+Y4Yz7aNwFyeURhPvaFkabyOl0+Xm7AFFJWXD73RjlpoChcPq5amVK0WF4+LHnrYy5uYD7/5q2SAcBcPpURQoLe+FE+xO/b3avTUT7PldU4FkJBPqyXCybJX0g+26ECMCMEWD5dZcceEsVLPvCZPFUQI00+g8XM+tRpXT61GYuGCupXPrK7Hd35UFA+rm0f9kBOUT51VIWe73tbPqNcTW7cgWk+gxn6RBeTbz58438TOopzPk4h+SK84ng+1EXQL7vLfT6wqfdAOzN8PvVIe9ddAHk+L7HB9ZAScz4VkbtaqU5rPtcPCExtFGU+yOyxOKshUT55ggLLaQhJPs/kAuiZCDg++zcAzf7dQj56fw74yuw2PpKrXNEZn08+xpvccirxUD5A4zPfNElCPvk7pivH8z8+aloi6iOUVz5nTnO2FQJZPt1p24uN5ms+LIYDYphaZD7Ib7eKRkBrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1347\"},\"selection_policy\":{\"id\":\"1348\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"20PUCgIINz78E0SNvKNAPvGhZi7R1To+D9P9aLLbRj79711XKTBFPt+5RlTlW0E+h4DnFUOgTj6zxf+Pmc5MPplbId8AKFU+YGizY133Wj5gBsrN8uJiPssNzYy7vWo+YEE2BkJKcD7YiQf7neJyPhTTK6Hys3c+UvPWSBNZez4+q2fUUPh+PkdsJBEou4E+/fSRt2ncgz5lXasOdC2EPpyJAlfgBnk+WZsryVJNaD7LFuvjirNQPp6Gk7+/U1I+Zq7bEELHSz5m1FNJwu88PnmtDCFDREQ+yNbDlv47UD5KnyQlEvxiPkM9dOJmHXA+tuESzEQXez4vdRPnT6OCPsKEh3VzHok+0H7yetIIkD6uwmASWauTPp6+6gHTyZQ+TdyboWTmkT6Uh34efgOMPj+jDkk+OoQ+KC6sh80sdj5igN7H2I5QPnGn3MbwzzA+ZBkJXdErLj6YEeb6cR88PoLghssOyD0+QJY4Y3HjSj4GSuCtVTA6PrPxort0ykA+hzq9NmboST4Q1UrgGWlYPjbkTP0BpF0+NLzWzoF3Xz5L9bQV3sdoPu5/z6Wo1nI+C+n26iwZfj53SmwPFRmGPg2xPDpB7Ys+abVofrAUjj6g2J0PPcCFPnaN1lqWdG8+IQeBk86hYT7QXDfOm5thPq1AEMBNoF0+b9N/bePnWT51yNe/pQpbPiPRKdW/02A+aMe38FYzXz5MahglBkFYPrezkJoGZFA+SNA9mXkHWD4pNPSS6GI1PivkDwhjYkI+2fkj9CFSTD6TFn3wR/JSPpqTeMu+GVA+bxqiOtf4Wj60M4OeWdNUPq5tfZzSqEk+ubAml6twTz7k2RBf3jhaPp5+htBfR2c+YgPYMX9taz75NyN/36NyPiMHoVXlcXo+XvJkdh4Vfj4+0WayMgh9PnPibbq413g+ur5TpwUKcz7mdj2mTrVqPid1ktPEjWU+uoKoj/LPRj6MpAUqU2tBPiHRm0K9DUA+CJqP416kQD760WxNNcxIPupAC9Bva0w+5Pk6x9zzRj7dD1SdAa9FPqtHpADUREs+d9un11pMUD50cf5HAcVPPuKH5Y3FcmE+sbiTGs6+aD4RC4k8uEltPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1381\"},\"selection_policy\":{\"id\":\"1382\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"+7aCYgY5QT4Jy8gybPM7Pqfyapm8aTc+r+w3j9wNRz4+l4qV6U9APqG+yo2Jskc+BgznBaEyRj6JP7Rqdc9KPolP5YOUKVM+sjrowpuwWT4mLu1fDDNiPudHtaLAiWo+6dSL/0WGcD5l16BvziNzPuYq20BNWXc+eN4IzC28fD7ncwRTbOh+PqG/h38fuYE+3sYdOeaQgz48WsaOdPmDPjWhsfAK4ng+pyxfAsuJZj5/t9FnHKpQPjLvSy/Uw1M+GjJSXZFjTT4prH5Sp9ZEPrIiYpsT4Eg+LWk5cFkFUz6751bIsYdiPkPYa5ocy3A+xaHJc/kkej7dkKWzmliCPnCLcYC4Zok+ORIhyKvYjz5ZU99husGTPrXCi7XA75Q+kUhI5cDtkT6gCLkPSx+MPkLuqsXYzIQ+Wkx/Kfvbdj65K3LvIe9PPotZMXXvvx8+ZQRdxlgdID67Shda+082PhAqizm1XTw+JABjxd8eRT6gCCqFCdQ6Po4xZ1u8LUQ+sHPnoAhyPD6OifwbXoBaPt+ttJepKVY+y6mXGCF0Wz48muESti9oPsGBxjuxvXA+GyhACTBkfj4XbFdE1/KFPuZScK2sMIw+x/FYGyohjj5pI8T/BJOFPj9Jk/WEgm0+JdYueIt2YT4pYUi888xiPjPIKegiB18+QfkTDPLGWz4GE80pW0NWPnM4EcXKTWA+Iw6nFTBjYD4j9kUOWrpZPtmXJKGiJ1c+Q2d9al/UTj58kMaSCg9CPuIfol1EGEc+5uUE3dtiVD4v6dmrtKVUPml2lHwx30g+qxqadWxhXT68WqRDZRVRPutQRMXgC0A+kfdQ5nlmVD7rN7yrRzhbPuH+AmRHKWc+VKLTZ14fbj4uRXdX4Up0PhdHGvCzO3k+wEH9B6pdfj54Tgff5G58PjjmhmH0n3k+wdWfWlOrcj56GjInj4JpPsqPBIrxJmQ+p2uAofBlUj63K+37+go+Pr/xHrgB8kA+y8sQZXfYQj6wrGVcSNhGPoKoSk61MlA+wsPoYbpcPT4bygpjrdxJPnyFNjXz4FM+AR8IygNyWT67B+XuYmlHPozTiJoFU2I+DQQlxEDrYT4knH2fLkpmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1371\"},\"selection_policy\":{\"id\":\"1372\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1326\"},\"major_label_policy\":{\"id\":\"1324\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"PM6ClElSNz4jLA+RdBMzPvuboO5Vrjc+k0TaiF5dTT7BgsjmWFI+PjTYmHyLmk4+ZlzVTOclRz5J339bfk5FPuyEfEvVt1M+mX1D8YtCWz4C1lNjLjphPmzQiwgfiWk+x0RcNxnObz5iKqZGJl5yPr4ClIzZC3g+yfOcFxsPfD7QS2sXbjF/Po1cNE/muYE+JQb66BOqgz41cVR/mMuDPgoQ89qs7Xg+V8r91ZwxaD6OrJhLlFlTPgIn0mRAb1Q+eRt47r4LTD7GzXr5555HPouxSy6g3UY+30bKaB8tTj6+1rqTG6JhPtpv+APKr3A+dEYVtXfrej6MtSWGdL+CPuFPFvz9TIk+k4EidSOjjz43Ym5ArbOTPmeqZzcTvJQ+awPX9u3dkT4JCJsexoGLPqY3F9VjAYU+Q99glu2ndj5tMYyEJLpPPmjXjWau/DI+dHSY0NSyMj72OLn6peVBPhr/mJDBxDs+NGWwA8mTQD5xY/uhfv80Pt+FZdQEpkM+Mi3FRrh0QT6c38//RplaPlSbc51onVo+OVeS+ZlQXz4ItKCOILJlPjbk0vsHjnA+eczZAyWcfT5O2WK9Z2qGPhzTo5eGAI0+IXZezDN6jj6/tGb0sXGFPkTKdV4rL24+uCN8iOVBYz6I7Ojs8ldiPmJSCdHySFw+7HzfcglUXD6s1DLgytpYPlggOjLlo2A+zjNMZ2+iYD6pqZXqY1JYPrUy2tYRqVU+GKhTivg1VT4Yfh1lQmM8PjxLco7ZzU4+5M7PhDKIVD5XQ/b9YdBePsGRwW1rTFA+SAfGHtVtXj5EgFFwSjdXPkvSuwFuiU8+zQXV48eTUj5AWcE5GrpZPikzIvkSAGU+G0+Y+KoUcD42t6NuF4lzPhic8TS7JHw+W/bOAzmbfT4jsJ/OMuh8PrAlKPOg8Xg+K1AVXQlWcz7WRszC0KBqPhbISRVBlGU+erf8/4udUj4pkge52ac9PvYhqP/t7UM+J/6uJhKmSz5kIJ79TepIPo3n38kQeTc+VaQTj4CjTz7PBEDebP5MPhDc4sEPg1A+63pxk6SSVj6LEkOyk0dUPnNY5S75mVg+FfGalFpMYT6ik85Efn1yPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1375\"},\"selection_policy\":{\"id\":\"1376\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"/Bj8Y+7fMz4n5gTrbyNHPgqUKGFxMT4+8UH6Be0zRj7f6Vrj6ng7PrMpg3QGMVA+LCOay/axTT6aU+Dq7I1JPn4Z8LajxlQ+s3+tgZdJWj5Sftz+RohjPj0CLpWM/Wg+5RrajUAccD5YleWvepxyPv8hgMLuWXg+FdyqOvrDez6CvA/P92t/PgwMkBiiW4I+7CKIid6igz657MNBjLWDPsPW3Yxulng+XFHsRSUtZz7mf8FjMB9RPtq/c+aBklU+aHtOJvc1UD6lLbCL4DpAPoZ1PH2nU0A+KTlOHqa+Uj6Co0KrFutiPrk5bGgu5XA+QGaL64bPej7IH3saoqKCPvgCFuNpXok+dTLBeNvyjz41saicepmTPg+EdiDrvJQ+PdTplDv4kT5ir9LxYv+LPmO9M2MLlYQ+YNywhunGdj5gDfITWYdQPsG0nOQHgR0+rlfSjbcnMT6ddiqcZ/c3PuzlZgdYeEk+6Ct0pZh8Rj4bo3e0Kf00PnFtcg2oSzY+qt8eX/CFQj4PlWVNRfdVPhGQO6AOrlk+3DyGvD1oWz4T1wMQDm1mPt6WsEZ8ZHA+G8JNbAvifj56r1qNFJuGPsWuIFi/yIs+RAn64Kuwjj5iu/+PxuCFPu1leBt9LXA+vg61oNfnYD4DfU8Q96VkPt6ugGkWkF4+fydB8WuFXD5iFlrOmuxYPuqVl1Wm3F0+MWq9ywhlYD5lu/lbmwtWPgPWnv094E0+m3n78dl7VT40jMO0mZxIPhIRYeYktU8+NH+2n7KMUT7DerFl5nhRPgGcjqMrRFA+3BLAvr5OXj4lrVvGURpbPr/QDhjVFkk+cZg47ekeVD5gzMRxx0NXPnYv6tMBhGg+PfFTb0B9bT4g78Nlf2RzPs7fBLpSyHo+cSY9Pfyifj4j/QMLS4B9PqAEb46Wq3g+ktGaKRRkcz6M3ktp6RBrPvD06vJRPWU+FHK7cWHfSD7KBBZvI3JKPptAOSPVMT0+ikmAqn83Rz6FW+7ebR5MPoy4L9+fiEs+CvvW7NTIQT7Q/7AmeEZQPr4NELfmHlE+Oi2meehAUj7P3yc3zaBMPkNnWNWHDGM+o2FHqqPNYT50kVKjiuBjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1379\"},\"selection_policy\":{\"id\":\"1380\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8JB5GGNzNT7mYYJt2mhAPszaakKy6T4+AQ1F1GhpRj7wfu/9eZ4/PqaFN0Fo6Ec+cp1PLsRgTj5jVgUpDEdKPnLCTkP5rVY+CflWBjfCWz4m/+jYeLxjPrhUwQJYdWo+TD2fyYwHcD4Wc83MrK1yPmIEz9ykq3g+TQJ4zKm+ez4yiZS/3Td/PndQPpgn34E+LMSwotXIgz5y69xeVe6DPld4pw5dYXk+m9rO+ubCZj5J6nwyODNRPlK2fNpErlA+pKlNZj3pSz73XvqEK5VIPv2E+EyYqUk+lDqA30pnTz7SMsG3Xw1iPt1OKgS213A+pJEfC/bPej6+pKd06qKCPgcLqgQWTok+QG47Qv3Djz5lnwnA77+TPop+z4ctz5Q+WE0ChAvokT44TIKHGgWMPuLPb7U40YQ+d3KdmRMUdz7RTwsKFUZOPsRTQY8f8So+jHl74482Oj6sbJ5hkX80Piw0Wd4e8jw++Kemzob+Qz7vM2cSW5s0Pm1GjjseNyg+3iD+tP8yRT7EgshiIuNXPpgaBQtzj1g+dwCPnkVPXj64qiw4Af5nPkKr80k0snE+BQVTV3zNfj6S8k3RV2OFPsBSnc3UWow+TqT+dTu5jT5F3ZyQvSaGPpsxDRdpPm0+9ROAMtAyYD4lRGOIHzRjPvzbV3kzxl4+zhCVEu8yWD5RnhPo98NVPst0We8yTV8+hzSCfdEhYD5B7N+ZMkRbPpt/y6efK1Y+hMbJVpc0VD4bQnI5C59GPjtYMdMbAkQ+AYGy6lmvTT5MwzgDZdVQPhIjj4TPWVA+dtZrNOk9Wj5abZeTz+ZVPrlevGL520E+8glVQFEBVj6UYuq+PlhdPvtwGdE/2Go+lWFQo85hbj7YUyME9aVzPg3lpa3fa3o+JblubDsifj5RZ8C0eYV8Pk8NuPCMBno+LvW9Yublcz7WJjmm7VBsPtovvBcqCWU+uLP1HagDWD6yDCfsPclBPnzrxIyD/UM+S98Dt8jHSD6PnxY4D+xBPgnFC1TjwEo+lm1cHp9WQj6+uCdQ4opHPrHfVXHkOUs+biyqdsvfVz6wnsSXmAVRPmFJOhg8ImE+D2xUEoyGaT5nIlCkSgBuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1387\"},\"selection_policy\":{\"id\":\"1388\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"DZ1Sn0XUQj4+OGa2lfxDPoA0QEbdlTg+fHzuR/6CQT54saunTsBBPo+P9W0MxEY+QnivbDcNUD7aB6rFgghPPiVzaCV4OVM+J9TOh/xvWT6G+jBfiJFhPmK9JZZttGk+i1btV90Obz4njHe3hRxzPhrRzaJ/lXc+J/sVVXXnez6Ycbj6Wvt+PqnVcsZJGoI+ctqOxJhCgz7WLUnDAr2DPjU8ap6niHc+iNXDibD8Zj4MkwcqojNRPiScnOfDtVM+5YgoRh0BUD6j2F+B/QJAPqcYLT+PEUU+k3r/g/5JUD7xSwn34T9iPghNRIz4gHA+mKBDcsDHej6Z6JPpIteCPgx6fcDPPIk+1/oNfy05jz5U4oIaMW+TPgVVnPNr9JQ+wZiaGjPEkT5ca+lPWtyLPlfL/8WB/YQ++Zs5vzg2dj7FajXtqURPPoNE1AOUBic+oADQi/b9OD6Zd7bNfAxCPkif8C6kfEA+3IMKzsaAUT7XvM0DXXc7PslZi9IkBEU+RgcbVeFzTD6FUgUwOR5bPmVgoBr3iVg+ScYI6MkOWj45VROJajVnPtv3l/c53HE+nbtQ/Uu6fj5KpEI9JuqFPtRjNiZ2/Ys+f4MDxNC1jj7RKhszuneGPhOZk7zLqGk+wxEFuX+uYT7FXadYYJRhPsFMdJQsWVw+sOUoaT+0Vj5dxgkj/z5ZPgQZhUDfg2A+c9ZKwgtaYj6ohVhG+bVZPvMzISbh2lQ+sAiw35TdUT6FDYWeDM9FPoyOd+ZIvEo+YiMNBXM2ST6KjD6Bs4VJPpyVptinKFc+FDC7atvuWj5ajTsngqxVPlNdSKySh00+j/bPpy8mUD7Zaylr375WPozaOe3xvW0+TtJN/l74bz6hgRcSaktzPrdsJfd7F3o+9uxi6Qrjfj6YB6ZmLDl9PuHz2EiycXk+3FiTLvx+cz7xgKkDcY9qPjBEGPJ8wmY+/fODgYxLUj7j6HKNMLlHPu8AbEdq3EE+ZvZNtboFUT7szJT2rw1EPiykicpEoUI+kkZx8K+3Tz6Bgdjcb29JPsszn3r3BlI+Pb7KFN9BVj7Nd2UqLqNXPsbIXTXSd1c+UAOQJQpOYD4s3uNuOHdtPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1357\"},\"selection_policy\":{\"id\":\"1358\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"/9FLLPJfPD4BDCmwxS1DPiGs0dS/Cy0+pmUVtaxEQz4DUka3dmZDPh9evWsEIEc++EUXG5saRj6376S51YVJPgQr6ybBI1Q+TWYfkco4WT7FU7vitk5iPiPjUXYYR2o+0M339hcMcD5ooBetRuxyPjcFlq53Ung+4TSFUoHUfD5QDYtT2HB/PmRC16BS8YE+6NY5FVZrgz7PQh0JA46DPssuowmim3g+cESF5CjMZj7z2d1Uxr9QPrOJgME1YVM+0At7+lHZTT5nnjakvVpCPkErM66wvkE+/HslQpBrTj7ehjkyR51iPi8hseNu728+R6dL/TvJej4BiwzWvHaCPhoZ3apaKIk+ozKN4Ixhjz54rP1dbbyTPtfuzjfe7JQ+BbXy+Ju6kT4zfbzK9RqMPg+NEUgzwIQ+FH5B4GHhdj6b9roHZjhNPmFcsWwKCBw+eJqc+dJuQD5i0wqxdcxDPrxVtRsXkTs+0wXo46bTSD7CBzDIygs8PljflUtjwEU+CBbKdzUSQT7+IHN8IItWPnCvycEbY1w+we3Qtc2FXT6E/opO9LhqPoiYe3YF6nA+kPk5KnMtfj6G75Lw5OuFPiWq5EPmg4w+BcIZPqW3jT4WgZGtpOuFPmRAVzwsQms+WVYU14bkYj6hS1yGt/RgPqttzKdbe2E+ddoThrXDWT4qTOitWTlaPmchiQXir10+du1BIrFdXz6x0vf+Ia5aPtYcjnf6T1s+rzw/gvdoVT6PSeXoZE5BPnWQiV2AM0U+VThniI1fVz62rR4FaDlUPn6JZOz30VQ+yFALkE+eXD72yK3NnntVPsi9RR2p8E8+SvhZ9bzFTj6GXAsVTJBVPsXjigY61mg+f1ywz/ssbD4SEU17B/BzPhIKyFXB3Ho+OxBqeCjbfT4gg6k2wvN9Po5ArbBX2Xk+iP9vez6Jcz6rFzBx2v1qPjSbIdh7bWQ+IfdDI+idUT43PApSFsJCPuMhDWhNSUU+6ga2fTueQD4SH4HsOwBKPhzdBrDDN0M+M/Oh7AzoPD4c3nP2WmdAPhyoJ1KxGEs+rEjTW82IVz4jSEiMa8FbPiC5zPlu0Vw+g96tXoEHYT5g1vgIfFpiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1377\"},\"selection_policy\":{\"id\":\"1378\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"iwCbC+4+Pj6OIGO60n5BPjzpFrS5UD4+tX6qiOsBOT6ja+W+Rt46Pk+SdgiK20w+nXPbT9EJRz6lroaHy8BIPvFU/fT341I+15W/5t/HWj6FCZG4oWZiPiei3G5kSms+svcOYbs8cD5ETgAfWfhyPqoWxEDmPng+v+29C4C1ez67dw4HLSh/PtK3AX6vLYI+LRIpZ+aAgz5cj7mgwm2DPhTpd3s+33g+nkwkJ0LzZT5xlbaiqOhRPp2cW5yyrVI+SeZf4W5LTT7fUXfA21dLPiq05dRdfUY+0zfaMuJCSz4YFGcDXsFhPjEjjP2T8nA+7BaJgp8gej4Qz3GIfGeCPrieAOVhIYk+GfmMYxy8jz4cz5LjeayTPkhQIFPguJQ+YBNmKTnDkT4rnKEZk+uLPkGTIXn7zoQ+bCv2+PPqdj4q14kXUJ1RPptHBCiXrDA+1pJidqhjNT7rcW+j7Vc9Prv2cNu1jDk+3kJeqPOaND7+ew+TkVMwPi1Q0nxueDg+p8tn/FslNz6mODqYRqxRPnWGLvVxa1s+YPi5YfFeWz5EuJRCjfZnPvAGt+cJMnI+2xnIs92TfT7a2Z8si8WFPoWpFiMVLIw+amp+MvdUjz7y1WtmqhOGPnYQ6ts6+G4+xkzIYkLRYT7wYB0PPnRkPpLPcgSI92A+ynUNrW9HWj5FZoofJ0tZPpT/nixk8mE+AeqRzUrmYD73GP7D5KRXPm5cBf8u71U+/+NuYofsUz4gQb5SxwY+PuWTpYj1904+t4AOMBvXUj5QmqN/ELRTPtfg1E/EoE8+cQe/DFE+YD4mENOXBNhQPtHuAhBLekU+xi5zDakdVD6sdn2YBSlXPhpwOJG27mY+uMSgr7FubD4jTEy4JJB0Plqp+kBS0Xk+j4sYitjQfT4EQgTCAf98PpWk8B/xQ3k+T4PBTOGBcz4fDTZpyY5tPvne4ar01GY+RDPAuq3ATD78tWp4HkRBPvEqSV12UkI+DJK63DXkST4//FvEQU9KPtXWC9EKXks+HvkZsr0FQj539YmtKLw4PpHWfATBOVQ+udNK+lb9Vj5nTnPWuVVUPuerISt3HGU+fIYD/rElXj5yQSFcy9hePg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1359\"},\"selection_policy\":{\"id\":\"1360\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1327\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"nXBtBt6kMj61QZ9GYV89PrcXHFyTPjg+amLqx6ECST5h+bTD9kxFPqi+iF1M4E4+APc1nZ2QTz68B3Go0QdLPtCUpfAmVlM+KI5GlA6FWz6gJzn3OUhiPnyCM8PiEWo+gMBC6H/pbz6bShQYzc9xPvL/4GXDT3g+a0ZYl4IyfD4ZthNwFjF/PlCokl04AYI+TpSLdUg7gz5sJnf0BYCDPrmRWPHTzHg+iZKgzLuiZj7TW18sznVRPrR+RYRgGlI+YovtnWHxUD6LJnrbZHlCPjcihCbx2Ug+0rsCJWLqTj5+eI7n3EpiPlAqUHOFz28+cj8mmKltej7nAAo6OXiCPnqAiQ91GIk+9JuMXea9jz5MVsxkIJ6TPnXm4u3rvpQ+AhdU3hXTkT5RFeu+yvqLPunlkaBSG4U+aAYXMutwdj6ACyEyTJhQPg97THumTSc+lDehv6brNz7P8i7vxw83PgmIGHENlkM+yYSh5Ma9MT4OXvT5bRYvPj/gH3p4NUM+mCet6dFmQT7WIm81cHpUPu3k1NLh/Fs+K5oSqyXyWj73yUUAf3ZmPn5EdiHvhHE+FQ36eydXfz4jc3AIQbCFPuwbdiq8DIw+WSWK5ZH4jT7NNn3L+WuGPpwfpI5mJ28+FgYAueGpWj6BFsKH2VZlPlayV+6tX18+WNdd1yh2Wj4WfZuI2BxaPs+CstkPQ2A+slrkur3QYT7I/oeCa8JXPpUmggWq+FU+hW8WedwfUz6I9nf0nyhDPuxvky2gx0U+e92LXJv0UT5GwQnxGI1UPnKJu0hZxlo+tQnFm2wbWT436hNf5RdaPsADJd3ZOEs+nZM11xdPUj7lJaAnQupcPhlLHjQgG2s+52aTGEqfbj5ExOzWOyl0Phc5Xft4ino+dyMRqoU2fj7IShDtFyV9PlDnPrObk3k+R6a6GtKFcz7KqNt354xoPoSu0kd0QWY+mr/yHShhSj6clC8xxwY6PtNBiimhVj4+pOqeSRJ/Rz5pZ6b2V01EPqrU/f8L9kc+nzaji5pbOT5oIaNnNI5IPgermyiG71E+GQoDRx1wVT46hNgMCDFePngUkPEMhl8+WESevZFiYD5OIRwNoMVsPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1389\"},\"selection_policy\":{\"id\":\"1390\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1329\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jhQeGIZoNz4toVZcI5BCPt8ikYtO0DQ+MVag2t8FRj55CnGvQPFDPps1dCM5GFA+3pBII0izTT7JV+6oFOJNPu+2Ak3HAlU+s8gVQIZKWz6jbuRyNoRjPn9ftOaG02o+Ls++BpCrbz5bEP00yKxyPo4W9kts03Y+jckphr7qfD7TMWyeUJB/PtfJCZ7ZpYE+C0ccroeygz5EB6YSaL2DPrL/LT1pX3k+khgCKcNXZz4mXIbUnK1PPqMVRWz75Ew+qdTtvZMKTT5hL7fTO15BPgA9/QHL1EE++ofQS8bATz7qXiQnhY9hPjY/ujqIDHE+ABkNiKtlez61twbQre+CPn004hL27Yg+O2XTw8fEjz7twVvoiJqTPliwFkbL9JQ+MK7LvBnYkT6STOQA7lGLPo/43S02sYQ+eEji0mQMdz4Tpo8C3tFOPi1n790wLDA+9XIfp/krKD4KRzfQDoU/PpLxc0iEez0+RakzyiUBPz484frPOvMpPgUYZfBrOEE+12p9YFxdQz6B8ioOb15XPrFnFVHyAlg+A0rDb5ErWj7c/Gk19iVnPl4sp1ueiXE+2hOj6mFafj42nVHv3SSGPnsw4l5cPow+sIMCfgonjj4DMB6lo92FPu4ty1UM4W4+1MJZINUOYT42SgzhjotkPtd4WAHI7l0+X6c7DdtwWj4Gx9CXTdVZPmxdSJDOdV4+NCXq+tpmYD7YlGM3zjxYPlhVSgA0D1U+IKN6i1KvVD7YxFOBlc1JPk6nyF8su0w+luJZNnugQj7pRp5RsHJUPnB7x307l0M+ThaM0ixwXj4gp1vCg8BQPojyAY1NaVM+ul3auF5ZSz43GiHB2qFePiM7swtG92k+Kqh+5SJZcT5h1N33rE10PhXNszcprHo+K65H11+Qfj5nnt7fSvx8PsfUE2qlc3o+1r7jkrb8cz5S39IM8KFrPuDO6qwgB2M+hzRoZkd5Rz4q0kjYP8g5PqXakxLCgUI+VWL/Z/dkQz46wUAAN809Pp/ihzxuHkc+lhrY0Xv7QD71RZ3ADKFIPv/byszeNlE+gwchyp1vSj4WgmBuwvNJPi6TlcPeHFk+PThvC/0AZj7UDv+8qvBrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1373\"},\"selection_policy\":{\"id\":\"1374\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1329\"},\"major_label_policy\":{\"id\":\"1327\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"g1rXVgy+PT71BU87sCM9PixCXieqgzo+eIpk4PDURT5f734DVAlBPgD/G6fGdEQ+3bEUC0cfTj63vAIc9CNIPlsNr/pZAFI+rpJyKP0IXD7ypbma779hPu5YMf1S7Gg+ZKvWYFQZbz7bqbwrB2lyPg1du96jxnc+SH2X1b80fD6yZ+2oXDt/PssXBieS9oE+PcvjSvmogz54X/IJqL6DPr1isy4+FHg+PPLwu21tZj7obYuIn7JQPlLk7dYIdVM+JWbRAt4fTz5PXlHDPTZBPhBQ4Q39uUk+Mr9uvuIvTz4k7i6T6F1hPta6FXzPanA+24OBZdCjej45tvfHCeuCPlxLqzx/IIk+S0RVbuv8jz41CJpZ4bOTPqp98NEFzZQ+/r/Z5jTukT6BquaJSO6LPv0zGT3p9YQ+mohCkmyvdj4n8NPjCWNPPomlfOZq2TA+v5lq04iRMz4nDH0Fdio6Pg1DCogqhTU+EgFiLrvCPD6fz4hEbzsrPiXXKwVikjY+e5c8DOSmMz5Iq+PzcIFdPnjsZd1UsFw+ipPF/eM3XT5aQw/0aE1nPpfW7dJdlnA+hCeSu+qffj7pu8ORAkKGPuiYGkWuBYw+hfduN1GbjT51o4m3IRKGPpHfV8XFOW0+wzzg0yKVYT5AbV6x/5tgPvyYMlVoXWE+fpJ+ELocWT7cjHZ94yBTPnipqYuk81w+OCQaoHWBYT750RySd85VPngEGB5QHUc+14PJOJEjUz7afemsJ4I8PorGGH3/h0g+FD978LJBUT6GQZ/YHyxYPtui8vx891c+hXLLowPbXD6G+QHGmqNZPviOntMtCEo+gwutSmAkTz751IpqdehePrtLnkAxomg+Jic1zXnQbD7S4SP0W6xzPhnFE9NLans+WDWEqg3nfj7AobT8OMZ9PhmoM3con3k+7WyP3tz1cj6hts6mDSxqPgXqsqnGCGQ+3MPYYDloUT6XE4RcO7VGPnJulFquvEQ+zb6jCtAiSj6aMa47qVhGPmZ34RjpOkM+35kOFbK3Rj7XRmVhqAtSPo4ahFN7L0o+J0NrdhZlVD7HdgVnSq1WPuAW69ELTGA+mWOE4F0zYz6olG4WsAdzPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1355\"},\"selection_policy\":{\"id\":\"1356\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Ly3preYTMj7/RbFQCglCPoep11WYWT0+vANpRdFKSz70gpyz7Nw7Pn0dTEyHMEU+vMuFyyqsTz5EBTfhMfRNPv5GMiD0olQ+YMmNyRSCWT7w6QBGuFljPgk1RgpRt2k+LtkOyUAicD4j+AlP2XxyPoaCV3pkbng+sJ4jTnKSfD4bm8kytl9/PnfAGh154YE+FuInDSX5gz7cviNqQI+DPqfUHKXqv3g+KDSpS3sgZj5Bsfc/wLhQPsmw+qtXKFU+SyaK3knKUD5p+PI8CulDPjbX8NIUrkc+qyQC3KVEUj6s7cCb8txhPqWXFAh4KXA+BQLn7Z2Rej5Snbc9BWaCPkUS10PvLYk+2PEwh2PFjz4uKrAyEL+TPhGMPLtX7ZQ+AJVc6tEAkj6QRB8HM+OLPrwkj7PdvIQ+rfA7v3oudz6sGhqDPgxRPkS0NrKvqTA+7ZuJs4gBMT4f5KlTTbEvPhnkK2n9r0Q+scnwSIQJSj5bd8MNrgtCPpNTSc6u1SQ+FVooFll5Rj5MOOBana9YPuEV2qxLbF4+MgcL2XBJXD7TWqp+XedpPqTfEvP3ZHE+H3QrGAxRfz522mernjSGPg4Lt6ZBoIw+qyQI6LEkjj6wuNc1ORqGPrDkuR4rYW4+/CF+dydKYT5w1gNzpFhlPnnd0bBb/WE+MWW628NCWD6SbP5Ox6ZYPnY5+vW0LV4++EypTUQOXT6bMpGTrdxWPiQti6yb31Q+kYeAB4j4VT4m/cdH8q5DPuI4/ZZ44Ew+n7v5dLE0Uj68uEkvF8pUPt3cPn24amE+seGQV3TvWj5qVU1MnqBSPqZlVuP0C1E+JM0MllEITz4IJeK3LdZQPvYbRvqTnmg+Isu4IPYcbj6bi0gtD79yPhXPxh06CXs+iSdQ96EZfT7EwgryTYp9Ppbx0BEnKno+YL8jAt64cj7JkfiXkHFsPoZnM3Bv/GU+K28qGyHJUT4g3HbCFv5CPlMsL9Ws4U8+HL4hBddvRj4Jkzh0OmpOPni3G3UWkkI+pGDdXJzLQT7VARLycRpDPj0eZ3OAx0w+GIe5BnDiUT5kE/b83KFYPqixsyUqLVs+xpW/dr/VZz4QEUjc1FZmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1353\"},\"selection_policy\":{\"id\":\"1354\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"l6Ce+91WQD604g+QyP9APvN4O4bkAkI+Jf+dHhFuRT5CfkPL9NFCPj/nyxhOHE4+9S7Bi4zbSj4NfLjiqZ1LPlPbwrriSlU+76JANXFdXT5Vr7Xcxf1hPtxMqF62pmk+Ri2pic/7bz6YwuXP5nxyPnfyz11/BHg+gFwvT6KLfD6aKSUxrBx/PgoZZu4Q0oE+PQrxtfzMgz6ru9B6X7ODPohiiwQBz3g+NkEsuREaZj6U9pKyo6xQPnlutLa07FM+yP/P53KHUD5lYQ9MAthAPjxRlIrTxUc+EuUQDv4uUT7iYDtwtrthPvbemgHppXA+UoEBuAQ5ej4rvNtcnJWCPrR1SKNItIg+KB6n1SGkjz5CxoC6w8WTPjGICAVa3JQ+6vB1ST2TkT6yZ6497juMPt1TLaN2i4Q+sTyoANDVdj5UGISHRWpQPk5A9Yp1dCk+AQp/+0CeOT7XcLkXJgMzPqTzPPe/T0I+C93GcUQONT5oY3SPwCY3PosxLcRUCDs+HwJmeLPTMz6xC25UPVdXPtvx9I9RoFw+2IqxTAgmXj5vOfJwgixnPuOaOvNPqXE+T+FYR078fT4GG13qhwiFPuk1oBJ9c4w+Q5y/8L9RjT7sG1f4BC2GPl14N/Yb/Gs+vYPjxZoVYz5dcNwQSthlPuCVGBV66l8+tgiXsxcZXz7gUYsG4cNXPk/Ejw8YjmE+0S00x5HaXz4YhuIh9jRZPtxKUOmfsVE+7HKomB3BUz5+UYhHqeUyPtHPjBRTK0Q+TdW2WBxFUz5U+IKOLU9WPhNcOm8golY+aqap9HrJWT5eQc9OfgJQPhEGjU5wsUk+YwDo27puUz425H6uyetZPlKiqIBpzGc+WpvNFRCQbj5EquFrephzPiRDrInETno+Qhdfid6Kfj44FgiLFkJ8PtOGCAyQr3o+ZKnAaeHocj4lH1bO1qVrPk0GQUX6yGQ+nGfAfRNuVD5QdAhWkXhCPmYI3Xx6+j4+u6TxFKVXUD7G6ZEEh6lGPmDGZhvIoUc+Xf7c6imQSz45YsiQ305RPmwYRz7B0D4+5+0BVEeMRT5bWApCnxlTPuWepelQymU+pg+W/LvSZT62q12Yc6BkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1383\"},\"selection_policy\":{\"id\":\"1384\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zpaf5WZmMz5fYv+STZ09PlHwe6/FLEA+nySJAwDzRz4y6tiMAgtKPpVUlC8SlUk+QHzBdGgQSz76sa4kwEdMPsLYF6Vp0lU+i/0DumIkWj7GPrs/jKBiPp5Hmo17eWo+yp3clX3Pbz6N4UAZmKJyPoeuh5+eaHg+KvShbX5HfD7EHzpfLGB/Ptlg5o57PII+t9b4aymagz50IoCKKJaDPtn6gyZ0Ynk+7JJjiyYrZj6dQejCtjNRPhFV6nvgllI+UgJj65czTj5yudqA2HRGPnqd710SVkY+xct26srJUT6iJia/SnJiPspcbEVmhnA+GNjv7Xdwej6j++7arP6CPlUyf6CtM4k+zhNToZLsjz4qmil7h4yTPpFo8Dn9o5Q+eRn00szdkT4e0Uy5ECmMPnxWXLIb84Q+alBFcg/kdj6Z6ByFxzNPPgraFuos2CY+rRaT+BwOMj5ckQzMOEZBPt6tZji6JS0+MjwT4wLjRD5DgjmfTfEzPnwosWn7QEE+1zvze/i1Lj4FNQuhGbtTPgpadZ6zC1w+Sdvoblt0Xj7nyykm2ulpPgXFyj/mCXI+09RJA/3IfT42a9XP2JqFPpNrRTOwCIw+KovTzM7VjT4ZF6qZxOWFPhfq8knQaW4+Y+XsUMCMYT6LjKJZeTxlPtcn6DXbcV4+MPgRSMy1XT5+tmHGt99UPvbOQ1yXKl4+vdG4s1WLYj5Hu6cGTCdbPiQ3PfdEwVQ+ljkE0dlHUz6/HM6/l8VDPirYnxYJtzc+ERwFVlx0Tj5rBGrU+HNUPj4QD+7wn1c+8HH+ke76WD4We4cjVeZVPjjE87/+PU8+lnnJoMa8UD6DTnjew1pYPjqsnAHGu2Q+qABmBJRwbj4Bw+LGV3lzPqx/T7F+gHo+FNbF4haufj7PPoPiaKJ9PgHcWgv+R3k+tylRFI1NdD4Sm7JKUbZrPr/XFfr2S2U+ObOrB3aFSj71KuWYfLVBPrRVvFzPeEQ+91VORY3rQz5eICeCNlNGPhHfgG2TQEI+Z6oXTXfaQD79gJJY5EtFPhM8KG4Zp0Y+TdlC0WsxUj7CsyWfvhpOPhmS7L1ma14+xbnEechvYT40/+4MYjFiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1385\"},\"selection_policy\":{\"id\":\"1386\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1390\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ad1ecc5d-0e69-4ddd-acb4-1a6872dd5c2c\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"4b6a12fb-602f-462a-ad6f-84a441385a71\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"db0df7e1-6081-4606-a011-9e07d86b9590\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"24d25786-9ef4-42e1-8747-c4b72c672f61\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1767\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1772\"},\"major_label_policy\":{\"id\":\"1770\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"dNbCN6t5UD6agOs/5D9TPtGOVccJv1E+pAlFHigdST4+2kfCohhDPjSm0qvVDDc+7rHIZ3GLMT7ycPWSF88kPoyyx6EuSjY+UZ96ieJbKD4zCbtpjrcsPrP4b224HzA+4fB0cD+nPj4YtR51Cro7Pv8J/v9AfFo+94CKGF+GZD4Y01OJY55vPq3l9hFHCHQ+kFvCq+JCdz7AxyByc2F2PsJQYg46nXI+g+VAQjVkaT6EiWbMQ9FjPlNLC/egHV4+k3CwChXpUT70B3WnWB1IPuegCNxJZEE+6VD88EQYTT7KHTygnndUPg5oR5JIVU4+ZPjNgGOsQD6nKY5539FDPlZ9gEFWPUY+rP+ZyVsFST4sOKLHemBMPgamnQ7ziVE+qDNN0lMYWT6IROdNdDlVPijULR1DZFo+jR4p97PFUD682KeVux5YPhVWijs0hFU+I4j6Xt6/YD5X4tE1RZhZPq80m2T3umU+dehx4014gD4ZhTbg4SGKPrdnUXaZo4g++gqCuvgDgj7u/UyWAYd5PpLkQPzEzW0+MWaU3Yj0Yj5kVuDWYs1ZPtDt1he1rFI+BsWtoiW5Tz4rSSaRRqNEPkLS1fpTdTY+vLLXGNjxIj5LeKHiEXAiPq3TSyauyB4+N+mnYj+6Ij5C+NG0AN4XPvuOi4pwVRs+chLsmzTyQj6W9g7TTG52PnbI5o56yIM+XG7lR2s0ij6d6jVzGpKRPlvtmlLAqpY+e+WyV7rklj5FCaaw/WeSPuQtBK6qbo8+123xRay2hz5qn78RayOAPrjQRnA/VnI+LhDtQxmKYj6mU9aZ/OFNPtP6PNXofEo++VeVFrP8Tz5O30gTcKxUPpqVUYYoWVc+a1IcR5PIUT7Tkw5HLE1iPngQXBMkKHQ+W6GX4Uh3gD6r7UHidJaAPnhvmXaQ8X4+hXd+LS3Pez4k9Lm6rv93PqRgoTublnM+P2cZrhTfbj7mTF25hktpPnrBeehD52Q+iALLYFloYD5tgrHlR0ZZPixts9fZyFI+fQLWwgQsSj5AcVnS3YxGPkeH5Zvod0U+mCefNNAbOD5Cd8zXdzdCPnonmp7aWUA+jrd9hcfrOD6QfR9oJ64sPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1798\"},\"selection_policy\":{\"id\":\"1799\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.04, C/O= 1.43, [M/H]= -0.35, T= 815.52\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1799\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1774\"},\"selection_policy\":{\"id\":\"1775\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1769\"},\"major_label_policy\":{\"id\":\"1767\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"1769\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1770\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1772\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1775\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"24d25786-9ef4-42e1-8747-c4b72c672f61\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"db0df7e1-6081-4606-a011-9e07d86b9590\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 95.04, p-value = 6.99e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"ee397677-973d-47a9-a393-8e80f6085671\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"29b1b780-2b27-4dcd-956e-8b5279ce89c3\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2001\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.04, C/O= 1.43, [M/H]= -0.35, T= 815.52, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1993\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"MmZ2/r1UUz5GBT22/ZBWPka8zc7OZ1Q+upMxRpt9Sz5kWACBXVhEPjS3U3c1hzc+J9RKQhxqMT4r79lyhMcjPuLpN6SYljY+v7/LbIkaJz6ssUvu+m4rPpbkaMFw3C4+1+H9xxngPj67cmngBDY8PlZ5DBkfCF0+ejx3cu/bZj6kBUFSbBJyPkKAAgIvL3c+r+TKEQQAez7kIQVvPt95PvAsLL2xLHU+ytxy7x49bD7ERPLttMhlPi44CLHw5WA+t+uA5M1kUz7aCj7IVaNJPnpyEo6B50E+tiBuBrxvTj60cxrsNppWPpAZcyT3A1E+HhAZ+uqSQj4DDRWB9shFPhVr6NmlWkg+wgITrFNwSz4asVn4mwJPPpjG1/dcxlI+ZFXqvU4xWz6M/1D4goRVPjG7HAizyFo+wgRjCo8oUD6vXvJzmKJYPmzTMpGnI1Y+h8jrq7AtYT6QjpweplFaPrICXuegpGc+FgwldZuIgz7s7ApmvdWPPnzvAPzLuY0+s2LtNVrrhD5dz++4vdt8Pn4iUT0dU3A+Apu62JA2ZD4qYX/Y4aVbPhM5tkA2wFM+XelGN4qOUT6U8t/xINRGPla1GTYTwTc+tMyXzFkiIz7iDaBJ/CwiPgPJ+MdUEB0+UeLDNT+NIT7JvFgJJ7kWPsnzraoCQhs+DiZMG9hbRD66g0Holg95PhTXo9jQcIY+slqMHDFpjj58aOPxddqUPlU22paIlps+hrUF8ulEnD7G7gpKr+2WPqXNv06kxJI+gNCIVk+Niz4yHks6/zuCPmrynpxkvnM+PPTXHZwQYz52TutiyGtNPlm+q4K5jEk+5XmHW1qaTz61qW70ardVPqRhQENBRlg+/7Y0iNp/Uj4wUggoao9kPkQ0nFIlznc+CqSvUx//gz7NnDTpymKEPm28ux/mKIM+7PYRMfkygT5+drZR2V99PoAexrqnqXc+Qse6CBaAcj5yUWByJ0BuPqURUaAP8Wg+yi4d/AR1Yz6AFUJORLVdPtpp/OFs4lU+DEcrvr+2TT66IKBWYGdJPiwVAhWfXUg+FelCER9ROj5tHPGaMPdEPjEo9b75nEI+7I/35/ToOz61IID3uD8vPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"+k4YHLriXz6atxD62uhiPkb8GaJv8GE+iZUwZmq8Wj7XYfGDK9JUPnJZ8nORMko+kpnG4K5tRD5Y7pALNR45PuWyX12FeEk+viPm10WIPT4u5W5ra05BPj58P2cmbEM+hk5A7RmyUT5KN33T4uNPPnnu3fB9PGw+ga6Hk7RcdT7mdVNEHvN/Pt8b12Rd4oM+0I4ZGB7thj6sJW7OJxOGPhgFF6HkmoI+3Q3dFb3ueT6DFD9lp310Prr/eZYkmW4+/i+PLdD5Yj7zN6WtSgJaPq7BiCZPJFM+f2zXD9CAXz6ClXBUAh1lPow7AJfm8F4+lq1kogs4UT5ClTuJSLFUPtTLlCrMRVc+uRuE0rFNWj7TwJJf7w5ePjBophW0E2M+yJ3azoYjaz5cl0mvVqZoPgySjQJuwG4+oGBdDgW+ZD72PtBiwEZsPvTDRi4aBWk+NFC9Rypycz5uZKZKp9VtPuf3ALCKzXc+/NtD7s4CkD6wXsgzchSYPjxRxcqUqJY+gGHB9SsPkT68PJLrr7+IPnSz6/gC5n0+LHb9sV+Xcz6tNd5tlcZqPug25QNAnWM+AsfGzp81YD4ax8auFDdVPs3HO8a3/0c+9Gm8kCghNT7VCE7rsCQ1Pk9GAcxJOjI+wNbHCg87Nj5AH7/V0eUrPpCUowUN3i4+xIpX4wEBVD7FNd5067SGPj9CnX+1tZM+D2O4plOHmT71MwALMKugPtA2mTCd/KQ+CVNMvcfipD54cMxRwougPrFUN5Y7g50+fgfKoLDTlj4oBmdyLfuPPtQpCHlmGYM+GNDUilNCdD6SKUu7dDthPlip8hRQ9l4+CVa5c4JQYj46C42pFBFmPtK6j1MHC2k+VDvQjcgNYz6U1DeFrVZyPjnkpLnyYYM++tzFvv1Sjz6NbUZpK1KPPldktPz2EI0+qsMdyTw3ij7pebnh7eeGPiGLZRDH7YI+AikZCsD/fT5dzWiSoJd4PiVJqoR0X3Q+OtpadJ74bz68SdZ8N7BoPt7JozB2a2I+1Bbb7IMsWj4xiQXyw6NWPgg2usjQV1U+4HcNJq+pSD4Y3r4ZAeFRPmdoIdhCMFA+5kY6fWQJST48LKxN0bo9Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2066\"},\"selection_policy\":{\"id\":\"2067\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"1995\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1998\"},\"major_label_policy\":{\"id\":\"1996\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1996\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1998\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2045\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"GdzKeqxDVz6NeSboU1hbPhyVzxDMQFk++ucuGbXQUT7RmE/DcwRLPjXyv6g5SUA+bUfqEUnCOD7vpEXkQlItPvA8Qh+leD8+zAhAJWAvMT45a1G9bEM0PoaTFKQlxDY+59wfNGuwRT7tqYxpaa1DPit8H6J+0GI+Dt6j/TIVbT6Gjgi7eGt2PlpVjtdMYXw+qn3WHAd0gD6o8k5mLpl/Pi7DSZbOMno+EfQLswbScT7tPzqpb8xrPpUN5228MGU+Il4i5jg1WT4ooHK0jfNQPv39lucCSkg+GgKkLfxRVD74NtwkKMBcPhWbqETZYFU+CRw1W0WLRz5qJXl49uxLPoCgSp94Tk8+ItsiknWpUT7NkGKAiBBUPk6Z4Zek2Fg+x0fBfNDWYT4qn2Y0uzhePqPBtpOq1GI+6s95OdAXWD7/46EEQlFhPvzex79k4V4+ZLEV7jH7Zz5mvQRJPGJiPtBNm9GIJm8+cCnvcThyhz6VKAoZh3mSPnvL78MjTpE+aKij2/oNiT5uGzkpi6mBPrIC4fXJk3Q+ffiAH/4naj71bi3FuOFhPpteV5Vm2lk+WDl1Hos2Vj55/eRTQ/hMPmnPGUGCWT8+MIZl2Q5hKj6rx9RHx7opPh1xnkeEZiU+bHOkSYL7KT64JJ+i1oogPpKNtE+ZByM+xVkm+8eDSj4+PCbg8W9/PqVWx8mXwos+EAiyLY5wkj4rRHogu8OYPnbUZLwnDKA+kXa4cO8/oD5Fm9TF1ByaPuR1Jr5kIpY+pSNtLZOckD5WJJKii4qGPr4SUBCJhnk+JaQcAEDJaT6kkauLPeZUPlyPGa0OeVI+yj+6XaBTVj5qc3U7Wb1cPpmcbMQ6LmA+ODNnroOkWD4d9zsvD5xpPp9W7K/+fXw+Nh+pcqSLhz5Z6UYu1M+HPjias8lwQ4Y+m1juOyUGhD5i9/pJGkOBPtu/7hglHHw+cVX+tVMadj7vRowtXhdyPvz+k/qc5G0+NFJbhrJgZz6f8oZxYu9hPjAAdMvhkVo+G+ZrMgpnUj4z23rBeqFPPuQ+XrD8Gk4+KgviQkLDQD5JonyrlplJPiXdI1Xk7EY+vRloXEZtQT7nXVWtKQs0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"E9nDn8vzWz53/RvhL4VgPrYfMgLiB18+bHca8IKqVj6gwcliIHxRPtdC3IbyrEU+8N/2eJjBQD52E9vS1Vg0Pl6J2h9/B0U+0voLaSrmNz75N7KQ5xA8PkLXHotfgj8+EbFfitUjTT67RiXae1FKPvmuRNsO8Gc+t13xzRJAcj4E7YvbEZp7PlMxEXpOSYE+foMoBBn5gz5KPcnSLzaDPvk5iDTWF4A+MYiK2kU7dj7vFpsHyntxPlMqm9lYTmo+yXa+rJoRYD44nVHdZ+BVPtn3jPMc5k8+wHpq5bFmWj7gsw+4CQpiPge6ynYElFo+QU+t47x3TT4PiYmNSJ9RPh6x48fiy1M++MFqFmZcVj6TCF3btH9ZPtV+oUWQCmA+s4AOsV3lZj6Nxz6ROkxkPgEu5fIcUGk+DPvRdmTGYD5PiieYykZnPiw+/JY7pmQ+xVuopmkLcD5Q7u8QPpxoPlhS4rqWDHQ+npq93wAcjD6RrMPNyYWVPn/91QRXN5Q+Sn3MRbf7jT78CNGeA4SFPkDTW0BWpXk+bkeaDqmecD5Nd/CUzbdmPiSklNknkGA+CD5ftj7DWz6nQcR9AyVSPsS6u0CAM0Q+No1VCs6BMT7wqzNsy10xPgOAYLQ5li0+M47XgO0DMj7sWMy3jrcmPuIARgt1dyk+6HBq8wntUD6D2ev4vYSDPneCCwfSDJE+WIhMB15Llj47jGnnGm2dPoR9ob+5u6I+O7eWRU3Foj5xNM8nX+idPnKs0CZ7JZo+GUyhHsX9kz4EACAKoayLPqqZLz9UNYA+JHiymQHmcD66aGAckEZcPij5LimeQ1k+Oil8t5EaXj5fpgmGHY5iPgtPwzDt/2Q+bvpt9ef2Xz47BDwDtqBvPgvT/AoGCoE+zmHMn3jGiz4BITQkIuWLPoyGvFJs9ok++2FBvhBkhz7GvZlAwFSEPnQ6UWGItIA+05rVXIJlej4nrwweVqB1PnrSiNet5XE+0LYc6vAMbD7dYXAyd5tlPrP+57u7E2A+P9SEmdmgVj70K5i8toZTPiwhDPsheVI+QOHMa/wORT5TNvIinB9PPtsbFBqbEEw+H/XNlJiQRT6v3hYchE85Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2044\"},\"selection_policy\":{\"id\":\"2045\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1995\"},\"major_label_policy\":{\"id\":\"1993\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=95.04, p-value=6.99e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2025\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"2000\"},\"selection_policy\":{\"id\":\"2001\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"llpHDbybWT49Oi/VWTFePmnagAlXJFw+s6+kBJw9VD4JjnFEWv5OPoYazhcW+0I+pgPsAb0iPT738n6i+4AxPuvTvdfoYUI+zwEmR8WKND6Z0QEnKio4PmS1mZdCIzs+/MY/XyBqST5U+Nihcv9GPpIVsr5GYGU+X6ZhJlZlcD7FPUpLxQJ5PgBc2OX0eX8+lIB/EJA2gj5PW/iCY4GBPpAbrX89MX0+IT7LRqYGdD7lNjjcAWJvPvQbwaOKv2c+2qXPHzesXD6wHuLI+mlTPuv6ke0PGEw+bT6HCVdcVz6u5z7lDjVgPo6qud1u+lc+pTVxH4GBSj7EG8bJw5VPPq+AxIuPuVE+jc5G1O0CVD6wzN+tHshWPnxLkpHidlw+PeTnFhdeZD6RC7kVTLRhPtL3TcNjEmY+AeOOk0zSXD4nt2ROBkxkPtUWcPt2C2I+dzSznQIJbD7bVfosPX9lPqD815Htz3E+B2LWqBzHiT6T6mZzqP+TPn3kYmS9wpI+2RK4ENmEiz41EgVkx5aDPvlqHhuQHHc+rcNaHqiybT4h8w4tw0xkPnJTQCRbfV0+sDtq6uT8WD4yYNuTklBQPjxRpLAg8EE+TlAId1WyLj7GDx4QLzsuPpB4//1efik+6ceppa4BLz7SvjWtMqEjPjpHfS2HPyY+y5398O0uTj7Re390W56BPskt7+sd7o4+NEh/GvZdlD4z6PEDaxibPv0oA77wY6E+5pYnW56CoT7b59H2mQKcPiuRe/LvI5g+3zcHJixNkj4tEllWlhuJPgmjV8eY+Hw+NsrAmaHKbT4v/QXUZpZYPkJEJGtW3lU+gjSbChk3Wj4KMOIRZXZgPtL1l/oTl2I+05bq0bVNXD6s/TuZYp5sPlv+8mIFSX8+gsA6iQ6piT4thT0pe9qJPmIQOI7uHIg+S90X/Rq1hT6UWkpF7cuCPmGayO2awn4+IvhpCes/eD4Le8wl2ttzPvxoaSr+a3A+ggQ8uNG2aT4+qvvRbMVjPsv+oaGsXF0+LV345fGDVD7HzKoOuqtRPk+gnSlQw1A+NXZXVx/pQj5ObDdnmVxMPoD8m7e/fkk+bgebeO9+Qz5LHrbkVq02Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2024\"},\"selection_policy\":{\"id\":\"2025\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"29b1b780-2b27-4dcd-956e-8b5279ce89c3\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"ee397677-973d-47a9-a393-8e80f6085671\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:49.920068Z",
     "iopub.status.busy": "2023-11-28T20:39:49.919510Z",
     "iopub.status.idle": "2023-11-28T20:39:49.923726Z",
     "shell.execute_reply": "2023-11-28T20:39:49.924069Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 95.04, p-value = 6.99e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(95.04, '6.99e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:49.934216Z",
     "iopub.status.busy": "2023-11-28T20:39:49.933615Z",
     "iopub.status.idle": "2023-11-28T20:39:49.935544Z",
     "shell.execute_reply": "2023-11-28T20:39:49.935893Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:49.939326Z",
     "iopub.status.busy": "2023-11-28T20:39:49.938772Z",
     "iopub.status.idle": "2023-11-28T20:39:49.940941Z",
     "shell.execute_reply": "2023-11-28T20:39:49.941328Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:49.944853Z",
     "iopub.status.busy": "2023-11-28T20:39:49.944310Z",
     "iopub.status.idle": "2023-11-28T20:39:59.141958Z",
     "shell.execute_reply": "2023-11-28T20:39:59.142323Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.163464Z",
     "iopub.status.busy": "2023-11-28T20:39:59.162721Z",
     "iopub.status.idle": "2023-11-28T20:39:59.165354Z",
     "shell.execute_reply": "2023-11-28T20:39:59.165824Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>100.270000</td>\n",
       "      <td>6.651477e-01</td>\n",
       "      <td>5.036118</td>\n",
       "      <td>810.581511</td>\n",
       "      <td>1.455330</td>\n",
       "      <td>-0.371012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>65.089325</td>\n",
       "      <td>4.667237e-01</td>\n",
       "      <td>0.085412</td>\n",
       "      <td>29.157896</td>\n",
       "      <td>0.170187</td>\n",
       "      <td>0.024602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>41.550000</td>\n",
       "      <td>2.610000e-09</td>\n",
       "      <td>4.943623</td>\n",
       "      <td>767.352559</td>\n",
       "      <td>1.216299</td>\n",
       "      <td>-0.411658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>52.615000</td>\n",
       "      <td>3.500169e-01</td>\n",
       "      <td>4.991965</td>\n",
       "      <td>788.833221</td>\n",
       "      <td>1.344273</td>\n",
       "      <td>-0.385169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>79.810000</td>\n",
       "      <td>9.560000e-01</td>\n",
       "      <td>5.027027</td>\n",
       "      <td>818.566142</td>\n",
       "      <td>1.430269</td>\n",
       "      <td>-0.364680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>132.675000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.045526</td>\n",
       "      <td>832.925761</td>\n",
       "      <td>1.584886</td>\n",
       "      <td>-0.355661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>209.950000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.207193</td>\n",
       "      <td>844.633911</td>\n",
       "      <td>1.682425</td>\n",
       "      <td>-0.339087</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000    7.000000  7.000000e+00  7.000000     7.000000   7.000000   \n",
       "mean   0.810000  100.270000  6.651477e-01  5.036118   810.581511   1.455330   \n",
       "std    0.144016   65.089325  4.667237e-01  0.085412    29.157896   0.170187   \n",
       "min    0.610000   41.550000  2.610000e-09  4.943623   767.352559   1.216299   \n",
       "25%    0.710000   52.615000  3.500169e-01  4.991965   788.833221   1.344273   \n",
       "50%    0.810000   79.810000  9.560000e-01  5.027027   818.566142   1.430269   \n",
       "75%    0.910000  132.675000  1.000000e+00  5.045526   832.925761   1.584886   \n",
       "max    1.010000  209.950000  1.000000e+00  5.207193   844.633911   1.682425   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.371012  \n",
       "std       0.024602  \n",
       "min      -0.411658  \n",
       "25%      -0.385169  \n",
       "50%      -0.364680  \n",
       "75%      -0.355661  \n",
       "max      -0.339087  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.175858Z",
     "iopub.status.busy": "2023-11-28T20:39:59.175170Z",
     "iopub.status.idle": "2023-11-28T20:39:59.177921Z",
     "shell.execute_reply": "2023-11-28T20:39:59.178307Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>95.01</td>\n",
       "      <td>7.000000e-01</td>\n",
       "      <td>5.060710</td>\n",
       "      <td>838.588135</td>\n",
       "      <td>1.298559</td>\n",
       "      <td>-0.364680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>57.30</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.207193</td>\n",
       "      <td>767.352559</td>\n",
       "      <td>1.616741</td>\n",
       "      <td>-0.351180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>47.93</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.027027</td>\n",
       "      <td>827.263387</td>\n",
       "      <td>1.430269</td>\n",
       "      <td>-0.339087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>209.95</td>\n",
       "      <td>2.610000e-09</td>\n",
       "      <td>5.030342</td>\n",
       "      <td>844.633911</td>\n",
       "      <td>1.216299</td>\n",
       "      <td>-0.411658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>170.34</td>\n",
       "      <td>3.380000e-05</td>\n",
       "      <td>4.966183</td>\n",
       "      <td>818.566142</td>\n",
       "      <td>1.389986</td>\n",
       "      <td>-0.387164</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000       95.01  7.000000e-01  5.060710   838.588135   1.298559   \n",
       "1  0.676667       57.30  1.000000e+00  5.207193   767.352559   1.616741   \n",
       "2  0.743333       47.93  1.000000e+00  5.027027   827.263387   1.430269   \n",
       "3  0.810000      209.95  2.610000e-09  5.030342   844.633911   1.216299   \n",
       "4  0.876667      170.34  3.380000e-05  4.966183   818.566142   1.389986   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.364680  \n",
       "1    -0.351180  \n",
       "2    -0.339087  \n",
       "3    -0.411658  \n",
       "4    -0.387164  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.225698Z",
     "iopub.status.busy": "2023-11-28T20:39:59.224961Z",
     "iopub.status.idle": "2023-11-28T20:39:59.228641Z",
     "shell.execute_reply": "2023-11-28T20:39:59.229037Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"ece25343-65b6-4d96-8200-3b77ad4f631c\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ca467c84-06f1-4c7d-b134-c3dc9e27f746\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2297\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2294\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2294\"},\"major_label_policy\":{\"id\":\"2292\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"2295\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2292\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2300\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"hutRuB6F4z+oDXTaQKflP8ovlvxiyec/MJb8Yskv7j8pXI/C9SjwPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]},\"y\":{\"__ndarray__\":\"cT0K16PAV0BmZmZmZqZMQNejcD0K90dApHA9CtfzU0BmZmZmZsZEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[5]}},\"selected\":{\"id\":\"2299\"},\"selection_policy\":{\"id\":\"2300\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2297\"},\"major_label_policy\":{\"id\":\"2295\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ca467c84-06f1-4c7d-b134-c3dc9e27f746\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"ece25343-65b6-4d96-8200-3b77ad4f631c\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.233094Z",
     "iopub.status.busy": "2023-11-28T20:39:59.232397Z",
     "iopub.status.idle": "2023-11-28T20:39:59.234382Z",
     "shell.execute_reply": "2023-11-28T20:39:59.234837Z"
    }
   },
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.238679Z",
     "iopub.status.busy": "2023-11-28T20:39:59.238026Z",
     "iopub.status.idle": "2023-11-28T20:39:59.240549Z",
     "shell.execute_reply": "2023-11-28T20:39:59.241142Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.245072Z",
     "iopub.status.busy": "2023-11-28T20:39:59.244397Z",
     "iopub.status.idle": "2023-11-28T20:39:59.310848Z",
     "shell.execute_reply": "2023-11-28T20:39:59.311251Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8dd2f5ef-8bca-477a-9651-7fb98ac8e9f2\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"ba06f39a-a6f5-447e-b157-af702e265220\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2509\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2511\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2513\"},\"selection_policy\":{\"id\":\"2514\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{\"ticker\":null},\"id\":\"2508\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"2506\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2508\"},\"major_label_policy\":{\"id\":\"2506\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2652\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2511\"},\"major_label_policy\":{\"id\":\"2509\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2651\"},\"selection_policy\":{\"id\":\"2652\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2514\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"ba06f39a-a6f5-447e-b157-af702e265220\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"8dd2f5ef-8bca-477a-9651-7fb98ac8e9f2\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.317134Z",
     "iopub.status.busy": "2023-11-28T20:39:59.316650Z",
     "iopub.status.idle": "2023-11-28T20:39:59.375701Z",
     "shell.execute_reply": "2023-11-28T20:39:59.376140Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.390011Z",
     "iopub.status.busy": "2023-11-28T20:39:59.389383Z",
     "iopub.status.idle": "2023-11-28T20:39:59.391983Z",
     "shell.execute_reply": "2023-11-28T20:39:59.392338Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:39:59.397601Z",
     "iopub.status.busy": "2023-11-28T20:39:59.395797Z",
     "iopub.status.idle": "2023-11-28T20:40:12.051434Z",
     "shell.execute_reply": "2023-11-28T20:40:12.051835Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.1458613216876983,\n",
      "    'gravity': 4.765922419230143,\n",
      "    'metallicity': 0.8234666645526886,\n",
      "    'temperature': 950.6932291666667}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.765922   1.145861   0.823467   950.693229\n",
      "std     0.184209   0.142055   0.130717    44.669803\n",
      "min     4.461873   0.848276   0.634764   859.573486\n",
      "25%     4.661587   1.047352   0.737324   920.630905\n",
      "50%     4.745439   1.121472   0.790215   956.724518\n",
      "75%     4.863111   1.231389   0.878740   975.263382\n",
      "max     5.274014   1.451401   1.277197  1048.758911\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"d11d0148-e7cf-4e2b-b4ef-60c40b38730a\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"0dc603f9-14cb-445f-bf7e-41685eacb225\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"y+Km1OHoOj5YjIePUb86PkPomOveI0E+HjALpOZ1RT4W2YugW3I5Pm0qGNmxWks+qjjzn0siSz7xL2tKkCtJPkm++AscVFA+UjAPfY+aUz4PYsk6Z/ZaPuWaaiJLw2A+Uj/BIfsgZj7eN/AI/7FuPnQiCd84RXM+9WDO1i4KeD7X8c2e8eJ8PgnPePUUToA+C0WP57EEgj7cR0w7hiyBPnkv63rCp3Q++CMZnmj4YT4aW/xBxEVSPqferR/u1lI+mH9+b39FUD7wZKInkJBDPvO4zPfl60E+9xV2z97+TD4C+Ru/5G5ZPkT3kqsrLmg+kAQ980JmdT4/6yPxGoCAPn0E7H7yooY+dSRyUlH1jT5GFldpL3uSPuvjsMPNsJM+9S/h3i60jz6xZm353/KIPut9F2RGFIE+8byz50t1cz5sLVMOHXtPPjmWFJlkLzI+3Yb6IIh9ST5LQT8DG61QPmAWNOXTPk4+4jFLS/McVj6uC/pKq5tJPouYqQ0UeEE+rzcXJRPGRz4QDpLwxjBXPribFjcDxV0+lHBF3f45Zj6BFnA+9JxtPuFJETOB9nY+qvZRPeF/gT7pfLjMcQKIPjdWjzqIq48+QZfVOkNQkT44hq2f5nmGPtavTPvVdnE++D8F7/UcWj4FhaouZbJiPlFFole0ul4+5KUSBZYTXD53sUZ+Z9VVPjQIRVSUl2E+ngFeGMHUYj6TJXfvYyBePuh4WOdbumM+3sfT10osYT7y0+QKp55aPr+HmnEmAGA+kcMrHaemaz5vJfBoZUVyPogyBTC11Z4+KFE/97Nscz7TWXdmZjNzPlOXI+Kkhlc+GJUuwKJNZz6Xdd239UtwPoSQ99XOcXQ+PkLhdg1gfT4079fNJ2KEPu6SKZUk4Ik+k7KqqKYFiz5VROb31t+LPinRatekdoc+FjYN4+OFgj5JPSfmEX93Pt2xBzfJd3Q+awps6nvvXD5WKz0nL3VhPiFt2H6DLlI+FE133NVQVD7qmophql9cPsYTddfKm1I+An8LYkkhSj5yVLO1IllaPsta793q1k0+KCMX9h2caT53TX6IDVFtPhLnrgWFcmg+jAju50FNhD6m/iVSJPuLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3076\"},\"selection_policy\":{\"id\":\"3077\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3027\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"jZhTX1XhPz5qFeIiomI7Po5yzLGZAkE+K7nrgh42RT6sykC239I9Pm511FV7Gkw+gFVNtbWTSz6zJVOGUKhLPiJDQg19qVA+k+g4O5SNVD5Qz3Ev6udcPg+qa4qMHGE+qbApJ4cMZz5dswoAhQlvPmOAh+GGfXM+PEtOgymJeD6jfrFB9yV8PpC8hSUFSIA+RAThTMcfgj66IfNwuU6BPrn9PI/l7nM+/lAwYyw/Yj7A4R3HqgtSPup7omzWFVE+ibj3LkouTz6ePbtC3V09PoMVHg7iSUM+LuISTS5cTD7sfawX0h1bPmgoIEfT7mg+W3KpmKP9dD5VcHji/F6APiPRz+301oY+aAfepMLdjT7H7AdNCp6SPqJJeebVVZM+m1owaEUlkD5St1uASSmJPqALh8UYs4A+KTJnC20UdD6hEn9aYmZNPlw3pDWi1yc+8zicZvjaVj4uf7qOtbg+Ptt1aQ4E+FE+CPCCVL1BUj46gOSu2T9DPhnBz2Rb5TY+HT6Yyul0Tz5a46v8L65WPt6wME/fMGA+y49D9v98Yz7/+JKSDkhuPohruEJpaXc+067U0tZngT6cmONgW1OHPsNUSLJ6W48+6hPQkXi3kT5Gv4G0inOGPl8hQvQ4720+SM5K66RTWT4lIog+nIRjPhz1atM6gWA+52cyezBNXj4axQxTG49UPrNoVNFTg18+UEGIQKTPYT5NlENcHh5dPuIkq9l6OGU+C1/ICpTiYD47SJyC/LRcPiEWfcbJgWM+s9mwHSdZez7Opm0/CGF0PsMcYZDCFoc+LB0EX0Jucz62NhsViTBxPoJNbLTVgF8+yDEdcax4Zj4xyaEbvZNuPm/rELuVYHM+fR5stQLKez45vsNFgxGEPgRoMZ3Mgok+gFnmmTnRij7/pqKXrYqLPugI0OoAE4U+67wrJEuUgT6YHKYmZYh2PibG9aOmxXE+hWcs/4rBVj4W4epW8HRhPk4/zbRKdFQ+b1x8F9kORj5hX9i6NwJaPp3qUsD7Mlo+e3Ifmo3IVT6kwlH6II9bPrp0Bm8zuVg+V8VQ3yVRZj6cD6UkSRRqPjLTcFV6F3I+GsZTB9M4iz74XEHDAlGVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3064\"},\"selection_policy\":{\"id\":\"3065\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0/YHZW+cQT6z/thknpY8PnM9DGmt2j4+omspXFBLRD7k0A9tbPE0PhXbo9VKtEc+jEU25ztzRD66CdhQh4tHPi9D/dEz4k4+HjSG5VWYUz7Nn0oACBxaPgRUZdST/2A+x3wwMZJFZj45xphf7AJvPkGVDOaZb3M+Jd9hfywbeD4/7J7CY418Ps4qJEs2P4A+oh1Mazn0gT6b7mwLLUOBPuotnfc5LHQ+RMWXerkNYj4a3dFhklFQPvzJp9NzjE8+PjJ012qqSz6MZ3XMIQNCPolwVB0JLUE+gbSYH+1MST6Dec3kE5FaPnfYAG1152g++SNgATUFdT5ONubydGGAPoFXoF9lvYY+8t59A+krjj5A76SNQIOSPkWERoKfsZM+7fx6FqUdkD5EnS8ODyeJPrUXpFtN1IA+RPj8Ugb6cz4VSn/Vhe9MPlZ+FN/THTc+JPh88MDiXT6dY7FW+0xIPmi3txOyH1c+niY8xhfQUj5VPKmd77tQPny2+ahSjUY+rb+jdj+tWT4pYZax+N5XPq+zxZ9QhVg+azhQw3ZNZT42/uy7/WptPlaDiA1uY3Y+dHvzU4jNgD7L3mm3dSmHPsNfXpxxKI8+zWCLLWRekT7eB+KVNxCGPrOwwfZ/Y3E+bP8WK+gAXD751UYTiNVhPg0hTom+GVw+9i98d1Q3Xz7uqdu7WuJaPlqG6EfiQmI+jMGuKFJKYj45fYj3fZtcPuU7S5oPDWI+6m76QCKxWj6RZLLlGdBYPmg+1r1xDVs+eDuNkO8whT57Vq04nZ+GPpISK0xhNKY+VuuApGDhaz4m2lvfPgVwPtYhL3/hFVI+LERZihF8Zj6Ojk8xAldvPp7r+uFE3nI+hv9WoBiYez5nRmE5hr6DPojwGU82aIo+NdQ1D3wijD5SU1yOr3OLPj1PCdtj2YY+sIDz1RD/gT4FDm4vP3d4PuGFmTfwZ3M+psmQiS5vXz4p5KfjZuFcPv/sOurIVVk+mNApQRo0Uj77CY5y8oBVPhvQwmE8gVo+c3Y7OFkMUD6YKjsaQYJTPsdqhZVCK1M++hBAmH5UYD5tjna/ZCVnPgiv7Kkq8GU+ABGhhwovij6TLUAKPECPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3040\"},\"selection_policy\":{\"id\":\"3041\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"CifztsaCQD42/cFoNuE3PnsQNppqT0E+NlDaUiM+RD7C1udLt588Pm7mUovvKEs+PrTrqNkmSD62lerZ9DpLPvv9iEIUcVA+TYRhnCRMUz4BnYS5OWhcPjq/965LTmI+hZFcYg3IZj7kR+H4+eBvPmPWm93SZ3M+0VvMr6AleD5EfWESSq58PvvETC4zXoA+ws3IQ8jrgT6bbC5RElaBPgvYirJbInQ+rRDwqG+TYT5t7MaMZtRTPo7YgDBYlFI+/K4cQH5VSz4sG26GUX9CPiRO3tIqoUQ+MwB43QBmSz4DgxV6W7JaPvvwXo2F1mY+o/z7ZhqqdD7PhaO9g7l/Ppj38D1Sp4Y+YFgV48ugjT5VYu93d4iSPhabqohvJJM+jTgsqWJjkD7dDDh/TOWIPnSxAPVqYIA+UXipu/Xlcz6Su1KktWhOPglFKQjDjSk+G38x6sbqVD5tw3W0ABZDPrJZvqE0KVM+awA9moHJPz4YmiIrdK9EPsdAHV4EdjY+Rve87uX0Rj796zjUPn9XPvUQkC/wVFo+1XoAFxIvZD7kHoUvDJduPhFAGvCUSHU+DtgOXNhGgT6GDynTNH+IPvsdy4/iQ48+lKaCSF5okT5G1LDz57+GPjLoSqmlom0+PfwO45CHWT5RQh9ICOJfPkVfN+ITGmE+Edo10r7QXT5R6iIKM8xUPunlbAcDHGM+CxNgm3cwYT5tYlOx9VdZPjqGz7fyaGI+PEVwGSotYD6T+1I2q/5ZPoeB1fz3h14+cLAlX/xdhD5eElG9RQ5wPvZpMcbC93A+6M01Lsqrbj6ogtcqOoN1Ph/UnjSUUl4+l1nk9AD6Zz7z9QCGUAxxPofIPJxl03U+Z2ZXmjkXfT5vojvlGsiDPoXbG4yWTYg+iX4eta5Miz79aQ7PpRSKPhZ6UbO8DIc+ELLs86Jugj6bovycFoF4PknIiQSKd3U+fau/7b32WD65rMhuHUdhPmW/ljTskls+EuB9uEwzUz4CE6KK9qVXPvO+b/6njVI+9j8FAitcSz6/FZ5SMCRMPu0w2AGramE+bfkru2SoYz72w3/7nHJqPnmDxw8C1mc+lcIXJq3ngj5L8iFUYlWRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3072\"},\"selection_policy\":{\"id\":\"3073\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XFs5nsO3Pz44KyRQwTg9Phaxbn7eEEE+qzFIVEZ3Rj4Pbs8eASY5Pr432NQ28kc+IJiz7xltSz56Ktg+jG1IPmeeNf8pdU8+bQGphvi2Uz6iT9wkR81aPhKuX+K/DmE+5P/92+agZj4VVM1VSYFvPsKNSGFCqnM+3cCFTFS+dz6ZiZwONUV8Pg8XWZdFeYA+IbuJOSMNgj6uE8c4FfeAPl6GRQJp53M+Y4p3kuifYj7eLLfxlzRSPlWYJHx+v1Q+8CmYNfB9UD6K4Okix9RBPoOZBQqFZ0I+FMjijbVPTj5Lo4BuieFYPlYgd60hAWk+BA4EbAlfdT4N4ezLjn6APhvzgtU4u4Y+SVmV+74gjj7vH/ETZHuSPsGWVzGxY5M+NZ26WxTSjz7woScuL8yIPujzfd2JKYE+ZwE9s9IKcz6/abnW9F1QPt5hpitcPzk+t1Mo3jJ6QT4t5Z8rcyY0PhF1PTN4bEY+pfYT+dh0Uj538jq3QWdSPivaERRfrTc+KO514UXDTz7MrAT00NpcPqKZuT8pAls+E0T1kvYbZT7fIPwOHq1vPnuC5ahO+XU+G1eyYXz1gD655+96leiHPgMxd7+zvo8+IbAfvWRikT5v3+6WLKWGPvcwefvzhG8+JS9aC38DVj6ByhVD6nFhPgQS73zrNFs+SrPaTdTfXT7HsZI02X9XPpdSHNqsbWE++bD22WPMYT4QQymxGqNcPkQbI87PeWM+MwBj7RXkVj7nDcpKO7FWPkJM9H4qQFk+xtUPL+oTjD7q7um9FDp6PkqePrLmyZQ+yXSsuU2abD54YFBYpT1zPmV04ZH9o2A++M1qAcnxZD67qddL2TtvPrwWlw1prHQ+zJZIcumGez7lvDKG5t6DPjnkMgqcS4o+FkhyxNdgiz6J/kjwayaMPkPDcVoV8oU+GLBrzYjBgj4e0tsbRlV5PjX0wJBBoXQ+rKPw22HOXj73o54i3u1aPvloUPGwRlY+DjALyo9DQT6cgLRLErJcPry6fTkUmVs+YyNVMkv4VT6p75hWjDpWPiB7lRemR04+0Klr231VZD4QbVIcuQdvPvqiWH36w3E+Ug8K1FXfgz58heCT8/SQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3046\"},\"selection_policy\":{\"id\":\"3047\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IA6hyPisQT6gxO43y189Phf+J1ROyT4+DVzHWqV7Qz5gYvElWuE8Pk9B+crauko+zO6yzKQvSD4DWLhQwqxJPgL5OFRS8FA+h2B7M1ALVD5ctOrdjwVcPryyWE8H3mE+631kCSYWZj5gmUk3V/huPoZilPskj3M+hSPB1IYteD5wz6Q1ypp8Pjo5tEX2OIA+zxv0iSUtgj78WEwtnoeBPsQFwpvECXQ+fVhgTuUCYj5MNOWU4/RRPs8t5K3n4VQ+LC1pLj+4ST4/pwtqhAk/PhvUhQNV90E+CidbtoAdTT4lkRrujQ1bPnXf/BBopGg+0LWfXw1MdD5XQDD0cLWAPk1bk7nF3oY++5k01lX4jT77SjiptDCSPiTS1QGyVpM+UFy7Fq8UkD7ttaQf/guJPoMdS/+59IA+E1DdLCIldD7tBvmTIIpOPn/YQkxCJT0+w7mt+K2wVz59C2HKY/BEPqUGGRFWulI+ECZoEFTSUD6z0vsH3xdJPs2IOJ/z1EI+GlSwhOuISj7rxzRhBKVXPiUlpsJ79Vg+RVXB2ibYZT6PNO3OJ5FtPjWu+r41tXU+8AZWD30kgT4BZYCubzWIPlYm95T1d48+TyFnLmpckT6Ys7EBlseHPjESMecB2HA+GMTf4LB5WT4izK/GPTRlPoknU6KiZ1w+sRTuOsrTWj4bFfFdBlhXPhVGcyfAt10+GJPSZ8HPYj66m7sNnt5ePh2q34Y+CmQ+vn3ogEwDXj7nkJRqhOxUPt8pdQgGF2M+PLG/b126jD7PKTK+WrBzPtKyZIxZaFs+BI2rtcHscz4t0Er+46NtPhp75kIg92I+FG7r38z3ZT5KKuOP0nxxPvqaTyEcUXI+1cJz/22Xfz4hNS1bVe6DPoA8ryECI4k+nOdGiGytiz4U5Igv9rKKPu2UBboWjIY+DNqGBIFagT5xB29fJt54PvAXKgFKnHU+3NPmIObmWz4RZqb0Y8JhPoCBnF5HK1Q+P0CwYyPRUD6Jrw4OAkxXPqXxJ7NOS1c+xhBojrJLVj6si9DH0yNWPmXhFCjgzGE+UxOkyjAIYz40K1R7CZZlPjmwVEVvunI+OlTX1jWehj5nxPhJ+QabPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3044\"},\"selection_policy\":{\"id\":\"3045\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"OF/TKFX1PD58D9ycFpo8PhJ98iTpIkA+1pEzsYZHRT5jXtgiEt4zPkx0246nyUg+kvqlt9lvSD5Zcq8fTbpIPnat3Qgyo1A+QClCHhCyUz4pSimcKsFaPkc1SYm8r2A+Y0xzFT/PZj5BdDSwZyNvPtpVll6NAnM+2+IcpVw+eD647m3IVy58Po3crS51PYA+HG1EZUvigT7A+2vAS2yBPpJQkCGtdXQ+23a6hSxIYj5LWE6pCLhSPuWvs+dTA1Q+KBTVoCy/Sj52vtZLvFpAPkRMtclvTzo+sHT0HXybST4mNNVwohtaPj8GYpYN32g+RQhkLkjTdD5bc1qcjYOAPreqHu1sxIY+1eFR39Ikjj6RXc8cj3mSPnzac1HggZM+of1MF58ekD60u1TYMA6JPtCASGu/nYA+Cv1iCwMocz6pGMd69mZNPk5zK4iwFDM+zorDO8i6Uj4UIAbfgRRIPjdZ+4WnUU4+E019Vk/fVz6qdPgqpQ9VPmqvcbWAV0k+FUqf5zuXUD63MvBihYZYPv1i+RORN1o+6AntGp/NYz41akc553FvPk2sndeWMXY+adr37KqbgT58igF4YyCIPskNcmmgPI8+nqswccgEkT7rhRHF2ZmHPjmWKQhWam8+ZUwKwNE3WD7JpnNFrzdgPtG+HYiFaF4+VqS6zo3yXj6uOrNY9ExUPhWNdZsOXGA+QBi0WMvuXT486+Vz3UZdPlLSEbDnEmA+i3zv03mKYD796Kek7hpdPtuCz6jep1s+P1VCF8Nkez5UrqgxskJ5PhmF+lkKOXo+HT+Istdnbj4+MwxtjvZwPtQh6XAinmE+lgmSd2Rgaz4YzZhzDqZwPv2qLmbBUXQ+bBK/H2juej4WUSDMyweDPstcPuCoQoo+vX70IM5+iz7v/68xx7eLPvsHk8o5gYY+jrn7NGQ/gj7Mp3LBxIB4Pkh8QSRABnU+XbKXggyOYD7F8h1MY31iPsM4jZmwJ1Q+V87g7aYhSj5M84SfRMJPPs3uevIxj1s+kpd5q9BJTj4tqHmXkrxUPqm22KYf31g+tMkFULFCbj7571NfF/hrPgIKr/OfaWc+gUejWvNfhD7wJEdcCLaPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3062\"},\"selection_policy\":{\"id\":\"3063\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"KUWHqMVUPj7vKkBMa2A6PqjMf2Efdz0+zPTZ/lPJQz69zY47t2c1PoO5+1gu2ko+5y+xLpH4RT70K0BO8KxKPhE0jXwnBk4+5lADwXeJVD6c//54ZrBaPv3rZcXPG2E+y9lNqUdTZj7UYETqEhxvPmBFL05EMHM+BiLsRpsMeD49zt8cimp8PrfQ3Zv0Y4A+tWjZfGDsgT49XR+fljyBPuQndb3iknQ+8C0JGwb6YT4P07dQGKtSPrzAUsnoCFE+/qSJ5XZ8TT6tmsyr+aJCPsqyXpZ+qUA+wnMaU336Rz6DWPdxuz1aPohpFgU0GWg+hEXEEFrVdD7LwAb0vlaAPgX1IyS4n4Y+M1iljpHijT4CSp50PHOSPrw6MMCLOJM+BNV64vvgjz6hOrjpKP6IPjCIU38bKIA+p/Xz+lzqcj7ArML2qhFQPoERK2+9KjQ+oDZIB/mYRz42GgUB+a5BPtMA1vTna04+SHX3EwakVT7gkbXGSJNSPqTGgWP7c0I+jsHX5XimRz6K4apR38NWPqQYJ/uQol8+SMIiKnQlYz5HUNGe+1luPv/gaGRo13U+jSN0VLezgD7X/ANsaQaIPlY8fpSCGZA+nm/l97e8kT7Iv7XfW06HPi98UNULaXE+w6ku7BXzWj71zX5IftljPrnlfi5UK1s+bMfDbx5MYD7l0VmHOd5UPphOy4fafGE+ra2X2IeAYj42bEfoJ1ZYPjBoH3O532Q+oQSnRhz0XD4Hp/dqMtVRPsAm/gfXzFk+RVcAqAk7dT65bYhjjCN2Pmw+fdxEVX8+lPyBVcXObT70o1mXhM9kPkItm/iYDmI+ESlyXYmbaD6fsPsu/6txPozjospKKnU+5CRduErdej7CzoyciayCPugHmhNaiIg+2Dr0aQ8njD67r9aGiFuLPvIalVNxNYY+9nLn9qEhgj6LQNXpSIR4PogL9fiomHU+74im47MJXT73eUcpWThfPmNnoHBqHFo+PwHV/jgQTD4xLTIv5p5PPmL5i95bnVU+gkXqOREpUz4vAG6teldYPou1949bxVk+c4uTtpD6Zj7pkpc3Lo5xPrkYco7vzm8+5/cHvrmPjT7RzbcMDx6QPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3078\"},\"selection_policy\":{\"id\":\"3079\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"eSj23GASPj5tpVTpIeU7Pg6aV4mvSEE+GP/hYXkcQj6l/2cZmdQ6PqhDOzCSgko+6sHVGH1oRz67sIVxFvtKPvwbvKPHKVA+H4dvZPzWUj4YCooJKstaPlk+6sTj7GA+n2o+qk5xZj7hS84xALxuPrgvUzXqknM+MqcgxkBheD4xG1DZZfl7Pg2cn/KVRYA+NTxiL5nfgT4Kej8i/iOBPitpLqhxRXQ+22Sn35t9Yj72E3ezVK9SPpcwTmUAsVE+IosCel1JST6OvWkgvRo1PtE7d7hXVEI+UbS2gF2PSz4cznpMY+5ZPkisxBmwIGc+3PeTs9yudD6zpSdsNTqAPk0ZMhdFvoY+GpQWKgkMjj57jdGR1H2SPtPKiyirmpM+5nnVCKwKkD5tjrd1hS6JPrgr2lEn5IA+5Wh+E5rmcz6fIqi9wzdNPkwFXZ2OLic+x7uhlsSUST4praLObs1PPkd6Uv86YFc+Bd70Uxm3Uj6Dqv378o5GPsthUmsyaD4+L2RfxEH8UT7+rgU3d45XPgZZvpK+il0++yBHp4tNZD6QVUGqVX5sPrDCngFAIXY+IqKkXKMjgT6yJE7C1VKIPjJfRgyN7Y8+daqzvAK6kT47ct8OEsSGPrLGfM5GV3E+rKSFisMfWT4KuFRYKghkPtCN6IVwXF4+gdAEGHdTXz5pF5kA4QFWPr5fTCjzT2E+vYjCVWNQZD4qYJWvKcNYPknwAwG21WE+O3FSwXB6XT5ONSN134xXPvPyIixv31s+jacR15DbfT7/CTn1ASCFPlPdKJKBK3k+zD1xldZUcD4DWgPiVTpvPrKFgRDvLFw+772L6bmaaT6igfEQMW1wPvJZTXSvZHI+D99sDDngfT6dinA9UBWEPpC5305fj4g+ytjADgrJiz6tnXJ5O9mLPtMtDxb73YY+eq8v6FJWgj6yv5OzTAR3PmqwANn7XXQ+ezl9zmOEXT55E0Q/DHhcPtUXsX2MfFc+D52A2Bw9UT4ZUxFD9LJQPtwlKyFc8lI+kYqcz0YIUz41UZ+Tlv5WPvheZSHtN1s+wW6+0Pd/ZD6X/3F8XJ5hPlw2kqLRInM+LN/qYMzhiz77tfh8+Z6UPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3068\"},\"selection_policy\":{\"id\":\"3069\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"QQ0klvWnQD4cOPaww29APqYXwyJOJT0+HX+5m+1GRj6iFnKUO58/PtkPrALYb0c+o/u9qmeNSD6ctgkySBBJPty9cZ3xmk4+U0cGgFDEVD74yKYGifNaPnBZAA3AA2E+qPoBeBNvZT4kgl4LX0tuPjbz+i0AZHM+qa8ZAsX1dz67GhK+qYF8Pnb0/FvxN4A+2lwC+jb0gT4NQ8tgW1mBPuZcECmb3nM+i6CLubNcYj6a10GAY81RPgM20AxA4lI+hTvh7pSTSz6PpSRE3SxAPmyfNa10BkU+eYxqIhX1ST626A8kLhZZPi2XUCE+12g+cJv5517/dD7/xH097F2APtAY1/IekYY+rxOYrnD3jT4Gv8yWdoaSPrtQDQ0RjpM+6Fr9Ir+jjz7CdfE0GxSJPjW0FGakF4E+rl495VBkcz7IjCss5xhRPjlFhBNv5jY+u1xq4MGdYj4CLC7uZAhCPk3n15FQIVE+oH2+sZoxUD5mDA3J5rJRPoGeNiDEakA+S/UQ6hNQTz4ZyyBQZr5cPkFDDS1+nmA+1SbHVAUIZD77FFMrXeZtPgU43LZYVnc+01s2C/8ogj5wkkjuJnSIPjCiKHACsI4+zO1PGKFjkT53Vh2rnaKGPif6gDD3+G8+k/4iDXB7WT67yHP/jhBjPvBXTDrvRWE+0EoQDDCXWj6jz7LRz5RWPrOsnHXUJmM+w3KOgnmrYT4GKhVvb2BbPusImPTLeGI+W04DZoSdXT4iPpBzMbtZPrHk/vIDX10+BhVguYhCij6TZeBLYyl/Plxfo+PCsng+KX6MnxricT5rDfiEtLluPrELxCxfZFg+FL7zobxhZT482gc7KBdvPld6xi266XM+v6R3bA+JfD5Bo865/qCDPl7FoL/0MIg+YukfpERViz7URDildmCKPn0OEG6Ah4Y+YrRM2suygD46VBoA1Yd4PoKsEt68dHM+SeQcegS0Xj6ydAub70lWPpv1BDok3FA+nsscMGiyST7x7EcAnzRUPkIvI0USYE4+Df+3bypCVD7FYOabiFZdPkgRN9+zul8+LsaIwNvrZT4h4kItafhtPpZcOLBvpW8+E6NR9CcMgj46HGf68u2RPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3066\"},\"selection_policy\":{\"id\":\"3067\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"127arWn9QT4NVOqHy2E7PjfnNZr04jo+vblfLu7PRj5KUIXaeHk/Pt2SprSkZE0+YSa1pB75ST6na7xBfu9KPqieBP5ulU0+klF3mCvvUj7EZrIxISVZPqfEVIoGz2A+5fqoNcFoZj7z28xjxQlwPkixdtXn/nI+vdBogkf0dz4Ut3hqiAh8PmlQnE9SOIA+s9FYAjq6gT6Q79b4uCOBPi4XM3juE3Q+gcJBcq3gYj7dUM6iNkdTPjbp0q/7FVE+mQe5HDCiTj4abfCH4QBFPhSABJhJW0Q+ZwS4GOTQTj5hkgODARhbPrbIf65aaGg+7spO7K2ZdT6DNBXvDft/PgOnw3/pYYY+gic4JuWajT7JCH7Ch1OSPmYr92/XW5M+auMm93LPjz69/PwvheiIPiuoGfx66YA+FSe7lpFpcz528SZ1/mlRPhvul5rbmTE+CnOjaf+CUT7zb7Ns+gVIPh4vu14XsFk+3gAEC6bVUj7YDzkP2IBOPjysqtQUaz4+kvOO3rZpUz40QVylj5dWPvrJ0fpDdV0+YS3QvYgiZT59NEqx1rRvPj3TBpZ3wXY+BZqgVU9igT5HFVBAq3WIPqtu4W4fUo8+FxEMvidTkT5nFajW4ciGPhSFj4LDuW4+cqidu6+jWz5ur7Z1LdplPjki0LEmdlw+VU7+Bv2TYT7mgO4Mb3pVPoaoNpcOXWA+nxj6/2c8YD6E3Plw3lNaPiBcMFoOtGU+sVSNNqX1Wz52OTGQWMNbPlqi38O1sGI+VyZYWJzbgz5NZH59l3dxPn8VkZPWAIM+Sxw0Cig/Zz50GgQeuy52PoRXkWF7fFc+K/cUGpr8Zj41U2fp6NFuPofwZH2p4nI+Nfd0JNKpfD5lLgupzjaDPoJ6Re8X0Yg+1h1VNkiYjD6DNT+71mKLPu0w8dBwoYY+YnM0McrigT4SguMkt2F4Plx3Gmf0wHQ+MHFMpb0XXz4k51osWONePpAWDWuyq1o+A6JNuHDfSD5V1IN5uFVePqhQoT+r31U+5q69o6nHST7hfkKxdixfPlqyzDO0eWA+ZoyHpE/1aD4pNGKaCPpqPpJSld6vtWo+K2HToiMdhT7WjIgbGkmZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3058\"},\"selection_policy\":{\"id\":\"3059\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ChnHPwhaPj4DiJ4qkSg+PiFqnBCP3Ts+j16FBnTdRj5Q3J7ZOGhAPtwSNDl+kkc+EWnkQqS7ST5y6CfYzwRMPragDpPNLE0+4rCy4rD1UT5KAhB/TsZaPsf1PDIii2E+QxYuCu10Zj5wvLYrg1dvPtFkvMNmiXM+ahF002DDdz4GbVdN8b58Pn5u/Wb2U4A+1KXW1WEHgj56xVWeJ2iBPlKoZ4JoHnQ+7BFmmbDDYj7mgD040PNSPjBZNa2lRFI+bfKDPL6GTj4/gWmAZYxIPtC+vOWpAEY+1yYtWHthTT7jA742NgZaPvloLXb5KWk+U1n0YTRudT5y09Qc6QCBPtu6SkHSVYY+IurJgz3LjT7hFP9NE2uSPkPu+ogJTpM+DNiQei+rjz5zPyZsaQSJPp3I4yiys4A+aMScbUJ4dD4obOru0h5NPr3b5B762Cc+s79UTF/XXD42lj/DgfVOPnSdQzOItlQ+VlMeC0hxTz5eZ7W2wgNPPjCpfbPDFkc+bGPxWe0JSj4xvcLejz1YPme186FMoVo+FRyUK7V+Zj5w5fw19eRuPoyaYbqIhHc+4PjO8G9DgT7pUI+g32iIPjvW736JKo8+ivpBVc+7kT7NAD/C4rCGPnfKHPf0uG8+N72oVb+dWD5VXKHiRfVkPgzpE4/dCF8+Z/wj0hdWXz6S8sKDjldVPvnDKBpesWA++EHVf/pcVz49UDPxWdRZPiu9Kca8e2I+Oi36f7qrXz4cwdPr5ntjPnnCa9RS6mA+xQEdkKrNcz6byBCjirl4PpYaT/S0gH8+pMoWFCSkbz5MFZFmM1xyPmd4u7am1U4+zNK6tAO9aT7YTstiUtNwPs8KjBV/eHI+BLKGIikTfD5X5op9FfSDPvm+1P5pQIo+9hUhiV7Lij77q1/k31SLPm880B1GoIY+5INdAVDggT44fMo3x+t3PinX0IsFxHU+qU5ngrVzWT7CfL3nA5xgPvKA/DKdmk0+5pMY04g3TT5WlqTA4g9OPpkudOb/0FI+An9Sn+G/VD5xVug8zkdYPsVS58XxDFw+LcQZIJaoZT7s/1haQnR0Pvr/B0/kWXg+W3oDaW7zhT5MfNPbnxCSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3070\"},\"selection_policy\":{\"id\":\"3071\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"1DASfM7PQT4f9O+NOck5PvO1hrSRFEI+WMDRUkF9RT7jjZVERjQ3PhFS/F235Es+W52F6mT6Sj5hReu+WH5KPqZohrwW+lA+yZxN5W8fVD7sXncfIbNaPoVCeC3DvWE+7n1W8jACZj4X0AsZ+LBuPp4E5RJItXM+nzOSqsH0dz4hEF9BM2F8PgIv/IePJIA+vbNS/iblgT63Vwgh02eBPin4b6gzVHQ+9BEZa5ZlYj5ZcjVXGvNRPqpGXkUq/lE+l/b1vlReSz4kDLbv9F5CPqOzmMmjVUI+ONws0eV2Rz4vs+FyYGpaPsHMA5y9eWg+YbsBNwLydD7aBRvCVWKAPk/Gblw/hoY+qHIGFLPijT557eTe1mySPmyo9OalX5M+c2Iwm60ckD6abYo0bzGJPjxJFc785oA+53oNJdNNcz5+aUZYEAlQPmqosuaSrjM+3SW3JSFwXz5UrevMnLxJPgKnQVlAhUo+3tJaH1e/VT7oZra7f2pIPhefmBJEnzY+tiYNDXjlUj4G8o0/DGNaPtYwjVRrLl4+1Ed4uzBIYz6+oqcy4thuPomTipvcG3Y+ZK5hkhsigT4eaA2MmcOHPvkfdGnXm48+GO28w6CykT7gW3WCv0aGPq6+vOiwTm4+Q2sRF+ucXj4wFdtFvTNjPsJdnK7ymWA+r+a/l2fyVz6KzadlnOJUPk2QYCF9KGA+XuLNeIbFXj7BFSPCWfVbPonKKgn3vmM+Lp20vKWzXD572avc9VpZPnMZNF+wQVQ+FJjEelLJdD4oqU9nhvF0Pru7+bR1EXQ+WqgE9HQibj5hCHacTXxxPuRICMMqd1s+FESxMwfAYT5GQz5BqHVwPoi0rM75uHI++jJBxcedej757tKhQQSEPr08bEay8Yg+TZR9YKmkij5dm8x+e8GLPmQUQ3DcnYY+GHleZm6cgT4KY+R6ULZ3PohuyQ+kFHY+W8RqMEupVz7fFsqC3i9hPvkfIQDB400+EjDzwI4ESD41fCJDLrlYPrxL5oeWilQ+na2ObnVCVT61Gc5J5rNQPp0aU+axxl0+KR+9OmJScz6Ju8NdVihtPhiIErw4enA+Ubht4dxXgz5bWAa4FnaRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3050\"},\"selection_policy\":{\"id\":\"3051\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GClg1/7sQD4XRPXvhI46PvISKIV5PkM+/sRzsAn2RD7UPJNIL1lBPpsXTtub2Eg+NnPQ2/tCSD68iajHX81IPoabTuWemVA+sS+jRPHaUz4gcrUaud5ZPjHscJRE1mE+PLmFGKdzZj46JhKzHydvPi7FuqWsj3M+3Sn8xx/idz4/q7lYmCp8PuEEU44yVIA+OlLQpEupgT5tiO3VUgqBPl3a74phsnM+ZPMnZRUYYj5n6JDhByZRPptl9KsAt1A+IP7hcp2tSD4xvHPYjmxBPghzmj22Y0I+MGQ3LRGWSz5W9B6+U/hZPrHDltiC0Gc+Hg1P1uJodT5omOBSCmmAPlw+1GlSu4Y+iiBeRe0Xjj6APlI85W2SPlOoJegreJM+LCDFQN4dkD6Hm2p/wC6JPmqmUdmagIA+kBLw/gCAcz4Zf7RvAFpQPuCWfcdb/iQ+nMgWhAwYWT527Bs5GOtTPsFHF1rc81M+mQpEq1HfSz5JzoTYFVdCPjyS6zgm1EQ+HHUKfoAJQz5xtk0330ZaPkzhsfoyuVg+twfLmDQXZT79mrMI7sdsPhjD5Y8GkHU+RXidvN4EgT7i59BmMiiIPlzlczv1yI8+HoKrfWKCkT5JLBjwgaOHPop9Kx5nom0+nl0lnlPRVz5axTw7h2xfPj8uDC+Ixl8+saouo4taXD7BRdkOwlRTPk1MpRK8vmM+kkEnQUHpYT5OG+yYIsxcPkQUnrIChmI+l7NBDAqpXT76U1hcEKRVPrZvRJ0F3Vo+0XnBeoCxdD7c8XitQ1p2Pmgx4lLSs3o+wg0N/lLSbj5YzcFrUs9zPrh6mNYfy2E+3Nms0szRZj5+Tt8goCduPtTWdKiqwXU+METvtc08ez7Qak0tC5eEPk/BgHglFYk+ELV6mCfxiz6o4An7WLmLPndxs2NUc4U+Z9TTjZbfgT4EIy36kEB5PoLP7lHHK3M+EL3w99z0YD5lFNgQDIhdPoYrVL1Tc1M+3N4xCBNZUD6s3D0nC8NSPldvFEyK+Fg+gkSVZebjTz7hHZXhTFxUPh1qtBUWZFs+KrGvbCuVZT706rUazxhqPtOWep0etW8+3faRTW2NhD4wj+Xf4ySPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3052\"},\"selection_policy\":{\"id\":\"3053\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MtKdP4hfOj4PygkTq+06PkeGu2dDGD4+rlywfh5zRz7LQ1LgcfZBPpZTdlZ1VUc+DH5dOP0fTD4heSE3frJGPmhuwV2mBk8+Ad/V6icLVD6O4CjyOllaPu4PmtEjymE+M5JIMLRtZj6yQFis4qBuPt52V2rEVHM+bIZ0FmRDeD5tczGDBK98PrEe/ljSPYA+2ILzsBwegj7nv6ZYGEqBPondMs8rTXQ+5b33VF1MYz6HyoC0dF1TPv7CzkT6H1E+jAsmu0ffTz7ijChE4AZJPoMr8KFttkI+3IGi4PyDRz6WrKid3SVaPnAsyrKZWmg+h1obJvGMdT4loz5AcEyAPnbtHTDqt4Y+MChlCHPMjT6k6EGWfSaSPmoa6Ne1rpM+5K27yqNEkD704AuRSmeJPvoT6Bu/YoA+v79kbrKzcz7jcxk9oO9OPk7Vtku/DDY+aulX92/1VT59Te/waXpSPoPdUocTp1g+9r4s2Ew0ST6apx9iAhU8PhUcoccIKEM+UMnb3vPbTD5DOQBWKPZaPrWaGJJk6VY+CdLBU7zmZj6OEJNgV35qPnJqQaQE2nY+pTn3eTSygT7kqHAIid+HPhu7eQk6o48+hW5itGZSkT662YSBI02GPrqWGSzFknE+gaEDz2KnXD7sgat4S0JgPqnNepT0h1o+sjs3lWD5XT6yTfzXO4FWPlirpj2yaGE+3FjL0NdWZD7yfULJjFVcPiVUklDxDWM+61vunrVcVT7NNbxSy/NcPtt8U1h9CVw+//jghiZNfT5VCiOuJmODPjzojm6gZZQ+fT1K0mHIcT4y6fkBGSt3PuXSOJuwCFQ+kTZnsTOUYz4OmRFJ4KBtPpkeZswW7HM+6oMkp6lnez4QAalT0kuEPviZ0uwXy4c+WhC75rruiz4V0Je8r3KLPgI0d0HdOIY+6G71a69ggT5lBqdZsvp3PrsRGyxWUXM+HOORymqRWT6xVYP4wjRfPqYBvdMn6k4+BTonxyNHRz6mZmH0mtdVPrYr2YQ1pVo+BTTSVK+dTj5NyhGdbDFXPof3D8cxPF8+i1TPCsbXaD6+6y9GqwNyPo9kxqkgrm8+c+LLhAMojD6wC6rhlSqTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3074\"},\"selection_policy\":{\"id\":\"3075\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"sxYYv2ljQj7RFd0yfY0+PneVJ6sEA0A+G/S+KZHaQj4LmM9YFqs3PnPnUOxZHkk+KtibVXpqSD7xefyJn5lLPlJgpc8Ysk4+3TXXOKTgVD7pbOxieSJbPv7HPF31AGE+mfZkOKliZj6Bfj8CQpNvPtrYbsX36HM+1Z6GvAg4eD5Rl29rEjp8PvasFmUOMoA+1CXKcjQPgj5/vrX6bTiBPvbX5YGQk3Q+2nwJRyTGYj5xvTPJM2lTPpfvDs/14FM++ynQz/4BUD7KECY7xmQ6PtYnrqwqWkY+ZQFxG79XSz40BoLNWzVbPvpU9e8eHWk+v5zL9NWZdD6Tre5iGAyAPipgLNg4u4Y+pZksZkg5jj53JD2T8EaSPk9fpa8jT5M+8qYMfn5FkD7idgqcxN6IPgQs5AiW44A+Lx53qRBocz4JrAyVXAxRPu+aY36FTDw+AvONjsM/UT5BaHPTEPFJPg2KXDcrwz4+zxGQZR4lUD5McA6ypbxMPrSxoMCTizo+VDrAiMuASD5wTKX9DydYPpspMmaR0F0+2UDa0u5SZT5Z6QRCU95uPgBkU9pQZHc+SCr8AHwXgT5fLxMTY+eHPt7YOEa2XI8+j78kq6LokD6X1ZGkWJGHPjHao6m0BXE+YXLR6uOjVD76V30VKQBkPr1jJTk1GF4+JFGXM4E0XD4rLMIv5JlTPkQXashvZWM+ilpLS/GEYD5hMOSkZ6VaPvVFQ4hXDWM+JAYSoMksXT4Mwk6/KIdhPsnDsuNf3FQ+HSUJao4kgT6DpuRHkdqDPhkPX3fdWZU+mJkgIu+6bT7Lw0JWiAVxPo6sdrnUKFc+3qkZiTGHZz5k0xX9dF5yPj4wE4bbpXU+QidinGgsfj6SPY+E+aCEPog9nW2F14g+PmIxnJlciz5DAhb2cMCLPuyh6Qjpf4U+K2a7QkQLgj4l5DDI+ON3Pg9V1WiXynQ+iRm5X0LzYj5Qx3JZSR9iPq7UppgEv1Y+viDVzdJiUD7P0lUFB2BSPrd4+QvGuFg+h0N+eUKSTD6UEX9pWKlVPoliBgbZ2Fk+pbH/5q5OaD5DaP5AZlNnPiluuKDUiG8+gqpjtBechz59zuy15pyRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3048\"},\"selection_policy\":{\"id\":\"3049\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"WSu1bhmJPj7gVXgod/I/Ph39qlCJ+jo+rn8FdtG7Qz4BAobqmn88PqDYrtkzyEg+3+u+70/ySj5qPjhEcl9KPuDRqNBlulA+8cf+8uBLVT5QiIjkVjBbPmmIeUjVNmE+RflA+hlQZj7QF3tdtR9vPtQ+KZQwo3M+qHPGrky6dz4n4TbHAmR8PuJLGopWaYA++hVH1sUvgj4+TUDnYzCBPtF6toWYnXQ++mfSa9UTYj42LUBnqEhUPpEdK3qDn1Q+8gkfpy9RSz4idQ57UhJDPgO508bSa0Q+5iU65vd8SD7n/YljOBZZPtaUTNP1NWk+WrQiR8EzdT5Zs+p5P3WAPu2GMrfkVoY+p98vEJjSjT6gHoiFMoOSPr5+XU0dSZM+cGNg0P0akD6KHKiGTX2JPlM/oefpjYA+CzDAVVXncz79AY2QAaxQPoRE3J9HQjU+xTZlUDqLUD7fpIoVZd5EPos/yO8RI00+DEHYlvoBYD6DzkEGPJxFPqvNISaCAUQ+bUJC77IcSj7WcNMFJ8pYPrHxpUsRLlg+KeBerxfMZD68M8l+ysFsPgLapNDSGXY+Ke4iOPvegD69Sd4m7qWIPlYI+/4R548+pd9E7uuLkT7T+XN9km2HPqHQ3Jvl9W8+OtVrzfN5Wj49R5DCBNliPvhM3JzmF14+mYOiqeKsXj49jFaOwMNZPkdklt/LLGE+zFBk0HvgYT7lwNnFIXVfPoIUhGUmYGY+HPCa2ScmWj4izIYesEZbPm7DWTo1VVk+z0kJk5hTeT7g8c7BtKx5PtOcQ2nD6Y8+kryd441rZz5L9YwvAbBxPp4N3qRRfFo+xelPmcMkZj5FRAzzT0xtPlposHqtgHQ+YtLu9yi8ej5rXXuLpYmDPq4InM/Qx4g+mLsCSbRzij5+Wn1rsuSKPg7dFaGBTYY+k/1WjvURgj5M9c5uXax3Pjry9SC5eXU+1NZfiyELWD7jLr/XY7NiPsty7XWb4lQ+l5eqsRexPj67hYlaPHpbPnWIJ2EP+lk+Z9J60TGcSj7CcIpy1wtJPoVAFNyOvVU+QidJJ8B5Zj6tlTE676lkPnSaKXtUAm0+4zHemN0EiD4qxLzNKJ+UPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3042\"},\"selection_policy\":{\"id\":\"3043\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Wxuc29XJQD71XSM8PHZAPvvmSODeYTs+bsJWKHa2Qj619MSvcak5Puj6yhJgJkg+H5Ifa62rSz7TgDxLv/tKPgXENJFaDVA+f8xy07pgVD7VaZTCLxtaPkE7SfPPVmI+iaAfm6ZcZj7tbgmeB6RuPpuZRxU5iXM+LjuCg++mdz67GXyc/Jt8PigeMLFFPYA+ulS5NB4fgj6nDxHfo2eBPjqvLv9wD3Q+J4E7JI6vYj49QQjqlkBRPrJ1fcdGvlI+1fwcsEizUD4JpCfTw2o8PtXDexk56EU+58GavBRMSj54gFGg3SVZPo++7hZrLWg+aR311jowdT5k8OD2Zt2APs+TkuE7hoY+LfvX1+OajT7e4L3VCUGSPrJAkWUCQJM+BfhtSx1MkD638LV3ENKIPraaSP3jAYE+ufUirSHocz5yCql+/Q5QPjDbAmQLUjc+ncHnyD/OUT54t0fgTRpFPqxnpAxEdFg+bodQFbb0RT5QH6/hC71NPoWHnRRviEs+urOsQbt9TT5GGe1jQoFbPiPFF4Z9aVU+rWp7ughMZD50Qy4+E59tPvy/vgNtQnc+O9ZoMyvDgT7CRl2pA6WHPhOImGh4r48+Blqg2rSfkT7m9XWyoRCHPgmOhhfIVXA+Gsfq69dwWT7NY5r+EINjPjEkam8sZGA+XyNrc+erWz4g45SsZ0pRPrNLN/kKoGE+zTA9dfvoXj5dY+aSu61bPk/9hBW7VGQ+LV6wYTrUVz77/qdmvZdePleV4JTYiF8+dytLK4ZLfj4JK5J9QYd0PjLGWuF0C4A+RRKoHUXPcT5/rcZw5EZtPnD04WvYBV0+dcJ4K9Jqaj7lR/Pul6FvPqMn+o8+eXM+AJcSBalWez6H1quo8YODPhMMxi7sbok+XjGaSvZyjD4Xyfm1StuLPjQh7ZzDw4Y+YlPApWa3gT40uw1zzSF3PgJnAPgqi3Q+LJHBjf2TWz5sK6fcV5ZYPg9HG4wTA1E+mDXgkxCdUT4+JeOoAphSPhr/OOnW1VU+DewDlqV9Vj57q3mQuopPPjpleh0KvFo+zQKvasWJZz7XkcApZoxqPnEldUcVI3I+PLurmcYuiT7BjcW30x2QPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3060\"},\"selection_policy\":{\"id\":\"3061\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{\"ticker\":null},\"id\":\"3029\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0D6rI01UQD5o8cuWGac9PgqfGYhyE0A+GTswXWmKQj44+S3v5no8PkYuuqZuwUk+zYgCfrCzSD6ZnKHrT8VJPrXDT7ah21A+gG3A6oNrVD75LnauzalcPlvOQ996I2I+ER1j5DuOZj4Kxlchpo9uPvlWbK4yxnM+4H9Y2ZkYeD4rSkTAclR8PtDsFKytDoA+SaY57DYIgj6LOrYfxk+BPgdUdcBc4XM+GC1VLXmaYj4vZ5ThYRdTPmGWM0aoJlI+/O6+pyZBSj6H1hspLhJBPsSjcIE0kEI++q+SveW7Sj7UebmBWqhZPkxcANUScGg+LLMbwwGEdD4XOhDUNy2APh7hd6XpioY+Bn/p8+jAjT5pclEBJR6SPmpX0VGvUpM+6gytTRkykD65omcE9BiJPulRmf/99IA+mLkW+c46cz7+aR8Wp3pPPtpAa5AuCyk+TGTUwvHLUT6WbGNPXhRRPqHu+JWb/0M++odkE+AWUD6Meh6IASVKPjSIET22Qj4+iOm0BN9lSD4yxvLYrq5ZPu/fol2jDV4+RtHlYaAaZz6vl+VwCsRsPrn8mjStj3Y+QfxSKlemgT55MHV/gy+IPtSOLfKJWY8+xe6ntPt5kT7XeYEa5wCHPnqCSGySoHA+vCsDmz3mWD6WGBGj4ahkPsNT5hoA2V0+aT5yv3OvXz43dcOf8BBLPkLTmsVVGmM+D617LWSrYj5PMw2cRS1ePtz3M7vPqmM+FhemuAP9XD6u4EmVyGRZPr0m96xk/10+BIvNBpQvfD54Ei2WDa14PjrOluoEgoE+cnNVkREcZj557hiXxjxzPhcrOxhmR2I+dDdMDIC7Yz4XmubvJlxwPiDuaSzUlnU+EjnItfY3fj5yJsaz7SGEPmkRexuslIo+4O6cnO6wiz5g3YdpeFiMPmB4VN2CXIc+M8Jb2N3YgD4OlGqagld3PsI3WSqz73M+5ST+1ffZWj7APvSRMbtfPrqnGm+TFlc+z/1l0MW3Sz6uC2aledpQPhsusbIO0Fg+lUCe8t0GSj6NWNnlFgJSPlSNxEh1ilU+LGotQA4yZj5BMGne3jVyPrsclg5FDnM+pkFmo3l+hj6blJWtx8GRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3084\"},\"selection_policy\":{\"id\":\"3085\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3030\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3032\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XIdVCwikOT4l62Q3MqI+Pha8l5m9djw+fxzMCIJQQj6NxdG7fQ1APt5G12p6FU0+9zG4OeLpSD5/Ghz6TCxKPr5Sc9JDTFA+3OFS5pgGVD4azROSgiVbPruXkBWmqmE+msXXLm5LZj6t1Nvd7QZwPooEsJ0xgHM+RLIbvIfYdz5UE9lwrKB8PlR7I9f/YYA+9mYW+JnOgT7oc4+rczOBPl189wtZg3Q+UagWOdUEYj5QTgVtkPJSPm9++Ysx+1E+iG93avwXRT6JpmqIxPBDPpccJ/gkQUI+05VCkt0CSj4dEiKXJR5aPrL07+TdO2g+c/EWkaErdT6rNqwsyqqAPj4rLm9vooY+klBp8Wcrjj5gNJsXbl6SPgWOyOT/QZM+94br6SMVkD68AYDBNLyIPov182/tkIA+inJg4g3jcz6CHU1SM1JRPsmg/UeWQDs+i7fTT7nBUz79KCXw2dxFPqVm4JUJDFU+9hCUlh8zUz5BknpRbC1IPh0vWFCctUE+H4rCE3xDSj7P3I3Ys7NaPvL4jAeny1k+vgc3AduoZD6sSKTgqVJvPtEbq5huqnY+ztS2d3SDgT6fq2hmqRiIPsMDE/JV+I8+hNJI4grGkT7ApK0utyqHPt3awr37Q24+Y3pG7X+rWD59DpphTNllPm5trVeMl2A+YFXeB7QUWT4iMefgmUdUPvodqxWbGWI+KYgz1dApZD6aQPDVNAlbPq7xiM3MN2E+e4Of2CUZYD6s+mLzY3hZPkPepI9+P1Y+4iiEDi6vhD5YV+nY6Tp4PjBBc1yFfps+iQAf76YxcD6WNK6mwXJ0PtA00yeJ3GA+n2DHHh+bYz666k7OHXhwPjNNPYEMaXQ+SATnyQpJfT5mspr/AXeDPpK0luOA64k+1Dhuzozhiz7htk02onGLPuJtUY1YlIY+uXXCChzegT7Kv/KbRgV4PsHLYg3rSnQ+Ji6CZfm3XD5sI88nuxFePmPIFNqAVFI++hX97sqRSz6BdaIONN1KPnVFcz/sl1o+zJKTNZvYUD54iVUN9SJTPvcAERbAdl8+9+My/rpCaT5AKE8unjlqPkEwdlis0W4+zK4ZBVM5kj41qjp5RFqOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3036\"},\"selection_policy\":{\"id\":\"3037\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3029\"},\"major_label_policy\":{\"id\":\"3027\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Eu8IzyabQj4YE4jWC3w5Pjkza7yWUkA+khx+PEoJRT48PENaxZg5Pn3pPSDpdEg+jLPSocu8SD5kHyHMxTpLPq6gh0KWaE8+gPcZL5ZiUz4h3lQksOdbPsdtL/NsGmE+zh77h2NaZj7lhCe/iCJvPhLWT7hNeXM+wwjPXNjSdz7SOc6wBY98PkPjumKjG4A+h5NXEXI5gj4U8mofxmiBPtjcl7eZr3Q+GR4QrPCiYj7qcJBesSFSPicEooq+PVI+8/eRzwxCST6ZksbCa5dBPr9r8io5k0A+mgitUhgMTj4QjOY9cY9ZPhhCXOwWXWg+haDemx3ydD4556PnFVOAPj4zim5DkYY+D8kO/vAcjj7y2CPA362SPpzZwxdDZpM+4AX6zNQikD5JLM9e07WIPrUMHfigzYA+GLTnx9GGcz6kns6z7PBOPvfLVHZvcCo+YxjfVIqSVj4mttaop/9NPoTURsxzeU8+so4bBwHWUD67s/Y0QBtLPsbV4pq4aj0+xzBP8xN+Tz6GZv5SJWxVPj2bfDO3U1s+d/HXfeiUZD7YoQiP36dsPvrA0wc+lnU+df9WJZ5cgT6SfIwUI8iIPomacFl+tY8+KaBDlWnKkT4eXKjTECOHPi1giQpM6W0+9+JyRAxaWj6kSMtZLH1jPpy4s9Horl4+3nPINNGNXj7VorZy1vBTPkWuAVNyK2E+tLUReF38YT7zcH1vBw5bPlaj7LOeaGI+r38N9LjhXz5K0xBpBgthPkmu6tL+nmE+kaFNRvL0eT7hYwTMZ5dyPj+klm3T0Zs+/DE6Zhy3bD7mcMgZotRwPtehH7uypFY+ZWlEMX8qZD7a8Kj8pH1wPkpXVAT+a3M+CvpEWtM7eT5Uzc5FK8GDPohq+9FliIk++57gHZeuiz6VDKN+tR+MPnHyCzCr0IY+PVgHBVDYgT6FD3LafgF5PifNMtY5BXQ+ZoUxn5NHXj6TEOblY0RhPijO/uANjVU+JwLxdYB5Rz5M4eiJpCRUPqcAhVakKls+HQpzntZrUT5KNWu5/gdVPrkH3jtHIF0+GwWIzqUQcT623gwW229wPmXXtgxWjmg+Y/hIlGYQkD5kJbzNJzuQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3088\"},\"selection_policy\":{\"id\":\"3089\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3032\"},\"major_label_policy\":{\"id\":\"3030\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"t0TEQJr8QT66hpkAOYQ6PpzvRVbBJkA+AWYkllu7Rj6hXCMgSV1APqXW9uwaxEg+uZH12h5kRz7lkLgim3hJPq7BB4FpOU8+VMc20L7lUz4iy57bqvBaPhDjX3NxCGI+RT0qcr6JZj4njGfXFgFwPvxUBtssUnM+kk6S92M+eD5VZqyMKll8Po6EHvR2NIA+bkxRfkPmgT5odGxhc/qAPlea7AFjdXQ+Oc71zITwYj4jo7417hpSPqKiqDVBdE8+9QIWt+HUTz6t0wbyuYk/PubUB5GIZEA+XlxiUblpTD5Oa1VfiARaPmh4QLkIcWk+d2XYtFw6dT5oapNcqzaAPgMctazy7YY+RkXk7FBKjj6ZBCU2B2SSPhlSeEOBRpM+XyPPDm8TkD7u8ZmG3TaJPjSHN3GwuIA+HlZ2x3W7cz40Ghtu+jVQPvez6LxedkI+RklmQBGKVz5sFlf0XFVFPk731bEv70o+Hy+5qMywXD7u0jM0aalOPiYZxavHEzk+4e+qYjhORz4C/aO7mM5VPpJnWQfTU1o+F0JuQi39Zj4vpB2HATRsPmZvg/61m3U+8oQtSfPOgT4fikI0ioeIPrqEMOxsZ48+1AgnxRTDkT79GcNaiVKGPhehhqk3AXE+B7/oEaHzVT4rHw1VSnVjPne3o6MkPWE+LkrLCUDaVz4aurvaqUVVPjmA/typWGE+PrUaUU3GYD63sg21wMhdPqHtfToN/mI+Gq3o/YWRXD4+inYb4K5bPnSFLrZ6HVw+0zBHN3uyiT4mzr3Wzd2DPsqJdTdeRng+S9e2TJmxcT4EkXqcUxFzPksDjZd+eFY+tjOVvd5bZT7nq7NTzCBwPpZOr7WB93I+JUyw37Lcez6RuqtLf/eDPkMURfUHK4o+To+Ey4Tciz5ZvqyBBbWMPlUQxbUasoY++TPhI414gT7z15IH3n94PrvLBd522XM+81cw0UfyWD4SfXxORgZgPrD+vWbnzVQ+rNuA8ljkQz4PP9qmpjFZPrk2UL+r/1s+mjs1kS/HTT75M5Y2hzRXPvT+qnoN3V0+sPZOoTLVaT54o+rTKYJlPsMIRaZ9lGk+TTe2C7P1kD5Q8R9g+jGGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3056\"},\"selection_policy\":{\"id\":\"3057\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YckJ4Z4vPz65K79WdRRAPpDF+MSCMUA+oWA4bferRD49tEJVPfBAPkEe8weVWUs+xtT2ztuXRz6nJXFvbmNKPiBLw7FcPU4+SUbxg2P+Uz4q0wN9VCJbPikcYVk1AmE+uT0GUUKvZz6rwdQZiqVuPq97aOtZuHM+GI6pYcUeeD5ggDGGVJt8PgjP+L0RRIA+uWXb+ZAHgj6Je93JJUeBPsSpSPYc1XQ+ZUo645QmYz7bpvq004JSPm6o+M2+m08+S2F1hl1JTT57lJbeQdxBPlLUcAz61T4+sPwOi4O3TD5nDBbpD5VbPjOAsI18W2k+F4gKeKQLdT5ppCXPEEuAPrb5X/snWYY+jKZtfPCLjT4bJ5lcV4aSPs8bEKJ7PJM+wPx3ug0KkD4I/2xvkf2IPgEINq5GpIA+SZBHZUqdcz6So9+5wVBOPgWcin8GADc+qxGQpGT+VD6CB20zk8NRPgrN4B+/BUc+woa+Cl7DUj58FTFT149TPkOwT+fdlko+qwmmy4ISTz6a9AtdnExYPqizzJjN21s+zhP+TEdIYz6bI/agR79uPmRdVNt5GHU+DiYpkn8DgT6qEMFxPBWIPolXs+mJM48+7X3srwJUkT6aO+o5anmGPknFzl6NZHE+YmGLL0H7Vj6c54CzWeFiPj0jBT9d52E+2i1u/wR7Xj4qzKbZrgZLPlKveApfiGA+XS9jBW8/ZD5u3wfZpPlaPsIqzx4p82U+CRlGh5D6Uj4cEcr5Z31bPgNvrFc4FmA+2C5A6Ms9dj5BAS2tckJ4Pj4ydOn/Z4U+n2jCC0TncT69k0ug0e50PsIr229KEV0+WCa7NS6jZj5lPAGTWrxwPvlyDpgM73M+WM6suWsOez7iQLBk2u6CPmKNr5Fx14g+go/68++Niz7/vneac62LPgFSO8c+voU+WfAip1TwgD458cuq/ll3PsuL8yYtC3Q+gxdiIxzgWD5q5IBGNS1gPuROAtvmg1U+1lbY5yFQTj67HqwBeplTPuBrnhLIJFM+aqUdhh2cUj6WV8ybvT5ZPsGdYxtkeE4+JnH1Rhrbaj6Gzc4T1Uh2Pg03SclAfnE+a8YcFYBrgj5W+rFI3HmKPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3086\"},\"selection_policy\":{\"id\":\"3087\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"4tRETOlWPz7YLPrZFWU+PmAI3oXOcj4+/RCjjifDQj4TEVhOHRw4Pl6EPvQhRkw+ChNprFPNSD710T0NNqpMPsHUM+V0oVA+Vx2kTgJzUz5Liijhp7xaPv52K8IFGWE+4QbISqKdZj6DPeDohKlvPqZRQxEwcXM+POVaU3OueD7zByr8e3N8PjHWqP7xYoA+yEtMuO8Jgj661ktnVkyBPmByF3qpx3M+5pCRe+DVYT6YjA+zMpNSPu3YWwmMYFQ+ctJG7kJvTD69wDLBStY+Pu69X+orqEA+1ZjFY/RDSz6iU/lwuXVaPgmOArGR5Wg+LAIMUjpXdT4StRH8x3uAPpBTuqpbv4Y+fgwDUcIRjj6Y+uq9/UGSPt4SkiIpRJM+qo9vkqZLkD5YBbmAhtSIPmHbLh5TToE+gc4qaualcz7tLYZdPRNLPm7DLfTXwDA+xNizl04hVj6SxnK9LV1PPoD8zf+MgEs+Al2/Rdb+VD4bDWXLBqlJPl1i7RT7KUY+q+NYZGG3UT7R4e630VtcPpyYkwmWp1g+PFDWQvJBZT4zaeRw8iFuPozCBEWAFHY+xPCvHUtogT6DeVw1ffeHPl96/G/s348+K5uVDcs5kT7SQZJ5fFeGPujbiQGjV2s+TyVg5Nq9VT4xAvPrpBJlPm/nyMRPfl8+JCDytWBhXT5jjeVRuGdSPpTNPsZscmI+OjJoxjOVYT5ZMpYVCnlgPsAiu4ALtWc+WxBgGMhcZD5TOA8zYYFdPrPZeamySlk+pg6aXDJ4cj4iccDzpz9xPi26RjLz+I8+MtSLoNhMdD5O68nNWepwPhoyouJqjl4+71P5pkhiaT4FQZVuUbdwPvGbLN7oFHQ+y8vS3+bYej5OpxIObxiEPqww7KCouYo+Q+Mwr3TJij4gIU52PTyMPllAcHutj4Y+201p6kphgj6SUmxNRuN3Pl6gsrjmCnM+wTIRzmACWz7OC8rT6aNhPrxmOsA7fVc+Qn3E8N+hTj7l9gpxjONWPkR68OecJlg+93PL4CVXST6d24Tji3RbPjHc6yMtuV4+HExJB2KObD5iIZuiYuhpPhU06teYHnE+HKPgJf5Tgj5H/wsw/riIPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3080\"},\"selection_policy\":{\"id\":\"3081\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"75eX/0SWQD6JWpmVqoY/Po6LTEgDJz0+NPZofHsjRD5CXYek9Jc/PuqnK4cnvko+MOcMtR68ST7ih9quTi5MPl22WGCZFVA+UY1cX4HFUj7eMOlvJO1aPmE1Gyq/SGE+/FRSoBkuZj6MU5ImPp1vPuhc4zcCjXM+FgaI0p82eD7fwCMxUEZ8Psi96lnXdYA+vRWU0gofgj6/GaEVygSBPkU1vzw//nM+o3/g1dzwYT7Pk+5UbSFSPtlxGtLw5FQ+3wGM8se7Sz5RdJrrYK5FPjczGJibb0I+TA5l6OuiTD6eZfV0Jt5aPv9EGnFEHGk+GURNjgKUdT7CnSsMES2APsLl6W3OIYc+kYXyVZH9jT7KKaV4La+SPiDgudezsZM+u5VP2NwskD5oIkWnBZqIPhaIU5K1xoA+hoZMIhZAcz51RwQGA9JOPuqbQJqAVDY+bYjUhaMpYD4tYMqcvrxJPprRt7mFMlY+kLPlf71VUj729EY17z1KPkhsKyru2kc+vHndvjOXUz7cRwBjnXtXPvzmi8vyn1U+tgm28RCFYz7l8CajTKdrPmieWqmLPXU+cooUxnUigj6f5fgPimOHPpsMk2SpVY8+Ft4xFFgzkT5o6RfdefiGPhHcKzeVlHE+A6S1+15TWj7YcWHsvYxiPnlRDMxrCWE+kYZVBjZEYT5jy6FzqmVgPvKr2sH5LWE+2GaW601SYT42gTZZ7htePhwhNWCHf2U+T3Sq6Ks0YT5ogaaIP3RdPpcunhMCv1U+YItOKg+beT7c9aQR6kVxPvAjY1RU1pc+MrebyLKKcz5/X1BEQWNxPjklflvNPlM+m5dSILVXaD6JJfGG87FvPvLooqYLznQ+2OVuzcv4eT6eIrKExpWDPn6iVa311Ic+pHiJlYFpiT7cRr7r3ViKPjr1TAY0J4Y+DOQLhaZqgT6sajh+uxB2Pr9s7zp+4nQ+dTGQ7oQ1Xj4cyJCNeOFiPkLDjpxLmFw+EwAv7SjFUD5Y8jAQ589PPinQg83a4lM+ddHT3z9TUD6Yl+0/HkliPuiRgk1aOmI+ijDY/FREaD57+YA3OUJpPgM6ULADAGc+qCnxKrq9fT4ljipAyRiXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3092\"},\"selection_policy\":{\"id\":\"3093\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3093\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"BOg1juCePD6LzqMlKHs9Pj/6O5bwhD4+UUtH2TSBRD6yq9d1dxc5Ptv1GRF8MUk+8BHXX72bSj4diF8p0c5IPpzuoBTjjFA+z+LOpFI7Uz7CAPdE+CdcPkBu3dCwVmE+oebIZdXAZj7dZtF6AEZvPheUHItLP3M+PbNAL7XGdz7MYMliSel8PiEICenwNoA+sfqUAgr7gT75tT9lV0KBPhm7tSwnHHQ+xSBSiMLkYT4ffi8KLypSPpXDmwf/KFM+DM2kxPq6TT4NCLwlx3NGPsGRGZjEa0Y+tED5BEguTD6/6/WVhuFZPiH6N0exomc+9aOpXSBgdT7pBj7uYQ6APhjbGibzR4Y+oowPV7Qvjj5kIfYnMDaSPlzniCjOg5M+6It5S4vjjz4JAIAuFa2JPuE01irPgYA+8PQ5exAsdD4qW+wIUtFQPnqy5EM98yc+M4e1Z6VCTj4BXkPFku5KPr0Qn+C7/FY+uj5Lu+uyQz697mwXb5dTPmmXvJL++z8+Wzgh7tMsVD7iYzSlnktUPtwCLEkht1s+os4JXehTZT5abB0k251tPjOS+a8E+nQ+pIpoK7MOgT4wIKgXYYeIPl8SzBRUCY8+TUtOitBekT6RpIXkKqSGPmHeBq+YEnE+xJPQCpbVXT4Lb6myB4NkPgvKHSnjLF8+6cDeruywXz6dA7VZkNdNPqkya9OIZ2I+Y0HlfWwDYD6JZCEgCO1ZPmRK6qTVL2Q+RdZIX7JfYD63dmypY+FZPjnyERZTcF4+/dx8mkEohj7qtO8GRgNvPmGFY3vqTpc+JaUqOIXGaD4GcFeOUsRyPoAxMRakrVs+rFf8/BElZz6HV0XvenBtPikVYLzU4nM+rJNoUAoSeT5pAbAwNGKDPlvPvWDoJIk+NuYUoRryij5VDw/0DreLPk+oBWr7W4Y+Tkwz9igPgj4Aldkc/xV4PsRieNXAxXQ+5Ce+lqjmUz6qIKr3rylaPrnA382HBlE+OFybUg4UWD502Q8iEBNPPvfuTeadIFI+peRdu1I4UD75rqodqe5UPuDnj9oDj14+MSBwM9AfZT6SEP365ORvPq8QUCJMEnA+fKgsqbKZkT48oPxMOAyXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3038\"},\"selection_policy\":{\"id\":\"3039\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"PYxd34k4PT65t/+pllM9PguHdf3f1EE+7WSQ4pTPRD6HnSXIqKY+PoeFRnNnskk+VlXFUx9yST6zDPgLoClKPljBm/lmsk8+t6fcIwikVD4VJMPdq95aPhVl0wa55mE+bqPPDyyAZj7U3f7wac1vPjD+qWQxanM+iLk3UQYweD4NM0ioYUV8Pr/jdDddOIA+05gtQucLgj4KkBW2J1SBPr07KhpsEHQ+NhQcsdGDYj7b/tP9uGVSPvT0NmIIN1U+jWVmvgaaTT7inJdAu2hEPvcajYWtjUQ+gJcfeT6YTD4PfhGb629aPjSrRZalSmk+q1qiJZDQdD4aD87fVySAPj7iWVI9tIY+vGSvopkijj5lkmYQiUmSPhueKRh+f5M+sGa3q+nXjz7ILxKaZ2yJPtiuxQxIy4A+6OG5WOqxcz776NiBaeFKPvVsmbqviTo+nbW0mahgUz6otGXjkUpJPnl0mptnqEY+QyBYoNM/Rj4iFc1NrSxLPrRLtrNFE0c+BPi0S9IATj4YLHN4Q+9XPglhoUExjlg+5HzlhxreZj7YSVI3BQ9uPnT10J++wHY+PWjVP+xwgT4bN8wswmCIPk7g6wbLxo4+/1A755FZkT50H3JBRWmHPuq9oenhHG8+faaje5JIVj5p8QooVdZiPrHgdJetfF0+7vMajMA3XD6F1XbITwRWPqGHF/Vj2GA+E+63bcCGYD7MgVnjKSxbPjXW8blA1GM+BG96o/q7XD7tu6W8KMxhPkCzRU8T+V4+aPrd+G3raj4lnJJyHOp0PhjY1OFrrHQ+4OhSNKPxbD6O718zZadnPkOzgiJD618+cyU9T/5HZz7d8xa4cUlxPlNAHgkdlHU+8Fy0euAYfj5iPMpij3iEPvrclqyMeIk+2aCmH51Liz6s36vHuAGMPuH7yPOvx4Y+nh640baZgT7HruqA4Pl4PvCzhY9ogXI+rAIZJ/d1Xz4+3MzVkdFgPrab4gqICVs+BlpcJTVSSD6s940WhP1RPvOTrhLyyFg+eyCYTxL2UD6rwmTAL0ZjPjqOJdGRFF0+PNeEpb0xaD5fJYWHyzJkPmF+9RFn6HM+LIyzwf2YhT4aL9/cCXSRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3054\"},\"selection_policy\":{\"id\":\"3055\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"h62R5HU0QD7WUWZoc409Pnj5EuUw7D0+Md0h+PBHRj4/4gpB2dpAPkmFkb6Oq0k+x3WevMW2SD7bQ4dahv1IPlFuXlvKZVA+dzdzIMCrUz5G1r8FayJcPsqJnMDSsmA+AU6fXLh/Zz7lMHtlVfRuPuqbWizGUnM+qudAiL+adz7xSydwAC18PoaGN4WiTYA+5g4aSEkMgj6QDPwDBGyBPoW22FNaJXQ+MQ8PqzdgYj74qb3wkI9SPuDxIlzKAVE+czgQAaPUTT7OJUtN9FlIPgt40GsMvkA+x9TTVCFZSD5dUIlsaZxZPmDcZLBuo2c+FfYqL1VXdT72a/3+pDKAPhEXj9XJoYY+EvFOwd6MjT7fkzAE9EiSPuvQ70FWQpM+XbG9823ljz7XYcaO+ZGJPuREmat7T4E+6brM0Zedcz622sYYoolRPlyT9R2p0i4+5v420Cj3UD7v0lHQX1hKPoXEfDVr2kM+pOL8nmfWND723M3NeApHPsUm1eoV50g+/9utAlLwUz5trRXQFlVaPltNVftBy1Q+YnYVaESCZD5UkyOXFCRwPkJgpKKV+3Y+fgtPbo9XgT5HghADPAGIPsAaZU3igo8+XB37HZITkT5PXtWECv+GPg6Wf+ddjm4+nFSTF7ByWT6S5d4mUwVkPjbRDmymBGE+oCTjKkK2XT7zAmA9rPhSPge4FbA2HGA+PBvQtyZCYT5SzZ5pmtFXPmUQQgYwJ2I+LMEGllJWUz6EXF+41RtgPt8YVVk4iV8+1Fcw2YHdfj4+Y4Irw2VxPkxeo0ugAns+k5OBJeRjcz4GaOaX3L9vPiFjqnYiDVk+GLyey9gwaD7C7YyG1NxwPnvS+cZNAXU+W53/H95Nej6wrlsuKV2DPlUjQrLYiYg+uuGyM7r0ij5fk9QFhN2KPgLh3RVLw4Y+FVEEczl5gT7mtdf14ut4Pj6JjwaORHQ+Ql5ZrE56XT6N91kdLfNgPvqZP/td2FE+WCr+qTZFQD73NjXVwR1ZPrUS/RDJulM+1KnvnwHJSD4M4YJHodxZPlGK5Vmo6VA+ddhkCO+gaj5LltmnO75pPkUiWtFSums+IIECMQU4gz563LCuANSUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3090\"},\"selection_policy\":{\"id\":\"3091\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"qM2OMjEkQD6+1Ebb0Gs4PgpQCUhUtz0+ZdqZFambRD5Lsm+ajoE5Pn0XDMs96kg+FUADrCUzSD7ItQL5BztKPp8T5ldOVFA+3sogc7c3VT4p1u+yK6RbPr6SmNNKfGA+6ziz28vvZj7uQwRD45VvPnX8Kd2UcnM+jrQerHa2dz7vzH8C0qZ8Pv91YekqaYA+iyr3INougj7YSVOugCaBPtvbY+fFN3Q+unvt2DibYj6+mj1Xyi9SPrfVCcoexlE+Af48g9nPTz7VFox4vYZHPsHeSlapvkQ+i5YQsQZqSz7LzHBtadZZPonwag9giGc+cnDD/dcAdT7R8sLU4YCAPkvMZPhrn4Y+j/YXiQ+ojT7u0b4oJnKSPhgSPsXvRJM+D4iXc0Ckjz7cqPuI7J6IPvdXiJQN0oA+fcRKM05acz49orIKdyhQPjLzjBojjEE+7UBq8njeRz4ZkfVRXBI+PrtchXboKVE+xYGFeg9uUT6wOzd93o1YPqmSFPqDpDY+cZZi2FMUUD5+cOWQ2FdXPsHqo6VHhVg+VzWeX7cIYz5FjfyPYeZrPm8KwNfS83U+LY5hiKw7gT4KX9OtTxSIPgFGTTUZho8+FeIqOh1bkT6C5wwnT5+GPtUh4wiZTHA+0u9bpLTuWT6lmfMF305kPtGpfLPu7WA+BvKZkKqGYD7jfXg8yXRZPlPOEmub1WA+USaKdDyFYT4Ev3uvgmZWPhG2MCxtxmE+nAyyQytJXj6zyqrlvgNgPlbbsWBiaFg+QuXyje8rbT7YWg34T0dvPgVD2VyEaYs+4zW13qqccz7d6aiOSHJyPiL9m2+/HVs+/XOvb4rtZj7A2AnZCd9vPrH6W6qDznM+JHpKpxBgfD7HCQ7WcIGDPtGJo0u1YIk++ClaCdN5iz6/rt72pJeLPmKMBqt1D4Y+qXddLW3cgT5GnI/jrG53PvKF0SFPJ3M+Yokw+W3gXj5rJsD1gJ5dPsJZAOEYA1M+jVcdvqfAUD4p7QneC9dRPqt1IC22CFU+LAOXfJyxUz5O0EOPDuhXPnStj7Loglg+H04yJQpxaD7HdQEWtC5yPh5JFed/U2s+kIPJJviqgj5ztVDf7AeVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3034\"},\"selection_policy\":{\"id\":\"3035\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"u6oD++zmPD7dGle5Jnc8Pv/kHDiCzEA+XLw5rUbnRD74G94u9ag8Phe0463vKUk+7B0nx+tBSj4b5MkjcbtIPs/Kj8Do7U8+SchunW0wUz78AmjfKBpbPreQE+mBQWE+k7GOV3fDZT6H0JZRygdwPrQCWtfxdXM+uMMLpa6leD4hytkP1v98Pk/BzKvzL4A+LqOb3kHLgT6bkYuU02GBPiyfwTJScHQ+fElYx1ZlYT5jvxzLvdRRPqOpHI+vpFM+4X60P82jTT5S5KJ5Dr9DPriMDP1uXUQ+8ZYy1azKSj6RJVIw90haPtkTKQDwiWg+WsOU3bPadD7tRQMaWkKAPuoAu5Yjs4Y+vxsz09Eejj7FPz66UpuSPnllDzN38JM+KLI3fx9BkD64+4JxxaKIPihWUGjXnoA+9k5JlYHFcz6WVb8fx+hOPiX2ps5IwTY+3yWDal8HWD5EkImZJStMPsVVN78yMFM+vcYVO2VpTz4EfiBmw/xKPr15jOupnSU+PtyZJAqbVD4xH+qDinlUPqAVsYOJY1o+JC2DWVq8Yj7+HXksPAVvPgdUTTAsznY+oJdPyJPTgD7U84QXGtmHPp5tTdeyGJA+bTIVS814kT5enkmPLV6HPhLYmanstXA+V3nbq5N+WT6lmWC2nD1mPqr5VGg0rmA+Iekb9PnIXT5Im7RJusdVPp9LQO/GrmM+Dfyu2pozYT4t3yVtDbhbPiGtmsQF/GQ+IAIFr5UtYD7yH3CD7AdZPm1Z+k4cc1A+65yNaqgVej56pjjeDvV0Piv4IFDdgpY+8C1kxewAcT7EpeCLzpl4Ps33Ovw60lY+srkVsSx7aj7K6QImypxxPntTBeM2LHM+vHMCjXOfeT60il+MYpWDPq3tCQHp2Ig+trYx9tUYjD7V2L14c96KPoqo7na8r4Y+Bpy4AHVigj7Gi4DB+yl4PuZn4wdeQ3Q+TzsPNezzWT74NXj9ED9ZPgAK0+e6cVQ+8DiS/hZnSD4Ua7sxpPxdPtMdkz7CkU8+0V3fccsqVD5JS4n3BhJbPh1XHIgaRFM+RsHz3WwNXz5AULaDsC9qPmAOdPUX6XM+a7g2HTYbiz5AbRr9oR2QPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3082\"},\"selection_policy\":{\"id\":\"3083\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"0dc603f9-14cb-445f-bf7e-41685eacb225\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"d11d0148-e7cf-4e2b-b4ef-60c40b38730a\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"abea0858-bfa7-4689-b622-9ae5a3792f7c\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"99762fc2-0cdf-43c9-b311-7c7558fd7448\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"3470\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"3475\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3472\"},\"major_label_policy\":{\"id\":\"3470\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"3478\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"SNAg7HhsST4i3apTIrZLPjCM6vz/pEY+npxd9pGPPz6VlJ7ohcM5Pgo1cQVc0y4+OyXir6geKD7uXXNKGfkcPvDUirjMFis+SktH8ZTuHj7LrVqd/2oiPhlt+M7uniY+BDTyRZ6yMz5L6byNNYQxPp3o+qxusVQ+n3eIudUDXz6t4Tb/BtVtPlQu9ZtGz3U+D8mxmkeHfj7Y0HEFuYd+Pk6fJkesaXk+rD64aP5ccD7Eov03eL1oPjHFmS9kBWA+Le3rbr5HVD5TFMcioq1JPjByUq64KkE+n1tS/dsvSz5CeXZmRvpQPu8jZ8Y5skU+A0YiucnsNz4fxygdQi86PrjqeYFBrTw+FQTVF0RhPT6+kznHX1M8PhZbxcq5Oj8+T/Ht/7SORT64tUUTRQE+Pp1b+Fw2k0M+3aJQmvbfNj4FVHLBzaZBPkfpVknduz8+wgWZ/Gr4Sj7NSDdY1KdEPvTLF6siGlM+eFpLVGOccz5a0LhsUR2CPl5V0+CUS4E+IyWPs8LbeD5both8gN1xPtgg5ZF/5GM+EtYMSKanWT7+xHGwqUJQPry3OdfzakU+u/CI7f9FQD6A37tyk9AyPonB5vXqfiQ+tHErXS4FED7O5NfIRokPPjUXZnm07gg+wkpsOoPICj6q8dyaZBYGPgbFflIsWQw+enBmLaGWMD5SSOo6YZtmPiOuITnQPnc+qhgK0qRGgj55DvAB4kKLPodP18IC+5I+D4Ia+U/dkz4c1ie9mu6LPkstQCjwLYg+T0TN3cqpgD6mSQcPXfxyPsHgmPgJHGE+ebQ61+vESz5XajrMUOMyPjnKxwZBgDI+uAzuhF1hNz5ZrE3E8nFAPvkX054/YUQ+tvwrtwu/QT4kb0r2KmlVPm1HVaoUi2c+aHLEjnjreD5qgp3i5DJ6PkVVg5cgWXg+9SFue3OQdT5GaqBgvOZxPktP9C0TXGs+H8+H/TquZD6reWak6QlfPoSmQ35g6lc+Xh+ryz3XUT4kgjY2rNNLPpsm5V+WlEQ+571QGw3EOz6cfJYXgJA6PuQFObHXqjg+ODD+XICmKz4xBh51bCc5Pn62Cbm+DDc+tb/uonGKMT47N7KeBTsjPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3501\"},\"selection_policy\":{\"id\":\"3502\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"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AAAAABbU/D8AAACAIt78PwAAAEAs6Pw/AQAAQDPy/D////8/N/z8PwAAAKA4Bv0/AAAAIDcQ/T8AAADgMhr9PwAAAOArJP0//////yEu/T8AAACAFTj9P/7//z8GQv0/AQAAQPRL/T8AAACA31X9P/7////HX/0//v//361p/T8AAAAAkXP9PwAAAIBxff0/AAAAQE+H/T////9fKpH9PwEAAOACm/0/AAAAoNik/T8AAADgq679PwAAAGB8uP0/AAAAYErC/T////+/Fcz9PwAAAIDe1f0/AAAAoKTf/T8BAAAgaOn9PwEAACAp8/0/AAAAoOf8/T8AAACAowb+P////99cEP4/AAAAwBMa/j/+////xyP+PwAAAOB5Lf4/AQAAICk3/j8AAAAA1kD+PwAAAECASv4/////HyhU/j////9/zV3+PwEAAIBwZ/4/AAAAABFx/j8BAAAgr3r+PwEAAMBKhP4/AQAAAOSN/j8AAADAepf+P/7//z8Pof4/AAAAQKGq/j8AAADgMLT+PwAAAEC+vf4/AAAAIEnH/j8BAADA0dD+PwEAAOBX2v4/AQAA4Nvj/j8AAABgXe3+P////5/c9v4/AAAAoFkA/z/+//8/1An/P////59ME/8/////n8Ic/z////9/Nib/P/////+nL/8/AAAAQBc5/z8AAABAhEL/PwAAAADvS/8/AAAAoFdV/z8CAADgvV7/P/////8haP8/////v4Nx/z8AAACA43r/PwAAAOBAhP8/AAAAIJyN/z////8/9Zb/PwAAACBMoP8/AQAA4KCp/z8BAABg87L/P////79DvP8/AQAAAJLF/z8BAAAg3s7/P////x8o2P8/AAAA4G/h/z8AAACgter/PwAAACD58/8/////fzr9/z8AAADgPAMAQAAAAIDbBwBAAAAAIHkMAEABAACgFREAQAAAAACxFQBAAAAAgEsaAEAAAADg5B4AQAAAACB9IwBAAAAAgBQoAEAAAADAqiwAQAAAAOA/MQBAAQAAINQ1AEAAAABAZzoAQAEAAGD5PgBAAAAAgIpDAED///9/GkgAQAAAAKCpTABAAAAAoDdRAEAAAACgxFUAQAAAAKBQWgBA////n9teAEAAAACAZWMAQAAAAIDuZwBAAAAAYHZsAEABAABA/XAAQP///x+DdQBAAAAAAAh6AED////f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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3477\"},\"selection_policy\":{\"id\":\"3478\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3502\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{\"ticker\":null},\"id\":\"3472\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.77, C/O= 1.15, [M/H]= 0.82, T= 950.69\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"3473\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3475\"},\"major_label_policy\":{\"id\":\"3473\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"99762fc2-0cdf-43c9-b311-7c7558fd7448\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"abea0858-bfa7-4689-b622-9ae5a3792f7c\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 105.78, p-value = 4.06e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8a88be89-ed74-4b46-b9f1-38fb650b30f6\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"9deae9c4-ffbf-47c7-997b-ab72cea0d677\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"2UrbuTG3WD5fAOcndNtaPrJhAPRw3lU+zI06gQ9UTj72kL+IHrxIPt+v7YuZoT0+vEo27sg5Nz5COYXimwcsPk6Dsje61jk+A1/yHI7GLT7X9X8hKqkxPlqzc9czoDU+YZOp45q7Qj62EEKhxqxAPlDhDSPNs2M+u81EfXCYbT4kmhtuQ+B8Pl07gkTZVoU+Ssytw3w0jj6cU7cZ+lOOPmkgKs/jNok+DNev8pMygD4HKxAP4294PtbwgqUjhG8+KR4p0cj7Yz6DgctA1lRZPr0nPC3D11A+FIhe4zObWj5UaqgFPXlgPkSUrD1v9VQ+5dIyq3T7Rj4cumIt+gVJPjL9OQcvaEs+MGIrjHXRSz4sCdpDeKhKPkr5qblrR00+cc2Dc605VD6P56g60+lLPidkrYTlSVI+yYF+X8hHRT7rxv5zOoBQPijSo3Qawk0+MeZ6HfNsWT64NM3xynRTPvzVyYDYPWI+myK1AX9Dgz5y9S7jRfCRPvKOavQPNJE+W2mQf32liD5dxOt1Dr+BPvilbd9CynM+8hjY3mV5aT7xJQtzxBtgPsN7hUePBVU+k0mXAgCgTz5BqaztZRhCPiek3EqSfzM+pny0cdInHj7EoOQCy6odPmGbQ11RVhc++Ch8EtQSGT5/A4EgneEUPjCgh5+ZZhs+q0l8JxwUQD4ndYjZfUd2PhOHqESMC4c+O3HliNo+kj60LYg3YU2bPpvzHpn7BaM+abhX3HLnoz5SChDQ0cibPqpXJBqHCpg+o5FhxaGJkD52fS+fr7SCPha+FKb8pHA+fAK2P0vFWj6a8EHI8AdCPvQCjHJz7kE+gztqw+GzRj43zeIgtgNQPu+GBxt2/1M+yZp0P9h6UT5Ps1zFp0RlPkBOxAoCQHc+LO+jeuahiD62e6FzKuqJPsKj4Cp1EIg+mu+2xU5KhT4vUOw4OaeBPgU4MpAN23o+dO9rfDVLdD6sOJQmP2xuPvt2Iob2dWc+XRDKZ3eFYT6liitC621bPgar1sx1VVQ+NJ/z0S5kSz5aoFHqMzNKPg8RvVT0UEg+IQ6p7sVGOz4VZeqq8OFIPp9B0dfdskY+lNTjhYAuQT613mKM170yPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"TxvrN89AXz5Y4fWODQdhPoKY1rCL3Vs+8v6p3UaqUz7pqW1xlCxQPj2beCkupEM+/G75U5c6Pz67wMVrm/gyPpqJiHblTkE+JdFTOkpBND638+mIahs4Po4G5hj+bD0+Z6ytHck2ST40r//6mnZGPshNkQxT1Wk+1EiGy26Jcz6+0Pk+VJiCPkEK7ffv5Yo+Q2TsIsymkj7IVkRPprqSPlnkCbspb48+WBNVmACkhD4n7l7gka5/Pu9I9V3JVnQ+XceXoDOIaj5Ki3jxXCZhPqV/gYC+E1c+8fMjTwI8Yj5aSoa0Eg9mPlR75EdSClw+Cf26qrvwTj4egLwn0/9QPhEocQrBtVI+GENW0jwAUz5Os20Ao1RSPh9bydSDcVQ+a1OsmDE0XD7DoJzJXAZUPqE78StUZVo+XcopxYRCTz4vhSeyuqdXPmILfC5+bFU+Jys2roxsYj6aKycLveJbPtZ0KL0Rbmk+F9l5RWEKiT4KJjewKVSWPvxPtjcdXZU+4eG9vx9Bjz7BG8qHdcyGPtx538+aHno+GBZ1tVgfcT7JIQM0bdtlPqsmA/DC0Fw+WHkVXCGNVT5J9tmtrulIPn1RkOp7iDs+5VJ7/Wu8JT44jFAJPNMlPpKt/2U5YSE+zwvZO5nPIj598IyNUMYePqQmsVs1/CM+6/8S9aDGRj7LLmsCZT1+Pq1GedoVlo4+JQIOzIGflz5gFafpYjmhPjOUz3x1a6c+sTeBKggLqD4nx9QyhJmgPjIfaTyU9p0+4VVZDHUblT5Q4/NzKaCIPvKnEfXnBXc+VAeYWds/Yz78S+ebgNtKPlLB4n6T20o++2GS7Q/EUD4Nf2faVa5WPgWkVh0mY1w+89IfYibHWD49+LPP8X9sPmKuR+/m+X0+mnMHoqLqjj4U21XByRyQPhAuRDi2z40+XnGR3i90ij7FOSTCMSiGPv7T36jNH4E+ikLMNwIUej7SmnUan7JzPm2aXCqom24+2aSYSzfvZj69Sb6wHARiPsSHLtA1y1o+YopLqRlgUj7sBg3TtZFRPi6g7enZN1A+gbPd3x6eQj6qZXje7xlQPhda0GrupE0+eKdVngW8Rj6xNblBj2I5Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3865\"},\"selection_policy\":{\"id\":\"3866\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{\"ticker\":null},\"id\":\"3816\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"piHja/06Uz4eFdNYbNFUPl5GdGpz1lA+kP2WwYjGRj7h6f2P01hCPiSx6heSiDU+fiyHO8mCMD76u13kfrYjPkrMjmdieTI+dykkD+XEJD6cu5Q2IIEoPre7oG2xKS4+0c7aAQaXOj7CA9AR+KI3PiuGdJ3dHV0+o0OrsZukZT6iDD3jfOZ1PnSlYaHXrIA+sK2Lt+M/iD5PLV6TfFiIPu31LP7u/oM+sjLdcoDweD74Hq0sw1tyPq+iuzJD1Gc+/QyOVHX6XD53/uCIh85RPuqSAZNjOUc+NKdmDdJUUj4wIgTPJJNXPqXFZnfBCE4+AVtzRCFOQD4f9L9xLH5BPhAsGdF9AUM+BO17zxtGQz6zIiJ95ENCPjIrAuwqikM+5nTSlukPSz6mMRlOD7tBPhyQwqAd+UY+66jDxpfQOT6lCF6lG/9EPrP7YWyhxkI+Mp81ZwivTz7I4bxMcsRIPpcZf6y0a1g+xA9ZN1rVfD5/XoOCmoKMPgi0+FLqbIs+hCji+Soagz5BurhCuAN7PtypFJ+B9Ww+svVbRYodYj6+eQWsBJJWPoxsJ5gS90w+LJ6hJrr+RT7/01ulH8A4PnxFZ9uKgyk+R2p0rpH7Ej6QJitXW+8RPhlrfPrMgQs+/qKp4iQXDT7k4YQcOykJPiFW0c7F2hA+vyg2UyzrND6AMUgjSDNvPhy/b4/Ht4A+UsBmgJ13iz7ic29aeU6VPnqbpX5cq54+7IG1qm5uoD4U8leqwD2XPsGCjf6FEpM+YUYfTD1oiT7qQpc1VHp7PpiR0OnalWY+tAeboDDuUD4RjB6pOUA1PhT2LHdZ4jQ+Ff7p7s07Oz6G/RC+n9dEPqMCflT/6kk+TmwW1pS2Rj6llMefwWZePnomk+VLm3E+Clhp0SFcgz6NSTf6y56EPiLB6g8KPoM+uPIJ7jf1gD4gFEmMtL97PkLDHGMnp3Q+ChaUJZDhbj6ckTuiAuVmPiqoFwfOdmE+9rz+sJP1WT46uSJ7ITZUPrDw+KzY000+KqyAft2JQz4Stgj1VLNCPucnKm3VgEE+XjCL8LTrMj4KDKfbqb1CPlCykcoG30A+QuFkr58LOT4A1u/Ry1UqPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"QaLxwoFeYj741n92EQxkPutZMZ3EcmA+EMd7PQpxVz50fc7tOV5TPpoaeuOxsEc+nUZUg8v4Qj5ff9nqKSE3Phxlml6R/UQ+6us6wR7COD7Aix+PBIQ9PgauxJws/EE+YNhpAOGmTj4JvlmT5VFLPgLs5GAx+m4+4A1TMVmDdz5/F2mENxWGPiqgDZvxj48+kHP9qBihlT7u6XASZbiVPmqHA0aPU5I+C1GWUVReiD4b/WDhWOGCPgLwWJe5Lng+hO+842ADcD7QzG1NhOlkPu3dPOTPTlw+YeQfOjNfZj6Wo6xSvb5qPmPW7mSw/WA+djq9iAfPUj4c440FusNUPqKQgaUZ6VY+rv2tsOlFVz6Kpsnj7IZWPitCnTskUFk+NHNjIPVyYT63e+S/vh1ZPt2rHnBVmWA+2DujoADRUz7IR3dTZ6hdPpz2nLI66lo+dDYmI0Q3Zz6390prp3phPga+sucPdm8+0HOCKzPjjT48bCRSIgOaPuqEpAK42pg+XBG2Ijlmkj7+glncpwmLPubKwt8cbn8+uCczgkbNdD7bigtRL65qPhR2unVkrWE+DE8QSsRdWj6KtdjIBKJOPnOp3GMkI0E+FFwbX4xSKz5SSS3f87ArPnxgAtbuKyY+jLdsDDoTKD6FweUPqIkjPqxLDEQfQik+NjX08iZlTD6ZxSdln3WCPlIH2UftdJI+NxPAlI0inD5JcjPY1jikPhG6m9bCG6s+Lm4jXAyEqz5G07DFDN+iPg36/6tKd6E+VESrK/jwmD5Rv1f4rpeNPjwdPib3X3w+uIQlqWgraD5H+8xHqiFRPp4k7BptLFE+OACNUw1PVT6BzUEcPEZcPtGUD0eOtmE+lTeJNrTmXj6dcJZinEhxPhRrPIpOz4E+XgWhpTMYkj4o9Ar+eMKSPlgInakQUZE+QG4+tkbJjj7k/+u0kO+JPmCOar/AOYQ++SZuoW/ufj5a7qFcPXZ3Pp+0s1RoTXI+u1bj2uR5az5yskKUAaBlPjldRKNfG2A+5wMFU0JNVj4QfLFNpVFVPsIUt13pn1M+Y6LsXqfLRj4vEhpGEyxTPrP0B7xivFE+awuHTLZkSz5mKSTlgPU+Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3887\"},\"selection_policy\":{\"id\":\"3888\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3814\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3846\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3819\"},\"major_label_policy\":{\"id\":\"3817\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"Selection\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3817\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.77, C/O= 1.15, [M/H]= 0.82, T= 950.69, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3888\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=105.78, p-value=4.06e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"FDPjeAD8Wz6HYemix3RePhp9a1L+3Vg+7KIjTydqUT5kcs21o4pMPpa5t3d9OkE+3NwXITA6Oz6uLoSuNH4wPkHLYZJCOj4+U4BmpEiSMT7H9DRVSuI0PvTcLPiYhjk+5J+rADL5RT713yDOsJFDPoyXzxeQxGY+2VcUhdMqcT7ozgP7OoSAPs+iN55kHog+NKVhQoXgkD5LABCuUfKQPmECGsUGU4w+MnWCRUprgj6XjLd3Og98Pq1gW5htDHI+w3LgOP5BZz4LTN4RyNBdPrHT3tbA9VM++zfTQJyJXz5XWhfdJ0RjPsyHyMLgf1g+9+f2Khj2Sj4s3W0+0IJNPlUTB0fsNFA+GPo1zHt0UD7kt1oi36hPPuIrz9icilE+bhAYhu82WD5Fingzo/1QPuRPT9icV1Y+EyZUkiZFSj4NJhOT+hNUPjv6ZrTFJlI+QJ7zPAYjXz4pMHr+w6tXPmkl+R711WU+2X2XI/Amhj6+DbPJNyKUPndvEJaWSJM+niWnn07ziz4P8Nr+wUWEPuqPptdu9HY+kSLhpAvcbT7dI4fTmPtiPjdRxBsp61g+EY+wrpCuUj7FT8NNCoFFPtJ6thoHhDc+nMgqmypoIj5NbmHFUFQiPkJ7oRRiDB0+SyAXRQNZHz7++QbX9tMZPl57uhXB1yA+y6RHjl5tQz750fltcUJ6PuDmkA/R0Io+sLl5Ki7vlD46LGuFE+CePudD94q4OKU+DXhsgz35pT5QzNwa7X2ePm67RquNAJs+wnPdaIvSkj5jsJGJbKqFPgQzk01y1XM+SYS5fEBRYD5LnhSyuHFGPiNit3gDZUY+vX9HzwAeTD4iJqX9BVlTPnoVLxxOMVg+3jbKUP8gVT7GVYjKTOJoPlH+BX30nHo+Y7FVjkTGiz7vmCb73hGNPulokrEV8Io+fDAkUj/fhz76RIh9teeDPgHw+HBUjX4+/xgc2psvdz6U299WX3RxPrSIP1jPCGs+m1qxWVc6ZD4PD9RRErtfPmWZgs5VkFc+/qwiiRgJUD4Z1zXIT6tOPrUoTBRUYEw+SR2Z68AgQD40mO0z6IpMPtvNUCHmK0o+Br4cEkP1Qz4zCg5nMxA2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3845\"},\"selection_policy\":{\"id\":\"3846\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3819\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3822\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3866\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3821\"},\"selection_policy\":{\"id\":\"3822\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3816\"},\"major_label_policy\":{\"id\":\"3814\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"9deae9c4-ffbf-47c7-997b-ab72cea0d677\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"8a88be89-ed74-4b46-b9f1-38fb650b30f6\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:12.057765Z",
     "iopub.status.busy": "2023-11-28T20:40:12.057068Z",
     "iopub.status.idle": "2023-11-28T20:40:12.061746Z",
     "shell.execute_reply": "2023-11-28T20:40:12.062166Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 105.78, p-value = 4.06e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(105.78, '4.06e-01')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:12.075742Z",
     "iopub.status.busy": "2023-11-28T20:40:12.074724Z",
     "iopub.status.idle": "2023-11-28T20:40:12.077978Z",
     "shell.execute_reply": "2023-11-28T20:40:12.078882Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:12.084474Z",
     "iopub.status.busy": "2023-11-28T20:40:12.083782Z",
     "iopub.status.idle": "2023-11-28T20:40:12.086089Z",
     "shell.execute_reply": "2023-11-28T20:40:12.086573Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:12.091766Z",
     "iopub.status.busy": "2023-11-28T20:40:12.090805Z",
     "iopub.status.idle": "2023-11-28T20:40:21.623257Z",
     "shell.execute_reply": "2023-11-28T20:40:21.623614Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.643231Z",
     "iopub.status.busy": "2023-11-28T20:40:21.642221Z",
     "iopub.status.idle": "2023-11-28T20:40:21.645839Z",
     "shell.execute_reply": "2023-11-28T20:40:21.646242Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000e+00</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>283.420000</td>\n",
       "      <td>1.086713e-01</td>\n",
       "      <td>4.676460</td>\n",
       "      <td>955.293399</td>\n",
       "      <td>1.130006</td>\n",
       "      <td>0.801168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>188.403115</td>\n",
       "      <td>2.802532e-01</td>\n",
       "      <td>0.119866</td>\n",
       "      <td>30.240235</td>\n",
       "      <td>0.062430</td>\n",
       "      <td>0.076144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>90.750000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.525893</td>\n",
       "      <td>915.270162</td>\n",
       "      <td>1.037961</td>\n",
       "      <td>0.697577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.606651</td>\n",
       "      <td>942.753764</td>\n",
       "      <td>1.098792</td>\n",
       "      <td>0.764903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>214.105000</td>\n",
       "      <td>1.345000e-09</td>\n",
       "      <td>4.623955</td>\n",
       "      <td>952.703257</td>\n",
       "      <td>1.125682</td>\n",
       "      <td>0.796322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>405.287500</td>\n",
       "      <td>1.942750e-02</td>\n",
       "      <td>4.783090</td>\n",
       "      <td>958.514898</td>\n",
       "      <td>1.143334</td>\n",
       "      <td>0.817506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>592.230000</td>\n",
       "      <td>8.000000e-01</td>\n",
       "      <td>4.842263</td>\n",
       "      <td>1020.871704</td>\n",
       "      <td>1.243884</td>\n",
       "      <td>0.961396</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000    8.000000  8.000000e+00  8.000000     8.000000   8.000000   \n",
       "mean   0.680000  283.420000  1.086713e-01  4.676460   955.293399   1.130006   \n",
       "std    0.139971  188.403115  2.802532e-01  0.119866    30.240235   0.062430   \n",
       "min    0.480000   90.750000  0.000000e+00  4.525893   915.270162   1.037961   \n",
       "25%    0.580000  140.000000  0.000000e+00  4.606651   942.753764   1.098792   \n",
       "50%    0.680000  214.105000  1.345000e-09  4.623955   952.703257   1.125682   \n",
       "75%    0.780000  405.287500  1.942750e-02  4.783090   958.514898   1.143334   \n",
       "max    0.880000  592.230000  8.000000e-01  4.842263  1020.871704   1.243884   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.801168  \n",
       "std       0.076144  \n",
       "min       0.697577  \n",
       "25%       0.764903  \n",
       "50%       0.796322  \n",
       "75%       0.817506  \n",
       "max       0.961396  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.655045Z",
     "iopub.status.busy": "2023-11-28T20:40:21.654091Z",
     "iopub.status.idle": "2023-11-28T20:40:21.657574Z",
     "shell.execute_reply": "2023-11-28T20:40:21.657890Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>217.91</td>\n",
       "      <td>3.100000e-10</td>\n",
       "      <td>4.525893</td>\n",
       "      <td>944.116252</td>\n",
       "      <td>1.037961</td>\n",
       "      <td>0.817069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>518.17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.614739</td>\n",
       "      <td>959.994588</td>\n",
       "      <td>1.102217</td>\n",
       "      <td>0.697577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>144.83</td>\n",
       "      <td>4.170000e-03</td>\n",
       "      <td>4.831556</td>\n",
       "      <td>1020.871704</td>\n",
       "      <td>1.124139</td>\n",
       "      <td>0.961396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>90.75</td>\n",
       "      <td>8.000000e-01</td>\n",
       "      <td>4.766935</td>\n",
       "      <td>938.666300</td>\n",
       "      <td>1.127224</td>\n",
       "      <td>0.806409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>592.23</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.624366</td>\n",
       "      <td>957.927124</td>\n",
       "      <td>1.088517</td>\n",
       "      <td>0.786235</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000      217.91  3.100000e-10  4.525893   944.116252   1.037961   \n",
       "1  0.537143      518.17  0.000000e+00  4.614739   959.994588   1.102217   \n",
       "2  0.594286      144.83  4.170000e-03  4.831556  1020.871704   1.124139   \n",
       "3  0.651429       90.75  8.000000e-01  4.766935   938.666300   1.127224   \n",
       "4  0.708571      592.23  0.000000e+00  4.624366   957.927124   1.088517   \n",
       "\n",
       "   metallicity  \n",
       "0     0.817069  \n",
       "1     0.697577  \n",
       "2     0.961396  \n",
       "3     0.806409  \n",
       "4     0.786235  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.712113Z",
     "iopub.status.busy": "2023-11-28T20:40:21.667703Z",
     "iopub.status.idle": "2023-11-28T20:40:21.724860Z",
     "shell.execute_reply": "2023-11-28T20:40:21.725337Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"bdcfb5a8-da2a-4125-bcb2-8af3644b5cad\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"dffe3243-37d6-4400-a34a-c446aa423c90\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4236\"},\"major_label_policy\":{\"id\":\"4234\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4231\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"Iuc+u4DY5D+mIec+u4DoPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]},\"y\":{\"__ndarray__\":\"AAAAAACwVkBxPQrXo2BfQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[2]}},\"selected\":{\"id\":\"4238\"},\"selection_policy\":{\"id\":\"4239\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4233\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4233\"},\"major_label_policy\":{\"id\":\"4231\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4239\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4234\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4236\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"dffe3243-37d6-4400-a34a-c446aa423c90\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"bdcfb5a8-da2a-4125-bcb2-8af3644b5cad\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.728745Z",
     "iopub.status.busy": "2023-11-28T20:40:21.728280Z",
     "iopub.status.idle": "2023-11-28T20:40:21.730257Z",
     "shell.execute_reply": "2023-11-28T20:40:21.730586Z"
    }
   },
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.733765Z",
     "iopub.status.busy": "2023-11-28T20:40:21.733289Z",
     "iopub.status.idle": "2023-11-28T20:40:21.735258Z",
     "shell.execute_reply": "2023-11-28T20:40:21.735580Z"
    }
   },
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.738602Z",
     "iopub.status.busy": "2023-11-28T20:40:21.738035Z",
     "iopub.status.idle": "2023-11-28T20:40:21.812722Z",
     "shell.execute_reply": "2023-11-28T20:40:21.813044Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"555dcdfd-0a9b-4ea5-b21c-565aa7a36d24\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"b27eef64-fcda-4369-8a37-36b4c24b67e0\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4827\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{\"ticker\":null},\"id\":\"4565\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4568\"},\"major_label_policy\":{\"id\":\"4566\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4826\"},\"selection_policy\":{\"id\":\"4827\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4565\"},\"major_label_policy\":{\"id\":\"4563\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"4571\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4566\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4568\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4570\"},\"selection_policy\":{\"id\":\"4571\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4563\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"b27eef64-fcda-4369-8a37-36b4c24b67e0\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"555dcdfd-0a9b-4ea5-b21c-565aa7a36d24\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.832826Z",
     "iopub.status.busy": "2023-11-28T20:40:21.829396Z",
     "iopub.status.idle": "2023-11-28T20:40:21.866951Z",
     "shell.execute_reply": "2023-11-28T20:40:21.867283Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.878963Z",
     "iopub.status.busy": "2023-11-28T20:40:21.878067Z",
     "iopub.status.idle": "2023-11-28T20:40:21.881477Z",
     "shell.execute_reply": "2023-11-28T20:40:21.882004Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:21.887148Z",
     "iopub.status.busy": "2023-11-28T20:40:21.885190Z",
     "iopub.status.idle": "2023-11-28T20:40:26.644652Z",
     "shell.execute_reply": "2023-11-28T20:40:26.644972Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.6519787430763244,\n",
      "    'gravity': 5.231143951416016,\n",
      "    'metallicity': -0.3795037090778351,\n",
      "    'temperature': 877.8720397949219}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.231144   1.651979  -0.379504  877.872040\n",
      "std     0.170794   0.210658   0.048457   42.215742\n",
      "min     5.046334   1.416662  -0.462724  823.203247\n",
      "25%     5.114042   1.541775  -0.408025  841.287277\n",
      "50%     5.183891   1.607598  -0.388768  875.649689\n",
      "75%     5.333888   1.713150  -0.343510  902.169067\n",
      "max     5.592738   2.148934  -0.307751  956.643921\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"c1af8d42-300e-4ed6-a98d-2a6d296a50d9\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"96942876-a18d-4962-9860-154d60ca684d\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"fhu7DtUqRj4QOy/MEvNDPiDC/AfL1kk+nQaaTHVbSz7GWogkEhpEPrpUHZETA1A+zkNOK0wETD6z0uEJiAVPPt0BQg/9ClU+8X6M50GsXz5NF9Ak6RBlPo8FHrAyk2k+g1FD4EE0bT4ztjcKDF10PrNGo8f2VHg+GXJsP2sNfT5F51EFPkWAPlwCPb4Ah4I+BJAHzRoShT6xrnWj9O6DPnCLk/mslHs+pRQnFeRyaT5pzYCyUN5TPunxcNpOFVo+t0Pab1RWWD6ye+EEbqFLPqsABr+iW00+6mgxGiIdWD6saz5fu21mPiHz86KWeXI+XdEQhhHIfT7oiN2N54OEPsvapdL3r4s+rhEX5JoskT68tDEVGTmVPge+TYXgi5Y+5Cj3dOqHkz7/5xcpNwCQPvB0JijhPYc+D8FSdXirez7G2pSsvIRUPoTuZb9KkjY+DXyMMwyGKD7v3mhr8ao1PofEvjOdVjo+ksKbAcyUIT5OZ62ADzgnPvdI5Ve7rjQ+b9a3EGBlTD7LefuLAuhRPpNRSTrhGlk+F1c1K3zeWz5LAqqAK25uPgt735Z03nI+2F8ZNfNrfj7JfA8LHgiFPo0JKSyUrow+sHaleZRMkD5dIpnX9/qFPmALcpxupnE+39MFv1qbYj6ai7QhbetiPhCEYyl6fGA+dyRcNxaAYz6OjCG5etVlPl4iVFNlAGE+rCavGdzxYD6bPaRiFMdePi72I+4F61k+NwnU0DHDUj6m67erd/xNPkldtHpkR0w+T5BKJtuTUz6eUYpnxYFOPu3BNA115kA++9C77Ta5VT4ODw9xaThdPjIkjw1stlU+Vah5eNEKRT4WItZsMXNbPg4ANw1F+GM+xOrCOIj3aT4r9japrTJyPkCWDefoNXU++kZdAT20ez6vh+T+WgN5PidLns8Ks3U+9r5eUZydcj4VvzuuCyRsPubbaRkF9WA+Ec+cZsd4Tz4krxM9lElPPoLGQFBqLEg+ewi4Oum5RT7NDHglYCVFPgVvhdwlmlQ+hZAqYy8kRT4RvPQQLqxKPrH0PLdlUUs+iheuoQskVD45xuLige1bPmaJgw4UPlc+o6v3hVf9Yj5jNedECpRhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5235\"},\"selection_policy\":{\"id\":\"5236\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"aCWkQhjxQT5e/RPgBTtEPqOdXezSTkY+pJgQftYySD4+bjQxupM4Pl6I2/gE7Es+ptr3TRjjTD56Wno4rzlQPlmoFvk8JlM+qSCrs/wkYD5JmyhRouxkPoCgW9/Gkmk+K3Hdl0rZbT6+1frArkl0PkaoQrbjnXg+hMIQQJnAfT4hBUTaCaSAPskzJIQ9AoM+VcTqyc4FhT7LQymRbVKEPn5Id2JaT3w+jMyU7/Ejaj58vQCH1HpUPiFtISTmuFc+1pt8GklgVz51m6adohhTPqAM02txyFA+6BvGDcV0WT4eQpHxFztlPlEcfw43rnM+b08jW/byfT6b6Iqw5T+EPj3TlH8084s+7M5k9+fgkT4zXqRjIRWVPnetFDfCf5Y+YYd0dza+kj6TyvPKKr6OPkABv4pQyIY+gt66SC+qfD59PDpfHjBXPj2BciyEITQ++vONyQtCOT5q7dMsWo9BPuTsuc+b5Dk+LgE/QphlNz7oIBzn/uQpPtOuOLZnhTY+2ru2q/JRUD7h2bVTz71RPnS+503ZsFQ+y9BAXoEEXz5Q2ix8wdZpPgZVb6H6Q3Q+vU4P8ScegD5XsMrU1z6FPvtKqzTxRIw+JlBADepUkD7v2KS12oOGPhNic6ZDMXI+Ln11Zpd+Xz7B19UsO4xiPlpJvejRi2A+QMDgpNZIYz6mO9KjoiZiPpx6XKD0/GI+sWvbm2c9XT772W1vbu9gPoITpHUrplY+20d7Z3SvUz719cd+P05IPmFmjeY+uVI+1YuFyENWSj6NXcGCpQxbPmXDc/30Pl0+V6dGBKpdWz6jEMRmhbZaPoGo82I3kVA+wef2sbOATj7x4zmU8D1XPoWxYhoWMGE+RN45s/zdbT6flgRctQ1xPihDX5vSyHY+wWyg+fZaej62U+IAMDF6PiKwrykuEXY+3Q536igrcj7X0Gz+n+lsPkYamUDbH2I+VCtjb/QvUT5uZgmr+NZVPjvK0lnn6Do+9nIC/nm4RT4Jbd1/fH5BPseW4ecAR00+XY/MOlGWQj7AMGqAW0pJPmOvxjTUIE4+xuvD0KaeUD5Izr+1+mhjPnhR3J9wY1M+4pXZ1yalXD6OAY0CoMJiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5233\"},\"selection_policy\":{\"id\":\"5234\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0tOQ7/RBRD57R3j4PmVEPtFijNH+pEQ+ASVhhsc6Sj6j5Kdb8rQ8PsIkFoxrklM+4cuKu5r5TD7Xxx/U92NPPqJ4AohW/Vc+xf6JKG6SYD79Wp5063ZkPkE76iFfHGk+rJw9f373bT67ruZ4YbF0PiE3HxBbing+l6iMmFSufT4uI61vNKF/PuTuCh010YI+x9/sqGTthD69N4ZwiPGEPue8l3Spq3o+V46/8K9uaT75r6XTy+dUPkGXreOPalg+8VQZLXQwVz70OZ3yD6RRPmCKfM62M1I+9vFL1yyAXD7pewgMTnBlPlPbToHCAHM+/8APPzZ7fj4JVJ3blMeEPsvcxQ8Oios+BPSeJOB4kT4etfewVg2VPp+dOyvIOJY+ts5mojRkkz5Sqr3stdyPPqKDui9C6IY+TdVNCWamfD5zkdWU9fVUPuKOCbEIrDI+yLWrseDeNz72vF9shE49PrPbJXjsFT0+QYBXFFywPD60KWR0ZSwxPj0CPYzg9DY+GzRA+IgKUD5G/HjQfohTPvJaD8lx7lU+pn1SJpusVT7fbQzi5aprPkeyINR/jXQ+rvN1GCipfj4JL0RcJBOFPrXydBbmTow+coKbR2ewjj7cP57aEOuFPrhCOC3er3E+ikyMsEPuYz68tx4SFIRiPspVZkp/+WI+yucPqk4OYj7m65umpvViPuD2uxyGk2M+tqRF7xOAXj4Xy0q+ITJdPrEyfr8jJ1Q+dZfkVD9EQz4firsV4zpUPjf8JOKB8U4+bC7VpeRBVD7iEe18B4BGPu8657KjTFA+JZLr8UmvVD7ODFvuM7xgPv/OtDYEXVc+jLS/9pzOTj65GGk4HYhbPpORLzUBcmE+06MkGaE9bD7dgpYrfShyPgZ2E4oM9HU+LojdkH9Sej7ZqhAnNYF5Pu4yjKEKs3U+rel1+ntscj4vcbQeLTVsPsTsSQs+RmA+exyLc1K/Tj6BzZ2nSKVSPkGaYvSeSUA+NZVj9REcQD77Hdfnr5I/Ps5f2DcDHko+szBVvm9cUD7NtWd5EnRJPsuleordHUQ+C56KkOh3ST5QuJKxBpxiPrFvUXLnPVU+Wq3aRLZjZT6kX/jBOTdYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5231\"},\"selection_policy\":{\"id\":\"5232\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5225\"},\"major_label_policy\":{\"id\":\"5223\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XKvf41FfQz7JCU5DsFREPgBS29JmPUw+Vswk9vPIRT5ct7j54+07PhBXY7s0gU0+LEigygGjSz4hqACKu61LPsRkypna91g+ZlZGhA85YD7dxN28WtFjPkCIxbCezWg+CLMRSaKSbj6L+IAypAp0Pvt3p151HHk+lJr6BWtdfT7USJq1S5WAPnnetXQcpYI+SiJR53TAhD6Vmwb5memDPiqBUolyP3s+HQAgnvHQZz7vnrd0aS9UPvPGr7Q2X1g+raSWuLAkVz6tFLZ6WTxSPofirhEgkFA+SWuIW5+AVj40oq1+r5xlPmKRz8KltnI+1D1/se8Nfz5y98g4tGyFPtpr8HWUfYw+R5YtbLxZkT5vgF/m8RaVPu6qBL9CxpY+WQjbPRxIkz7uiih7OUmQPnEVdUceU4c+0vUiPaOjfD43kAtoo6lZPiPZBWhH/DQ+tKDJqBp1RT7PPu97jAk6Plrrs751Myw+UzMo0eKHND5Esaq9gP8yPlXSEA51ZjQ+KVqw44IJUD6Gu75TR41UPglvA6BGfVQ+CRR5t5zFYD6PWaAAfU5uPohBSeN33HI+FkrdtB9MgD5oxYM+nrODPjoBZtFJAo0+4GReZSGCjz5eHG4cxZyGPrj92Q7MDXA+zINd3qE4ZD5FuN2O7KhlPgxoJai4oWA+jChgOXLAYT5njDyuOGZiPhwUJjRCwGI+nkaPBqPtXT40gf5a6PBePrTfXS/mPFU+wY05ftoiUj7OIB0dFwpOPgmCNJF4jFE+xUOyIHQwWz6CoV0GzmNPPi9l8sUAR1A+/nHZJ2OUVj4FBieoRu9YPoPBOJY9t1U+8cn24035Tz5ZYnyiphdZPt86Dmhhj2E+m1OpyfuWaz6xjgBEMgtzPsF228n9iXc+vTFxei0reT4DDTM2fGV6Pkyub7bny3U+H77n9IjLcz4y+HrWiNhqPu4O9yFL/GE+wFCWUtJMUD4vI8nv7mVTPsoY8q8Ei0M+BO0DEOOsQj5MQUGw0Z5FPlD6E2YaLFA+7J3lNdcwSj5cQEkDzD9OPkwIajMdZkw+LBKQNeSRUD7CoaB+7mFZPhDX+jiI7l0++Qcj6fDEXj4ySGBzJfloPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5229\"},\"selection_policy\":{\"id\":\"5230\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2Z0bD5y3RD7ZTicG7otAPuAnNEwJQUk+I84R2mQ+ST6VzsjJredAPhP/+VYNYk0+b9Geoux/TD5OBPcQUJdSPrWJsrSB61Q+h694dvh3YD6K6dsN9nRlPh+jY8Nmk2c+nxPyeKS5bT59G3od5m10PnJhL5WFYng+AMbY9IgDfT5DU8awcbCAPr8xd3GwwoI+NF1MZsxShD47fUvln4aEPs6/+uwMWHw+6KB6byJeaD6M9C+EQVRWPhqiBqv/flc+jSDwap4oVz7DzsvkGadRPviK5UYDPFA+xkNpfjRCWT6sq3dOvWBlPukEtgs3cHM+7p6IJcglfj7KDpMwUpSEPm6ILlnjoow+sEz8abcfkT73zPA2g/yUPqMPutYzH5Y+lPBmZ+inkj6kOKD8D4yPPvQJYmsuGYY+dZ3eKN7vez5/MkzvC3tXPkRIsY2gtDE+K4qhwJ2RKz6KX6upoclCPoyP5RTLLTA+ZrwJsHfgLj4WVudIZtsuPq3qTpxRRjk+XIh19fIuTz6aOfu+Fc5VPhEG5xxjXlo+eYSbxSaLXz6lVnB9GvRsPt5dJNvPJXQ+4EPYRNYMgD7nVeuZAcOEPmp0/v7POo4+ekuG7bYBkD658Iyj3IWGPtN+549iUXA+kFtoT/8wYz436QJ/2XpiPm5UnucQ/WA+KfJDv6Q0Yz6gl5soQcJiPtN/ks8uxGE+hYLkxKojXj7Ec7ZaEClfPiUkJ88M/Fk+LM3+Y2AyRj6KUndcIC9KPvw3L6gfv0w+7iQIW19XVT7d1q1AoRVVPoWHIoWiA1s+T35e4KHOVz5CRV6xxqpfPu9ibktuiEw+k1EWQXinTj5E3oJk/zRaPmCOGQOfBWA+ajnapzQDbT6ZtGWG3+xyPiPd7vFPpHY+oWt5HSRRej76E6tPWo55Plj9lcnN8nQ+IK1GxyUrdD7HFwUAy/loPh93+VSD2WE+xJgv28HLUD6pEZJ2D69NPijkQnG39UU+G8IugRu+Qj5xw/wiYRZFPloWGH/MdEk+GQkwDLxeRD6EJKfMYCdCPt4D8valTVA+toIF95M/Uz4K0tMiA8JbPi4Vy91Xe1Q+LcXibnuYYD7sMhM6KXZmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5237\"},\"selection_policy\":{\"id\":\"5238\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5246\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"xFIp7Ok8Oz6taAjuDxtDPjou3VCHZU4+i3xp0eo3Rz6F1MYuh707PubZtNV6yVI+uWVP6ewAUD65XLJSgvtQPpkIEz4p61Q+eDN2hkCTXz4HsfPMAI5jPpHXXIouQGo+6Cz1zihZbT5+FU7GF/N0PjORpjw54nc+U7kABASWfT7F51ZOqGqBPvJ4foZGeII+w5WatqxwhD7sA+o6snaEPmugpPYOU30+3GVzfxE0aD4NUUqRO8NVPu/qV6DiG1c+go6lB9tjWD7g/kmzuLpRPpzHT1I8nVE+++WVnQQ+WT6pXFxUsNhlPotFtOFwInM+Or8ppolVfj44UCZ3vWaEPjF3q52yY4w+yym72QYUkT54V6/F4jmVPvY69fMjOJY+dWm3WO+Zkj6cn500zL6PPlAKE3Io+4Y+E6+vQ/0mez5lQEs/ON9WPiiC25HXiDU+uUBKf3moMz7rSyNxZ2I6Pi53xrb6KjU+vxJ3MJMfHj4STLYM5BgzPh6UG+/IDj0+MGoBGNFrTz7bh2Gu5ydTPuGssDFUo1U+s1AjGurHYj6+fQjWHD5uPpH608Q+sXI+qWA32RsugD6/OMUdKd6EPhKcZOL6PY0+yxj9iWTKkD7s5FZaUAiHPoXRrDsKZnI+l4yy01erYD5n7NC4HihjPnBsXEq8fGA+YczjMthEYz5s93ElbsViPmc4L2hil2I+2MLur2u2Xj6U6krNkKdgPgSaN+RtblM+V080LLIaSz55MavOU/ZLPg3nLFLJaVQ+EK53CYfRTj7tsXLGSIpHPmw8VwgKOVA+n6iziU0fVz4n5n7ON6lhPlplZ+zr2lQ+c1gmauIYTT5RTxdwcOhYPtv/VjHeGWQ+cPa0bi1HbD4ZwTWeRnFxPoFTN4Stz3Y+3YFgsuRsej63eZqw9wt6Pm6phnjFjnU+wzjqVwqEcj4QkWAsIh5rPi3kFjkiRGM+9Ey3G0S7Uz4OXp3w20RRPo12W94ZhUA+Vqf05mfERT73K4GrzyxDPp0HePXUFjw+SFI77mhBRD7v5mEx9NBLPpq1T3/M0lI+gEqCXQ5RQT6hktcHiIZePjbL8DLp7Us+dbVNNRQFYD71YY7jKQtyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5245\"},\"selection_policy\":{\"id\":\"5246\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hxDMhPXPPj5cedfkZ6xDPm/fpyU26kg+QesRc9ljST48BQrsGStDPlmAFUuYp08+AHOar9+XSz7yXEGySMZQPuF5kjP4elM+um8qwe77Xj6RcixZyhRlPu4Jm440S2k+dNmfj6hlbT49CspW7A91PqlG2qn8Dng+BklfIjmkfT5HAgwLrxKBPrIKZzsuT4I+VVvtCHVshD7wjuI2EaWEPr4kFjHCm3o+6uKtMdhWaD4IkzxPadhTPpTmqrjiFlY+54GTLpj7Vj48QnGTuSpQPhrEx+pHZ1M+spYmCGHxWj6l83XlAMBmPjg1JeL2lnI+hIJ3p2hcfj4tM9bwCsuEPtl5mVqkros+C5ZRk7VZkT70R2P5xk+VPjp7I6vTl5Y+1MA+ZO4ukz4lkI/v1O6OPlGMv4l/p4Y+mUHGCZUbfT4LZmuvEYVVPiX+eRTC7DM+ZzzAaQBDQD7b7mJS73s6Pv7NKuVeOgM+/RWsX/2BDj7puPD3EEcpPuGn+G2ssjs+S4aiUPdTUD6nMbXIr4dVPrA55GNDZlU+txDSDlyrYD7j3Wj8uB1uPus8B9LnDHQ+FqgjMZCRfj4/7zU5LeOFPhg9bIrZ5os+GzPxcVEkjz4jbDCeALmFPrntDPqwN3E+jFEA8N9yYD6a2FTbhS1kPhH32lfq5V0+3gy+pQIbYz715dML+Q1hPrH21NHpHmQ+jkoKk0xlXD6N4jH2bx9gPiUpjeA7FVU+fhDTjSKoUz4xZMW0JeZHPlJXQXsdL0k+ytcPqylwSD6ujBtg2oNUPki+GvmbIk4+9gzy1D8AVD75TV5L7rNhPly0WY92v1Q+A9AlDIzzTj7UFnL8pYxdPqPQqrfrSmQ+3z3Got3faT5dFaSvcnZyPj7zT9K03XY+SomhwPKFej5TwGATZad6PoJUrad7NnU+Ut529tBacz5VW9e86aRpPt5e3ogDsmA+a2xGXAJRUT6Yu8eIjFpFPvhdRzqYx0s+0VhlMhG+RT6KQjLYeM9JPprvg1PcO0o+6v/UnEpdRj53U8QPNZ5GPtxeQbVzQkc+xubfkESoUD59WXYafvlRPk9kkRFXP0o+X7KvnHcYYz6uo7vcFzhiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5239\"},\"selection_policy\":{\"id\":\"5240\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"rSoMYiteRj4ywQmA/rtBPort9evnPkg+Ba/p9SkxRD6Nex9jWdQ/PkguB8+VK0s+fo+Dug64ST5LEi8LRyZHPkkF62nhb1E+1ZINyJgCXz7KXoGbkp5kPjAV2nekHmk+86v2+XyYbT57CiXWrVl0PvUhSaczxXg+1IzrziBFfD6zb79RHMaAPg4SsLbsC4I+zvnxeHwChT54frcybLSEPu3UV8z/Uns+C8E83y+taD7sZsKKEEZUPm9x96QxA1g+8FgxpbD1WD4MYz5sUgBOPqp7QDYRoVA+X+J+Z+MnWj6tS52B1qBlPkHIHnQc8HI+/d6PbIyjfj4HhGYYXJmEPo6UwRFH6Is+QsXSZAIgkT5srzxt9wCVPi8a3RjyMpY+D2vly7urkj5RxluoYXWPPm5tU+8HCIc+1Q9wwqSaez4ZtME7i6lXPvaLoCwd/zM+KWD/RY2KLj78Lt0pk2w6PuQVsZqwODA+n4rHIq8pOD7aQq9EKQo1Ppz51C7Th0A+aSOmZK9oUj5WlTwYNO9SPqZk8G14m1E+2xaGN6W7WT6iAOECpb5nPmdb2YFGyHQ+22Eu4nksgD5Ncw5j2j+GPkn3oTJV4Yw+lWF3IWCqkD5Snr+LyVCHPkRJDkPibXI+w0SXccZaYz74kgU7iKdkPtYccjC6o18+u5CR1f16Yj4ZRQLikhdhPulSwh42qmI+CSqWbyWLYD7vw13b7wlfPrZuFaLnolk+AxjsGyJpUj5MDnDssFxJPsHXbdziAFA+ZN0GY2IyUz5fw+8Po4dbPs79tZiKnFw+htesWmiiUT7j7HWws31hPg0gyYFaMFE+uQnD/QK0Tj7F18zSFFxaPseTnQ1D8GQ+qqJe5WQebD73OyfoeJ9xPvUnGyORLnY+NQ4cdbYvej41mYWxxl95PkkZKt8lR3Q+vtkFobOYcj5zNKiZqVtqPsXyVNtlCGE+tDV+3Fx9WD4ArqitOTBNPu0WMHl5YUE+9i0rV2jMQj7MdJQmpu1EPujB418F1kc+7KMRtXI9Rj7jFRaox782Po/jn5AMEFE+MrgQ8tOVTD7nVAcAMGFTPjFtYdnrCFY+aEymnKWtYT4fhhdhJrNiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5243\"},\"selection_policy\":{\"id\":\"5244\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"t6jD4dXyMT4b3cLBszZDPj+9avAYsEQ+3p3msdXCSD7QOUNA8Zw8PuAED3FMGDs+frj4zfvyST6OsnQUWEhMPrbvxx41lFI+ZEf5NHFHYD5lhmsTfIxlPkB7CMMPt2k+nQu6joMJbj7kwbSqhHF0Pr9hO1HHvHc+PfxNGFYzfj5bvtoBz3mAPm7PSv984oI+gPakRbkkhT5lqBLToUaEPl1VKlvjrnk+BJv7PbdVaT6ybjwZTwZYPjCxN3rCUFc+T7eE3p7RWD7bISr0hBlRPvP3xwOSwEs+zpPRkYuoVz5UCv+DizpmPkVRn1e0RXI+xfAuiBr/fT5ijRAZscmEPhTPvjLw5Ys+VEgvH2D4kT76ZBEFUkiVPiJl7AJ9bJY+bE4aJNlbkz7foN06znqPPjVWU6A/D4c+ThCDY9AOfD5i8hZpih9WPt47sP0rgjA+MGSlo7BLOD6uET8S/OE6PtlL1ioT7jQ+M5NdkIXCMz5fNFj5KYYsPvdrGgPENDU+99xm48i5Sz5b6UKz8/JQPgSY1aV8dFU+U8hf+zGoXj7wnWhy0ydsPlB1F7nxBHQ+z18a3/qBfj51aC2iRXKFPijN4YAR6ow+vDPr24Fpjz4FeuCw6I2FPkbw7M2AbXA+vssXXfe2YT6mZD2COgpkPgcBxR6xjV8+5zHXaS1EYj5YKO1VJp9hPtEmDWfi3GQ+LV0EyKvDXj51iYzV8q5gPp0Otb77o08+1Y8BJyNkUT79RXzRy99TPt2njuHNzUk+EzcQpqC3VT7uXF+LtipTPsZl+uCfuVQ+i/9RSYjnWT7IrJJbhEthPhBCLDJaAlE+hKHIuWIGUT5k39me6vZZPiovuOjc82I+y/k3GhyAaT6bdUoQerxyPsXQ3VFFBHc+kvXzkMVZej4iPk0kEBt6PoFgykOGdnY+1ExO3UO6cj7QY2nKWI5qPsBXa0ZFVGA+ie5UzQchTD7QJkNZJy1RPsGC3uqQ1kQ+uCeNp/5gOD7M1PbabCQ8PpUB8WOdsEU+H46n4T1DOz60S6pUlD9HPpxjzFpUQks+wIngoJAVSj65k5l7M8NPPsTsiAezfFE+8QiIO4dRXz4a40ZqzTpePg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5241\"},\"selection_policy\":{\"id\":\"5242\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5223\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5220\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"5225\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lxSgQJMTRz4NoMokyHpGPlAGfhszX0g+FWegbNopRj67+5uxX35EPrSQlF1+L00++4xJCk8qTz4speKk6oRQPjjR5ATtIVA+doWSIs+QXj4/FpOOoOFjPhPTas98fGg+pEN1P96kbj41qs5xg/h0PlfnnU0RJXg+KU3ud5OHfT6RHfpFP1uAPjYEGQrrPYM+DfFlgKNZhD7UTQklfOOEPrquQv0bvXs+enIEABITaT7Cvs/dcIlWPkaxCuTpuVg+dGSKcYSRVz6YW5m/fV5QPhYa5MNbDk0+E6loA7biWj6zQBl6oP5mPr897PSYhnM+QHobs+sSfj7U+HLiHpmEPokT4Etx5os+J1l/Y0WUkT7a4N3IdF+VPtFyXr5xOZY+/630zUcikz4UD9OZetiOPm090OXYaoY+FKSuTDD6ej7uf/XUAp1XPnSRbCyTXTM+uy66/61XPD4g9VTmKQFGPlnpJgFmFkE+Efa8CNPaQT6v60ZC3bwyPkzrxtrQhjU+0gEocN1eTD5EuBqdysFdPgjb3cKy+lY+ZinLwGREXj7YiEcBowttPudf98TKSnE+GW13i8agfz7zSljKQDSFPpIhcbAfBYw+Wks4ltXojz4UVHgfEgOGPslQcQIe9HE+heW77oFXYz7mBmm9hThjPupbm19YYl8+ZbGKhn0yYz7pKsb4AmdjPvAAeKFXfmM+PT9FbJGIYD5cYpX5F61aPm6/4WhDKlI+UnUM5Fc/UD6GHRNDizRUPl8mYYvs1FA+c03+CrRcUz69FlUl70RUPofK2vDEW08+bE2Hur74Vj7xNcsEzVZfPtIM+avEkFQ+Hsivt7xjTT6xTlzuql5dPnq1sYcEm18+Cxlzc/TRaz6E7Tgl0qxyPuxrHy2fp3Y+U+1koz3feT5cyrMN0wt6PksjAshiHHc+4MFTQxFRcj7ojDmkY9FqPhQWjsOh1WM+8DBaq3YdTT6HmgQo//1LPhAM0Ukj5UM+uuinSDbzOD7Hk3VBURg/PgC+bGbR0kk+DfDxKPWwNz5nipfUugk/PhfvMA0kgFU+KA//2rzQUz6pyK5SGZ9cPmTiYJUOuE0+kGPBM1+7XD5qdYVUMRBaPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5227\"},\"selection_policy\":{\"id\":\"5228\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5222\"},\"major_label_policy\":{\"id\":\"5220\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"5222\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"96942876-a18d-4962-9860-154d60ca684d\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"c1af8d42-300e-4ed6-a98d-2a6d296a50d9\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"20b8a163-a2f0-487f-939b-e14ef533d100\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"0be48c60-fd7e-4a65-a59f-ed190b6bcc82\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5423\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5428\"},\"major_label_policy\":{\"id\":\"5426\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"5425\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5428\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5430\"},\"selection_policy\":{\"id\":\"5431\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5431\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.23, C/O= 1.65, [M/H]= -0.38, T= 877.87\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"op3m4ZWaVz6t+J/NN2RbPpAek70aUFk+Ntn5zEVuUj4uJexkWrtMPkiy8eO8+UE+wPgMH/X9Oz6IBt7uD0wxPtiP3LfxzUE+eys2dfuGND4irVJ/JyU4PtZSh1xAyzo+iyLZyEmRSD4AcwN71BpGPlTPMaUe8WM+7NiR8UEObj7pRmaSfil2PmYZZo2lt3s+qkhlqMkNgD6MLHgVeZt/PmOneZRNaXs+aUabfwDbcz78cTkKRZtvPiz80DTrsWc+V6xyJIH0XT53KoUo8L1UPiumTFLiAE8+7OmZv8vnWD7MX7KELTdgPk6h4daS6Fc+XWEHepkmSj4EK2YP7oJPPvwUUoyYelE+DoF7V749Uz4XQaNn8ZVVPgykJ51Yn1o+gIyjbiCIYj6Kwd0RfT9gPhfTxnTU92M+Vpfw60ULWj46MLZlMN5hPmKey3igkV8+b3yDJNF3aD4v7oKYL5FiPnK6XO9SAG4+1oT9Nrc9hT4iZABb9sOQPlkMUajkZZA+DKCEtZLJiT6XXEP5GCWDPn2LU98Q+Xc+NDxKm4C8bz7QBvOu3KtlPnvQF20jul8+x40D/ilvWT4xFiqGSp1QPrKEGhi3v0I+b0hiCArkMD55LVLut1AwPjTkJ97FESw+HupYORtiMT4n8CoGG0cmPkooo0VWeSg+249ZFFIqTj5F7KlLSVOAPuY5Z2IrRIw+m6Gx+i2Jkj56y5ov8jGYPtbI8arZ5J0+nF/yStp2nT5x9JI7WcCXPhsi8ufBOJU+yr+G78OgkD7hvvgtIzyHPsJThL+WpHs+Onz+RVFObT7D+hpf3nJYPu8h5KsTplY+j/+UAEVpWj6ODbpeIpBgPhDlzDBgFGM+Hu74DIzAXD7kYo3sSsFrPpMt+0PAPn0+Zxa4phHKhj5JaWoOasuGPuBMFpO/K4U+emFS/iofgz4zC9ZdX8qAPmFzrz5Y0Xs+Hr2Hrw3+dT7qEaKizPBxPsXx4H2m320+IDsBCzLLZz4izMlDGopiPlgfe1Z37ls+ToCGbnk2VD7hoMwqpjdRPs2iEVskOFA+ESkLK8slQz6c41ZSs1ZKPjQIFfdci0c+2U59nAsZQj4z4y8xVrc1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5454\"},\"selection_policy\":{\"id\":\"5455\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5425\"},\"major_label_policy\":{\"id\":\"5423\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5426\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"5455\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"0be48c60-fd7e-4a65-a59f-ed190b6bcc82\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"20b8a163-a2f0-487f-939b-e14ef533d100\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 250.43, p-value = 2.73e-14\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"16a5136e-b4cb-42ba-8846-6e3e088b560f\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"b78489c4-3a3e-49f9-9493-f75b3a11a6f3\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"qQHU+N9mYD61JUer9x9jPkAmp1+lr2E+AmXxL6hZWT4teC3eHnhTPjffC+iCCEg+YAEG2hRpQj5+O1UnY202Pvq2RNiapEc+/vLJ1ii3Oj5qDH828FQ/PlVv0uYWVEE+eEi3C9g5UD7Zs+bJikhNPuoPQ61J5Wo+OUIMpRJsdD43mWd2k1J+PlKlCEHKAIM+KNy8ccr6hT77LHEqOI6FPmnYi9IehII+hnYtJnd/ej71i+S8aO90PsRcHTH8um8+aG/w7wScYz5AWuiWNtZaPr65OvZSyFM+dhFC8vkFYD5o6hw4v4xlPrrPDIngEWA+VFLLobl5UT4d0mSlvANVPkxyKg6fQlc+XNthKUm4WT7Jghac+RtdPv5mEEue/GE+gL2nXs9eaT4EVAPHFvNlPkZtARXl6Go+QkoBap9MYT50G5/5Pi1oPoFJr+RsWGU+0iEnFQZ1cD60QpnBEvtoPntqG3o0q3Q+H9OfRc8qjj6CkZyNnfWXPl/ce5VxSZc+j5z6BX75kT6gDFFDWlOKPveNxwFSPIA+2OI1WmkndT6bl++zqeNsPrwu/+IE/WQ+1jieUCE5YT5gptJhSnxWPjZYu4Euq0g+xLxTkhjJNT6amXM09so0PoU5+8chhjE+WFxGj+rdNT5zwRxh3qwrPmrBnX5r4i4+5Myv4gA8VD5W47lbQp2GPmy+Fv5lo5M+6NIRM4/ZmT7YdUeVQQChPszHJs0PPKU+wbthUFwkpT4iYTurnT2hPlRkKo9N+p0+Yu98yK42lz60z1dOtBiQPpgY197C4YI+pBzX6/DJcz4eFuXkU1xgPsrGkqK0iV0+VGrYMchLYT5kL6nrs1xmPoZPbJJDVGk+6GlkbhLkYj6bM0jtGfRyPgpJZBXEiIQ+fHQo7JcdkD7rnKPDoTWQPjcM3+G1Ro4+VCQCPrhbiz6/tpvRAeWHPulRpE0uu4M+yCt5J9cqfz6o+CdPC3V5PiSOVSE0PXU+NTpgTOfccD56EUEA0R9qPmabFRCJjmM+ugMhX1bjWz4H0qyqQ5NXPhK7Bi8kUVY+3B4lNivCST7C9oZNYDBSPqLUWI0HLVA+7nt+ud2oSD6qdztO8yc9Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"V3Fz0yzaZz7Vf3PkGYlrPgz+e53iRmk+6w3ri8r2Yj6vRg4BhWRePlnXAynBZVM+8CM21s40Tz5aBEE3T41DPqh/IKFLPlM+aSK5Afv8Rj4B2k0QGU1LPnswqyZ91U4+FnkDqUozWz6EGE3ZrmJYPrk3daJ2k3U+E7eKYEIUgD7k+Q6W4q2HPoJ7/066eo0+8K0euTAmkT4dIuvmYOeQPm9sRH4bmI0+iVOBCay1hT7k4ahbgpOBPjqFgeRaqHk+76aEFjcPcT6Id57DUyxoPqNDWAFcXmI+wiiojxs/bT6ohwjBz/lxPurUlhG43Wk+dN3sH0XoXD68amFxmm1hPtrV9eXOZ2M+rnoopf0uZT4Wp5Vm2GBnPjgkF0dHz2w+QmX/v52tcz66KE3eRJtxPh3qFpUb03U+cg0W6cpkbT4bL81ncYdzPoDH8t/fVHE+vvd8w/Qkez7Ou/CrRqh0Po8NJwFG/H8+7i1H+VoulT79eL2gBT2gPs02P5RNsp8+5y+WmFtumT74GKQLtkGTPhOr+rJypYg+rU6Jo0TjgD4WGx9gNjJ3Pj09jPwKLnE+2AzjjmPvaj6palSvLJphPlVrFLPR+FQ+99sk+uhdQz6ujmrihGxDPki12DfDMUE+0kxyoUjoRD76VxXluY07PgHofxZs0D0+0rb33mCfYD4pxO6H+CqRPqwrxx1rop0+7omE7ddBoz4auPKnXKioPjRC42cp560+OYpH4PLcrD5A5BLVsVmmPrIgAdflV6U+EbDXN+kVoT6s3PM6gUOYPtAXVrU/p40+N67S6VoBgD4eJhPjNC5rPlsSXBvmdWo+hJFBtBLGbj4iOz6Peg5yPmHF8ljxhnU+sxCNwI6jcD5TWid4FQB+PoyPLpk/u40+XmmuVoDwlj41d7PJSK+WPreN3pbz2pQ+LvTeueHjkj78GM7AIdyQPmVof++iM4w+0oCqvAF6hj4q2dFWi2GCPsCN16kjqH4+1YRIn/56eD67Mfr2xkVzPsxsRJCuR20+pc7mRdmtZT5S50nem+RiPoJ/wr4enmE+TDbuu/qTVT5AvtjtPcBcPqi0TmxyEVo+TykNsyRiVD57UEE+3BhJPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5896\"},\"selection_policy\":{\"id\":\"5897\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5897\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.23, C/O= 1.65, [M/H]= -0.38, T= 877.87, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"5919\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5850\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"5845\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"gLkjZoYgZD7FUt3HiFRnPiaSkf5De2U+bMDjo56jXz5u353vUe5YPvTGCZ0Cak8+qBIe2PHOSD4ZouvKAMQ+PiXbQg2ZEE8+9A2PtkcsQj4bsMaVyHtFPujPvgbKFEg+x2BdWpG2VT44OSAfeoNTPtdfi7wNg3E+MNgQs0tKej5AY6EolmuDPmoQBEjCPYg+BBz98ZUjjD6auCP8fK6LPmwiaCgdDog+ZgdMzrN6gT7fJxu6Ngt8Ps4ZiH7swnQ+o958jjndaj5UUomHt8tiPoKgdXyFQlw+HB31wIqiZj7c/BZdL8BsPlLSUU3M92Q+5BfcYP8wVz7K0xPEeO9bPgAPC20eCV8+LrTsHJEFYT49dFCaavdiPpvFE8nyZWc+AaKpt4IucD680s5B0JRsPmDQyw/Ho3E+2quLKbVYZz7VvJzkEJ5vPkFsSlIWAWw+yAxSbP3MdT6Url4G6JJwPgU8oT29U3o+v4sLTuEhkj6+wYtn1DecPpaJ3ZTffZs+O2ZIz+yzlT6kT6aWsTWQPoUcYVricIQ+GUCkUPl2ez5ycwudBdJyPpvUC26NrGs+16LAb0IUZj7ZvT3gUdhcPrgL+Xk0p1A+WbpOQ3VCPj57W6T8/9E9PgtS1hvU9Dk+/noV6T3XPz5a3NGKFLI0Pltk5+rQoDY+RJ1PUGG9Wj7Utcu1mXmMPgz17o3oopg+sbmGw08XoD75Fp0eT9SkPgAFhZqckak+/aJUmKcAqT6xIifAp8ujPm4pS0+GKqI+wicWnECxnD4w1qXEGi6UPjSYFkqBRIg+iTy+X1PmeT4eHvxjRMVlPuC6UjZgnWQ+7P0Mc+0IaD7U0hKF1DxtPpJ2FJGJGHE+p0W/95cVaj73xreyF3p4PktsSdcBIok+7W5rIQyHkz4QiqtGdXKTPukJ50Mn/5E+LANw7N5IkD5c9Jupos6MPifdkZ5o94c+W4szqLYHgz5+1WX+EBx/PvKNluWr8nk+hV/U9fKrdD48XY271ypwPhkELdAba2g+Qai7OsLPYT5VUKCzPa5ePgvdRdawxlw+3WKAK4g6UT6B2q8dT3hXPqXE0/w8H1U+ozPmx0lbUD4ohq/yatZDPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5876\"},\"selection_policy\":{\"id\":\"5877\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=250.43, p-value=2.73e-14]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"UYiz9rBJPT6MaffT/I49Ph+cFKGL1D0+fC69B1caPj4/jyxxcGA+PpiSsNVZjjw+HRvH7am1Oj4/Iw/lpqBCPkusB9x+90c+8gnR9EiqRz69AMF9NmBUPoGterelWlI+70KFWD54RT4bxnt1vEwvPvUPx6dbfEU+FJn8qfQ0Qz5aZFC4/OVAPioR6RXU30I+0RvPUTMPRD4zlllK+BY9PiAS8kxemj8+29ps/r4SQT4Is9EMO1xCPvcEDs7aNjc+9tClr4cJKj4aDiSqV44FPozoYvxNhTY+J3JTRubRPD5zks1Z5lEyPk8KIEEPnE8+IrtXko85Kj7qF6gomy8vPgr86HbKGjI+YP3BteqhQz47FvdfdxwzPpZ2ymiPYjU+b+N33PmvNz7gyXaa+/ozPruFkrOhOTA+RK4AaDgVMT6o1U6C01wiPhOgukP4KSg+l9f5oFsKLj6j6FefJ/8xPhmsYdkLAzU+iLaC455lMD7NGgYr9XAnPn1XnAzl8TA+bxYrORezPT7VqRaHdUxBPmea7+ol0jI+THkBffCmBj4hhmcKFJEePs/nUkqCmjc+KO7CPCDkQz4LQFTjPlM5PqJY/9+YcDQ+SvUiZTX5Lj7SHzNoA+4kPhNwTWsZfhU+B2tFET7wyj1+JCXB6GsQProRui0OHCA+SjKxxngeKD5jpiMMkx4xPv7YurYTijc+wwgfhcQMPj6AWADpqoo+PuXo7ZZw/i0+ihRH10l4Bz76vB9FjbI1PsbEnrjVIjk+SheYncxaJT4/IzZXKUwmPqOo9H3gQCc+gKibvNMZQD4v3V+8n3gxPiuIwI7O1zg+4gfjWsaXID5tyEEP1+0pPhdjLfb8cP49z8VmgkGQOz5qddxW030nPm/aNYTNcUA+aL5nwWr6Pz4e/2RZf1I4PvjcEMJ+UD4+61CbvnxDQT7hujKiG5ZDPsSEsromcEs+hUBD2JkEPj454uJ+wstCPrO1wt2atz4+jAuC2qcTOD4vu6EgFR9APpPuf9yD8kU+3pKdDqInRD5madbxO4VHPiW1PU4uykc+SoeUt3fOTD5HZonX6gxGPgUrhAkROkg+KA/R1HTAOj5vfeLAVP49Pj6XjXWnYj4+WV4Rs9waUz5XJ9rXcwJQPtsoRD4SZko+D5K/CV2wSz5DF1tu7EdOPrh2hWft7VA+uDbAkS1yTD7H9YFvTQtRPhiCbIlpjFQ+foGB1vodWz4SaoAB5RlePsXEHE0EkmA+6pCL2/hPYT67kS2MzoxlPg9lzcZ2SGY+54kZUJM+aT7V6YK/e5dpPl7Z0WDW42k+5eyK68fObD6nUEiGAp5wPoU8KtKihnM+DmNxlkbHcz6k3sdCOGZ3PmWdrR2Ga3g+kQWid7wTeD7kIiB517Z7Prz1WPt4HX0+Sz4/mlo0fj61k374ehOAPm1BDQZ19YA+OnkxQ87XgT60Uildd82CPsDP9t+w+YI+KAnF/HFkhD4+NEaE2NCEPmk6WySTb4U+NR9zinluhT4KXuPpW5SEPk11hEtd14I+vjCktdTGfD6Ja5hHnYN0Pmm7ooiluXA+5JNkLajVZT7EciW0xbthPp/zhlHCRFY+jNEKQ7+GUD5uPN/HUzNWPp4DWpYSfVg+5v0P8olnWD4OvyqReV1XPlB8pOcERVk+UX1OuuI6Vj4v/rxwpsRRPuH5Sl536kw+5NjlB11FTT5R1uybC9hQPpd32NwcR04+IKMEcwgSVD6oboJIxtdWPvB0W8dh7F0+LsPiN1Z8YT700gZrpKpmPnBdsH5XDWs+BBQkGCVwbz65F0VUlg10PuMMKN85Wng+IiGzl6brfT5ROZGTuPJ+PuqhYmQQRoE+iEs2bNPCgz6iQpdUHyGGPnofZJE8dok+LXg6+YbZiz5sm5zJZeWMPhxpPx63+o8+hiuM9v5/kT6/y9ZH4DuSPgrSdr653ZM+BK++XdEclT4CF6GCtF+WPoY3GyJJTZY+7bQIsURulj4cuyhRmJaWPtNON5w4rpM+cn2WMuV4kz5cx+ZCn/2RPqdFgyhG/5A+u48mwmubjz40pG5qu2WLPvHEd1ce94g+EbC5uU51hj6vQQfw2viEPlmZ8MGOLoI+gROkSWh8ez4MmlpZo/dzPiqhY1u+p2c+r4v9XsipUT6xGPJHD7k9Piko08QDGTw+TaPpOWCJMz7n9XhOwrolPi8jvaPYRCQ+AYkYi9vJIj62VPlaArwcPmqihlGNMjs+BeOI5hTPNT50KjiB31kwPvAbhb/jpSU+6OeirT+QLj7j4n4uO8szPnyj86ycqBE+stmiaMMYFz6YWzgalZkcPlFzEeGaFSE+s7ShXKFSIT4VDsQDJ5AhPlzjtVEsziE+ozQfL6EMIj6yKN7sC/gTPis7Ia3eCzw+/VFTbxmeQz602KQr90ZJPonepxbaR1A+cU7srBEoTT4Q0B1HattXPlFiI1KODlQ+WS0MuEZrUj7LISxHgnpWPhcqQGQI91I+vuqmi34ZUT5KMBU9QeVePu4G/TMI91U+zWGRwwjcWz4jjTFoawxdPj7TRKLCFGQ+sGRWUahFaz7pKSa38YVnPkgYnFxqo20+Gs0VO+accD4Gdc5BB7BtPudF1CuhZnM+64AvoOjpeD779V1VQ495PvK/TJRV6ns+S5PCFE5FgT7ehXuhcDuDPiOfrFT41YI+XfZlRU3LhD4KeHuw6Q6GPoycaYXK8Yc++9v6qp49iT6Y1KZuxauNPumk2mGvp44+IKt9DpRRjz4YkkI/UzuQPtwEnVPmi5A+gEL++72/jz4Qf9SVgkmOPpJgsSU+3Io+PEI9/QI6hz5MBX508MWDPi5RyrEaqHk+c370vbJrdj58K+9nw7JsPuR+UFlyO2o+H1guJeIqaT5KxASPD4pmPqsxSeotHWA+08bpyycvXD7CMeyiX/JlPjM5DzALtlg+GhWyyWUVYj7GajjdgClrPk6lLH1DnWc+BGxrJlTdaT4O4xYuSGFiPjtJaLd+3l0+f2eirD28Rj7dkUBX//ZbPkrZlJ23BWM+sjHvQOGXYj5hI1hU44BmPuF+W2U7umY+aUKFPDYYZj7sFlw+UG1iPmI9BrAvB1Y+cEMGnjoLYD4X0U2oKJhbPp088meq2GE+J/iQoIpBaD5/xg5lSLpiPn1rjpjq22Q+B3/liLnfYj4X4RAHl3FhPtJcSy9Lzlg+xuSxhujTSj5WE4B0xQ9dPlPjlMkdP2M+1dna76kEYz7K9hGMHLRaPo9WoGaAqlY+n8bP2tYrVz7lAzTydrViPo+50qN9ylE+uPtI0U2VRz4KeBaQKKBLPsnagql2Ykg+8Bg6N4P8VT7jTQWygZhIPhHmm3RNn08+5/iviSSWVT7nTv/60tFIPpeuZTeGgVA+thP7sERaPD5pdvdHayQ5PjBuiHj5fkc+zJh5iV0BUj4gh7qkSIpZPnOeUx/qbEU+LxfsLGzsUT6CgF27ectUPgYh8EXogUo+W4ActH6HTj6hx1cr2+pZPgxO9CbnkEU+QXrNMqm/Sz7uJDmhRf1QPnfCzMybnFU+o+lJKiSNSD4yI6UjSe8mPgohzYi8t1w+dc8ZE8feDj6IKB8tG3cpPooMC450rDU+2FgewKlsUD5+wSA9t1FbPvZM2EKIUFY+unAQER7zTD6r+qu9XApjPuzMPB+rKU0+XjR2mBoBUz6uAtXwHrtaPndWCxq0xWA+d7E0ry3sXT7zwzR5XH5jPmEkn0WT9V4+db9alomEXz5GkdD7X2w7PvGrhVawXlM+q8ALKguYUT4Gy1ABmWVIPgsNGX7sHlQ+g6TLWgxSOz7oJ67zMMpMPoaVoMsLvj0+XaTyoSjOUz6i1IeHGY1WPuO+zEBp+S4+OnMn5lzzUj5f3Ti5wMxdPrDHyoa/8Vo+zhka563gXz6idl4IcDZdPs+GDKax/WE+3MtmYS9NXT7ScLKyC8JkPohDSdRtimA+wtkxCIlyaz4kbzJn/whWPrSaJ8NPXGA+DR6nFtkDaz5h2USZa79rPvhBjpM+5ms+BWHdgVFvaz5ABHXZMC5yPsnNCgFMsWw+F9Io7k7ZcD42sAaVZtlyPnn9hCK0QXA+WkYwcE6IcT4jW9tIfnx2Pls8eVRgrXM+LFj1nNrZdT6lNV9UyxtzPszDfHvBYnk+1+vHacTicz6keyWD89N6PiEKSYYMjno+s+7itEVveT5pFlbLMU99PpWpJlGcpHk+RYRES0Jgej58ECKH3Zh4Pt9/kU40nnk+WUCToASNej6Ex2wngr94Pmwg/KKz0Xs+kaNy7AUAeD6zxv+7yd14Psx8/oEQyno+IYNr5eQKeT6qxHZbMfN3Pn1ueYWm7nU+iKKpdwTndD6u9dTqHodzPin/zrdV7HQ+R5y0Y6WzdD7j2nDmJnZ1Plvi/4kZFnM+lvr1l7IJdD7B3pzpTjNzPlrRAb7olnE+Hd1ekannbz5R93PbnOtuPkH4WVlYRWk+83g2quDvaz40GPtT+pNoPoPRG3WVmGs+kZX/hnpQaT7om5abUr1rPrJLtvlmuWY+1mPMYx4gXz7bbMpwlwtlPgKo07LrH2Q+oQ8IdKe/Yj5VozUVkbNiPiP7Olm44lQ+Hhixu3JPUj5uGoems5lUPj0HMajuxjs+qU9/3AVDQz4xjWWDR6pIPkDIZ5YuGU4+a4MN0QKoUj7zGo9sW5dPPlxTdj/i5FE+aHu9LBILTj46c/TvyWNMPg2ZMO0rDUQ+0a5Z5ggdTD7U83lttA5OPpmdKYDA+0c+Sq8doBXPND4CHUurK8IwPnAAB1Lwv0M+KFKlAwHqQj7xqYbXwalDPsDWL5N8akQ+1u32bCUsRT4mkLJrKbkUPr9X0tE6li8+/kub7FJ2Oj4O4XG2autDPoIiL+79rEA+eyULaiGVPz7yOIPprM09PiQfyyRG+Us+KRZEbA0VNj7aER2+tgNEPkXHOf2xCE0+1MDNyquOQT4PdspD1xUoPiPzOh1GZSc+Ff7o7pI8Oj6d+rObMHBQPrx6WlyCYCc+XRcaNw17Jz4O+mxenpUnPoN4eSrbEzo+m3bYB2Y4UT4dmQjRMnw1PuvCTerunTw+ACyLQVLkQT4kxPzq/w5CPntX9eKB7UE+pnjHwsTLQT7KZK+U0qlBPj9mBj6rh0E+Bn+Jok4kUj6CXnZQQUQtPpJzGCblXhk+wM/usixuQD6Pi+9DSMtGPupArXM7AkQ+woaMUnoMRT6hOQ77xvBBPj05Aylioj0+wSc21VEmQz4FCgu6o4BHPnnTeltdQUI+W2Ec0uxvOD4U12R615woPuZ26Fn6RL49hsj5hc5hOj6ZvgxLb2JKPorfmCHL0VM+eMJspn1aUT48XmOYcBg6Pl4uJHM9ekE+kO7m37s8UD56LTZY/MRMPiPCbdYSDEk+nrEys61ORT64g0cl5IxBPttIubMPtlA+uw9sGlc1UD40mpXgjwxbPlNwPS6KqkM+4ADUmH/JVj7Y+eB5ZhNZPtT+XAjoX1s+W6ljcfWuXT6GuKMRkMAAPlfzkFJ1Fks+jvDP5mKfWj711WhTIzBTPjpeiZqxcEc+rk4kiOIkUT7bGsmDpZdWPnwrOzWPEFw+/dq+icxFQj55g3/9ppxUPpjUk2oiNVE+/sO+qVSTSz5kU8z0SG1kPutfGfVpoWE+k+3koJCkXT52/S7nffVOPnMLdHi8Tl8+kk/9+bY3Uz5ruRw/g7dZPj8l1300uU4+RlBqIn/XMz5GFt7YnUpJPhaU2nyJSFU+05E9t9fLbD7zeECdopJTPrOZJ8WO7FM+nM0bDdhGVD76haH/rH1QPiE/wjFUYEk+7sbMO62bIz7ZPN2zueFjPj0/RiibT3M+BfQO/B1QZD5rK95mlcRyPkS7GfAZa3s+74sfPgp7cz4T2UQ4KDqAPvwpGH22fYI+3UfYPfbDhD7WDxy+4wyHPsIKj+yfaYE+KM6ldGB/dz4Zsw4hMDxoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5852\"},\"selection_policy\":{\"id\":\"5853\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5853\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"ticker\":null},\"id\":\"5847\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5848\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5877\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5850\"},\"major_label_policy\":{\"id\":\"5848\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5847\"},\"major_label_policy\":{\"id\":\"5845\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"To1TAdTWXT5/zgb+mHNhPi8QdvgILWA+YinxCAzZVj5/wAOfxUtRPvon20WsGEU+bgJkUL26Pz6tXoEYBBwzPtg0Qj6XsEQ+gUwf7SriNj4SLn0wu7M6PsJzm5t3SD0+tsbkaMwVTD4odtmyAWhJPsT2HXxSqWc+kpnvOlUWcj6082aY6O56PtJYlrU264A+Lo9S32CHgz57MUEXMx6DPhhsskrlT4A+jrlUX6Ehdz4KB2NjTRtyPvV0y9h+1Ws+z7bGzge5YD4GcNNjso5WPgROEXLLaFA+uUWbKv/IWj4uMq19PK9iPjSK6PTfPVw+mMaYrPdmTj6pp6HYwUJSPsicJFyYKlQ+2KdW6WloVj6UO8jYKplZPjKPs/DHql8+KqPygXqWZj5OVP7pjk9jPsZXnJRSlGc+ffmrq0TJXT4mQf2tTzdlPnlzpl8ismI+/IG9AGmpbD407dAWKbtlPop2KPfTanI+o/l5qbO9iz5OrW200EOWPp/TEeEgnZU+toyLVLh9kD5KM1rum+aHPgApBkXnH30+4oAlzZKkcj6esHcNNWhpPnQGqWj+U2I+/NN1DPiUXj67ecjoffRTPtKtLnFTO0U+LfPnI+ZpMj7rXegrZDMxPnYt+opbViw+7M0iVPDlMT7h7TuGtjcmPvYwUbRyKik+rGgXFVilUT6mlnmdREiEPmwvuNlGppE+3qM4QYhUlz6ifIRHlPSePv0fhFmRgqM+sftDZR2boz7BhSoLXzmgPu9GdsUDc5s+KVffYJgIlT4yZ7S5ePGMPo9GKHEnvYA+9CkegndbcT5Kuiu4gmpcPnEuJATD4lg+CcJqRq46XT7ju9x/V6BjPoAg3/Z+zWU+wy/o6lIHYD7se/ESeMFwPlr4yGBWtII+9IupABaEjT7ehq6KrdeNPpg4uBlXAIw+pSiSVuhIiT6E9N2el/CFPk8ClkHDC4I+ojqEgLRsfD5fH2LRRDV3PqpsaSuLXXM+rlm21duxbj4U+wipM6dnPiCsFbJQn2E+MRQCp2rPWD5484WnfL9UPoilpSQwv1M+fgktSBRMRj7ei4vtbxZQPrQK8qRmakw+BkmPD4F0RT4tVrkTcfg4Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"Waydy6JVaT4L17OReDVtPh0UrQR/yWo+uytrnxg3ZD4u/xsgb0hgPvcyHHqs3VQ+DBIFhELgUD7C8qq+/jVFPrnAIW5NuFQ+qHWO9nnnSD4tyU6Ts51NPvjy1x+swlA+M15IgDxiXT5ct9Nk81JaPkzEBztyMXc+ZwuZFSE/gT6mTA8FuF+JPgLIcdpNkI8+bdRTguVfkj7cH4NwYx+SPsDYHQZVzI8+BbLt7JZkhz5apGkIkP2CPiJ5qpAZm3s+PIMZp7WAcj6l7CjdFVBqPoD5bMMfDmQ+XJec7JXgbz7FY0AekWhzPopfL6Co0Gs+fMxr64IuXz72/8LXF85iPpzA+D7S82Q+cBQuRe3WZj6wyjzIPyJpPp3DzZmB9m4+bfJZLsgRdT6VqM/MCO1yPt10SdVkfXc+9lpB/cfMbz5CHJ4NaQJ1PoQydyIFqHI+klhFWEZFfT6O5lSBO0h2PsAADUJTHoE+rBpax+hklj4X61QN7BWhPsefVCRPr6A+wD8FSiHqmj6jhR82FXiUPookPxLRUYo+qH8R6q8kgj6VDluz8O94PmFRtzmOgnI+sFtG2QjebD78gNnrEt5iPofAWju/sFY+wsBaMYINRT6GLLDmTThFPq7GFzk930I+CBQEv0XkRj7EwYXSTUg+Ph4Y0z00VkA+7ujDRbXqYT6B6g5nd1WSPqy6JUKKn58+cyFxZluEpD6h73cZVC6qPgPqhdunoK8+SUplyzFmrj6hvyN18F2nPmQv27uKm6Y+Lnyma/Qsoj7HeHEseeOZPtnpBCPby48+jyevnpc4gT4XX+JrR1VtPohek+peyWw+ak1y4UG6cD7idCTFqGxzPuRcuaZTSnc+xi1Lgu4Rcj4BCT+pWxmAPjzgyU2tj48+4BeCQg1MmD6x0P/HE/mXPob38foi/pU+BvKWrUntkz4a+izaVtaRPv+3jfsN440+ZfkkEBPZhz7OxbSVboGDPp3X4U/mQ4A+M5LNAPj+eT7uPJaiFYJ0PhJcRO7mNm8+akb2Ic83Zz6ZVt1ff05kPkcK88MY52I++0DqMgZPVz4kKdRNLtpePvCDLqdGCVw+w8IECFP8VT46YYJbnTBLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5918\"},\"selection_policy\":{\"id\":\"5919\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"b78489c4-3a3e-49f9-9493-f75b3a11a6f3\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"16a5136e-b4cb-42ba-8846-6e3e088b560f\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:26.650452Z",
     "iopub.status.busy": "2023-11-28T20:40:26.649612Z",
     "iopub.status.idle": "2023-11-28T20:40:26.655426Z",
     "shell.execute_reply": "2023-11-28T20:40:26.655746Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 250.43, p-value = 2.73e-14\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(250.43, '2.73e-14')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:26.664051Z",
     "iopub.status.busy": "2023-11-28T20:40:26.663514Z",
     "iopub.status.idle": "2023-11-28T20:40:26.665392Z",
     "shell.execute_reply": "2023-11-28T20:40:26.665747Z"
    }
   },
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:26.668946Z",
     "iopub.status.busy": "2023-11-28T20:40:26.668439Z",
     "iopub.status.idle": "2023-11-28T20:40:26.670209Z",
     "shell.execute_reply": "2023-11-28T20:40:26.670627Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:40:26.673895Z",
     "iopub.status.busy": "2023-11-28T20:40:26.673351Z",
     "iopub.status.idle": "2023-11-28T20:41:15.843436Z",
     "shell.execute_reply": "2023-11-28T20:41:15.843799Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:41:15.862590Z",
     "iopub.status.busy": "2023-11-28T20:41:15.861809Z",
     "iopub.status.idle": "2023-11-28T20:41:15.864995Z",
     "shell.execute_reply": "2023-11-28T20:41:15.865317Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>3.900000e+01</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1009.625897</td>\n",
       "      <td>4.771906e-03</td>\n",
       "      <td>5.199180</td>\n",
       "      <td>877.810415</td>\n",
       "      <td>1.601772</td>\n",
       "      <td>-0.386407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>1531.487270</td>\n",
       "      <td>1.892432e-02</td>\n",
       "      <td>0.077105</td>\n",
       "      <td>19.397302</td>\n",
       "      <td>0.118785</td>\n",
       "      <td>0.022885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>121.450000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.014863</td>\n",
       "      <td>848.991923</td>\n",
       "      <td>1.394975</td>\n",
       "      <td>-0.424249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>214.510000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.144042</td>\n",
       "      <td>862.006846</td>\n",
       "      <td>1.496109</td>\n",
       "      <td>-0.402256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>371.700000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.203393</td>\n",
       "      <td>877.366353</td>\n",
       "      <td>1.595334</td>\n",
       "      <td>-0.389664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>819.440000</td>\n",
       "      <td>1.395000e-09</td>\n",
       "      <td>5.255370</td>\n",
       "      <td>890.457265</td>\n",
       "      <td>1.677761</td>\n",
       "      <td>-0.363639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>8137.740000</td>\n",
       "      <td>1.040000e-01</td>\n",
       "      <td>5.353516</td>\n",
       "      <td>928.892721</td>\n",
       "      <td>1.855094</td>\n",
       "      <td>-0.346025</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius   chi_square       p_value    gravity  temperature  \\\n",
       "count  39.000000    39.000000  3.900000e+01  39.000000    39.000000   \n",
       "mean    0.790000  1009.625897  4.771906e-03   5.199180   877.810415   \n",
       "std     0.120018  1531.487270  1.892432e-02   0.077105    19.397302   \n",
       "min     0.590000   121.450000  0.000000e+00   5.014863   848.991923   \n",
       "25%     0.690000   214.510000  0.000000e+00   5.144042   862.006846   \n",
       "50%     0.790000   371.700000  0.000000e+00   5.203393   877.366353   \n",
       "75%     0.890000   819.440000  1.395000e-09   5.255370   890.457265   \n",
       "max     0.990000  8137.740000  1.040000e-01   5.353516   928.892721   \n",
       "\n",
       "       c_o_ratio  metallicity  \n",
       "count  39.000000    39.000000  \n",
       "mean    1.601772    -0.386407  \n",
       "std     0.118785     0.022885  \n",
       "min     1.394975    -0.424249  \n",
       "25%     1.496109    -0.402256  \n",
       "50%     1.595334    -0.389664  \n",
       "75%     1.677761    -0.363639  \n",
       "max     1.855094    -0.346025  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:41:15.874135Z",
     "iopub.status.busy": "2023-11-28T20:41:15.873441Z",
     "iopub.status.idle": "2023-11-28T20:41:15.876082Z",
     "shell.execute_reply": "2023-11-28T20:41:15.876412Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>750.16</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.269696</td>\n",
       "      <td>877.684631</td>\n",
       "      <td>1.468957</td>\n",
       "      <td>-0.347799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>2181.98</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.118451</td>\n",
       "      <td>895.701701</td>\n",
       "      <td>1.634815</td>\n",
       "      <td>-0.389512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>851.81</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.128627</td>\n",
       "      <td>919.595927</td>\n",
       "      <td>1.394975</td>\n",
       "      <td>-0.399072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>642.69</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.159371</td>\n",
       "      <td>869.686707</td>\n",
       "      <td>1.724811</td>\n",
       "      <td>-0.394632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>371.70</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.301689</td>\n",
       "      <td>856.378194</td>\n",
       "      <td>1.509912</td>\n",
       "      <td>-0.372497</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square  p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000      750.16      0.0  5.269696   877.684631   1.468957   \n",
       "1  0.600526     2181.98      0.0  5.118451   895.701701   1.634815   \n",
       "2  0.611053      851.81      0.0  5.128627   919.595927   1.394975   \n",
       "3  0.621579      642.69      0.0  5.159371   869.686707   1.724811   \n",
       "4  0.632105      371.70      0.0  5.301689   856.378194   1.509912   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.347799  \n",
       "1    -0.389512  \n",
       "2    -0.399072  \n",
       "3    -0.394632  \n",
       "4    -0.372497  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-28T20:41:15.957737Z",
     "iopub.status.busy": "2023-11-28T20:41:15.920043Z",
     "iopub.status.idle": "2023-11-28T20:41:15.960995Z",
     "shell.execute_reply": "2023-11-28T20:41:15.961386Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4d0b1610-27f2-4330-87bb-6e0486f9ed63\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"29a5063e-9cea-4505-8e5c-7e6617cec85f\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6342\"},\"major_label_policy\":{\"id\":\"6340\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6340\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6343\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"6342\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6345\"},\"major_label_policy\":{\"id\":\"6343\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"6345\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"6348\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"VsawqIWY5z+B1vaCN5voP4M3m6Biq+4/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]},\"y\":{\"__ndarray__\":\"H4XrUbiuX0AAAAAAALhgQM3MzMzMXF5A\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]}},\"selected\":{\"id\":\"6347\"},\"selection_policy\":{\"id\":\"6348\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"29a5063e-9cea-4505-8e5c-7e6617cec85f\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"4d0b1610-27f2-4330-87bb-6e0486f9ed63\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
