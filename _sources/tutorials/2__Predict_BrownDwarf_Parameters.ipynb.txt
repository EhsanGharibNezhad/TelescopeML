{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "723c394d-987d-4f2d-8bd6-378a23b1218e",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 2. Predict Brown Dwarf Parameters Using Trained ML Models\n",
    "\n",
    "\n",
    "In the following steps, you will: \n",
    "\n",
    "We will need the following modules from `TelescopeML`:\n",
    "\n",
    "- *DataMaster*: to prepare the syntheric brown dwarf dataset, load the trained machine learning (ML) models\n",
    "- *Predictor*: to prepare the observatinal brown dwarf dataset and deploy the trained ML models\n",
    "- *StatVisAnalyzer*: provide statistical-test and plotting function  \n",
    "- *IO_utils*: provide functions to load the trained ML models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dab6ba1b-87cf-482b-9bad-7ae019708a27",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Bottleneck unit testing available.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1001\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1001\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1001\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1001\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from TelescopeML.DataMaster import *\n",
    "from TelescopeML.Predictor import *\n",
    "from TelescopeML.StatVisAnalyzer import *\n",
    "from TelescopeML.IO_utils import load_or_dump_trained_model_CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91672156-446c-4d8f-9dfe-bca34b4bf009",
   "metadata": {},
   "source": [
    "## 2.1 Load the Brown Dwarf spectra and Trained CNNs models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98309fb6-0ed0-4f20-a65e-45b54910a8c8",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.1 Load the Synthetic spectra - training dataset \n",
    "\n",
    "<!-- ### 2.1.1 Load the Synthetic spectra - training dataset -->\n",
    "\n",
    "We computed a low-resolution spectrum ($R$=200) utilizing atmopshric brown dwarfs grid model, [*Sonora-Bobcat*](https://arxiv.org/pdf/2107.07434.pdf) for spectral range $\\sim$0.9-2.4 $\\mu m$. An open-source atmospheric radiative transfer Python package, [*PICASO*](https://natashabatalha.github.io/picaso/) was employed for generating these datasets. This dataset encompass 30,888 synthetic spectra (or instances or rows). \n",
    "\n",
    "Each spectrum has 104 features (or wavelengths in the astrophysics context, i.e., 0.897, 0.906, ..., 2.512~$\\mu$m) and 4 parameters:\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94ab3753-16a7-40be-8832-06a8837649db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/egharibn/RESEARCH/ml/projects/TelescopeML_project/reference_data/'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the `TelescopeML_reference_data` path\n",
    "\n",
    "import os  # to check the path  \n",
    "\n",
    "__reference_data_path__ = os.getenv(\"TelescopeML_reference_data\")\n",
    "__reference_data_path__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fbe88-e7b4-496f-81ab-7c7fa9db75d3",
   "metadata": {},
   "source": [
    " Load the dataset and check few instances "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5332f129-5253-4067-ba57-165f5249e252",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "      <th>2.512</th>\n",
       "      <th>2.487</th>\n",
       "      <th>2.462</th>\n",
       "      <th>2.438</th>\n",
       "      <th>2.413</th>\n",
       "      <th>2.389</th>\n",
       "      <th>...</th>\n",
       "      <th>0.971</th>\n",
       "      <th>0.962</th>\n",
       "      <th>0.952</th>\n",
       "      <th>0.943</th>\n",
       "      <th>0.933</th>\n",
       "      <th>0.924</th>\n",
       "      <th>0.915</th>\n",
       "      <th>0.906</th>\n",
       "      <th>0.897</th>\n",
       "      <th>is_augmented</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.103045e-08</td>\n",
       "      <td>1.181658e-07</td>\n",
       "      <td>1.307868e-07</td>\n",
       "      <td>1.269229e-07</td>\n",
       "      <td>1.159179e-07</td>\n",
       "      <td>8.925110e-08</td>\n",
       "      <td>...</td>\n",
       "      <td>9.640859e-08</td>\n",
       "      <td>7.612550e-08</td>\n",
       "      <td>6.901364e-08</td>\n",
       "      <td>6.247359e-08</td>\n",
       "      <td>4.112384e-08</td>\n",
       "      <td>5.127995e-08</td>\n",
       "      <td>4.897355e-08</td>\n",
       "      <td>4.087795e-08</td>\n",
       "      <td>2.791689e-08</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity         2.512         2.487  \\\n",
       "0      5.0         1100       0.25         -1.0  9.103045e-08  1.181658e-07   \n",
       "1      5.0         1100       0.25         -0.7  9.103045e-08  1.181658e-07   \n",
       "2      5.0         1100       0.25         -0.5  9.103045e-08  1.181658e-07   \n",
       "3      5.0         1100       0.25         -0.3  9.103045e-08  1.181658e-07   \n",
       "4      5.0         1100       0.25          0.0  9.103045e-08  1.181658e-07   \n",
       "\n",
       "          2.462         2.438         2.413         2.389  ...         0.971  \\\n",
       "0  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "1  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "2  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "3  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "4  1.307868e-07  1.269229e-07  1.159179e-07  8.925110e-08  ...  9.640859e-08   \n",
       "\n",
       "          0.962         0.952         0.943         0.933         0.924  \\\n",
       "0  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "1  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "2  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "3  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "4  7.612550e-08  6.901364e-08  6.247359e-08  4.112384e-08  5.127995e-08   \n",
       "\n",
       "          0.915         0.906         0.897  is_augmented  \n",
       "0  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "1  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "2  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "3  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "4  4.897355e-08  4.087795e-08  2.791689e-08            no  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_BD = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                    'training_datasets', \n",
    "                                    'browndwarf_R100_v4_newWL_v2.csv.bz2'), compression='bz2')\n",
    "train_BD.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1568f0a-dff8-41ad-a418-a5b8dcb205b5",
   "metadata": {},
   "source": [
    "### 2.1.2 Check atmospheric parameters\n",
    "\n",
    "- gravity ( log$g$ ) \n",
    "- temperature ( T$_{eff}$ )\n",
    "- carbon-to-oxygen ratio ( C/O )\n",
    "- metallicity ( [M/H] )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab0e8cb4-2b2c-47d9-9643-c4627e7caa84",
   "metadata": {},
   "source": [
    "Note: one of the columns, *is_augmented*, is indicating whether this is a native dataset or an augmented one. let's just ignore it for now!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a30da21-ab88-406e-ad1f-e54c6291684c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>1100</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gravity  temperature  c_o_ratio  metallicity\n",
       "0      5.0         1100       0.25         -1.0\n",
       "1      5.0         1100       0.25         -0.7\n",
       "2      5.0         1100       0.25         -0.5\n",
       "3      5.0         1100       0.25         -0.3\n",
       "4      5.0         1100       0.25          0.0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_features = ['gravity', 'temperature', 'c_o_ratio', 'metallicity']\n",
    "train_BD[target_features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6de4600-1aaf-4996-bf68-74eb4104573e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.511960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.486966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.462220</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl\n",
       "0  2.511960\n",
       "1  2.486966\n",
       "2  2.462220"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wl_synthetic = pd.read_csv(os.path.join(__reference_data_path__, \n",
    "                                        'training_datasets', \n",
    "                                        'wl.csv'))\n",
    "wl_synthetic.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2e166f-bcdb-4074-bfbd-d159cb691ac1",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.1.3 Load the trained CNN model\n",
    "\n",
    "- Load the trained CNN model, which includes:\n",
    "    - The model parameters to apply it to a given datasets \n",
    "    - The training history to check the performance "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fde89b23-8885-48c8-8248-0b62afbd1d6c",
   "metadata": {},
   "outputs": [],
   "source": [
    "trained_CNN_model, trained_CNN_history = load_or_dump_trained_model_CNN(\n",
    "                                                      output_indicator='Toy_parameters_v4_1000epoch_v2',\n",
    "                                                      load_or_dump = 'load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d070eb4a-cb8d-4155-8b19-d1418309feba",
   "metadata": {},
   "source": [
    "### 2.1.4 Load the trained data prosessing Scalers\n",
    "\n",
    "- Load the trained StandardScalers which were trained and utilized to train the CNNs models:\n",
    "    - trained_StandardScaler_X_ColWise_MinMax \n",
    "    - trained_StandardScaler_y_ColWise "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ab9fcb7-6d82-471e-a25a-84a5ad6ff0db",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/anaconda3/envs/dl2/lib/python3.9/site-packages/sklearn/base.py:347: InconsistentVersionWarning: Trying to unpickle estimator StandardScaler from version 1.1.2 when using version 1.3.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:\n",
      "https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "Load_Save = LoadSave(ml_model_str = 'CNN', ml_method = 'regression')\n",
    "\n",
    "trained_StandardScaler_X_ColWise_MinMax = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_X_ColWise_MinMax',\n",
    "                                                     load_or_dump='load')\n",
    "\n",
    "trained_StandardScaler_y_ColWise = Load_Save.load_or_dump_trained_object(\n",
    "                                                     trained_object = None,\n",
    "                                                     output_indicator = 'Trained_StandardScaler_y_ColWise',\n",
    "                                                     load_or_dump='load')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b63f8b7-b0f1-44bc-8612-5666e1d76bd7",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.2 Predict Brown Dwarf Atmosphric Parameters of HD 3651 B\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fadee9b4-cecc-4dc7-973f-db2498ed730b",
   "metadata": {
    "tags": []
   },
   "source": [
    "\n",
    "### 2.2.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8491eae-99ea-4b64-86de-bf0d3d275b13",
   "metadata": {},
   "outputs": [],
   "source": [
    "HD3651B_BD_literature_info = {\n",
    "          'bd_name':'HD3651B',\n",
    "          'bd_Teff':818,\n",
    "          'bd_logg':3.94,\n",
    "          'bd_met': -0.22, \n",
    "          'bd_distance_pc' : 11.134, \n",
    "          'bd_radius_Rjup' : .81,\n",
    "          'bd_radius_Rjup_tuned': .81} #0.81\n",
    "\n",
    "brown_dwarf_literature_info = HD3651B_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf1c0860-4064-49d7-b1cb-1c6035da6960",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93cd4e86-4b53-44b8-8bcb-ec9f8b7c0675",
   "metadata": {},
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c6b28d3-4b95-40a5-be12-24a0890fdb5a",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8eac3bbc-9943-40b2-b147-9f6606c1d2a3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17\n",
      "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17\n",
      "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17\n",
      "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17\n",
      "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1055\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1055\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1055\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1055\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8d8bbf47-9baa-4371-8e13-7daf8ce0be09\" data-root-id=\"1004\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"6a0206a2-f9e0-45b0-958f-5ae6f94b78e4\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1015\"}],\"center\":[{\"id\":\"1018\"},{\"id\":\"1022\"},{\"id\":\"1048\"}],\"height\":300,\"left\":[{\"id\":\"1019\"}],\"renderers\":[{\"id\":\"1036\"},{\"id\":\"1053\"}],\"title\":{\"id\":\"1005\"},\"toolbar\":{\"id\":\"1028\"},\"width\":800,\"x_range\":{\"id\":\"1007\"},\"x_scale\":{\"id\":\"1011\"},\"y_range\":{\"id\":\"1009\"},\"y_scale\":{\"id\":\"1013\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"1033\"},\"glyph\":{\"id\":\"1034\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1035\"},\"view\":{\"id\":\"1037\"}},\"id\":\"1036\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1016\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1040\",\"type\":\"AllLabels\"},{\"attributes\":{\"items\":[{\"id\":\"1049\"}]},\"id\":\"1048\",\"type\":\"Legend\"},{\"attributes\":{\"ticker\":null},\"id\":\"1041\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1005\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1043\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1044\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1051\",\"type\":\"Segment\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1025\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1065\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"1015\"},\"ticker\":null},\"id\":\"1018\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"LogScale\"},{\"attributes\":{\"source\":{\"id\":\"1050\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1045\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1065\"},\"selection_policy\":{\"id\":\"1066\"}},\"id\":\"1050\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1044\"},\"major_label_policy\":{\"id\":\"1043\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1016\"}},\"id\":\"1015\",\"type\":\"LinearAxis\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1041\"},\"major_label_policy\":{\"id\":\"1040\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1020\"}},\"id\":\"1019\",\"type\":\"LogAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"CVNUVkjOmDyTh03l8210PDMK4OErC5U87d325tuffTzyjVTD6HVRPFiG2Ma1vHQ8kUA1Rp6YfDxWX6+KRHF5POXL7cG+vGQ8aDoxweqLfzzqvAUjAv9zPG79mAIrLWs8Fsr9Z/gNWTygmGPPPI9MPFJ0LjsjCiw8V4pfF3I0eTycuUs90YB+PHH0mzGY5oE8KwGg1AeQdTywFKEemSuLPK26502LFoo8yQVjeI5ZczyE7iWSil5sPAEqLBfM3FA88pAmvbRqIjyHNSIIajx/PLMT18++xHY8HwaTv/v/ajxrO87Xa3dgPP04fekDJoA84eNFfgOzczx4i8a4f+VHPC6LHbAqv4A8bumSbHVRejx/vOp4lSRzPLHq1OIVQnE8GZDiRKfkOTzA77ypGq11PM6OjsD3S1Q8hFCpUT5ndDz65op/RRJTPJ0VwtVxFFY8t3Mo9Kx3YDz0PVvcDbJ0PKl9yRH7BXQ8qPOD6FsmYjxwUvQyOqpaPH9I5BGV6mM8DdthZPoBQDydbHTiHThvPI9uLyghGng8D7t8eic/WTzKp73MfmJgPAzyPNxpJWQ8KYKECC11VTwOB+8QRotRPFN4/QfHMmw8ql6cBm+4Yzx7b1Df+QJjPDxZeR47cmI8mZYCPKrLWzw5nce6Rn1hPCbvjVe4FGU8E0FU9CmsaDyFVQfyPP9VPJcL4PLsJVg80Bdsnas8bDzOJ2YmHL11PCSpuwv8kD08qJGEQ9vdNjwrek17uiowPH1c4pmISwA8Zw9Aym+AXzwAeHdeImBjPBYgzxXyZlo8VqBe3T4bTDwCBPh4zEQbPEjwStqG/Vw8KDCDdmAjbDz1p8RzDGdnPPsSpqDjd048M1fczWr0ZzyUcxyeIvxiPBBeReve3GQ8cqgNEmxCZTzOg5jMGBZaPN/kcjB9/2E8saltOMAPRDzRMZib/DFgPBP82sxK2W48ksDXz19NbTyAFHTVg2hZPOlA3SZ5XjA8V60BAycIQDzz4kyQWA1nPFnyFD8QA108HLrxbvSbUTxRd54TDtxpPPRpeYUCCmM8RWTfNlAIXjwvNiVDUohaPHwo+36MBlw8WW8+uZPhYDyoV+z4/rFtPC4J6Q/yIWo8tLrlJuWRZjxoonptiBtjPP4ntWiDHWE8/jX4+TzFaDz1HKIqT8FzPBHbk6Y5DGQ8aHwMWOP4bzxA7dpjIHVuPCs1HLHQXWk8mtZk/bP0aDxp0XDgJA5nPCP3zBmR33M8Q4hLcd9CeTxBtW4DIKR3PGmimd6Dxnk8XV7vtHvRejxaw35HJaOAPNNryzyhSIM8DPV92YxLiDyvG61eHASHPLnP31YytIc8hy5jclSXjTw309j1C+eMPNLCP8ftdo48/e8NzqgKjjzjxO3BW8+SPPGNoR2iWZM8DtDLmxgPlTzE0lOnkAKXPJhmEOg/GJc8RlUlgVGDmDxW3l47tq2YPGld+D0rAJo8dT9BodGJmjymYl3goLScPJlNzgp1op08FpsTlRNnnjzDMtU7etOePHy8mdU9gJ88wssMzZuHnzxQBmoeaA6gPJEIUYoU/po8oIurBiTslTxZ5qd2oD+NPMw6VAJCMIk8CXpYAS55gDzB3vQomqR2PFvp5YvVEm8803AjDcQ6YDzSKN679BhqPH5iKFBVd2o8LTw42qlCcDxF1eUKe2RZPB+OC9ga9Gs8/Y00TCZ1ZTw477jDVCNPPGnw2IUi/mI88HiuLsRbXTz2kFj/83RWPE8Vhw8sUWM8rj1DMPm6WTwAAk6Eag5iPIt7+iMCZms8iyV5cgWwcTx3P4VDwXR1PJ7P2pHLrH08ZWq9ueT1gDz+5JlOzQSFPG0S4gOMB4o8nUlaO0g6jjyTAxL7ebCQPIwd2oQvopM8afxINoAUlTwP14EpsGuXPNpz8FeTuJo86wdLZz5fnTzg6YDua8GePK+qU4g2RqE8JikXq0inoTzqMiMNTrWjPK7KNeqyFqU8f2YPHMOBpjw8NshaLLCnPLpOL9ymrac8khBZq2WXpzy2FCrUC4CnPLaEjRGOmqU8sJhtVXAHpDwDs5EQhXuiPJSXMk6g4qA8iz4L8g69njxvsuEyQambPD2TkOYd4Zg8RBuStK8pljynctZVvnKUPOPMjK8x3ZA8tGtdRL+1ijxSm4ZSXAGBPJS9+TXcDHM8WipNNitFXDw9yGJPilxQPPPTbSrcPCU8NG9Z6njmCjxMmTBbpxwkPGZr5T3YvzA83v1BQNyOHjx32UbKa2UhPP6zbHRpgyM8ho6SHmehJTwOabjIZL8nPKez841IFFI8c5tjriwmPDwClCarc2BAPFL7ZxJDFVg8Pk2dsgveTjy5xiUXkzpSPKH177zisEw8clKs1USkNzzelAonWV85PEvXaHhtGjs848RZ3cStMzxzVFJAY2RIPBZb7ZBH+Do8zDG/A3oHTzzN8uoR8eAtPHBJ27mnYDQ8ALZTSdWLVDyuyBhvscxTPEF4ggnPnWU8aOAbvsmkaDwJa0fY+6liPMw17al5n2A8yT2nD2Hnazy3UV1YOsRmPABQsmzglmY8rENZrz7IYTz8FzkLeAxnPB/712WObGw8VwkYgK1pbzw0qeMvE+x1PJ2liZm/33A8HPawtstVdTzSt/ngG1p4PJ+N0WHJVno8x48g/bYCgDxozAxwStCAPC/FfurYvoY8NCArlDZMiTzB1fAme0qJPB6cHejcX448h0V8bCOwjzxdS1eLQdqQPCfQp9YJBZI8KKdPN3UGkzx95sy9/g+VPBvEz1iPGZY8jqsMShgyljx0rw0Szy+XPMI6ijI245Q8nsCJD0izljzfEJepTf2UPL277JHAN5Q8kx+YHe3/jzwkhyU6H9qKPMHRada+0oQ8dLSKwzESgDwFMh/wfkJ0PGJWE1ZC7GU8AB82I+2mZjyiP4Yac9NnPH8fmGJsh2Y8EiIUGFr/ajwbxqKJn/pjPHf5aZY1fmU8whBhY++5ZTw3dxg7VBJuPApVbsGBnWs8r1lOr12NbDwV832ABgBuPEfJb4pBqGI8KT+5gNLiRTwEwoBoP9VCPGtK7ohD5Vk87YoujovZYjyEIifLRK9jPIr2e87cqWk8OnSafBnFWjxeYiMrVw9hPL821Oe/FF48r33NujAnVTyWqn1F+x1VPPOT+LaAX1M88dgUS5zyZzxMiYZFoHduPBFvfG+2Fmc80vQapQJdYTz8ToERMSlnPP+kcic1fmM8i7a92r+uZjxPNq/EQXNXPNM4f1rXel885mEuyIjbYDxySX5F1stXPMppuRie82A8Vao7qRJfWDyNDzFYNHJnPMrTv0z9wkk8Vs9vC9Z7RDyn4IUj4KZTPLJW/oksKVw82Eoi1M/EXDxDY3pyuwtXPMi1hFl5H0w8goeUxDNEPzwr98GauMJIPKUPv91spUA8PlB4QUIQMTxJJlDuWLXqO6X33hIQXCE8c3ZsS2WGMDzUdj0WTb4wPB4pO3uMeVY8ih+gtNfJSDz73ptPyM1QPDGu58SkNlU8zh/yma31TzwQHun5sFlMPFEc4Fm0vUg8lEjh5CcQWzx/QWnOuuBkPAJj92uFBEo8srR8rsyfNzyFPojL0lhAPLEi0j+/4UQ8fPIglZp+KjwufbsNDc1BPHzf7mY5cFQ8tOhtfbrvWzzj7/xoirdKPFe+RCe2jTs8ayJFwHcTYjxAWlQXs7NgPP3YfwCnGmQ8eD9UImGZTzxktBINvzBLPO2kwTvb1Dc8L3pYF5gJVDwC76nKW9xlPDJyqlFoDVI8D3gGMjjBLDxv5Xc3IrhWPEi+iyXoDi885ko48Jzp8jtIa2GrtiVBPGqVnKBjcEI8BoAOBcLzUDw+mG3DfQZRPHewzIE5GVE8G7HIi5VRSDytHCqj8dZRPJJZy176tVM8bU02t/IeUjz+BkPx7RpVPAXEvHwW8lY8qil3c22zVTyeAo0fuhNdPDZ7nEOL1mA8/ysOIDasYjz/YX/WrKhlPMQHLODYI2M8euUv9zF0bDyR7OKnEEZuPF8XvE1gcl08dpXrLPigaTx0A6rSc8NsPPVBkppuo2w8f9BcKrTeZDwmR8qpocRxPHPWLDXGFGw84DuwafZLczxKGr8NoypqPDzWHTzNzXI8kWNAZc73cTyehVqN1dtyPLi5NHkqMHQ8a6g3AkAKdzy11lnZxO93PHTNyRimlXY8umtYNSvedDzpzI0gxVt3PFHBYgqo53c8nHlM32Y9ezyzOFJsq893PN+3VW4YRHg8M2uP6db2eTzkrxasP3l5POOkGuiEnXo8vAJUYsEleTzGJXNzFBN6PI2rQ+ufY3g8kwgj8QoVeDx6XMEd1bR3PPaymG6Z/3c8HuqBcLuHczwA2CqF/4p3PBRSXd/3/Hc85MwadDgJczynjr8rhfd1PEg0sHGCfXI8JsSvMYFocjwn+vJO7ntyPISjsrREFXA8n1VxoYDRbDyYVUi3c19wPMaFfPwoam88AlqvFysPajzLP0aH1+lpPKlgNE1Zp208EAQO72tYZDwxmMGjJZZkPK6z9zZ+NWM8me55KAUeZDyQMItPiZ5fPFwyQ5c0nWI8WDVe8s8EXDwcwxH6IE5jPE9XaHYAZGg8XT8MbG9kYjzdQEvLDAtUPER2PZ3F6Fk8etuC3kKCVTzdqFZV4gVZPNAcidNcjE08ys/J+OkZMjwu/zKf0Jc7PHeWCbdjrzs84RUV/QUDNDysKHKKIapFPJO8Sq/HL0Q8ncZqdEN0PzwytTRvdVdBPHT/5zOhy+Y76c8llXT58Tv9LjZ8Oc00PDfrQJum6TY8X+QRFMo2MDxOsqpKjUImPD1Ta9Rb5SM8LPQrXiqIITw1KtnP8VUePEubRw+1PUQ8uKwUAPp5LDz+88bhGoE+PNDIwWGcYkc8tMD5X5JvQjwxcWO8EPk6PPlg07j8EjE8bLgnELLaOjzwB76zM1FCPG91NN4bsDU8+WuzU0H3Gjx3X6lRSVAwPDREQBxZyzM88ijX5mhGNzyvDW6xeME6PGzyBHyIPD48letNI8zbQDxwF96hmydBPEtDbiBrc0E8oaCNmSt2Kjx97ie5MOM/PFzls5l2WjY8drh/9HijKTzNmF7WEkgKPFUFIg2oFS88PDJWsqXMOzx3pGmUX2Y2PLIWfXYZADE82BEhsaYzJzyd7I/qNM4YPMSScCLoZkA8oGALRFqKODxY6oq4ytMwPIRq9KGYXDY8AOWy7+wJNzxf89a1WuoxPHsD9veQlSk8cEB8CNmsHjzb8xhCIF0EPBdf0FH7lyY8Dan0BtnUIjyGaEdE0t4yPIR8FAU4Uzw8aS2kE4+bNDybvGdEzMcpPMY8DsP0sBQ8rc9SSD6OQjx3nBhDAf8wPJ34QmpqB0A8/vJaKt7GNDx+QfmIpewaPJ8sNDlYVzQ8mkqynt0cPTyXwqw0OGRAPOBfAJoBOkI8Kv1T/8oPRDx0mqdklOVFPL03+8ldu0c8Ym0cZ7v4HDxZdIAwHII9PKqpxcGdwDg8Lu8G8xK4Bjw/EY7Y2J1OPLXhBQskRUo8RHzuctPgKzyemushqn4mPPe46NCAHCE8oK7L/650Fzyo1ou7uGAJPIuAArybwN47y0Q1JH9QWDyDfTvn1flVPC9OJVfHIkw8sEKnv8WjODwGxsQIFtUqPP1J3DYJo0A84m8dHrHbSjzkSq+CLIpSPPUduj6xGNQ7CLRNIHOaRTweU3f8JFc6PF/TIu3nAjE8eV3ANkUYUzwgY4kD6cRHPJoWJDOPsjI8ZeYVFJm6Wzwa/3Y2i7pUPPctZyN51188RRe70ZcrRTxA/VeZSCxEPDrj9GD5LEM8NcmRKKotQjwwry7wWi5BPCqVy7cLL0A8SvbQ/nhfPjxO3pRrqmBkPCYogXWff2w8ALm2P0pPcjzs3azExF52PNgCo0k/bno8b1IDW0joRjwa5NB7u+RoPK05vN88Q2U8QI+nQ76hYTymySVPfwBcPFa722BlJGk87UgSjUUkcjyEfRYGlglqPFrSEORBlV88\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1045\"},\"selection_policy\":{\"id\":\"1046\"}},\"id\":\"1033\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1034\",\"type\":\"Scatter\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"1052\",\"type\":\"Segment\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1036\"}]},\"id\":\"1049\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"1019\"},\"dimension\":1,\"ticker\":null},\"id\":\"1022\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"DataRange1d\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1020\",\"type\":\"LogTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"1050\"},\"glyph\":{\"id\":\"1051\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1052\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"1033\"}},\"id\":\"1037\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1035\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"WheelZoomTool\"}],\"root_ids\":[\"1004\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"6a0206a2-f9e0-45b0-958f-5ae6f94b78e4\",\"root_ids\":[\"1004\"],\"roots\":{\"1004\":\"8d8bbf47-9baa-4371-8e13-7daf8ce0be09\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1004"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf76f8d-c44f-43e0-b634-be1b6f198151",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "87054ecd-00c6-4401-a610-05df2f8ffe8f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  5.997174e-09  8.576299e-09  6.022747e-09  1.077888e-08  9.085077e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.302502e-08  1.262613e-08  1.206215e-08  1.860160e-08  2.463705e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.905764e-09  6.980955e-09  6.795411e-09  4.822663e-09  7.304593e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.166870e-08  8.334444e-09  1.709369e-08  1.834442e-08  2.162885e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.059763e-09  3.096774e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.6044032080948946e-08,\n",
      "    'BD_std': 6.905598259831068e-08,\n",
      "    'bd_radius_Rjup': 0.81}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.24,\n",
      "    'gravity': 4.97,\n",
      "    'metallicity': -0.43,\n",
      "    'temperature': 835.93}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4776160e-f2d2-4ab8-963b-b9dabe5c9b61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['wl', 'F_lambda', 'F_lambda_error', 'F_lambda_obs', 'F_lambda_obs_err',\n",
       "       'Fnu_obs', 'Fnu_obs_err', 'Fnu_obs_absolute', 'Fnu_obs_absolute_err'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ee9939f-d328-41cc-9da0-a18f30df1835",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11ee90c0-1708-4a76-9403-4200cfa8b910",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.650857</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>8.606238e-17</td>\n",
       "      <td>4.358173e-17</td>\n",
       "      <td>1.216085e-27</td>\n",
       "      <td>6.158216e-28</td>\n",
       "      <td>4.280381e-08</td>\n",
       "      <td>2.167572e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.653073</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>1.771977e-17</td>\n",
       "      <td>3.360256e-17</td>\n",
       "      <td>2.520930e-28</td>\n",
       "      <td>4.780520e-28</td>\n",
       "      <td>8.873182e-09</td>\n",
       "      <td>1.682650e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.655278</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>7.300979e-17</td>\n",
       "      <td>3.132892e-17</td>\n",
       "      <td>1.045711e-27</td>\n",
       "      <td>4.487205e-28</td>\n",
       "      <td>3.680698e-08</td>\n",
       "      <td>1.579409e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.657472</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>2.569511e-17</td>\n",
       "      <td>2.837585e-17</td>\n",
       "      <td>3.704967e-28</td>\n",
       "      <td>4.091501e-28</td>\n",
       "      <td>1.304076e-08</td>\n",
       "      <td>1.440129e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.659659</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>3.786160e-18</td>\n",
       "      <td>2.497690e-17</td>\n",
       "      <td>5.495628e-29</td>\n",
       "      <td>3.625408e-28</td>\n",
       "      <td>1.934354e-09</td>\n",
       "      <td>1.276073e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.661837</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>1.798661e-17</td>\n",
       "      <td>2.475434e-17</td>\n",
       "      <td>2.628032e-28</td>\n",
       "      <td>3.616868e-28</td>\n",
       "      <td>9.250161e-09</td>\n",
       "      <td>1.273067e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.650857  8.606238e-17    4.358173e-17  8.606238e-17      4.358173e-17   \n",
       "1  0.653073  1.771977e-17    3.360256e-17  1.771977e-17      3.360256e-17   \n",
       "2  0.655278  7.300979e-17    3.132892e-17  7.300979e-17      3.132892e-17   \n",
       "3  0.657472  2.569511e-17    2.837585e-17  2.569511e-17      2.837585e-17   \n",
       "4  0.659659  3.786160e-18    2.497690e-17  3.786160e-18      2.497690e-17   \n",
       "5  0.661837  1.798661e-17    2.475434e-17  1.798661e-17      2.475434e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  1.216085e-27  6.158216e-28      4.280381e-08          2.167572e-08  \n",
       "1  2.520930e-28  4.780520e-28      8.873182e-09          1.682650e-08  \n",
       "2  1.045711e-27  4.487205e-28      3.680698e-08          1.579409e-08  \n",
       "3  3.704967e-28  4.091501e-28      1.304076e-08          1.440129e-08  \n",
       "4  5.495628e-29  3.625408e-28      1.934354e-09          1.276073e-08  \n",
       "5  2.628032e-28  3.616868e-28      9.250161e-09          1.273067e-08  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d6f81ac-541d-4b1d-8277-caedc218465b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1592ba02-1de8-4d2e-acbf-0db2339e6563",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.3969468732674917,\n",
      "    'gravity': 5.017146650950114,\n",
      "    'metallicity': -0.3495109848678112,\n",
      "    'temperature': 821.4241394042969}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  30.000000  30.000000  30.000000   30.000000\n",
      "mean    5.017147   1.396947  -0.349511  821.424139\n",
      "std     0.183222   0.340344   0.086047   30.163020\n",
      "min     4.650765   0.968676  -0.451274  758.700623\n",
      "25%     4.919966   1.163367  -0.401481  801.466064\n",
      "50%     5.014221   1.298818  -0.380242  822.701782\n",
      "75%     5.156428   1.532127  -0.327701  843.862366\n",
      "max     5.444243   2.256303  -0.063265  874.890442\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f4eef2fc-0194-45eb-a709-00cab9ed0769\" data-root-id=\"1128\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"fe89bbc0-5333-4e67-9467-9210d7bcb091\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1139\"}],\"center\":[{\"id\":\"1142\"},{\"id\":\"1146\"}],\"height\":300,\"left\":[{\"id\":\"1143\"}],\"renderers\":[{\"id\":\"1164\"},{\"id\":\"1169\"},{\"id\":\"1174\"},{\"id\":\"1179\"},{\"id\":\"1184\"},{\"id\":\"1189\"},{\"id\":\"1194\"},{\"id\":\"1199\"},{\"id\":\"1204\"},{\"id\":\"1209\"},{\"id\":\"1214\"},{\"id\":\"1219\"},{\"id\":\"1224\"},{\"id\":\"1229\"},{\"id\":\"1234\"},{\"id\":\"1239\"},{\"id\":\"1244\"},{\"id\":\"1249\"},{\"id\":\"1254\"},{\"id\":\"1259\"},{\"id\":\"1264\"},{\"id\":\"1269\"},{\"id\":\"1274\"},{\"id\":\"1279\"},{\"id\":\"1284\"},{\"id\":\"1289\"},{\"id\":\"1294\"},{\"id\":\"1299\"},{\"id\":\"1304\"},{\"id\":\"1309\"}],\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1154\"},\"width\":800,\"x_range\":{\"id\":\"1131\"},\"x_scale\":{\"id\":\"1135\"},\"y_range\":{\"id\":\"1133\"},\"y_scale\":{\"id\":\"1137\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1207\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GJIELdW/PT4RTokHr7NCPn2nBQu6VD0++/0Ji4czRD6O6vPaLvhDPuOcLwewFko++G0bvm2qSD7lDAG/6S5DPu/rKaHvrVY+8REnyUdgWz4lr+3SiPlgPoklcs0xWGo+RcLMaJypbz41kKmDPvdyPonlHKcNM3g+CRa1NGROfD7Qr08Z84p/PiE/zzkJAYI+62Z9baGigz4DmvKlUsiDPqHKcFCy5Hg+5qdHXIm5Zz6XxxZDRURSPoH7OlsfG1M+Qg66DWX5UD7o0Tq7TC5HPih9+9ea7EM+RSkd1ECVUT7EVAazkQ5iPr1uav7N7nA+j5xT3PEIez7xYUCK5fWCPnCH58xBGYk+0PfPHrSQjz5S1vxUvNCTPgXbfkE1nZQ+nvD2TtKbkT4gSG6giyGMPjaZ1YUik4Q+zwVwNy6kdj6C7Jk3/HRPPoyrz1PPzRw+qQRPRJedKj6U0LZgEcg/Pu6XbiaTG0U+c5DKD2ZpSz69I1HVkAQ7PtllxqvWnzs+P57C0ACkQT5kJLiC8wpRPlIFMs8ezF0+igjQbqGPWz7PSEoDBhFkPiraR9Y1gHE+IUhYdgP1fD4k/RrVYwKGPmrvRpj72Is+qB7mBoJ+jj6q6HbEtGWFPp4MpJ4hsWs+TX/s+DemYD4I+BJY4YpkPrQ8bwNAI14+O0lryVxvWT7jautndZFTPhhFRRy3L18+BUCldGdDYj4t2wiJM7FWPu9P6o//DVE+KF9l0Gh3Uj6/Drrs5PFGPiQi8cC2KlA+ZeHXnxgWUD6Z8819oqdSPqSQpbyppVA+dO+Ueh0fWD6LTzRXZ31XPkHjKNPJMUo+28JG1zfrVT4rb8wfPclUPml+Xqmxo2o+suYitPv6az7+uLAL6WJzPrg0Rw0dZHo+0bKLmYS0fj4pSbqhYRt9Pv1O9TmcMno+K9Xrfa6dcj79zMiCy0lrPpgXep0IgmI+q+ljy+7sUT4s6jOhZPBAPsNqa39dfD8+oqWKffVLRT5MqxnT9uZGPgL/wjBIFUY+sHLcfi06TT7dTpKjDClJPgbmYByJaVE+g+6CJnM1UD4Co6obPNFbPmyZ1WHH4V8+ildPyHsZbj6pfoADvFpsPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1336\"},\"selection_policy\":{\"id\":\"1337\"}},\"id\":\"1176\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1231\"}},\"id\":\"1235\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1246\"},\"glyph\":{\"id\":\"1247\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1248\"},\"view\":{\"id\":\"1250\"}},\"id\":\"1249\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1256\"}},\"id\":\"1260\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1182\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1340\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"HD3651B: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1187\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"PW3gKmz/Oz5iGDCxrNRDPhEwFAkE+0E+Ha7iAu94RD6hXl+st2ZGPk/TUHoiZE0+4MnDE71ATT4yK+OXck5IPqssmp4tUFQ+RXJE0x/IWT6nw/XhbNRhPg+kWBl3f2s++XY2120scD48RaSK+nVyPpJqrev+lnc+T0LmusYBfD6E7SUoNvt+Pve+7YtJBoI+KrxfNYsbgz5pVvmYxcyDPpp6oNOPwXg+8lF8liJ7Zj4cBIJOV65OPtQIWhWFC1M++glGFygkUD6xyxRN4EFGPtxA+YjOkEE+inIoHyt8Tj7UOzn7nW5hPkqNFkcrMXA+h7s7zlHsej5QjijfSuOCPgXNuZrcNok+5N7StAiijz5U/pga5KuTPgf0+9vB2ZQ+zu5Vldv7kT7QQWNgmxmMPrRR/UmKbIQ+BZljZzGtdj4i9Kqo+IdQPqmSjkjjsCs+Vjy3yDqsMj6es0eND3I7PsUbMJU9V0A+X8hngi3NQT4c8jwJxKE5PuBL6K6AfTw+Rg7RsRJrRj5CWCOMgfBWPjzzjfrfXFk++6QHh7o/Wz6fYKsAjCpmPpfQxT4hXHI+fxygxd0hfj6qO9jm3EaGPgHcpzwYxIw+v1ON/0zZjT6fZ9WIj2SFPoxMYlzb/G0+cFp6EkKFYD4nVfDxlshiPgoRWbM1TFo+5SBZhIv/VT7P0TZY8MxUPkhOHiJgm2A+QezRKJ03Yj495F71PaxaPpmdLsQ7EFE+kWcSwU7yUD6tGqLcT5NCPnvBkm9FGkU+i64abh8VUT4yUqcF5Y9QPjqxe7aY2Fo+WMcHmcI9Wj7TJ4/l0h9WPsvVxcQuS00+ZY1CM48XUT7ApIIKZ6VZPgNQtIjmwmg+lliZR6Ycbz5z3wCwNIl0PllmArOHmXk+104JsXR6fj7hzhlb/ud8Pg/UVZQU6Xk+U3g1HlRocz7j54OlS5NrPmpxb/ReXGM+M4aTnq+1ST7th1oHLrhFPpkV//mvPDs+UsM33gCTTT6nTuKUawVCPl251cLFVkk+C79t29TPSz7QOnN2ih9JPqqL0GkuFVM+RSvGLPeTXT5RmkcljIBhPjXelMzieFw+g508XIh4aT7AY03aDIdtPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1354\"},\"selection_policy\":{\"id\":\"1355\"}},\"id\":\"1221\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2I495RdWNj6vINME0vNEPk8vgeR5wDU+f71puWdNRT4/P/8C7SREPl+aglaZ+lA+LfM3ykgESj5NOmHNb7FDPgfe28duTlU+0yRiop0UXD5RQyJbehdjPlv4LqfFm2g+GuNMvXvocD4tWdt6waVyPmRnOtau9Hc+7tTTCt9cfD7wOUhKnk5/PvP47u9eLII+pLZDcwajgz796frfPmyDPmmYar420Hg+QHktbi+hZj4ZjyZUVNpQPq31vxdYJlU+1tMIKjncUj59B+fbLy5EPiXiewHZiEY+D6gBDBfpUD42sVdGvU1jPuE2hg4f2HA+wMsYcTVZej4ooUuEbjmCPqsD0aKCvog+XvvCRdBqjz637vmugq2TPrUJjQrcyJQ+aKu7XHIikj5toybGjQSMPjt4VuGHW4U+J7eel1dJdz4jwxaEMPdQPvRrv2w9WB0+x9IvWzXOMT6pPY4SPEkaPvndT0BURUg+uiqgo9hORj5lhGT+H7EzPgpLWcWE+Dc+k6JJTQaQMT5ARwVNS7ZXPlqqy7ZzdVw+zA9EIFW/XD5ejpFYhb5nPtaSH0iNu3E+bkuysWWSfj5nXHosvDWGPtH9ScBxRow+hGtxRyKYjj7jO8mSQvqFPunSs8MPrGw+Ez/IZNNnYD55qkCIvn5gPg5AvpuJMVs+2TWyFpwZVz7Hkaeqz6BTPjhZu4aX32E+DoQQFR3wWj56W1BZ8nVZPqRVa9tPX1Y+4WibU3MeUj4nLPCxrFFBPi8Qr1NWBUo+N+znrbZUUj5TRtH8EUJRPr/SLUp6t1o+SbIszVqfXT62NnLuHUBTPoyeo+mwOFE+pnB+K6djUT5IXktHtc5dPnd7wSWw7Ww+7y6D1Vuibz4JoTfSTrF0PspgstDiSXk+hLRCO+StfT7WPO7njxR9Pit2TDxC1nk+Q+KjMlI6cz52I3HCDcNpPnH5ZFOgP2Q+A0RJvD4xVD7zEy04UYhHPpCYOup8d0k+LZdPUyANSD6oHHBtR7JJPsb70TtvFEQ+R0sXWDADTD7BHZKdXkRQPtsO5RSCglA+ozhTfEH9Tz6xD8/v4L5VPizebCGgkVk+khhmoJ/eYz6lRZexWURwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1344\"},\"selection_policy\":{\"id\":\"1345\"}},\"id\":\"1196\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1253\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1341\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1242\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1233\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1256\"},\"glyph\":{\"id\":\"1257\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1258\"},\"view\":{\"id\":\"1260\"}},\"id\":\"1259\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1191\"}},\"id\":\"1195\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1237\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1178\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1201\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1211\"}},\"id\":\"1215\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1206\"}},\"id\":\"1210\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"hWgEVXyWOj7hLdBbwoRCPjS22W4Aeys+v3Yo7UDqSD5Av/6isV9CPnbXFuaRYUE+ZX4jmSefST68t2ROWkhOPg89UtVCVlQ+F833tWPvWD7L90tHgiFiPlgoDcwrHGk+zi7e4WqpcD4sX3+JQN9xPteWMhIEx3c+gOKC1Mwhez5XS8mlYNh+PnYOSydRzIE+yJ4q7UN3gz4Q5RglG5WDPsOpQ4R60Hg+KmOukci/ZT4iEQ43B0NOPpuzUBflFFM+SUKRZyW0Sz5GYa23vexBPqdcOaGaAks+woxKrvvwUT7P2/vIreRhPtM5h2AKNXE+hfRE7VVTez6nmPrVUL2CPhDAgR9WWok+8Cjt+Syqjz6IKmz/BbiTPnNuO0b14pQ+LTPEsojykT47gJEGtNeLPrlx5gOTrIQ+WYcyu2T4dj4CApZOHCpPPh1qmmskEBw+xZ3r97OqNz721+8NwKQqPuS693jZUU4+zFt/n7hxQD5QKPq0JCI3PjDoZhayGUE+EkNDbyeZST49s+WAhT1VPrOU/4TTy1c+F5UowWIrWz44mIXMuAxnPgFi279BAXE+Edg/fVGUfj6bUhGL85SFPvoYVaIpPIw+eP4S2tRYjj7eIgh/IEmGPg3znRroUG0+fEy5QpkWXT7a6Ft74GBjPoED3GlwAV4+M75B4OGXWT7ri7qNNQ9XPhTTVz3wLl8+8DWD7sUOYD4LqISjc61VPkl1pRaV21A+4Qy3gNJnVj5wQvHFMXNBPnIM+HwMmkM+E0KmCSIxVD70nHKN5aNRPqB9TtLy7VA+B4m1bVI4WT6I1vp/cKtVPs+Ebh9QAUo+qXii/5/iVD55YbkAmyBbPl0o7AZVRGc+QMgb0x6CbT41zESVTMJzPjTTJx/7N3k+UV2eY4EEfz7TGj2N2Qt9PtsJzI6YIng+/Fhamwijcj4fMHarCjVsPhb7jbXQxmU+bsGCKrbAUj652zLaXdtLPr0nTxdw5Ec+/07HKRCUSj5Vg7QVwpZFPrPHuQitvUA+iwwFJXF7RD6TrMLahqJDPnGc/V8S51M++xXAw1I5Vz6Bb67/gltZPoiK4oyEUmM+GovRwBbFaT7fQuMnSwFnPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1362\"},\"selection_policy\":{\"id\":\"1363\"}},\"id\":\"1241\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"cgV0THD7Nz5ARMwlC6REPsiosC1KDzg+lmBCeaJGRj79FXITgEFAPnIkaLemakg+1XUjqyUySz5ssNIskU9JPoB2K4wfHVU+yMTyoIngWT60V0x9KwhjPpqXU3hluGk+T4WiBHxBbz6mzPay0sdyPmnsYjFUZnc+sXMNyj5DfD5pyOSN1rh+PoOVS5XSuYE+4h/Bs/ySgz7JMKgPcYaDPnMSl7dBMXk+QmiYDVYTaD6CCVRw07NQPmBtP2336FE+2gzBYmWUUD4ySHmrwN9OPk6+R0pdXkY+SOwXv+18UT4mMhDP3/JhPlPS+Ks+oHA+RPtLWxvpej7nJC+p546CPrk1Cy2QH4k+SsjsIVAQkD7azmeTg7KTPh9E3i50rZQ+RerBgA3fkT7/x/HHu96LPmIsqpg6DIU+QAw79Naedj5m/KY1C55QPmiQq9HjcS0+Dy0mFmxXRT7CBU1c2TFGPkRiUfndjkU+q7B/bIlOSD5K0ERe7go5PhUp+texdzw+gFMoNqgXRT7cpuVyVyBXPt96pCPKVl0+q1LloYChXD6gowru3eBpPtwz9DRW33I+joCMRPg8fT5f6bBLTuCFPlef3+3okYw+mSg2PvBfjj67GoGG0vOFPkHM/io5S24+PhBaOh0gYj7odMo2AXdiPsRmBGs/I2A+bUGhrK/pWz7tLlGAveBZPqJOJttGvmA+Mgb1ez9aYD79Krv3WSNdPjileV8baFU+LAb2+OSuVD6Z9Fxyk2M4PrUkkZD/skg+gzkUHIBOVD4sUBKrAWRePgAJDpjnj0k+J3fZs2KeWj7yeR92ZxpXPlU5YsEBFlE+NTsk9Jt5VD4BF2JrFKlZPs6scpkbXGk+srrU/qt2bD7UiMWDxENyPge6qbsvpHk+e/x2msTvfD4aj/NO9gJ+PiBfaVOZjHk+ZFtXyuCtcz7499p75n1sPg0hHjb6SmU+a5bav2QBTj5S9PBoQVM9Plk0V86j4Ek+wzNfPFK3QD5OAPtwyv1EPraMdVSCPTY+KitbZdVmUD4BwwiNLDFDPuGFJiWkaEA+g/PdL2eATj5gGmbM7LFSPrD1mNZ37VM+8cII+xs2Yz7s+VBhYIRXPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1340\"},\"selection_policy\":{\"id\":\"1341\"}},\"id\":\"1186\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"oNzqRLNkOj4zzSSy/+5CPiRWI08YOzQ+8+9iudNdRj6tkgMqRu9EPrI1jnvoqkk+rcz/5tvETT4vuZIb+BJLPmAlvZH2MVM+s5+y0z18WT62nf69WdphPrsoz+Xkq2g+DR790Cvmbj49OIKXjqFxPn5eEm4Y7Hc+eaCbJDd3fD4b+SPVcnR/Pld2wdGBFII+UIowtkRAgz4IyUjVToKDPoRSIXl3RHk+rG07yk79Zz6ffUQFVbVPPsT2or7ZQlE+b1FrZY27Sz7VTH1TKjZEPitpXofvKkc+ggg83aSCUD6snK08gtxhPpG+0igmXHA+TkEGPVaHej5HNevjf4KCPto+DFELHIk+8J7ll2yojz4AB2xKe8CTPprxfoB2+ZQ+4TCprSfmkT75TXswtWeLPq0uCTI2jYQ+gEfL1ZdZdj6mQ7yKfRNQPndPWCQv/Bw+TD5WDD6HMT6uNaslqzk/PqKtm7GKEUo+kWr57deaQz4ld7NUsGA5PuFxIGhYTEE+Ja0UU31xQT7lFIG6ShlaPv2/zTJ+FmA+5B50Ma6KWj4QlYY+VJFnPmnftGGFSHE+1dUGnKYwfT4No5R2qrSFPgTJDI/rvYs+HT8uf/67jj6lUEPUV2qGPvWLO5Sj3m4+uPG2TTVRYT4vASnkBjljPofgaAphvWA+KxudDkbBXz6Vsu2YlUZZPketCrIPXl4+S2JaZL+hXD54mWvOHKdYPlgpUOHs+lc+3g6M6TleVT6OeeprAcRDPoB4zAF7DUc+t6afKdEaST6V0b1OKRpUPkggt8n6yFY+ObTOPBv6XD6bI+jHzQdTPoaeGg7sPkE+y+XJi2WiUz6+99uLARZgPiIjqfcfTWo+fEtI/RVBbj6nfPLVPyV0Pl13dmrfDXo+dOqUdywqfj66NDuscU99PmmZX4Q1MXo+s3iGAjnpcz6ZkeMwsehqPlWy46arlGY+14ObWKZRTT51yO4LQ2hDPqDKByu8yTg+P6TiT+PxSj4Z+jGsc29NPlPbHzmpVz4+ziDQgHxrUD4Mg6/Vb4FGPvoFCYtN2kU+2fS38Od8Tz76i6etNghVPn6rfrqWt18+9jQKaMH4ZD7fe1v8Z7ZuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1360\"},\"selection_policy\":{\"id\":\"1361\"}},\"id\":\"1236\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1330\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ErZoW2LKND6QR0GlQwtEPoAsO1q1mEE+x3aNTcpYRD4DzbTCzZpFPq7Q1ONrmko+BLrYLlyYTD5fUa7nChBOPo3ckrDl+lM+faXVt38ZWz7+73Z25vZgPrGb/P5y52g+xjJZY3awbj4EDtgMMVdzPpvYU7b0I3g+ve+lF1Tkez5J/Ik9G0p/PiXARzmX5oE+IDjgDWqbgz5N74J8Bx2DPu9HR5irlHg+TXRC+oyAZj4oXhc95TNQPhJxyvuZh1I+er9H3Qx1UD5kKHqY7CtLPqQAy+MA1EY+noUuTXaxTz5FnKG2LK9iPil4ts/GBXE+xlFrQIaweT7VUmBVU2+CPvdwS+1VSIk+sCgMxtfujz4nQgP/KZuTPp6YFherq5Q+bv/D2JPjkT5KnfXgmhKMPgodmJ1plYQ+onFNcDTmdj4NagJKMO9OPpH+QoxmVTA+JhmcQOoLKD4P0UfPIT9APj1+zGll0Do+gng2aQTQQD6jPSD7KLIxPlxfgKtSDTU+vSyBRuzjQj6NIiUFfTFVPvDpbq8CgWA+AnFKF/vTWz6iDZPITHFkPnLgrd4FHHE+qQauj01Bfj7eT4LfhVOFPlEyV+cRhow+yy4+aVkAjz4aZEYHYfaFPsnQZk+1eG8+SoLgz+woYj6w7EncPEpiPuqUubIAiGA+wmKCuQFGWj6VuxTNB5BUPl4hKd4RD2A+zxqjbbcuYD5VPeqIQaJTPhPTC7ji41A+eZfNjZl3VT5wM4MLhkNAPvSomJWNakw+FyRNweGKUT4AzVpNUq9UPmBTZw9eClM+beyTzazyUz4XvDOwJUlTPmi7TQucK0w+mImJ1lBBVz4iqH7zg9VYPhGo2Hs6OGk+ftJAGsgmbj6xjfwG0t1zPhLVJBe02no+sfzcUrbwfT47mmLErsl9PiE6OmxTtng+SwYwK+IzdD6EaO/bJbRpPj/oWmSVxmM+0+bE/G2LRz4mQNFs/Oo1PhQBGpO5+0I+CmLeFlcBUj5yv+N5HYxCPvwHat8uKkk+xr9XQPrJRz5LDiqZxwpLPk1YaXMUyE8+vp9Bh4nGUT49U+QD3LZEPmhujviXs2I+/oeHfJu3ZD5TYPTj5xJwPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1358\"},\"selection_policy\":{\"id\":\"1359\"}},\"id\":\"1231\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1331\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1246\"}},\"id\":\"1250\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YoWoUXVmMz5MaCkJrGc+PpOdG/k2jjA+BoE0iINZST5+ZPGHwqRHPmtbOikIq0I+kSL3ZloARD4Xt5Q3xqlKPh2dfbKfiFQ+DihJkW3uXD5p0wwCae5gPkXy54h2QGs+Jsn9RQQkcD6RpWuxhxlyPteRLSthZHg+WR7ZI1S3ez7gUFIh54N/PsVgQH3vv4E+m81BHSmSgz6PZUBJUiOEPjvvwGgvzng+3I90j4RcZj6IvNzwIMtQPkckTIhev1E+55BtOOKOTz7C+sRxVlNHPra3hJLlfEQ+m/OriMZcTj7nel2hOu5iPmzCnP/D2HA+To64B+WKej5G+omHWdqCPip5N0509Yg+1g7f8aSVjz53oQtzqsCTPt0wLjzP/pQ+B+cSuxzMkT7g7dRbHsaLPjBxmR+rkoQ+xM2ytjMgdz7H/bgjSvxRPgxMMToTpBE+U+g8JbRlJD6f0oJAAxArPrQNWxUKcio+NtaLtvX5Oj57DDSWq9Q3PqvTvFdtnTs+a7HJolWqOD5fJlOR/GlaPrvc4Nz6JVs+jcGfW/M5Xj5Q3d5H4+dmPrX3j7O8ZHE+xjOds7Uxfj6h/JRa9BeGPjj7Q8QaLIw+oji6kPc7jj5mOMuuc72FPu0WRSHVaG8+c4qbZsiUYT4AuNUh2CRjPlurk+XYj1s+Y/1CFH/SVz4+esLeSJxWPgWXZoBlw14+5YD1yUO+YT7a2FpPAV5dPry/LfBs6lQ+ktV8YSb2Uz5qli38u88/PngGjuL/QkI+t4n9y24fRj7RHtnXICJTPpwaEB1tjEs+YwFuh9MGXz58Akiou/FSPivHXJO+/kg+qz2o/G1hUT6V0Pd9RBFaPhd5DkOF4Gk+pGLg1gajbj7D0HhOcRt0Ppkwljf7iHs+nlRkJYx9fz5VKV32bC18Ps3rIZiSx3g+GLc2SrL2cT4qC5C5DKxoPu0mVKBbqWM+20+t/XFoWj47VwTZXjFKPogeCg1yfz4+Y6NCzHQwST4dsjJxKXNEPp864cHa20Q+wBFn7u8zTT7A7TEG3tRNPqOBk5ZLJVA+Bdcar84wUz4P+AbzFuxSPqzQhVE3LGI+eh+dY/Q4bj6R/q/UFV9pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1338\"},\"selection_policy\":{\"id\":\"1339\"}},\"id\":\"1181\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1236\"}},\"id\":\"1240\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1258\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1143\"},\"dimension\":1,\"ticker\":null},\"id\":\"1146\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"1171\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1212\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1218\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1251\"}},\"id\":\"1255\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1176\"},\"glyph\":{\"id\":\"1177\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1178\"},\"view\":{\"id\":\"1180\"}},\"id\":\"1179\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1266\"},\"glyph\":{\"id\":\"1267\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1268\"},\"view\":{\"id\":\"1270\"}},\"id\":\"1269\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1342\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1343\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1188\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"zjcVE4M0QD47b9WAYdFBPouSFq3knzU+x7vPGs1RST7b/Ii8FFREPgcY74ZfNEk+p3WH/xQjST73MCXkZblMPjJwg0BFelU+FTUwdNR6WD4QKwE9ylliPp4CeBg4mWo+iYdg2AgGcD77bzBWc4BzPmbi9SUmJ3g+OnEZf8jaez4hgfRZaBF/PvV07dGH34E+EPj6GMJKgz7S6tBdKeGDPlYq5SG8vXg+l3SPAX8GZz57vzCmnO9PPmd79W7w81M+D4Ta7CTWUD5W/fQRvSpIPpoh6IgSkUM+ctCvJmGqTT7Sue1jiJtiPizEjg9WOXA+SGg0eH2Dej6Z0+CL2xeCPr/VX11SE4k+r2TkaB/jjz5bW3TTlZyTPtS1FFzAxJQ+RNCcbuMdkj5XIVrJPN6LPqeQuzT+ooQ+xwN48y6Udj6uRDEy0x1QPsQdjSa1+yU+2trQPGSIKj4OJ2vS5IE0Pqu/w72pQEM+awZmlRFzQj5fRweHQC8zPsQB1/09DkI+cVUGlOC7Qj5bWMheaHFXPg2SdoHdQ1g+YbtYVm79Wz7sCWpC6otoPlc8z6JlOnE+rYVwjGCifT5JQ0A0wxaGPhm/9Var1os+w5swY5YSjj6fwqlLVxeFPtP5NRVvemw+VbXZgvKTYD6YNXHNRfJgPikM3eGRH2A+dxneeXZCWT6r0AFTacRbPkTPPAwLNV4+73pS2x+oXz6lg58U6TtcPsMOVohxX1Y+lnmwBX16Vj4yUgojgH5FPhbOa6oCXU4+q0AzM40yUj6GAxTWHEdNPnSRXk8YnkQ+1L5TAyh7YD5C2TJM05hSPuDOxrEFMEc+iYc7n62HUT6hx7OEd5NYPt+imO0STGc+hLnq0kifbT5GZXTiJq5zPpLaPhLiDno+YZEEnm54fT4wfMp1Gh18Pq4XZ8567Xg+jYIEgDY9cz4oh0Ar5ZJqPjJQY1kO+Gc+Y8Zm0lUdUz5JhgEgCK1GPrQ/t2vGFkg+2glxKbTaTj5UvffYlW5DPgxSxXUTEkM+zCdW6Hw6RT6iEq9XJVJKPgCvt/5gtEY+gi/iy0XpWD7D3qOK4i9QPnxzV/pjrWY+E2Pwbzv+WT45rNPGXkt0Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1346\"},\"selection_policy\":{\"id\":\"1347\"}},\"id\":\"1201\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"1Ewoi7FMND7IBqlkNFBDPpY+rpWnZTY+qaeBOhjNRj6dQf3z+s5GPlBDfV4mwUw+XdEYX9NDRz5wLWFdKIxFPi+2IXC/tFM+ETi4EkNrWD5kPcnvrRNjPkLHMP/5RWs+AYB7rJVkbz7li8aAmKdzPorfMfZ3d3g+x1h3CKxHfD6G/diR3hR/Ph+qfajY2YE+KsU69R7Mgz4faaDVErKDPjjZcd3943c+Ciie6MrDZj7f47mmM9RNPi+TaaPEEE8+0dE4fe+MTj4h3sWBmFZGPowu2f69c0k+Z2ZNgtUXUT68b9XsddFhPkxt/K4BS3A+Yjfdi7Ftej7de82GABGDPu2w5CPQI4k+njmtLQmqjz5n8HZtEqaTPt7lJy0ms5Q+T4y3QIUVkj6Wh+f1txeMPlEt75Q/w4Q+7D9sidG5dj47cAQcS21RPnrNU6SA2SQ+CutnMASXNz5mpid/8kdCPqbYqmBJskQ+z0VXmu3mRT7ESVB83BE2PsQ5wxiLdkE+CKh8kT3NOj5/iueUpUBYPlI/fpDRI10+efO/+5erXD62leCCE/ZlPnY+i81jxXA+ZRIO906ufj7OsQjj4/2FPqoXnaWpMYw+m9xkosPnjj7WGHibHu+EPnf5ZT3hNW0+WYwZAJjjYD7cU9fYmnRiPhAzmsDTUl8+AgdbbiKHVz7uvfobiOhTPnb5gMd+81w+UVcxbSbXXT6Rs1kyfixaPt7grMh8Nlo+egMW1nXZUz4AF6klIy1MPuZANG3adUY+bfLqtOMAVD6FE43Z185SPvb17hQQGE0+SfhNmU06Vz5cvDEouLZRPrjnnIw8ZEc+xlJW6F/QUj6ej0r5tftcPo03pEDwZ2g+Q75++LPDcD4Px0zubRh0PivwlhIWaHs+oPg+VEbQfD4vUVgVYmp9PtT9LZSFXns+1zJLPkbEcz4WIebH+XVrPvSQk4NMJmM+VFbcyaMYUT5ecmGlXeNKPqHR0+OwRzo+RBVeywIJQj5APVKOlD1EPkNgBfJ+WEM+q17KeoBBSj7L+K1KQc5RPr7avCLLY1M+PiZMJa92TT7xHVL3bktaPjKljiIZEF8+wrSeZB8maz4vUm1SICF1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1374\"},\"selection_policy\":{\"id\":\"1375\"}},\"id\":\"1271\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1231\"},\"glyph\":{\"id\":\"1232\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1233\"},\"view\":{\"id\":\"1235\"}},\"id\":\"1234\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1206\"},\"glyph\":{\"id\":\"1207\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1208\"},\"view\":{\"id\":\"1210\"}},\"id\":\"1209\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1186\"},\"glyph\":{\"id\":\"1187\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1188\"},\"view\":{\"id\":\"1190\"}},\"id\":\"1189\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1238\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ZK7iz54/OT6aeZLXPSI8PrilsU9Hsjc+47k6zg6/Qz5oLxC/pwFOPlBAGS27R0g+nuzTVsPFTD70rzezj9BLPm6CTcr0AVA+tnwjgyq1Wj4SAoIibCVhPogN2xDukmg+dgdcsCL8bz4LLAtOGmZyPn/aZ6Qg13c+2V98+EDqfD6dmXu8CaJ+PsOEqo6V3IE+S2m+EIqvgz4xfJh2dPeDPveVf+y7Xnk+GRg+uiccZz75p84p4HhSPlkny5Z+ElI+9iYLt4dSSz64brQtPf8wPpbYX5Ft70k+/GKZiIQXUD75ts1xstNiPl9uI/PjVnE+BWWIbWB4ej6l5kfMK8GCPutilXaiSok+qHYr6tbRjz7saAR8lZWTPrNSKOGY4ZQ+Kc3Eyon/kT7AQS1vNP6LPg1M2SSmT4U+SaXO5LIZdz4kcPnMzT5QPmIeZLh24hw+gRW6LgOhHj7L/oY6QkgoPoxDTP1gdEI+mBF/thIdPz6hfHUf3JowPnAsoKbqCzg+2HP4MZrUSj4gm+dA3glWPkF86IK00lo+m/D6HbSjYD77XoFmG79lPk5kW75nNnI+glzsyouOfj77/XQY7jaGPnZmowHvVIw+Z6UG7lg0jj5vsCSphUKGPtzshqCp8m0+BCW2P6ayYT7anvP+wsdiPhg2C45gzFk+BPKUwyZ3WT6nYTkFH6VXPhgCB5Quvl4+Gb4ky+rvXT4JcYhMa1JaPuQWM0oEqVA+ARuuFIJJTz5faEceOw1EPrL3smvJkk0+ZXdIGk1EUT7W7+cgwLJQPinCnVK+x1U+TFXRMsnsWj6IUaqbcQhXPtFyafMX0kM+xTKrhPoaVT59zbfLVzhTPtdetvdxPGQ+EN7TkP/3az7il4yCYo1yPsI2Ic+lZHk+IHs61swnfj4ZCfFeMql9Pl7bkjwAJHo+wvzNcoQ0cz6VIvnpyjlqPiPZjNcxjGM+tManB4KNUz6dIM2LM6hAPsYWZCUVq0k+ZuMYbCE7Rj5gdCcXwtRMPmzV/bq4C0Y+ML/8h5USSj7vyb0UIWJGPg94+zhUZ0Y+g8qfLRjtRz4LD53mDBtWPs+V7xUC+FY+npSiuV2BWz5pz+fRZl1tPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1348\"},\"selection_policy\":{\"id\":\"1349\"}},\"id\":\"1206\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1221\"}},\"id\":\"1225\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1241\"},\"glyph\":{\"id\":\"1242\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1243\"},\"view\":{\"id\":\"1245\"}},\"id\":\"1244\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1332\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1181\"},\"glyph\":{\"id\":\"1182\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1183\"},\"view\":{\"id\":\"1185\"}},\"id\":\"1184\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1261\"},\"glyph\":{\"id\":\"1262\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1263\"},\"view\":{\"id\":\"1265\"}},\"id\":\"1264\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1333\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1261\"}},\"id\":\"1265\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1236\"},\"glyph\":{\"id\":\"1237\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1238\"},\"view\":{\"id\":\"1240\"}},\"id\":\"1239\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1193\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1266\"}},\"id\":\"1270\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1171\"},\"glyph\":{\"id\":\"1172\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1173\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1216\"},\"glyph\":{\"id\":\"1217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1218\"},\"view\":{\"id\":\"1220\"}},\"id\":\"1219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1344\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1196\"},\"glyph\":{\"id\":\"1197\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1198\"},\"view\":{\"id\":\"1200\"}},\"id\":\"1199\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1227\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1267\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1345\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1153\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"1221\"},\"glyph\":{\"id\":\"1222\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1223\"},\"view\":{\"id\":\"1225\"}},\"id\":\"1224\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1183\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1248\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XNrCyp6hOj5VSttxVQVDPmi0NMJd0TM+miPyqZK5RD6WCviY4ORAPgS9R2lOukw+q/XDPX2PSD7Ew/ZbqBNMPuIJ6KVit1I++U9Zd1KNXT5dxsK0PS5iPvdbhKpmsGo+tdYNA91Bbz5gjFOqt05yPjNjZ6US/nc+6D8wXo7zez6gLedCSqt+PoIxkSoT4oE+JuosBhqHgz7HErdw+AuEPg7XSj4BuHk+rEpnuJOUZT7pbDVJQ9pRPjHlnI1MWlE+7tyIWOS1ST6zb+THBwRBPlMsuTp2+EI+Rvs1r23IUD4rR4bSGPxhPtqcPCv7kHA+Z5Ylu0kCez4QlSVryJSCPhzSZmMNKYk+rBeb9e2jjz457Ot067KTPoGUonLDJpU+CYnR5XIkkj6u6FeTrvGLPoP+Sh/vuIQ+UL/Kuxk7dz6yH2PAHhVOPnAV3cNGNSk+YD+U0joDMj4RZXOv5F1EPj0YFZM6BUk+So+feGZnOT7xI3e1KNwjPl7OTLBmyjo+odU4CegIQT426ulZ9VdZPqjUwifL/1k+5F2pbsyXYD4ukB5HzGNmPrE2WQn4vXI+jOEaw4l9fj6Pg4LKDZCFPhsRTEIjMYw+f0C2rigPjj7F61QNjx2GPqSqxMT48Gw+jynMK2DVYD7NZyR+EYJhPtfzRdtFKl8+dEF8JtIeVz5twiQPkGhVPg9AOI2hXmA+nKLBA8y8Xz7JdZjuVT5bPsscwd1FGlM+A5mwbWm4Uj5XNUQep0ZAPgQ0YwqtCkI+45DIIpxdTz41XCwPXUtZPhrXDiBQzVI+4zt5il8rXz7t5hcpAXpZPtQyBuzzXEg+W+fZhEsJVD54Iw1yrhJbPvKpxFD92W0+8JqRdJcZbT7tRuGi03ZzPqwK4VkiMHo+Dt99nVoUfj6nGD1od5p8PmYxS45Fl3k+9hUn629ecz7sGMYKGFlpPmVJMTkjC2c+ZTCk6bmQUT7WQD61t8FDPlX/CgT9qUA+2tgcBIogUD5aPm64AopDPieSjUApZ0k+Yqpy2YYaMj6/s93vhTNGPrJIxXBdBE0+L/m+06AiUT4Dx7IGqiFGPjZmUoMCqGA+4xbO9NQMYD6SmGsTFd1uPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1366\"},\"selection_policy\":{\"id\":\"1367\"}},\"id\":\"1251\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1251\"},\"glyph\":{\"id\":\"1252\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1253\"},\"view\":{\"id\":\"1255\"}},\"id\":\"1254\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1226\"}},\"id\":\"1230\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1334\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1161\"},\"glyph\":{\"id\":\"1162\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1163\"},\"view\":{\"id\":\"1165\"}},\"id\":\"1164\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1335\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"1166\"},\"glyph\":{\"id\":\"1167\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1168\"},\"view\":{\"id\":\"1170\"}},\"id\":\"1169\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1162\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1198\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1223\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1150\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ww+c1Yw9OT7Yr9Tk9DhAPk7+Q1rZ4Tk+/avTN4UeSj5GRMZkT/85PjwBQis8MUk+aItbbviUUz7FQdbPzjFJPjhbN898pFM+iXahLCZ6Wj6qtGgArZxgPlosREHUtWo+4H5IUXKHcD7N2XMELqtzPnF3rrIpP3g+SeQMPvyVfD4+6YHSmNx+Ph7DXnAK94E+IdvXaZlbgz7V8kYZL3yDPkvF18/bVHg+LGzSUc7sZT4sQDOpfAJSPg8gixbO11I+Sz5jrsgMSz5NaZjtt3ZDPo59xDj0AkU+oJCN7Rq2UD6ttcXPKvdhPqmb+A5QTHA+iA9hm79Mej5OfnN+oteCPkt8TQBk3Yg+c/xtLMqtjz4jetdKXbCTPt1NHwELcpQ+0TCIpXv2kT4BSKkT52WLPsDoX2dq34Q+IoI9oeSIdz6Dn7HfaXpMPgNKP/NICxg+NoWS+XTaKz4Cpb7AstE8PogjB7t15kM+SAq/hl4oTz5ARbp2vP8jPjrC1zWF/zo+59cSG13ESD7RkyIK9E5cPvlk//ay/Vg+sjqQjYwWXT6FNx0wjHtoPi1KYKBw3XE+bP220cGgfT5TuJppeNiGPtuJQqqKmIw+7JD8+Olvjz79PGN0HcOFPoHo6oYSmG0+NjWuA5jhYj5FozDW4zlgPupSaolA/Fk+L8xVTd5iVT5RfixSopRWPu/KZAPnm2A+Rb6lOEwGYj6KirfDwjJWPlZYzJnL3VU+ibtOx1zASD5UJiqpHkpIPjmXEr5+wFU+KrjU6qdfUD6+S+AWusZTPk+85Ft5ilw+LNuVqe5OXT75uW2OWOpQPrDKXRgdF0E+/114o/mNUD7KTUjEz4xfPtIKuLMfhmY+d6gASnRwaz4Abdb8IT90PnHv+7vQSXo+m0Dwm1gIfz6/68K3h5l9Pnj/SjspSnk+4g/g0CaFcz5Rim9rjgtuPpydtq/vaWU+JqJMt+7PUT5hllY2EBtKPryjbenDL0Q+PYQsi5V7RT5v1Lh5G/ZGPiA1qFiGPEU+AXJEumbLNj7utLFaHyxHPm6Be+RZbFU+V29H9BtbVD7zWZQ18BBVPoUe3l9I8lw+Uznysw8jbj7R+vvWsGtsPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1342\"},\"selection_policy\":{\"id\":\"1343\"}},\"id\":\"1191\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1213\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1346\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1201\"},\"glyph\":{\"id\":\"1202\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1203\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1144\",\"type\":\"LogTicker\"},{\"attributes\":{\"data_source\":{\"id\":\"1211\"},\"glyph\":{\"id\":\"1212\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1213\"},\"view\":{\"id\":\"1215\"}},\"id\":\"1214\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"lF6ajRO/Oj6w+TcSth1JPguFzuZt1D0+lpfLGjTERz66oaSZLoRFPv8vhdOboE4+zxKP9dSaUD6XDqY9IUdGPtojyH0sY1c+5ggbBASHWD5QEUVXJixhPlUZpOJN/Wg+OgALwnwAbj6XhSVmYDpyPmea/2116nc+LXU2GLwAfD6hw773ibp+PolGM8Gt+YE+dIfOQ1jUgz7FsiICcfWDPnVh+3EDNHg+TZlMQ3/pZj7q9SbGED9QPh0grwV25lE+sGyIpf7tTD4DGrTB//dGPov1zPJ0JEI+SzYSr9AOUD4E+i73q/RhPlOHrCL8vHA+Jp7DQr9Aez6fZyqY6Z2CPumPRO8S4Ig+NhtINLzYjz4o6TJdVKWTPpAz0klP2JQ+ox0KF/LZkT7/D0ImzlKLPlr9OJoJ7IQ+dS1xrTHWdj7dCsoTDnFQPhJags7IwSI+z8OU4ZzyOj627dlX6ORFPm/5FssL7T4+510f9sSbLz5M7qtaY/U+Pjwq+a+tYEE+O15Kp+E3PT6pb1DpL2VWPnUl9ozX818+4PMMdihuWz7I8hx3VsJmPiY98mOw03I+8vBCoiRqfz401pkas+qFPkJ3Rc8PhIw+BBTAsPfXjj4UQBNjKh+GPhh4hTfy+Gw+aD4ABBixYD5ymtxIGShhPsG4Mzng6mI+P9K6he0EXj5ZafaTKaVWPuD5wFf3PV8+oyBahBBSXz6UGzeFILVYPqJcV/Ffi1c+QkZbUwNkUT4qxHBJ6DFDPutB2VV9CEo+q61wobXYSz4uYYm72GhIPpnjVxzuJlM+UqEOTlzZUD5ZD0I6+plXPuqtzn0Zjk8+WlNjP5zQUD4GG+hQB1VWPlKI8gG472c+nOEf/vDtbj7tprpePUZzPuztHFhAi3k+LieykpmjfT4pgggbpVR9PmsdUUcZmXk+jEtjRNg1cz5qooM13nFrPnRIH31GzWY+8kooMvDZUj6U5Sww1btDPrhdEP2YU0A+NYoSmy6VRj7F4KAFbkRFPuabU0TwMj8+ADrAAE+STT5UPXQOz1hHPrOvQRcavEU+BpSPllFhXT7Lp0qof/tcPnerLX/mnVU+zLl/XyC5aT4AY6ugvR5lPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1332\"},\"selection_policy\":{\"id\":\"1333\"}},\"id\":\"1166\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1252\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"GVJIynMNPz7cdWN2AcFFPhPZLu/sqjQ+sDjnSLVsRj4OFexT549JPnPN1FNwJVE+FrGJOQq8SD5JvUxjhVZGPhm5ZUSH61Y++TR023VOXD4bZayGDQllPpKCyuCc0Gg+o8hOyAM/bz6whR9V4+ZyPk39ItBGTng+NdkztLTpez4va+YU/c5+PjQyY6Ci44E+erMYstGJgz61z9xDdseDPvPmGPI7+3g+pxn0p7NiZz4iQPMr7E1QPtG3fVGt11Q+9G/B9pnpTj5WNyBNIg5IPsB7vnEanEY+eUrrzno4UD4oc44mm3tiPrHV0aa/kHA+vCbHfAzoej5qcajDQa2CPmvrw6PiRYk+8+9/427Djz6syKFgR4CTPkFxpyNzrJQ+gY7VsH4Nkj4kFK1Y0uiLPm76Wp6FuIQ+/lGVE+gcdz5JnwVhrj5QPoRucKJWESE+ear+VxGPMD5i6qjzTHM1PlHYI4HKxEU+mcPLMgVJTD5degwaFCo3Ps87P7H19jk+97IdsL8tMj4f/+l/WiRaPv41ckzlylo+3YVxJDFbXz5TpjxsnJloPjG35zedWXE+boWHdghNgD69FmL301CGPsC94eFkGI0+z/zjwKDAjj5ulTZGSB2GPuL1W810Em0+hXyNe03DXj74wQvqmO1hPqKyLvfqAmA+l2RvcfxNWj7ThrrVZX5ZPsVO3VCZzV0+9l+RJDI6YD4cHnzPHXJXPjI37CAckVg+b2qgkX37Tz5EYteE/0A4PuoITSOlYTw+1fD+jUH1Sj7iBONpvcBQPumVzEaftFU+USiilAe2Vj64vOWRIf5UPigL1Uaii1A+js4vV9ICVT4BK63mv7lZPq5w4Ab3H2w+nREmrakqbz4gb5AeHV10PnYHTMIeh3s+dyBKYaNKfz5uKZq/JpJ8Ppux+KyRSXo+W8phHOAycz6rw7kpV7JrPjF7wGo3J2Q+Um0/NvnEUD6KonWvWtRHPrTTN6K2Dj8+EEv7rLaNTT4ZRFvjKiVEPo36TgcrEEI+o2t9YxmKQD73QoA64EZHPlzvzXF2M1E+QjEsigmOTz7mz8Zwv3BRPgSEyH42c1k+bNQHtu8oYj4JPLcFGs1mPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1334\"},\"selection_policy\":{\"id\":\"1335\"}},\"id\":\"1171\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1226\"},\"glyph\":{\"id\":\"1227\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1228\"},\"view\":{\"id\":\"1230\"}},\"id\":\"1229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1273\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1257\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1336\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1337\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1177\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1228\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1176\"}},\"id\":\"1180\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1348\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1196\"}},\"id\":\"1200\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1349\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1272\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1161\"}},\"id\":\"1165\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"LCvovnS+MD5HHeFRujdBPo7Jz+IWnjQ+zpfm6LIIRj4MTURLw0dJPpjF72UkGUg+8rI2dje5TT4hSY5Q1A1JPre7Dm3VzVM+cSFpXsXCWD4Mgqm2461iPnsfNECwiWo++PRq3g2hbz6E3QrLu+VyPm/1KLiPi3g+47PmFRE9fD79b6H2IbB/Psbknc4u7IE+slntN4Fjgz4CtvBsX9yDPlJS35kH+Xg+ZH98nllCZj7fKA7GIqdPPkyPiRpmhVQ+zmSHHzQbSj7T6Tqq+o9JPllpfO+A90A+sbjS9bkOUD4pv0rMGkdjProsIByfhHA+jR0Gg4Dyej4136nhIsCCPlbILr+BdIk+it6p/Y7Cjz4mCvRjaIGTPq+ArnFv1pQ+oWzyUf3ikT6untsSeomLPlAtEzFnqYQ+LvyP4ncDdz7eRPAlzMlRPu1yl96VGy8+tJ8kBuGrIz4x46bw/8JMPkETBFtZRkE+Ywgoo3+fRz6V314E+LA0Pmr1aRjjsCE+tw4uEPQPQz7+Y09GV+JXPqAa2qVuEV0+nN1gw7NGXz4G9D/Wy+JnPuW7ZoCZvHE+fx1Sp29rfz6ZyvBWNrWFPsKuyWmomow+kX07aR8Wjj5y438ZGjyGPqgNO8uJiG4+OuLU1S1KXz71jhz/4LlkPmC+eUyRH10+B82MxhPLWT431STBjvtYPpj/7CJYPV8+5Ct6vuq9YT6PuCKgGnxZPlMEH0Oh41A+cVbQX1icUT7esLXucWBKPlpmrI59x00+ZH4cnruHUT45mkIxoOZQPjgtRIlTlE0+pacuWxdDVj5TxjgQ6OJWPmtHEZ5Ld0Y+nzetWcetUz4019Vy+dtZPtWWNj0rA2c+A6zOkyN9bD4css5u2xJzPiX4+GNfCXo+OKjGzGzifT4y3aE+Qct9PsQruu5fEXk+64zwiOHncj7wXXPsANdrPlEOUPjDdmU+IIK+Y/mSTz5/li6i+4BDPtd3EePnQ0Q+mtbc6u8kST5a0gxtWjpNPmuAK1Pv8z4+a8APQ5ugTD4DORhi2iFEPskhU0SNR0g+Xz6dYFglRz6lJl9G+5RPPjSgdYj4/GE+1pfaipYSYT57KiBNBypxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1370\"},\"selection_policy\":{\"id\":\"1371\"}},\"id\":\"1261\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1166\"}},\"id\":\"1170\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1262\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1263\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1147\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1168\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1216\"}},\"id\":\"1220\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"5Onsm5cLRD5I/8M4wBdAPlVMmFUj/Tc+UnKykFs4RD5IkVsqPlRAPjl6C2vMkFA+WkVxn8DTSD6PyEMiJwdIPs37aCmoQVM+hu/XwR4TWz63POwdLEdjPhDsw6Jkrmo+VLtl0AZNcD5huuuEZ3VyPrWziJ9XwHc+jzYL3OlRez5BNji1xfJ+Pj8TM2kg34E+lVh7JcF1gz5xs6Y5kU2DPsPOBtVCbnk+v06AomT2Zz6K7VPAfNNQPoBTtzTepFQ+2uPpipf9TT61g0uzSJ1JPoK0eOcTUUU+sSdP4fLzTT4hUvn9zEhiPmVrXvBp7W8+m5WDECIOez5MTwLQiD6CPnHwtURkgok+6vozfLSHjz5OdX6qXpaTPp9PDh3aA5U+ab5Ydrf3kT65MFLAzM2LPr21snHjgYQ+Tum3hpk6dz4BFmJ1QSJRPmT0rm+vJyA+1crJERqtMz5HPxRxqx1FPnqOKGGPTj4+W9cTIYcsRD6K/xaMkjQ5PmS99ylwpDc+17n8nm4HMj6DHf7oZXhVPvJNDmKhElw+20B5xE43Wz5dbEpGEkRnPh44heFuH3E+vv3WNuW8fz7njjuZrQqGPr6P7nUgbos+qTQWUkVIjj6UC3OVkcmFPtju25ViK28+jq6NkTGgXz70LW4fyBNiPud2Xim2EV4+CdsN6jKSWD5qJdQf3j1WPqkMlFDTuF4+vW9U/LeRYz54RUjArVRXPmHTrs1F4lQ+WAT4haYMTj6c45EDQ9BAPqMbXsKlyEw+cx3Vswz4UD7PhUbJcI1aPlI0ThvnyFk+eHj7V/KWXz5LvA+PF+RVPm9+8Mz1LkQ+jCNPcWe3VD5Be9ju6UBZPkXUfWmEgmY+LcqGzVurbj5IZg8RDWZzPl6SGbpo23g+Bk3MJNeDfj5yOfCJX299Prwn5WnIpHk+kp2ljY0Lcz4N8xtvgMJnPsLPU0DkwWQ+RMIC66NwUT6ys5kzYu5HPvUbAc6TOjo+nbychFQ3Qj7ZDPBzHjNJPh9zUpSVLlA+BaVGsjfuVT4GQZS21ndCPlFHo6VFPkk+JoG/P0gGVz7chyOH751RPgKDy6HckWY+TOUTdm5AZD66L/jrEV1oPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1368\"},\"selection_policy\":{\"id\":\"1369\"}},\"id\":\"1256\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1208\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Udka31pLQj6P5SSBlhZCPtwSYQWXjD8+4JL58mK1Rz6xdWntrGZFPh0IwtrAkEo+fMUAoEL0TD6/9PzmgyRIPgo9cAXBO1I+zo40ogeuXD4+m8x7KE1iPn4XbOJ/TGk+1zPaKD26cD7t3LIqQzVzPm4u4Rj46nc+pvWRF8FXfD6wWiwray1/PpqsNFD9zYE+gOmgPJEEgz7dtvLn0PKDPv9uvuycU3k+74qHrzscZz7GS2m7hmdPPlT8aHvirUw+woEztWrgSD6O4I0SkrtIPhP7cOnp2Uc+CFpEf5gkTz57LW0OnLNhPlvTMKyooG8+DJHTMaakej6P3KDTVcqCPiE7E+IULYk+4yK35Umnjz43eXrlur+TPhVwj6dfrZQ+P+nlURyxkT64C48SEByMPqtLRxe+tIQ+x/8RWegYdz6p2YKA68RQPuDS4JSGkDU+Nrf5bOrEMD6rDBuRXqxAPpopIDhQ1TM+kJEQSi4fQz4XSJJZ3Os8PguNVIfxsT0+H6/hK8jJPj7enHn/EuFTPvHx5ewo+lk+fOMKLcO7XD6DDf5nRJ1oPg20suQOVHA+LMOnQcm6fj5pGwVvIgSGPugDzC1N2Ys+337bRGPVjj7NmxRqyWSGPgXY0JZ3hW4+Zh6A3afqYD6qoHjJ4kVkPjsmjtY8jFw+oiGDRbr8Wj7aRjH5UhJZPkwlZyxnaGE+V8xKo+qCYT6Fqw5xpHRYPrw0OOX5wVc+SLHHqCzjUT4KrDl6xb46PkFGgmc7EUw+mg+syTTaVD7uhIJt7C1SPoUwnh2NtFg+AKnCkQkWYz6UWL/qoWhQPhOQOQxg2kw+0b1qK07QUj7jgpTIxUlePpVXrdbZU2U+9CaronM2bj5q5aUqPghzPiD2y/jsRnk+u4o5Rhgofj5kvoDFLkV+PojEXBICW3k+Cm/8kFEmcz6FmecbHL9rPhRgSSqpG2I+lUcRyvOsUD5gnzK6PuJAPkpDs3GjmE4+6y+qUWYLRz47SFDqdS1BPnxc/IyP4kY+yIeFl8YGQj58tKweRGVOPkWXIPHhvkw+jr0IHaWyWj51BWBFYa1ePvfQWeWUs1w+Moi0c9VtYz7bvbwN0xtoPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1364\"},\"selection_policy\":{\"id\":\"1365\"}},\"id\":\"1246\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1152\",\"type\":\"HelpTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"XIBmkymCNj766urPpWBDPtJPrW3TJEQ+uXnyjC9pRz6LK8fnHelCPkbpomNzgEw+sXVWbEWHUD7vRvUaXqZQPozJzKZRfVU+AVr7E4cIXD4lDmjKnXFhPnIjHFru2mo+dPgYktwccD7C48SPuYZyPpzNtpfrYXc+2jgVT8y1ez5IqTpq+BJ/PgoFiczA5oE+8DAXMDFqgz7TIwERz5KDPr3B4hgniXg+KwN8IyqTZz6tTIE3FU1NPpicL9WCN1I+XL+LEwiSSz7MlXGcWaVKPt5NaOGrJkE+z9VLeBiqUT7lyZ9YjN9iPs7XJrwe+W8+m8lO70S1ej5cElePB4iCPlO6uU/LHIk+e1owOT5gjz6K2lxM/rKTPprpVWxD15Q+VK+uYUUXkj4oMOWaTPuLPrNYbLznu4Q+FFaLtXusdj4wEcGo77pQPknHa7prxCc+nc1mQIhNLD5I+2g/mOo/PpOoS+OmuEM+sQxJhog3Qj63igWSTqA8ProoSnrVWkA+NmEkIbV2Qz4KU6KApLJVPopRt7TUBlw+AcTnAQ0zXT7K+fFkjNxmPuPZRFQ87nI+R0aOkjrXfz5Kp7EpqUWGPvP04qK9o4w+typ8+EbrjT4LwOh5mxyGPmP/Nei7HG4+EBEZ9gadYD6Eez9b+8ViPioZxaRdqVw+MfZv7MbQXD4haeZCSxZWPsI/yzhZS2E+jULLa70tYT5iS2U2qdNZPneyEwN4IlU+rG/P9YHfUj7ztddRkfVAPuYbcSP55Ec+XiwBUZM4TD4jRLGtVF1WPvhOxJjKtVI+jmXBuZrdUz7zyTbbifxgPtiE67wONk4+hlhcW1L8Uz46z8rK6T1dPlPgNiwAU2c+O++chy7Pbj5OvSagoPdzPjGTJtG203k+uQGSSmu2fD7fdZvIcyV9Po9WXTNMX3k+Bd6ECZBZcz70WDyb365qPnaVhej7DWQ+d+8dayLrSj6WKnOUXFlEPrz5N1wdOEE+Mg6F+SQVRj7Iy8OCN5E9PjnKDaA5yU4+k7C+Nmr3Sj4mRjnHMx9EPsBZcudjsUY+E9QQ/5RMSD6EGz/LiMhVPj5879BpCmU+ECJ9ctyIZT6YpNnEPJllPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1356\"},\"selection_policy\":{\"id\":\"1357\"}},\"id\":\"1226\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1241\"}},\"id\":\"1245\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1338\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1326\"},\"major_label_policy\":{\"id\":\"1325\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1144\"}},\"id\":\"1143\",\"type\":\"LogAxis\"},{\"attributes\":{},\"id\":\"1339\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1192\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"1153\"}},\"id\":\"1149\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1191\"},\"glyph\":{\"id\":\"1192\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1193\"},\"view\":{\"id\":\"1195\"}},\"id\":\"1194\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1232\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1268\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1181\"}},\"id\":\"1185\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1243\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1151\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"PNE3e72OPT7GT8/sBi5EPnMSIgY8JDc+TsiRbBivRD6JiHnNGydMPslJFIIS/Ew+oQWK6fcPTz7GjqyZZOhMPionx2FOIVM+x4DuP5+9Wz4bj4c1ggxiPtseV5uv0Gk+v1CcH2NlcD5qT5rrU5tzPmR94CWUZ3c+VP35TzQhfD6YbEmxoVh/PnUSTbtq2YE+pdEHjJU4gz66aiGrscmDPhoi+XWE2ng+gy+ooL5eZz6W5KWoCD5QPu5F8HiQAlM+/9KoNO1xSD5RiCqpdSRIPnzFWQphnEg+VxprsNfEUT6+NMoFU3hiPuBeX+nejW8+IdPLhsG7ej5e/9JV+GiCPqZdIBH04Yg+I0NjKpiljz5nImSb2ZyTPkaAS508YpQ+ie8rSJjekT49sZ2X8O+LPqE8stdc6oQ+U2vt/8g2dz6mL/FhD0JQPnO5X0dsRSo+IBugfQ4ELD4TNdZKY4NDPhh6AttNWTo+wSa7BQpeRz4Ba1V5yqQnPvz+V2xpmzg+smn/V8ANPT7rxYCylfZYPhcgguEfpFk+0JBWvRTrWz4nqdaw4wdpPnyEk8pu43E+6MeNJtuOfT4fXvGyGfqFPinifbGCoYw+l27c1yTTjT46SxbJda+FPg7f/+oRp2s+u7HYm2EKYD7EMdVMN4BkPlv4J17+Nl0+IgFfHB9RXD4z7h7aN91ZPtXUnQKtKFs+V7kE0PgfYT6+k2yq2EtXPgXaKgjNIVg+VFllogSFWT6Siu+S/ixLPq0M68O7OFE+tBNsIIndUj7Fur1fYOZSPtmyOI8y91k+6nUTFRY+Vz6d2ITscJlTPpJdjeNtdlI+JkdmFfV/Rz5lpStkI0VWPhVROnrm2GU+WFVb2dWuaj7wYmZj7xpyPvtnUufROHg+cs1HmHTnfT5hL+zG0V98PgUncs1qFXk+DGuKteIrcz6Aeb4tRxhtPqyrRvO7l2Y+nTTUVh9BTD4Vp+ioVb5FPto/iWe0O0k+aYIc/DK4RD75KOLFeeBAPhZ9XOiRP0o+ZSeijtNPNT6A9nUi0qFBPmvadH0btFQ+3Nxl7on6UT51RNbgnRJRPinZz/vXnlc+zi04VSCFcD6S+Aeyk6tiPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1372\"},\"selection_policy\":{\"id\":\"1373\"}},\"id\":\"1266\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1350\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1351\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1186\"}},\"id\":\"1190\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RQ6CCt5LOz6w0+BrOtZGPm+rxKb7BDY+68Rw8IP0Rz5o9AirurpEPhiX77KOK0k++MUn++igSD6qvsArC8ROPq4tiTDh3lM+fYWnAMZ9Wz7k+jg0IsBhPvu0Q3wYAmo+xM4Ugxiobj4/ov5c5WhyPm18W7Fzz3c+RDQZUAD1ez4aJcosM35/PuDk8Tc7E4I+CzUXC/KTgz4Rzg5q8n6DPmLIl26AVng+Yn0i2+onZz4nf+WoGXxQPgk9noAGRFM+lrUisivSTz5FmTlyNpdEPnuWZJ7sbkQ+Xu/kl6WDTj6S+gheFnxiPmVm8fXZu3A+dLzVPrk5ej7M6JwPx8OCPlCGeAfSJok+Q9vkIjWgjz4z+nudqtaTPgjJk2FNvZQ+jlgUmG74kT5Fw5IdP22LPjSNeWklkIQ+VylAKmZidj4+ABnXOvVQPuHIUReBRBw+wr90hE3yGD5oZ8mSclozPlgUlVW9/ys+Uccr+gmTOz4FfwZtns4zPkYP48GvFjE+hNxVq3UnND41xLX3cllaPnVZ6r+t9Vg+CBYWHcmiWz4x4kiCHwNoPsIrvGk26nE+Uvr5LiG3fj6VyUvZUEKFPtMoHLNwvYw+QuSB23hujj5QymR5WB+GPnE7mWQv/mw+GXbSwY83YT7M0N4UFDhlPitejEK+Olw+BgGUKANxWD7gD+wZYYpTPiHdDwGck10+us3PUOOPYj6zJUZ5t2paPrSxhKs1aVk+p9f9b5enTj4ClFpBrQFFPiBotlss5Uo+ECSXOW4zVD6lIyA/Cf1TPo16QzOGEEw+QHyXpDwBYD5X7OA/OMZWPppfK1B7Akk+BX7apWUUUD4aVY4FTF5fPlEEAQLjnGg+NjCId3hecD5JFdT0PAJzPsn6roFT7Hk+mol557UgfT5EkUDSRyB9PtwbcmMNxnk+vNEXkbhrcz5fmYnYMjhrPpfJzXHqb2c+JKt7LFH4TT4dSBt/dvw9PoGCKX16KUk+SIUbStQoUj5Mn2AKQORSPoJN46fCm0M+1C8o5Sq9TT5mxZoYfVdIPogJs3oyQlo+EVKqiVqaVT7WCOSfgZZUPtHaLjBlf1Y+f5xSIlkzZj4XwuTuvE5vPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1378\"},\"selection_policy\":{\"id\":\"1379\"}},\"id\":\"1281\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1362\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"aifoYMinKj7DXkzTon89Pl8UFd9TQzA+u2acSBCkRj5ImTL/JRVCPoLJmNvm/1A+MCVZHBHETT7gVfWsE+dHPrClLC3hsFI+uQRSwciyWT4h8Jz9vMNiPiV9T7dyNGs+oUMYxwQpcD6G289VUaByPvED7QB8rHc+50bszB1ufD6CGupoA8x+PmOWY5IzB4I+a58eev31gz46LDjeA1KDPsAYq+U2FXk+DjL/tHHbZT4zsVJ3F1RQPuvPF7r00U4+1/r2ki2gSj7GxcXRClY/Pps0idCZ80U+6QX9PfWwTz79D3obSPhhPnrBQVAszXA+t/TSy0//ej6XTFHpi6iCPihazPPIIok+NHAaZkRVjz6/kH9Bhq2TPu5xBnRz/pQ+qyHY6NKukT6p5/CMMIuLPgBBTePrm4Q+1vBYDKu+dj4q0aNsgKVQPq1ydPS8yx4+Sx1bIsclJD5YEY+A0FA7PrFOYO2C0UM+fup/tuPoPD6GZ7N3oiMzPl3P7lTgVUI+UhrUXNL8Rz5eKGbZDoZaPpTFeoFB7l0+ELXJYu5kWT56CT6Cl2hlPseDHhaEiXA+ZOxV4YRTfT6ky9qZpUOGPgsAVeKGT4w+B+aL4cR6jj59Lt8/lR+GPmwArKVGHWs+ar4KuWyqYT7c/uvl179iPmsbzKkbB2A+mfyI1AiNVj7doIyPWIJZPpbx8UvNA2I+BtjjUvtfXj5HLgwq7IVZPoxxWAxrmlE+G1++2ZPTUT4S4ukFK8RJPkGVSdAYDkE+3EA87/KySz7l2s20WBpKPmUCVnx2JFw+LNcnBJMWWT7LScZ7SapUPq8DX5f12E0+UiOUUNlcUz5sCggK7M1ZPnWbyO4GBGk+O/C4Xt72bD5hbL3zNrhzPuIhE2L7T3o+t5y2ZiupfT7J6lp8Qk99PsXsWo4AEXo+rktRpb+Bcz54QtTqgdttPkEl5c7WgmQ+MDw0lY10Uj5mfGDlYe5APlcT196UHD8+ILxmCxZgRD6J8rDWXz06Pvpz/cdvfTc+CZEdvGniUD7DE3mSWhJQPrqDAECCykw+7NzhuWJNRz4wTcTqJA5LPnRVWHkeB1w+C7YDqIXPYD7xG2mpACFmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1382\"},\"selection_policy\":{\"id\":\"1383\"}},\"id\":\"1291\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1363\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1329\"},\"major_label_policy\":{\"id\":\"1328\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1140\"}},\"id\":\"1139\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1325\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"1291\"},\"glyph\":{\"id\":\"1292\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1293\"},\"view\":{\"id\":\"1295\"}},\"id\":\"1294\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1374\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1217\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1296\"}},\"id\":\"1300\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1375\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"22nOga5WNT47uM6BqPZAPj7NYaWTaUE+Ko2aVz94Rz6xr305lzo7PuDCG20X+04+ft0ZnBcYTj5BTp1uzp1JPixwCSb6llI+ik3cUpFyWT6MGKsRM3piPujfotajpmo+6glcRJWBbz4iAaThhQdyPsreYiGVjHc+qv64T2pRez4GrzmzlbV/PkqXH6tSToI+NTnL70yUgz48mr12GHmDPgkPX6h233g+i188wwEYZz4bCJT1xRZQPiP9b2ujEVQ+6JExeW80Tz5I5EH6YMFDPgcElNqrqTs+0DhEIR4YUD7W49cYxWxiPrcyaNVKTnA+xHSEy/Scej4Q2KOPxL2CPgCZcZgsaYk+gnebaSfQjz5kP6dVS4mTPqlkehBGpJQ+RblzRaDPkT5bx831jOeLPmxRVC+9s4Q+ZHIHXJ7Sdj7eOhCvMi5QPvOH06pfUCE+suzSRUmRMT5hW0HLBp4sPoJbLIdQbiw+/qwGB7qURj4AG7YHPq8iPl13vqmJOT0+V+DlNFYTPD6zmTHa8rZXPmmkmxxuyVw+u0ua085yXj4jRiSC4xNmPr8wzf713HA+sHS1WdPufT562OHyoZWFPoGZvNHVaYw+ShQAA7e6jT6Sx8bae3+GPi+aFsaf22w+Ozjj7xpEYD6xniIFMhZlPsDPjIAQ71k+2AnEVU6mWD5ZpgQAC1JZPutiyQ7BZmE+/thsRX2vYD5bpNiOCQ5WPqKRs2XiiFE+2DWwl4bFVT6F1be6NN1APuzWxWeBjEQ+hjvTC+zGUT6nDBfZ3stJPrV17ic1Xlo+Oqa+PaosWz54B89hPnlUPoRgUf/dy0A+VMM53g14UT5JLRaadthXPsFCXp8KU2k+A0TISBkscD5EFPTJ7qlyPoYPCAJlcXo+KndA1T75fT5v9zPjHD59PtHedklib3g+nPtB7Ej7cz5M1aFy1GFrPmS/uIKWU2U+s8x07zaLTT4AN+NwjNxLPsYT2c2oGEU+YDh6bMWSUT5PzBRq0fk0Ph4XydSrakI+GacElcNSSD7UArGnef9CPvy6hfays1A+P0NxojFRRz69Vk06aAJTPstGKhDFj1s+BgKA4JppZD7B4MSdIxR1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1384\"},\"selection_policy\":{\"id\":\"1385\"}},\"id\":\"1296\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1352\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"uy3sUbAnRT4+iIfTbtdKPigxc4F2uD8+vHGD/bVZRz7WpKRorr5CPn+qPYLSIEw+49wi+TU5RT5nh4pmACBGPutU13+cR1U+Ygc/OsrcWz4XqrcV5XNhPqRm7iijE2o+rOlW2z2HcD5maSQxSoVyPn55l031iHc+Wd0iDgBhez7gwS3Bg5x/Pm6qEU7BlIE+p23PCQlvgz6dYBg+nYGDPqFfH1ENhng+jFEb45bjZj5jpqIrBlJNPpkVhANAflI+j78YCJPFSj42n0KP7OZBPn/HyM3PL0c+dkmd6tfTTj7WwQIUgNFiPvn+AhoninA+uZJ7BlDKej6ZY64wtdmCPvAZOaDiT4k+4TBfjfLIjz6OrePUgZ+TPo4P3RuEq5Q+91XpNCU0kj6UuAk5iNeLPuQsY+BlVoQ+9AiYpi/Ddj5WG4kouu1QPuDg8VxTOSI+rnLx/VypIT6imLhAmy04PlOztr/TLTU+hFrNLN2AQj5s5tEiL8QwPp9Z3URdojY+m48gwQJRQz5+h+yVYUhXPmkaA3Vpalg+YLX5WmRXWD4djhtl6Z1mPnAB1FLRjnA+TYvAUpKCfz5hywcmpvyFPgxwDP2ffYw+xtTGpaY5jj5EgeFUEt+FPkvuH79Gnmw+mbmOfY/KYT6jIaxATxVfPtjphN+p51s+po9VonifWj4GCGl65b5RPlIDG+bsVV8+KFnoX4ASYD7KdkagrJ1cPqXlBVNTt1c+vOkaGjUdVD6R2Wcclhw/PnMZo8HqBVI+dPB7nGUdUD7pRIAcu/dOPgCzArLiOUU+8mbUbAYgWz4RQ13x9rBTPi/x4GiF5U4+9aYv8ASqUz46Jdi+r+hYPsOXm0iP4mg+wODrit09az643fl/uEBzPrTyAHrDj3o+JFWVoDRxfj5R452+mOp7PjVp6qnC8Xg+gnKfliNhcz6VM7yvGWFrPkBdAyv+52Y+hUgWaETYVT6gMktrP5BAPsHQ4DT/gkI+lA116LVYTD7E95l+bNJJPsjaKJkX/kM+d9F09M0yRD5eTwSoKblJPj/8dKwPH1Q+craPkzcIVD7+EAoupotSPrgI39CKRlo+TpWEUwTcYT4NqzY3Rq1pPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1376\"},\"selection_policy\":{\"id\":\"1377\"}},\"id\":\"1276\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1353\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1163\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1386\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1296\"},\"glyph\":{\"id\":\"1297\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1298\"},\"view\":{\"id\":\"1300\"}},\"id\":\"1299\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1306\"}},\"id\":\"1310\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1387\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1364\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1306\"},\"glyph\":{\"id\":\"1307\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1308\"},\"view\":{\"id\":\"1310\"}},\"id\":\"1309\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1365\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"blXuXooSMj69qLv+2nFBPmvw7gr2Lj0+4NfkEirmST571R6q/G88Ph3y1Xjn204+Xu3Tw+koTD6nVFYPgOxJPk6YI+XzFlM+M9/rgz2LWT7LHMRPV8NhPoD4CEUQ72k+9dIEkW4AcT69FV/xOJJzPuUMFSr+1Hg+bCdzNxUsfD6TKfvOskt+Pl8YqKAG5oE+ZSPVsi2Mgz7QqqTAo+ODPlLY5B70SXg+PJzKl4/3ZT7g28LnA4hQPt509ojX9E4+K+aO3po1ST7FZqCtVHFEPrD0Yomw80Q+d0zvZkpGUD4+yQahM8JiPtBOyA7ClXA+Azz53Iheej4LPxrmmfCCPjmkxKwNQ4k+18+SjIzPjz4xe5+J69KTPgzTcFVPjpQ+WXeHj9wEkj4iAn/pK9mLPooWMfOSjYQ+cR89IKjLdj4gQBU95xRRPnPTI41WmyA+De8i7g4cMj6QzKOCsrNFPg7I6gIMw00+p6AnxxJORj4bpK5f/DMwPl9zf7fEC0I+SPi6QZutSz50FoATWP5TPgFQPG165V4+4iDC/iroWz76AbjSMYVlPgzpeEAv43A+Bg5IPLOifT6scsivC+6FPoJVSQtFXIw+YenLmWKbjj543SAsruSFPmcnPoW9vG4+ZRD5RlytYT6AHm6dn+hgPsEQgfGxUls+tMm4lw4+WT42S0tL2AtbPigCAN7glmA+9hLchHinXj4VjHCXLQtUPjHpzlhYRlM+/qLRqc6UTT5jr+8cRN9BPnEpMyHkBUk+B6OUjSZkVT4qokSpyf1LPs/F+/rau0w+wvFW4HwSWz7Bt4vaZvJRPjYr4igOW0M+u3bm5F8JUT5m5OnCqLVZPmXwaaqwz2g+2ra45TNCbz4so0FTpEV0PnW8n8fDJHo+juHow6Wffj6pZRZS3kx9PocnCo3nd3g++UEsOZebcz7EsCO9Uw9qPnXH7CWPxmQ+7oTX1usSUz6rdHQCI+88Pm7hgTWhZ0I+Tlo9P+icQz6r9YAUcdVHPtD8usym7DY+EPXxd+q6Rj64KUiZ7b1RPkf4MTgq/VY+M4brI6J0Uj5mk57FUAhSPpC7Gg6yplc+z5LYA64qXT4z0kHdk0VmPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1352\"},\"selection_policy\":{\"id\":\"1353\"}},\"id\":\"1216\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1376\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"1139\"},\"ticker\":null},\"id\":\"1142\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"boRIvXWxPz78kdv6ChdBPgsetaERZT0+e9CXKiLSRD51F+ICZqBHPkcPbVn4QU0+6+ittiRXTT5uuNB3uDNKPq/Yn3mV01Q+YmjX0aKrWz7K9r5rC81hPpdJNhV7uWk+G9TqG66+bz5WLDBezjFyPn/AJQeecng+iSSA2JQPfD5QySkBu+t+Punc7jzFEYI+jRbm2vNBgz4lNfYuknaDPudN50Dm43g+m98dBLLjZj7VAdqracBNPixeH1vozVE+tp74mHa9TT4okVZlehFCPoeuVh6q3kU+4Y/HgyI3Uj7rraJQmcxiPmnM1YtKlXE+m9IWtaZAej63r0Hk8H6CPvkoKmPY1Ig+DIh6AuJ4jz7fO2D1QLGTPqRxHQpRuJQ+dR5jBL7vkT6dYkHgkbSLPkEvupyUp4Q+IMHikR5rdj4tOCpoO6lPPiEWH/LuYCw+ggGq+k2hMj5jC4fZN8goPgNUETsnlkQ+Q4AJpqqORj4zMomW22UlPrbu5DHToDs+Mc2pBmLIQj6OmTSTlQJWPjjxjcXgxFY+7dB9RwhOWT7MkhDvKRZnPnG6v2cP1HI+hPtncizufj660HpjcA2GPnGHaYMIQ4w+qZUERv6cjT47Hqszp5yFPvdSbIDp/mw+uG2ys0lzXz5cKOr1VhpkPmdFrGBUYFw+nMtluU1HWT7SSDc3QtpTPpspq3OGTGA+7S2FFIiYYj6Nu63GHFVZPocr/+Q6pFc+pwAzFkFUVD7WQnmDYp88PnW8QRR1Y1E+0BLLMjmZVT4JuENOPUhWPiVKxRwbU00+062ugXDTVz4ByCfqQ7pUPtHUC6qIJVA+B1d+x3YCVT6dQ6U+E9hWPlfO0DIbEm0+3FSc5F2BbT5JPslnxnJxPsPaLABRe3o+NXt5v9Pffj7m/RKAJJ99PhuK93xPy3g+/6K8Y6S1cj4KfIMxCf1qPjKbkZBs7GQ+8bUhkBQlUT4CcD1BNIpDPmOGdUYsJkE+BvGr3s0XSz7hcL6hkmZJPg8uMvOCqkg+Q3qFdAxyRT79xo8WspxGPkjll1KlxEA+DNfLB6isUz5bxWs8viVSPofJlQxw5mE+qriVDocAZj5j6HjHLYhkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1380\"},\"selection_policy\":{\"id\":\"1381\"}},\"id\":\"1286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1377\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1288\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1329\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1303\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1354\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1293\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1355\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1388\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1286\"}},\"id\":\"1290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1389\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1297\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"7T1vNUr2Pz7wn9Z5im0/PsMy47KU2Co+Llc9RNYcST5DBFOtX7xDPtKoDRpPdFA+MQFGRP74Rz7pfxOJoylMPqMd5L5KHlE+YEjyfNx2WD4xIoOQ6l1iPm5y0pfmdmw+K0pxdzUpcD6EsXfeFO1yPqRHHWFIoHc+IdLNMy6Jez5F1lpiuxh/Pi+yKwdA1YE+tN+PHVuigz7YG+nxIRaEPrXAsRpogHk+SXybbzSYZj5oNMd2f55RPjyHLsAVe1M+YD/cFvUGRz4BbC4qbIFDPol+6hAtOEQ+yh94ZPlHUT6AIOCLfn5iPu8z/SlG3XA+v0DJMngGez54nuyVwtuCPsbdsdPFyYg+PbnbXc/Ojz5hv3Vej4STPig8UNA/kJQ+Z9gGjKvgkT5e8Lcu+KyLPtMIK+eojoQ+N/5WUnwXdj4OtnEpmH9NPh4XMkrmTjE+05zem+oJCT5T5zBr/SsmPuU2fGGEryQ+Lk+kfr7KQD75u0DMagBBPiWt4GrHCzo+11UiOoyBPT5ZWjyYkWpbPtR9RT2qy1c+vW1k5I15Xz7XiGbe2ptpPsSi+v5VGXE+YWI+8JrHfj5dXcS4a0eGPgQIiRDaOYw+TmNUXENsjj7c4GH7yiyGPvWl2eHf6G8+s8eDBaEoZD7bmG6b+cZhPsMmXpyweWA+ws3z+uCAWT5HNnMWRqhWPoRHdZf+HWA+xMYQ6EO2Yz5YADACTtxXPi0TQ6QcaVE+x9WmxIDWUz4rDE6GRdVBPjoMhTtRyTU+UgJNMXKYUj5aA5njD85MPtmZm2yDN0s+jETJFQljWT5x6Zq6lb5XPq6GtNXh2EM+FTfnOH1KUz7eHKahprRYPlvlIV8D9WY+gTVT4mOCbD6rK7fMxUdzPpVwZuJYVXs+esw92lz0fT5XcqHCu+18PriwdO7zbHo+Dq4dbIutcj4OCtlqOY1pPhPeG8zTE2Q+SlicpfB7Tz7x+2kcLBBGPlWPcs3VTzw+KoECsNnORT6VQFOEKLY8PkhCk1VgNkI+ySCUdgLpRT583/JepAlMPnonblWVmFE+OQOWRQyFWD60lBUiY/RJPhhI+vZU6GQ+HzjxmeReVD4dhsbwUqBcPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1388\"},\"selection_policy\":{\"id\":\"1389\"}},\"id\":\"1306\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1366\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1384\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1302\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1367\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1277\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"s0I4GfCNPD6BE7xYEGVFPnwTxprHBUE+7snDQjnyRD5icjjj+2FGPvm9vOP74Eo+8vGcmTMZRz5KiZIDGJ5NPrTz96FH6lQ+V/dSGAvyWT7CqNVWkiBkPiKdPHICSGk+4H1oPL2Ebz5LZxoDXVlzPk8sHKmxXXg+ZdVt5gdeez5yhXAH04J+PvxqMFqSQII+m8YijI+Pgz5CUdk1iAOEPrS3O6Sr03g+m7JXQKBKZz6aCw1WHfVNPnCOnCRNu1Q+liG9/f7tTT4Faj0aZLVCPr4BfpATTkw+ZzXrpwWpUD4wlT2f3cVhPr/9suBlvHA+VdKZnI3Bej5NPDpE72uCPmf6V6f5RIk+zNR7yoG+jz51QN9D67GTPuE2FGpqo5Q+MOPLmIzBkT4LAUSTsrqLPhrAWLhBnYQ+Oi3klcE1dz5nscJLFSJPPvizRZOTACM+y5Oi6KVOMD51xSDrAgoxPvJYKMFrkkM+Z9Lhz5F6Rj5CGNqQfeczPmMloSDOfSQ+Ym0SH0u9OT6DuwEsmIJbPrMLVlmS/1g+WexWZ1n4WT6x2isATv1mPgTMPU5RiXE+3KcxeuuQfj4c+n7UMqeFPugvTvqwRIw+2RFTeJf6jj4xlpvMXVWGPv5jg1g3BWw+QboLtjcNXT7ZtNytWmdjPnYg4jZMTl4+nvvAjVVoWz7ikUaluQ5XPu0/ItjUKV4+TlHIVZT7YD557JRHPulbPj8RbEJz31Q+JtOfoVNKUD5qLfjcbTdFPnhhFl2QRE4+pE9Z55bBUz4ZFIORbEdRPhpapSRT3Ew+j1nz9RRfVz5C2sRBoMZVPqyZW6SuDUQ+XW93rqZ9Uz4FwL4RaFlXPneINVeYwWk+bDzug1FSbz6hzFlOWmpyPjo/xgO5sHo+SJUJ7mavfT7KEgxdvBV9Pt+rVe99kHk+Im/Dajr0cj594amPmlNuPqh3aaRRAWY+HX+gPKm/Tz5zNw/GgIxCPplR/CQ+xj4+r/41Y4fKPz6Makw4cVNEPvARc18woUg+xyF0l13dRz6+5UWWzx1RPqlGUtej9k0+3ezX/Q9vVD5UnNyNdsFaPqpv+1DmqmE+GM90h9JmVj7iozGL5IJzPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1350\"},\"selection_policy\":{\"id\":\"1351\"}},\"id\":\"1211\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1307\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"egXOCEgENj5jYCsoakxJPmaBweWHHzk+Ztb0siSLSD7U/NZg0oxBPhZJeWtPRko+aP4qhC5sTT6Xgi85cadMPogO7t7S/VI+iYhA0HKNWj4Y8kTl5L1hPv4vYp4EVms+2j7AIvY4bz6jOhWIUz9yPhS8LrBWzXg+SMvfF92Eez4CUBwzOP9+PulAodzZwoE+fLWa6Qhpgz4+QIgdg7mDPoc5ArXIGXk+dEsZZuoPZj7iiWaIm71RPkcjnOPBflM+ACdEXM4gSD6HGL8r69hDPseopW1mJEA+wKZncZotUT55rv+7xHJiPpVYb6FCXHA+2khNwW6Cez7zfxKGVZaCPpNmOruxIok+SwY/Gweijz4e4fDNPoSTPtZPfdUGh5Q+Nu9PwzDWkT7EABOrgvKLPjzeN6Ebp4Q+i1hblvyndz7COTiyeu1PPiLbpp7j3kA+kdVkuy82Oz4pCqV0JA42PtDBbYMK2UI+SpAY1RmBQT6lrt/oioozPoMAurg8aEI+Z9diOzt7ND5LF7kfCdRYPviRjpv6BVw+nPifTUziWz7JX3ikl9JnPhUy4KFsvnI+MgwwZzqlfj5EyAf0c5iFPkFnnRaQF4w+3dmVCKAhjj6ZiW5dYumFPjnvEnkUpXA+3HgD90omYT7CNxKR9/liPnQDFvbBj2E+IA7sjC7YWj5NkJBz9MpVPsQoWT8tR10+PmOQ9xqyYD506A7N3LZZPpYAWb7QslM+xo4F2jMeVT56gvbvEpVJPvHRG6xTYEg+bZTpuE99Tz7kxIlXMd9QPimgmC2HTE0+Oy0fWZGJXT6XgeHy35hSPs1iMdDFA0Y+zrkaUsUAVj5RgpqbEChZPhhKCTxGwWs+2ySy10kbbT64xuk1kRt0PlXw7MMIn3o+diQ7ZOTCfT5IBriRbdZ9PhBAaSeEa3k+BRzoPOdNcj4ShYvEmkpqPopSNej5e2U+oGAy1DjYTz68ovz24pA4Pk7x22x6YkM+26conP2qST6dHOo7yVtEPubTYZeYdzk+/wU1pNcfUj4+2gZwVtxOPsSZMj4AWkM+c3GPw8xeQD4eg/bxrE5iPm2hyzhat18+Vp4BTSQ0Wj45EJmYA+drPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1330\"},\"selection_policy\":{\"id\":\"1331\"}},\"id\":\"1161\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ND/Sxzy4OD6m7UqEh5lGPp+CyruRNUE+GHcVKTGORT6On4jSOAU/PtuqxFLoMEo++ZqRm3jITj6fL5BKHbBMPnniKNXci1M+mBMTs5EdWj76DgQDWX9jPiucIE8lImo+O1L3l+Tcbj6AIvhsTiFzPrClt0VErHc+sFizcM9rfD57JW0Moi5/PoGfbQZS9oE+LW1c5hVQgz6hVxtXdP6CPpUw0cwoSHg+lwXqqZa0Zj4XXAhjmrFOPociEQzSJFM+7P2SPFS/TT6KzHFtZNdGPqQe0SoajkU+snEcILdZUT69jnRhFW9hPqguuu78j3A+M+gTpCxIez5wU/kfQ1WDPiBeXsSJlYg+vxt332sBkD6nCVmBsLOTPow4TXXYpJQ+0Pk07E7UkT6C4ydbNAuMPuV9BXifw4Q+JzL6eg2Ndz44Iv+5BQJRPrXaz9luIjI+d49wG3iGKD5cEM6zfUc5Pm27h04goDY+s6QtwuUkPz5ajiUWEioqPnscpBlRQjg+avMA4fivQj7CMkSPcRxaPq3NYbFxBVo+INTWpAutXD6F0q9a/ZhoPjCvJCy1MHI+qTmHc3SqfD60e1tMrdiFPrEuF1jELYw+bSJuEBEAjj4ZEXeto06FPiOjDwaCRWw+b6IVAlD7Xz4HXBVtLeRkPiadwSh3mGA+p4Gs7wjyWj4McllisadTPoioJ440210+uXPYikAIYj4MIw5aiANZPt2HAGRTuVE+7XWYam7rVT4C2zigoUxOPtJk0vxO+EU+20/DwqY7UT4CAwXv1GRNPloi3HX0/lI+DK4JHUHzXD7ruVzOtldQPqv4sJ6BF08+FWrTcUEYUT5Aoo/lPn5cPoQuy/fppWc+AW12edKzbT4XJdgPZX9zPraeWHqNTno+nHKtl7YAfT7XrFVj/E58PuBMkOPG4nk+bXg/SWFEcj7fYyvd1LlqPgN09HK1EmU+mlckhpodVD4OyCX1uFxCPjQcZ+DIBTo+aI9TBeEFSj6YtYQnQ8FGPsK12VGY/kY+uONIeNVlQD51OZ8wAuhLPittKxhHlVQ+c4DYF/N+VT6wq34NCDlKPjVFngAEWlY+0FqzBJ57YD4U3qU7HKxuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1386\"},\"selection_policy\":{\"id\":\"1387\"}},\"id\":\"1301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"1326\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1378\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1281\"},\"glyph\":{\"id\":\"1282\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1283\"},\"view\":{\"id\":\"1285\"}},\"id\":\"1284\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1379\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{\"source\":{\"id\":\"1276\"}},\"id\":\"1280\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1271\"}},\"id\":\"1275\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1356\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1287\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1357\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1368\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1369\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1278\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1301\"},\"glyph\":{\"id\":\"1302\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1303\"},\"view\":{\"id\":\"1305\"}},\"id\":\"1304\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1380\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1381\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1358\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1282\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1140\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1359\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1370\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1283\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1371\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1292\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1137\",\"type\":\"LogScale\"},{\"attributes\":{\"data_source\":{\"id\":\"1271\"},\"glyph\":{\"id\":\"1272\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1273\"},\"view\":{\"id\":\"1275\"}},\"id\":\"1274\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1276\"},\"glyph\":{\"id\":\"1277\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1278\"},\"view\":{\"id\":\"1280\"}},\"id\":\"1279\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1382\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1383\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1281\"}},\"id\":\"1285\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1360\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1298\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1361\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1147\"},{\"id\":\"1148\"},{\"id\":\"1149\"},{\"id\":\"1150\"},{\"id\":\"1151\"},{\"id\":\"1152\"}]},\"id\":\"1154\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"1286\"},\"glyph\":{\"id\":\"1287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1288\"},\"view\":{\"id\":\"1290\"}},\"id\":\"1289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1308\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1372\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1328\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1373\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1301\"}},\"id\":\"1305\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"1291\"}},\"id\":\"1295\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1247\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1385\",\"type\":\"UnionRenderers\"}],\"root_ids\":[\"1128\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"fe89bbc0-5333-4e67-9467-9210d7bcb091\",\"root_ids\":[\"1128\"],\"roots\":{\"1128\":\"f4eef2fc-0194-45eb-a709-00cab9ed0769\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1128"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"591c5966-b852-4aad-a2a9-cfa040189645\" data-root-id=\"1732\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"4a629919-c852-496e-9ea1-09a4b214faf6\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1743\"}],\"center\":[{\"id\":\"1746\"},{\"id\":\"1750\"},{\"id\":\"1776\"}],\"height\":300,\"left\":[{\"id\":\"1747\"}],\"renderers\":[{\"id\":\"1764\"},{\"id\":\"1781\"},{\"id\":\"1786\"}],\"title\":{\"id\":\"1733\"},\"toolbar\":{\"id\":\"1756\"},\"width\":800,\"x_range\":{\"id\":\"1735\"},\"x_scale\":{\"id\":\"1739\"},\"y_range\":{\"id\":\"1737\"},\"y_scale\":{\"id\":\"1741\"}},\"id\":\"1732\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1763\"},\"view\":{\"id\":\"1765\"}},\"id\":\"1764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"kCD2oXz7aj47q1iuoU5EPqx8qyJtaVI+a4E881DKMD50Z7w/P7Y1Pl7l/lxxsjo+RuKUK+6+Pz4UGQrGbBU7PsjcpwgS2VA+HUPEDv8NWz5Alq29nYJUPrKSVNqfwks+v5kiSgaMRz40C/d/veRHPqxHt9s7Pkg+JofEEc6lST4Klj9OfKxOPnMtMdPJb1M+8s4EZL2IJD7kLttdoX5QPpmojM13JVo+YyOQdZLqKD6/l17oc+5KPuOqtYK/s0A+2GblbIhMOD5MciZd9DdWPsnEGnGqFmQ+Gf+ixN9dRz7WvmMgqCQ4PvYSWP04Kk8+wvWSwrmrUD4Moag49V9QPmlq+HsaE1A+GPED4+ogTj6IWfU1HP5PPg7V9wy4yVA+t6DI4dqWUT6qJojbgWZSPs1tMcB0yU8+sERQK0W1Sj6VPnrI6KtDPrf2hDFuFjk+cqXIDRX8Mz45euvpG4JSPpmdVC0y6E4+vpN+clDR/T0AXGH/0VUwPl0TOnvn9U0+hqA5sGN0NT5cbZjMsolHPgueVyWvr1E+6gjkwM94OT6jshqewYFHPpQCqtqhQQM+sMmorZRRJT47s9FiHtcMPhzwdVCivTs+Vfi24vJn4D3sEyYJ/2sqPhlU2ZUMKEI+AHHUMj/ZQD4O17qUCwtFPpOe0893cUE+e77t/pBoRz4seU4VWApAPpEoV9c9IzE+lSb6oGWPUT7+5bT6SClOPtlIoJ9ePfA9MLiL/AQX/z1xWj1RShMHPmcIm+2hvis+HK5QMdbkMj63mh3Vt3M/PmFTu9utrz8+ice/6BxwAT5XOquO70kUPkuUL4rwcTM+NAg593EORD7b6F43KvY4Pup/sgOweRg+DpO6A0MHQj6/IhAcR0c8PgJWJSdRYjQ+ddfCDbm9RT6VTOxyRRUyPikbaeEBuj8+0qa5H9/mBz7RliG8vag1PiVlvVownko+jiBRLvRSUD6Ei2zdHUU+Pl4O0M86kvk9ewgt+9UOQD4YHE10JoxPPr3jwtc61C4+hfNB5yiSOj6EJRvBceRFPq5XlvWuMjo+N+eP+PT5Mz4/pslexZAdPtjFQOD+WyY+pLZHAB8qQz6D/tWYmptIPiLJKzaGHE8+mVe0TS6qQz64Z0Jr6iZBPkubV4FMtUU+mmOyXSg8QT6PPp8HF/xbPpmQJfiArDU+YRhYMNmHTD6Om5w+D7dRPm602i5o8kg+mLE447iITj7vcfRP/khGPtznw07rdk4+9tmigWNUWD4P9m39FVZWPulZrlgv8Vc+9Y6DSD86Xj5KCZBvrE1jPjJSTXUfmWI+/awaCF2NbD7etLPmUcdrPsUeDlpLYm0+mcLr4HW3cD59HgAeVsFvPqeDoR+GE3E+p0wssMWycD6Fa740hRx3PuiJsQnfhHU+D/d3h48NeD5Jn5pbLFl7PuU4Sq6Z23k+2fxda/0ffT7r29C5xsl9PmZqT50Db38+TlbxDdkogD6Dck66IYGBPiv+yajfToI+oX6hgivggj5ABxK+9QqEPlF3vUoGvIM+meXi82p5hD7O6ShkgwCFPjbPxIAj/4E+coICW1hEfj6NwhDbqAVzPja96dL+MnE+Lf9bedBDZD5VfpsNHAdgPg0LX4fGr1U+LWYOqrUqSj5NkecYuRhRPiCb+w+S8VM+AA1ydZUzWT6gojtyWF4pPrf/wPStNkw+kh8MoIB4TT5rhuLTFVM5PsN50LE+N0Q+AmCesvUrSz6iAc0cEwosPhfENBr+E08+DbDSNdOORT7encDWjWZKPodfhTXWrlU+wLHwz8XBWz60lV2ruMFhPgDTaYGlEmY+7CGi0daWaz6G7R8gewNxPuHJKAZPEXQ+9nyYb7zPeD7ZhjotkxV7Ph+PFgR6oH8+7R3oI6ZOgT4i0i6Di9+DPuWTTmpasoU+1A+M+4Y7iD7Fs59BEAeJPp9lE7cvOY0+kkPFLovhjT4sJDZpyQCRPuMiVW6jE5I+xJf3NPyMkz7qGkt9Xj2UPuxrm/F8uZQ+D/wRTpaNlD4mMVTrMqSUPr8HtY9jYpM+5xQfBIM3kj6dGkDJeKWQPiClksLTkY4+1ks+GvEMjD72KOMeJXqJPslJzDdYNIc+IFvLmfFAhD6wT6H09XaDPvTSeeJ8238+KkuROmDEdz5YmNCn5i9wPm+iGOQvTl4+aj9H1GfEST7sOA49XidBPuOPM8jdmDM+xwTg6dxrMz6xXJDbDD4zPgbt+1CUDRk+wnPxHOYwET5/QvfWw3QCPl4eOxSFntI9OUF7BjfCLT7323rKw2soPkSD37bYAyM+A8KksI9vKD6fv0KvsKIgPgUsWFb1niE+XK8FRVLsNj7HinxUE9FEPrHTOHcFrEA+1gsBiOdZQj6nd9ZurgxEPvo36E5vxEU++I0PihJxJz5KYMshcBM2Plqd4/LXWjU+a+eZ0frARD7mnv6opBcIPvwzxpRvmzc+LoXPjJtlRj72Tz+xCCJKPnoU66jDoVg+r1Gp7HIVYT4nX1nP0PddPkOQg86Id1I+uQASdj+MXD7kX1FcheBUPtCsAJMza10+PZORvMOuUD4QJ08J+T5jPlrZbbCVCGM+CBHsPlzRZj5bJLcVDfdrPovN/xn+6Go+ObXWxi31Zz4KgUyph05wPsQ7205fynA+MRtYxzkXcT4Pqcl5pB12PlaEcvPI1ns+Vwca6DnIgD6HDKrV2+OAPneC7Pc2WYQ+NGunwR05hT58R8NfkAuHPoPrYOIbKYg+3FTuxl1kiT7LNfMPFRmMPqJoWfSAEI4+V+uzQi2jjT6gJ/rMokSPPtd6XTHjh4w+Qm/s8FgqkD5MFLdrK3SNPsn20cHf34s+gyr9huIbhz50Rs1e4rqCPrdGoBeK634+Y4FMBPq5eD4pDB7QEv1uPruJkidMIF0+JFAekkDpZj5V67ATHp5gPho7ZSQvNWY+vPUoWLf0aT4ExSUUun9dPoyBP/yKLlY+a3dn53L7YD47Abt/EBlnPoDx3llNkWM+evy1Bs+aaT6j6+99t5xpPoka2sufXWI+d3EOseuIFD42aQwOwYZIPst/Wet6pUw+VywpceAnXD5bFRUdz4FfPj3WTvQpFWU+SdaaXXgCXT5qswerpThFPmxZRj5NWVI+BDQPGx2eWz6VPBAi9bE9PhWhUkFEB1A+ZU+naKTNYz6HRoAmoSZsPkJSAXj71mY+JyFPoiO8Yz7dTCp7unthPu8WwIclymA+w9rn0roHaT7uUji31GlQPmt4xzcdaF4+IIK9vtGVXT6CpJNRN6xXPp6ZQWwip1A+ie0bOdpKTT4ZFV5eokhhPhjVF+rkaks+8LWpWTsmQj4HP+6jECJKPmc950XSi1E+ueo7XAk3YT5GixB4TnpVPpLQDeOYCEo+E2AN7u07QD5FRvF4nqhKPnznVNPVdU8+gXLMN7lBQD49J2bzcrb9Pdezjy2IryM+/hOdHZzkMT6Z56OEURcsPm810UeQW0E+/QOP9orFNz7413T12GJIPouBzm2huVY+dSh6LEY5Xj6yHU33PVJYPjQmjC/96zY+Q28KCWYPOj7AutVIv3VRPvhIogpOa1I+bAEIEdjyTD59WUcuRitGPngYSExQ2lE+9HKAcfViRD44ewRZUMwjPuiTtOJVl1E+ZW6ktxIIWT7/mfHxMyFDPuQxLv5RJU0+vWkJuaNEZT5sLNBYFmxdPiIZSo+FhVM+X8sXC4p9Wj5DdNodcDtGPnnmxsBDrVQ+O38l/7NOXj7zN/aCDgFkPg86j32Ln00+uXuN1wdpWD6RKV6YCgphPqwA1xhZnhI+CLojnqUeCD7SKMlPlfAjPhwlXi56XSo+JvQRqFonVT7amXcGSUw9PglzEeh+114+wgYnu6eXUD6ePVBbef1ZPp1pP150tUk+QfPSGu88WT4U/48bkwZaPh88G8zM+FI+TBqC0OhBWD5zOT7iDu5ZPqNDijyMGmE+X5SFVKJKZT49Hv/fYttoPqJDJWdaoGI+wUkpz5mqaT69uDlg3AZuPkWXXK5ewF8+mT/m2WDgZj7wL/VwuxdtPskh9L6h3XA+LR3j4DYkaT4Oimw7XV9yPvZBER8uqHA+U6Uq/sipdT5aP6/NoR1sPsiEYwhnB3U+bRseslercj6VRBo5mMN1Pth9QMdavXQ+qAIkJ9uZej5tWzwMArF/PtWJZsNlmnw+jUmHx8Nuej43egm5+yB6Pon3tcqY7ns+89dhanVugT4RroMm7eZ5Pj5Ks9YQ33o+U12CPPCqfj4jJ+i8SZd+PqyzRn34Zn8+uxx90DQsfj6AfgdwGgyAPofm2oZVf30+O8wqRdCSfD6a8f0vjK18Ps9/DrVbeXw+u93IH9itdD59SWpNVbR7PtB3ya0K+38+Aab6ITqvej5ScRMkPOZ9PuJc9w0FVnQ+qhaO+s0teT507thdIDl0PpL5lO6jqnY+v6yDg5iScT5O3e7Wlmd0Pm3saappc3M+ceaHyYpTbj5wtckYgghsPmabsrWF+HE+guKjvWIvZD78UhKT53ZnPrkGlWU/y2s+HawJ2668aj7lNEb2G45hPoWza2BWNWs+tum+PwRVZj4xXEFDrNhcPv4uh3twnmw+MhHtDZ1gbz5+ii8OIiVbPqieNpHFcVk+KcxOey3+UT58bsWoUTpcPhcrjsX8lkE+z7FdGGanFj7NI7DqPwdZPrtPslNyPlA+2EfhunT2TT6xwqMJT2xLPlY1vuqEoTM+5OQ6pVJDTj7Gccy+0i07PndBBT6py1A+zCUa94b6TT6vRJg0j1hKPpOWb0e4wy4+AF7g1U2MID5BumwDTwjyPdu0ElFAbk4+Cs7od+MDRz7xtrhvWB4/Ptu5ph4VkDI+D/Yz8FdKPT68wvuhmQlEPnErvEMhWzs+t8ZTgViaUj4eSsXdwspMPl+7JOjn1Ek+Fo16+gzbRj5+Y+n6L0VFPqkpGd1lmRo+/GDVHdrKMD5QVM+F2M4RPnte3BiE+Eo+av2kAwpPOT6QUgIqvUM2PjOcoRFH60M+/BXo+J4uST6W+CfTl1IsPttB/ZBtS0g+PVdUVr0gIT6vBrirkAJaPlqAeI6oO0I+R5C6hGBMJD5Lvc2leHJDPvwYPs/BXUI+DM65vDdoEj6edWjWX3tIPhvEIlZ6Nzk+AUZm1KZvQz5GOWvyF0xKPuSFfCfBNio+8J6vE4UARD5oLV5EskVUPlxwdNjJ1E8+1SLnkdOxUz5v7hzJhVk0Phw12HxVOB0+9HnsUfxHQz6MZLWfuilWPns+ZG9kX2E+waX1Al/cUT5IEaqyLKoMPgDwxBaQT0w+qXkhobESVz7HYaMpJQRgPsErlpELVl4+qqa4cbGhXD4anmqeIWUUPn4oO759bk0+9dinkAmaQD6dndlbUbIdPqQApcWkN0o+dj3azdVpWD6fgE+5ycxgPod3XfjAMGI+9uvqY1KWYz715L5Nc/1kPkGsReWeWzg+lubO2Oz1Qj4rC5c+ljZRPtjU8Go6+1g+7FyFL5O5VD6IVlNo8HJQPmD6j4xa+0E+9miBph/8Fz5D7MBSPtopPneKbVzGpD8+yJdyRgA5ST48VhQ8NDNaPpuCyOu57GM+PEuLG7HHaj6wOfUa9h5yPv0FJDIKXWU+dZtw3iX2PT5RBGf+te9oPklA6CelMFw+aoiI8XbgYD7C7mdNcch0Pms3VfWEqTQ+S88bSBYiND5M8i4aDpozPq2L4vhlySo+yghasPmgHD5LNXYhSNpgPocRrIu5jic+jMK/GdREcj7lx0YKWVczPnWAZMLGc28+TlIbhneOaT6K5ZyG1BRLPrW6IlMXUUc+5pUHmqRTST49bmjzf1hLPjEWKXD8x1Y+e5VWKpp/YT7kG2DuSjN4PrDukZw5tHs+AR+RkF8SdD5o5OehRC+UPtCtyGIRYJA+KBTtixnNhj7mxAsm7Zx5PmdrkAAqIVY+VB4R6MxAfT4B9Y8D/a6GPhypDxQXx44+OQBNI+VPdT41NuFHvh+QPhUXVgVcKZA+\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1773\"},\"selection_policy\":{\"id\":\"1774\"}},\"id\":\"1731\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"1755\"}},\"id\":\"1753\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1748\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"1739\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1771\",\"type\":\"AllLabels\"},{\"attributes\":{\"text\":\"HD3651B: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"1733\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1763\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1751\",\"type\":\"PanTool\"},{\"attributes\":{\"ticker\":null},\"id\":\"1769\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"1754\",\"type\":\"ResetTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"3+DMF8E8UT4qtDSRmBpUPrYsa0prhFI+OFvLu0xpSj79d51x9TVEPngl5XsNgzg+ib/5eYTKMj7sGg4j9mMmPhr6IuYOtzc+6BiulPsVKj6pgGcZAdMuPomLBxkzZDE+kfIiTaRfQD58BqoKgYo9PmhuNoDoGVw+rLM/4368ZT6TbUZvWMFwPurN+GYtOHU+mDTc6VypeD6LWA4ilbd3Pj+nwX9Zv3M+Zo/Xku31aj44PtOUVhdlPncl0ZLv3l8+cq15sAkYUz5zMlBB2slJPlpSJBA2rEI+0YBKtwE3Tz7vEheqCL9VPtwSVrj6BVA+F8LuRcOxQT7HpljGfApFPupn0mMjpEc+MPwJxPSVSj4INOvEJQxOPlQmBk0Rl1I+Ba91reuEWj7us5vlM4tWPsbUEMMLHVw+kBt+96T+UT5e9kgcz7BZPtu8bmZQ71Y+ZcvhrVHvYT6GeNbMRGlbPkQd46bFD2c+i1laUGVCgT586IeMWUCLPkPCLSMDsIk+Ik86J9Pcgj66bDi8v9Z6PlizKU2XZ28+ROSEZ9EVZD72OtfcHVJbPsjZzXZfzlM+LgtQkxq2UD6eCAFWjLVFPpyIkD2X4Tc+eu3lcWY1JD4DDBo/IdcjPmaCbIBNqSA+YiyP0J4vJD4T8acVKdsZPtvTzKBTeR0+0vPVEM8bRD7uDMaSDqB3Pl+RLg4G1oQ+NzuglyGPiz59u5sOA26SPp/3hRNDtpc+9/eoggHhlz7WVzW/+RGTPq2WAvg2d5A+hsF3UYTtiD6VhZ5owgGBPi3QvzKtaHM+X+XRMAWsYz4fYGrsftlPPs5r/wAFakw+qteUAkQlUT4sO7Fi/udVPuHsYwAT4Fg+CHfpUkcOUz7QFHlTgVtjPnxVhlbjEHU+NPMzOdIygT5MZuz8DEuBPuexzeO0GoA+L30u4DT0fD6MSjYbXwh5PvnDut/xdnQ+JgSqNTwncD7p8G5APHtqPiz7cDxq4GU+58CQjtQtYT4BsMPppoZaPn9pb0lov1M+H7KPMPSfSz5taiFx2e1HPqqpzW3CvUY+ETS3oM+zOT7PeUf3NFRDPoQZ4DqhZkE+6OhR1GGaOj7mInTjLrYuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"1797\"},\"selection_policy\":{\"id\":\"1798\"}},\"id\":\"1783\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1785\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1768\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1772\"},\"major_label_policy\":{\"id\":\"1771\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1744\"}},\"id\":\"1743\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1783\"}},\"id\":\"1787\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.02, C/O= 1.4, [M/H]= -0.35, T= 821.42\"},\"renderers\":[{\"id\":\"1786\"}]},\"id\":\"1800\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1782\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1744\",\"type\":\"BasicTicker\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1784\",\"type\":\"Line\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1751\"},{\"id\":\"1752\"},{\"id\":\"1753\"},{\"id\":\"1754\"}]},\"id\":\"1756\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1752\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"1777\"},{\"id\":\"1800\"}],\"location\":\"bottom_left\"},\"id\":\"1776\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1764\"}]},\"id\":\"1777\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis\":{\"id\":\"1747\"},\"dimension\":1,\"ticker\":null},\"id\":\"1750\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1755\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"1731\"}},\"id\":\"1765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1773\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1769\"},\"major_label_policy\":{\"id\":\"1768\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1748\"}},\"id\":\"1747\",\"type\":\"LogAxis\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1762\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1741\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"1735\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1737\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1779\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1797\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1783\"},\"glyph\":{\"id\":\"1784\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1785\"},\"view\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1731\"},\"glyph\":{\"id\":\"1779\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1780\"},\"view\":{\"id\":\"1782\"}},\"id\":\"1781\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"1743\"},\"ticker\":null},\"id\":\"1746\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1774\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1798\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"1780\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1772\",\"type\":\"BasicTickFormatter\"}],\"root_ids\":[\"1732\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"4a629919-c852-496e-9ea1-09a4b214faf6\",\"root_ids\":[\"1732\"],\"roots\":{\"1732\":\"591c5966-b852-4aad-a2a9-cfa040189645\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1732"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 129.84, p-value = 3.80e-02\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"99e1be87-05cb-40b4-a5e4-8adfb12ab883\" data-root-id=\"1953\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"df09824b-da51-406f-8656-e7da41848fe1\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1964\"}],\"center\":[{\"id\":\"1967\"},{\"id\":\"1971\"},{\"id\":\"2002\"}],\"height\":400,\"left\":[{\"id\":\"1968\"}],\"renderers\":[{\"id\":\"1990\"},{\"id\":\"2007\"},{\"id\":\"2012\"},{\"id\":\"2030\"},{\"id\":\"2050\"}],\"title\":{\"id\":\"1954\"},\"toolbar\":{\"id\":\"1979\"},\"width\":1000,\"x_range\":{\"id\":\"1956\"},\"x_scale\":{\"id\":\"1960\"},\"y_range\":{\"id\":\"1958\"},\"y_scale\":{\"id\":\"1962\"}},\"id\":\"1953\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"2027\"}},\"id\":\"2031\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1997\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1972\"},{\"id\":\"1973\"},{\"id\":\"1974\"},{\"id\":\"1975\"},{\"id\":\"1976\"},{\"id\":\"1977\"}]},\"id\":\"1979\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1988\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"upper\":{\"__ndarray__\":\"R1O50v9OcT5U9Ll0RiZRPtf9FlpvPWw+lYWhpE80WT5H0qjBo+gtPrJHC/LL4FE+dFnkxsvQWD6BvjVoGTlWPr+Ob6UcO0I+IGqPBrfpWz7JE8Hjgs5RPjV+QdMSW0g+LI2svuiYNj4JHz/6DOwpPj1gdz2BnAk+zJu5POIqVz7OIZibAphbPqg0BYHioV0+frvcpBwyVD6+hN11zS9jPkxPtvOXoWI+nhXmOSl3Uj4Kr+rW6z1LPgAQK40fSzA+VfdnawzoAT5gn8e1jGlZPvywpUQRvVQ+A/sVtS6/Sj58TVd2B2pAPniYZsN6bVk+c09YNXhkUj4qJXyeh0UoPnvnWFeC7Vk+QJBo1DfNVT54FL6z579RPrCU4U4iVFA+YJqNTBIkGz7eFGOOC9RSPnhNeFPyizU+FJ10DO+9UT4tAhtmhoE0Pur5pV245Dc+MZh0mVvvQT70CVZJlNRRPkOBIxwZblE+iJzZdZwnRD54YsMrzs09PuaUrn/i5kU+TEIZUbwgIj69QnjEHztPPq/otaHxdFU+Ovs7UpgpPT56OtvpYg1DPjJ8xPyI1EU+HgeUXndJOT7oRkOhc9A0PpJyNBDeyko+vFdyco8uRT4mchaa/AxFPpYnHUiKEEQ+wdzvPNwOQT7YZ8akPJFDPnJMnrFfcEY+3kX9hJvTSD7Wfvn4P8E7PgqJVMyYrj4+jqGxHHtGSz7dkayMQSFTPqrP/lavLiM+Zk499anhHT57ttYS0EYVPtDwe+EdmeU9S85pBeOZQj7IDUuOzplFPk2wLhg5C0E+Wp/24fkqMz5MBV4CNbsCPnkNsc2uFkI+7q3GDaCiTD5kD2YDRfFIPn7ztyHZizU+1x+zUtMgST5F/COn9hxFPnQhsnGxiEY+zhYpQSQtRz4sxId5x4tAPjZpC0P/xEQ+UwNqnlvgLT58bgt+OZxDPjDf6hp2CFA+HlDW6uhgTz6WT3POQEZBPsgsud0tThk+WVQON5r4KD5t65So0FxKPpZdy26V70I+zCBxGQe2Oz40SeYiUqtMPhSJlCXbAEc+0o1xXeoCQz4F0Aww0KFBPjuhT4amUUI+m5hkZgEART6fdND/zZJQPkIx+K6omE4+2toH6jW4Sz5s17IjVA5JPuwX7G9pX0c+U36kekDhTj6y+VLKTZxWPhYCdfyCRko+3dKvnbLkUj4tqBCNkhRSPiUjgAAN504+iO0sJSWgTj76QffnkABNPljI2dCmRlc+frI13tvtXD5WzzKrRGRbPjx1O/o64V0+LUyFGGdEXz4f9/1DT0FjPqHTmpNiT2Y+K9GO4r78az669M8P8rhqPhAv9Watlms+gHo+JAcucT7etqTf6PFwPsxkCUKW/XE+j6b0zafhcT5axpDwJ2B2Ph9bYqILJXc+DkdgA0lWeT6dFAHXc857PpjHmY8eG3w+LumOLb3/fT7Dx41pB15+PvrsoKxjEoA+/U/C+qN+gD6tkWRM4fCBPj3v7TsgrII+CtI07fNTgz6S+ajbg8GDPtCr+oICXoQ+IlIExzCLhD5JY/LLdRKFPtSgnJoy7IE+CG6w1TJsfT4RFtiH7wR0PmygAOKVb3E+C1hF9fdUZz624iG58W5gPgp7r+k0Slc+4/7IXoZkSj5gw1zkPDhUPlIqWKVXBVU+nDxzUFinWT4BmxHmQuFHPr6OefoRGlc+tNjR8+pwUj5kXvImR6BBPmC8n5s1/VA+KJcewB2RSz4UtV2wELBGPuu/iDWpG1E+z077WVEsSD7Ggty7d5hPPoSq2aRDw1Y+vyvN0DbTXD4By4jBcGBhPoYPCyy38mc+N0yNYLqvaz5HeugmOTVxPuOgW7gIVHU+V6TkYZ/jeD7SoGEwuY17PmM+QeAdRYA+QjDMsO2PgT5MM8/a7ZiDPkrAsHUxeIY+18W8ujbOiD7eDKwWIRuKPskxXPRydY0+1diLLhZHjj5IrBiurP6QPgyjhZPNTpI+c6cybNuskz44+Q4k8uCUPjpwijD8DpU+SBE+kiwllT5TN4jyXDSVPi04pTDvnZM+XdoGaaRSkj4e2hb3NwWRPgIoSgQQV48+icw++8DCjD4CsCwl/ROKPk2AvuWbq4c+hSle901DhT5HyGeNg7+DPiaF7rOSboA+p94PRmZGej7zcyi1SghxPprC2AwVm2M+dGHcHYbOTz5O4kJOlQlEPl59JxTB6CI+4vln7rAaCD7kQEC3BCMiPnr04SuzZi4+pjoZVIPoGz4QHZHJ7fkfPipC8roFDCI+VML7j2IhJD52PT5DJD0mPkYiPfYUTk0+5p48sW+wOj52ychGPz8/PikkicpFTVI+ygcTVWZNTD4/uvA8lSxQPko3h4wfDEw+Fs3HemdANz6u82hwuho5PqRPaLdv+jo+VBek8Z+0Mz4/WxBQkLZFPvnr4Ew2VDs+oarzclJrST7VtKyIqaIuPkKBcvQ9BDU+b/tRlcWdUD6zQz53v7BQPnqPcKU6HV4+YJoIvsbvYD6Zssbufa5aPnII1A4BcFg+G5XtJhUrYz4R8aSElj1gPq0kTYSlU2A+0HAsYG18Wj454WQUjChgPmt8eBJdl2M+M0/Hhj5BZj5eSoaUKjBuPrDCtYdbB2g+XGayM1EmbT5O/KZUFYhwPhAFXr8PCXI+/nDBlBjvdT6/SlCYHRZ3Pk/qQ7dVyH4+w5tz4SMfgT6tXYtOIR6BPoisaAKIjoQ+PPkKieuBhT4KnSOuK/uGPm8/235Rtog+pv+n6K8qij41Yn+p6fqMPjBdzil+co4+Qd10nkjJjj6cHZg/MEKQPkZBq4Spn40+1pd8q9kUkD4ePc9mCsWNPk8vxWROyIw+V7QnM6Enhz6cavF/ALaDPorFMyAEQn8+1Aeyn0V6eD7LHHV7kxlwPv6xIa1W52I+Y/MJQepLYz7QFB3GkBpkPi3t+jPCFGM+86s6nqtxZj7MPXFJGJxhPuC+UefG3WI+HiGPRLoqYz4hNSYVcURpPlHN0x5VFWc+qCItNflwZz5lYxocR7BpPqyeTRj92WE+KC23kkccTj7aItq4DghKPsoRellWgVg+rkivsTTpYD7e5EFrjl1iPkSBgjB4Umc+k6DXcoM/XD6vWrofu+dgPtjI/h6Mb14+8sTofZ2cVz5m+CW85/RWPi5qhJzcbFU+clhLhNgzZj4l5LMXlldrPvtPN8ZXg2U+/Ilx+OD8YD76ExnpgORlPuxq01bHHmM+mFba9xv+ZT4pK6cywYRZPoz0umUkrF8+ZXYs3FlaYD5oiiLWMvFXPsNmeVEAQmE+wQjyhV5HXD4fcehnIPhnPgivXJ8nL1I+4t1V/09HSz6bvvkQ90dVPuFduB3/IF4+P1vB8zXfXz5W6ghYSJxaPncfUZVHfFM+QsuZ+AzbSD5VzZYZQ9VSPj7aL9Uar0o+HmvET/F2Oz5seRk+85T1PaV/+Gc1Kyw+O9wJgjLsOj4OLUZEZmM7Pgh2fKDAQl0+ONRzAB8RVD4cQIoNeclXPouChxV6FV0+UtVkY+2pWj7+VkUZ8r5XPio5RP7czVQ+IeIGfpmgYz4VEUvyEOBpPlICrDFdIlY+sBWv3gktRD7dQzpojQdMPmyvT7Oq+FE+CKA99p/jNj6utuu64d9OPkuaU85p8F0+T1nmfZIKYT7mL9BQ3ctTPrItKqo5Qkg+YC8hxjxHZT71xIFE+TZkPnJAO4Q5vGg+tWkD4kPSWT5RFC9KFuFWPnWMWMFgdEU+Ho0eaGooXT4OraCQz0drPkiVXID5X10+sDD4qYhEOj4x15mcYiRgPtqWxzgClDw+gM0O9At3AT4XipCHsR1OPv4dpu/K4U0+vuq7GCs1Vz4VrReVAGxYPur3qYwftlk+8n2yGyNzVT7MERCB4RxbPlJgIsIuCF0+IykqvNlhWz4ADU0ZtptePmWU9+KUCmA+72OjTBnyXT7nxVRKGndiPhKcwn/ocmQ+0bfuAIxkZj5n4VHdoLdpPsLPxH8yV2g+lAo6qewvcj5M6UqhJih0PoKDVXYtmWc+xHkUBbSycD5wljjzWQByPrF2EI4BBnI+UYieRf8Baz7LpPknjPh1PqOa9CESzXE+vTy92MnEdz46nWGpdq1wPtRBjFT9Nnc+VSm0AYN+dj5oZ2/b+3l3PnuoBZE8Cnk+ISqs9s0pfD7wN4S6RtV9PpY80ESPd3w+N061WWVkej5UEOhgS9V8PnBGDWV/T30+qZrNRn/UgD4ImstGTL99PnGiMW9RQ34+7Fi1+WwKgD4KLQZSQ4F/PqmQ/C2SjYA+3sBSNDeEfz5VTUysblCAPqXb5p7fkX4+fpIMvfwmfj5y8WPL5ut9Ph3PrTH7kH4+bvKwWNJieT6SnOpqoV9+PkKTHssvCX8+WeEpouj8eD5yaGxe98F8PjfTVoOqdXg+ux5Pg9ZneD74etCq0m54Pv5alsLaYnU+gszvQm5Icz7ZFe4xXq51Pjf5+LM79XQ+rU3j3uMucj5o3OV2dYVyPtP88xYLD3U+CEQ/47n9bT5OOx6/83JtPvL/vJjrTms+sjL9W4aIbD43DmKelURnPoJAhUQR82o+6B62/mOBZT4sG7fAQ9ZsPuLcGu5r0XE+ebRK3xX2az5wxIH5uoVgPile/iaevmQ+tzlFy01NYj68GGnTgqBkPpA0Evas11s+XAKzlxWiRT5o6rGCYmhQPnrUXKv2olA+uNIwxkseSD7eqgD92XNWPtpv367MiFQ+HAlnFY4PUT5fgazQBIVSPthkdVon2/s9mkHB9HAGBj6eN1LJOY9JPmqDcCvyOkw+nTcLRAEIRD7Z71oYRZM7Pjs/kqWstjg+aK328fvVNT68hWP6NfEyPnmCPreSkVU+8YMu22fgQT4rIAgM0MVRPgnai1FksVc+Zpdnf8eUVD4j44QQ/BxRPiMXdIz+uEU+uGFfkK0gUT61xq5LX+ZUPjdw659Tz0s+rzCI92pVMT6QI8w5AAdFPlrNNHFglEk+nvVK87MnTj526R3XfmBRPgh/uRAVsFM+UwsAKclPVT5byFhK3zVVPpJ9z6bhWVU+qLUb495nQT6Nmk0j+qdUPioi7sEtjk0+Y0NjUfD9QD4zsVtaLXYhPqAAJMhStEQ+39avAPCPUj6iboAo3/xNPtluXcnA0EY+zuKfHQE3Pz4UeyTqKrowPpzrwirVLFY+isFQICyhUD6zuc4xc9xGPrdheowodE4+Gqm6iK5zTz5C132lRIRIPjIJNjw6jEE+DESl6QoXNT6IqKe5fxEcPsaSw2ppNz8+2NmUWZAUOj4IGLvMOzJKPmZEkTINtVM+IMJzQlK+TD5WAtJPgwVCPv1aRK/1/iw+2Vnn+HEQWj4HaFw67+1HPngvtSLUnlY+vHGtUYljTT72L16HLBYzPonjLm/850w+vNbA3cS7VD4zwvWnrmZXPqQu1TuyFFo+RG0W9tDFXD5ahgMi+3lfPmeKRSOgGGE+MagZ5h/rND4h1p6TtFpVPrjN14EU9FE+mVS4lhSEID6GH3aIvE5mPsM010MWL2M+5osqon5nRD7f3W46UYBAPsq59AgkKTk+GEroRp1IMT7p5coI570iPlQFo10Fw/Y9M3jLJOylbj6wz5Q/QStsPtq1GW0d92Q+zv0zN61mUj6Y5SRoUxVEPoCFkBu49Vg+pT3vCjQxZD43Le0hUPBrPjVP6dAaWu4931hnxaJZYD5gHkATz/pTPvqDXGpC3Uk+ql9O0rQYbT4aTP1VWyZiPtKdZn4rnkw+VAIFFIdEdT43uNmEOt5vPhAWzhtPa3Y+x2przJlYYD48RbRMtjhfPjLiln+Lvl0+4p1cVaFCXD54jrP9BMVaPjSsq1SzRVk+kt2XM6nEVz4TybFw4/Z/PmXZ8dD24IU+q0IVhjNLjD50pL284GORPgZqxhCIuJQ+h9ltVZ0rYj4z3xtjb8qDPkETwV1Z8YA+XNM3ltopfD5+knH9VWp2PjGdPS4tLIQ+TLhyZ8stjT42Jrcq4/yEPrr+i3RqhHk+\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[564]}},\"selected\":{\"id\":\"1999\"},\"selection_policy\":{\"id\":\"2000\"}},\"id\":\"1986\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"text\":\"HD3651B: Observational vs. ML Predicted Spectra [\\ud835\\uded82=129.84, p-value=3.80e-02]\",\"text_font_size\":\"12pt\"},\"id\":\"1954\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"1988\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1989\"},\"view\":{\"id\":\"1991\"}},\"id\":\"1990\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2011\",\"type\":\"Line\"},{\"attributes\":{\"overlay\":{\"id\":\"1978\"}},\"id\":\"1974\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1998\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2010\",\"type\":\"Line\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"2003\"},{\"id\":\"2026\"},{\"id\":\"2046\"},{\"id\":\"2068\"}],\"location\":\"bottom_left\"},\"id\":\"2002\",\"type\":\"Legend\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"1991\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2009\"},\"glyph\":{\"id\":\"2010\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2011\"},\"view\":{\"id\":\"2013\"}},\"id\":\"2012\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2043\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2029\",\"type\":\"VArea\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"2030\"}]},\"id\":\"2046\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1995\"},\"major_label_policy\":{\"id\":\"1994\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1969\"}},\"id\":\"1968\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2005\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"1969\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"2044\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1962\",\"type\":\"LogScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1989\",\"type\":\"Scatter\"},{\"attributes\":{\"data_source\":{\"id\":\"2027\"},\"glyph\":{\"id\":\"2028\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2029\"},\"view\":{\"id\":\"2031\"}},\"id\":\"2030\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2028\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"1972\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2065\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"HD3651B: Observational data\"},\"renderers\":[{\"id\":\"1990\"}]},\"id\":\"2003\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1976\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1958\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1986\"}},\"id\":\"2008\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2066\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1999\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"2006\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"1960\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"F9Y9tQGyWj6rDITXBn1fPpXL5kD2Vl0+VXwZNwo+VT6Oh5TknllQPnJzlKDvEEQ+wmzembAAPz4k7iWbl6AyPopIfWHNdUM+VZ956IG8NT5KJhv5sLE5PoEh1qVFDD0+89qVmRILSz5qEzctnmtIPkkjS6jswmY+RNDNijNscT7gqNbKHpl6Pj4VIv35tIA+5DUXkxtVgz7JspOVdoyCPo0vkjqv734+1JtXpmk2dT6lccnIkKhwPpLV2ytlDmk+YTZpfUV5Xj6BW38CnaxUPoBei5hr9U0+7Ab/XCPuWD77LljIQSdhPueRBElhOFk+n8CrC9QITD7J0eTlNrNQPrRlI7YkyVI+JcUKNGs9VT4TixHIpxxYPppnY7SgLF4+oEdEDzqIZT7TGRtQJ8JiPgs2bFo5gGc+isEkKUHfXj6klfeK0KRlPpH+cnWzRmM++SwaOmIabj6WTTd3VxZnPgbSj0WD9XI+7kxEcGYAiz5w/wxvNL+UPt/4mIH+Z5M+kf785EKHjD7wlWt8kF2EPj0nHf+GDXg+MiHCCMIQbz7k+pmC1zplPgDoBvPo414+1S+2/xMSWj7rGJVksf9QPpzWYXgB40I+HHxcBIcvMD7sfIofjyAwPkT9BBNIUis+ak6sZrl7MD5R9b07Wv0kPg5VT4vfwSc+XpdtVkC/Tz6EdkarPGGCPrT9nd1cIZA+TTUTr54zlT4kE+OONBycPvkMmVeDAKI+OpYadHwZoj72fyun1sGcPs6AgwVMCJk+QPZBkdkDkz5iQN/23SSKPvnUn+PBSX4+/VloREwsbz6+G87z19pZPon4vM6zIFc+fLcxdeq9Wz7P90OsWyxhPnUVZ6wQf2M+cYpkpNruXT6LKBYAQ+JtPhIxRR+OJoA+hNB+k2+oij5vv6cB8taKPpqibKgvAYk+Z87uPM+Fhj4NOOx5/YiDPrHzbZutAIA+3y325JtBeT5hkwS12at0PrSBLI+xEXE+09jtJ2qwaj5boXS+notkPhrs5gDOiF4+iyghuMRlVT7OXsaDdI1SPs1JSRKvkFE+XR33MtPqQz5sL8CdUN5NPhznoFCU+0o+sZFuIAC9RD7bdWColz84Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2023\"},\"selection_policy\":{\"id\":\"2024\"}},\"id\":\"2009\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2023\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"1986\"},\"glyph\":{\"id\":\"2005\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2006\"},\"view\":{\"id\":\"2008\"}},\"id\":\"2007\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2024\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1973\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1956\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2000\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1975\",\"type\":\"SaveTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1978\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1998\"},\"major_label_policy\":{\"id\":\"1997\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1965\"}},\"id\":\"1964\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1977\",\"type\":\"HelpTool\"},{\"attributes\":{\"axis\":{\"id\":\"1968\"},\"dimension\":1,\"ticker\":null},\"id\":\"1971\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"1964\"},\"ticker\":null},\"id\":\"1967\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2048\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"zLieo0DgVD6Y2PvXFVVYPuitaVBqElY+sqeiG04HTj4m1iDgIGNGPlCfAvwBRTo+mHFktmaXMz5yJEO3cKwmPjzKE2QYdjk+xKVpALm5Kj7hb7Q1QZ4vPhqljqxZqTE+FtoBwf9mQT4tetQZ174/Ptzl10xZzl8+fqNpV9DGaD5yAsM0bVBzPspMxx1St3g+4s6nM+XPfD5eCQiRUsl7PoB/YUs3/XY+Hj8trqwbbz4MkZXJCRVoPhiw3OfxnWI+QOHzyQ2hVT4Irb6TcbhMPjRPSDnNRUQ+ERmYGSoLUT4asHmQatpYPgsxy2Cwr1I+ZPWXSIdSRD4Stzubu+9HPniywQ9cr0o+3rnbS4TuTT7lmgWfC+lQPpwtv6kdiVQ+262UTNeMXT73qJNwEdhXPoU1KMoJj10+RPyWra4qUj6AJoMWlh1bPr6FsMSyQVg+rlFAmB6zYj4mGr+FxaNcPr9KWOfIRGk+8EEpwOV9hD4MK7Vnqb+QPtelkHnMmY8+KUz2ia+lhj5Ym+FdDKF/Prh9vcYKM3I+s7ea5n7CZj5QR9zWBBlfPsuwNPRGSVY+NQQ2G0l1Uz56s/MFSEtJPl40ZHx+hjo+eu8VvL/UJT50T+0tD7AkPqmcPp9wwCA+m6K5zSVuJD7ey8oxoDMaPh83y8rX4R4+nfhNT058Rj4yu5YMMBN7PpSZOZ9YGIg+aMjrXwdGkD60U6caiC2WPhdQlWiOEJ0+NnEFpzqwnT5kPWCApB2YPjTQpRhY5ZM+LhSz6l1ujT5627XqR5eDPmCKzeKKe3U+O41kIGkYZT7KnlDOwpNQPvhNW/evIE0+LuZT/FvEUT7afIGC6RVYPqbjQn97/Fo+7a+d9bJ3VD5Qcex1S1xmPqYppBxWlHk+kbQjGB1BhT5h3U9kC6SFPpyNz9UBVIQ+Ro7trLJEgj64JIjs4E1/PraV5f3DTXk+YUZE2KPNcz5ErpsHOytwPgrtjen7tmo+9hbUH0XtZD5LMv3RUwdgPtrNbwvRslc+nXcl9QE+UD7SGeZ+P7VLPh8fJFlbh0o+4f0/L1YFPT6yVe6OLKJGPnR6b0sUF0Q+cwSBCB8xPj56AM7oNw4xPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"sXluY+FBYD5fIIbre1JjPqH0sRjBTWI+0aRhYG14Wz4JpBhZrYFVPjyXJ0Ne/0o+9jOsPv00RT4PSqra9uo5Pvar8JCOMEo+yGu+UCccPj5SCq6rIMpBPvTOjs+YN0Q+6O0UuZJXUj7f9MFm6HtQPqRTKqqsnm0+yc7m6f50dj6nJ3Uw6PCAPheEYOtKDoU+V4RajERCiD7jYKPiQzSHPs1v4ZQTcYM+GZiY9fzeej7EGsisnEZ1Pgz72m/Yfm8+wUVvmL6oYz5+YB87Af1aPuY25/uE0lM+ZPoyUI5oYD7phXNITuFlPsPyPTESwV8+7cVfZ5DfUT4JyCv+j25VPizyZWSbOlg+W60nQpSDWz5Bex3xQ1BfPszQg98R6GM+Ujg+eAhKbD4qX+znRZhpPqoo4ud2HHA+aENZ0unJZT4ImK0K1rptPkO6jYiNbGo+IgT67dLAdD4ZDo8rzNpvPqx+cxeiSHk+9qsvkHPBkD7U02R2v76YPtKeacYWA5c+fNgBIGs0kT40XubJmuqIPsLQfDcD6H0+WMV0lYKvcz4g0sWZLOlqPpqP7HhFv2M+ui0bcm9XYD4ZWDDGvllVPgmTkbLDgkg+ewCuKq50NT4eUh6oFuk1PvCuZcMP8jI+hst75l/ANj6zhJZe5OAsPkaHnJhpCTA+EJvGLhmBVD5vj0FQ4TiHPp4un2uNNpQ+MqI6/jUhmj5KaY+BcAWhPudx53q/eKU+2XOylNtapT5EYftmBLOgPmgxYfI/K54+aWIqLYRQlz6lUoQBOlmQPskPOXL8i4M+YBM2tBegdD5ZzKWM9pBhPhZKzKEPsV8+ZcQHd7zbYj4xMUeXwk1mPhe5LJnjf2k+erKVKQGzYz7j7x9FHbRyPlFNODDxgoM+PPZsB+EHkD6+0H9P7ASQPpi3CXtdro0+iA7wzOvGij6+XZR9CmuHPocc6Td5WoM+XRWo8ZO1fj5+eG1ieCx5PuMMkinlx3Q+WM0DmMc5cD5rEOyq6Q9pPi0FL3tlr2I+edkce4eNWj6zsBlISUBXPgqEAHiw3VU+yjtOTvtSST6TBElWOo1SPuIp6SoK8FA+KKGcvHBhSj486/Jn93A/Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2065\"},\"selection_policy\":{\"id\":\"2066\"}},\"id\":\"2047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1994\",\"type\":\"AllLabels\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.02, C/O= 1.4, [M/H]= -0.35, T= 821.42, R=0.81 Rjup\"},\"renderers\":[{\"id\":\"2012\"}]},\"id\":\"2026\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"2050\"}]},\"id\":\"2068\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"2047\"}},\"id\":\"2051\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1965\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"2049\",\"type\":\"VArea\"},{\"attributes\":{\"ticker\":null},\"id\":\"1995\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"2047\"},\"glyph\":{\"id\":\"2048\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2049\"},\"view\":{\"id\":\"2051\"}},\"id\":\"2050\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"I52IK7mFWD5A9Obz99BcPkjF5u44oFo+sHEFlq/qUj4U0+EvaNlMPmqcrChaekE+DfT/3Ny9Oj7v7wTYWs8vPjSbwd6D8kA+3ljVjA6cMj51L+JgwwA2Pn8nvYfSyzg+q9EJlHpxRz7YujgKiDpFPv1hMw1RM2Q+w8ZpSeoVbz6a8+wL1eB3PkNCZc+DKn4+JzefzC5+gT7nytrib8+APqh5I2AA+Hs+nscteIEZcz7YueVEXd5tPt8a7Y/apmY+PXTqd8wrWz5nBB72ClFSPnVpbvaDV0o+Gq53sD38VT6OA+6o1cZePjTnlHPJx1Y+iAXX1JwnST4TJlGBx91NPt40nsfQwFA+ioDoKqvlUj6MVLx3PWxVPqIhZGE+k1o+TaeLd04CYz6RB6XwpTRgPvoujbCEPmQ+l0ucX7kgWj4uowoc259iPjZJO1Bsm2A+wRBhAlDYaT52BSyBP9BjPq2HwVzsmHA+WLl3KR6SiD5AxOvuAUGTPr5aDA5OD5I+I1Zj9BFVij5amCL+h6qCPn5n4db73XU+4qORb8z2az76fNACyRtjPpDkZ/BurVs+aQ1in/qZVz7mDo/hZb9OPuL+KRlkyUA+O7yoqH1vLD4IqEzLcO8rPor6bVfnXyc+lW1aahNJLD6BwIh2PgsiPicRpdnopiQ+ECPc/exJTD4Sstq8WJKAPtReL0AqNo0+ms9qtYhckz4I1v6MH+WZPsdsTzfXtKA+jugP0kzioD6QSCCqKAabPhUqpBZJHZc+JINesdpokT6o4kYzcrKHPjZyRwwFAHs+mycdwvNoaz6lIgAg+WNWPvptV+sP7lM+r2Ox9GYEWD6c/TH42YNePv80NKU0QWE+Fn2HeghmWj4ODvcFGBNrPlM3/xGQyn0+hl69FOWjiD7rn3WS+uWIPlXbR/UmQoc+gg2K6iDvhD7N7owyzhWCPgzEP4S+gH0++6+5eFg4dz7uMWGBdP1yPs9I9tXDXW8+9ni/K5aJaD5pn9Fy2ttiPopimTBZ+1s+fxouL/Z4Uz7kamKET8xQPsiXQ5Qf608+53Jh7/jlQT62sVjStipLPvzOR0a0aEg+D+9wRaOhQj65QwkWA5A1Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"Cw/zPkreXD6LkpDdihRhPvFoc8nZBmA++oYt2GSRVz6SJTixiUZSPnpKfBiFp0Y+vHJeK8KhQT5RZEnKgVk1PuD1OOQW+UU+zOUdRPXcOD4fHVSRnmI9PsKN92FcpkA+O+Qhn6qkTj78azVQtJxLPpXkYkOIUmk+J73m8HFNcz4mXsCJaFF9PluJkRKyVII+oTSPWQgshT6rmkxIfUmEPrlygAqv84A+CnCB1FFTdz5eBiDv8mFyPkWQysfvdWs+QvxzQV/jYD6bsuAOLwhXPsUpVJ2pyVA+vl+GCQngWz4vXDm8GOtiPpo8dB75qFs+tnuAQgvqTj6IECELindSPoqWqKR40VQ+wAktPSuVVz6awWYYEs1aPslWsYMB42A+8+f8piUOaD4VLJGvqE9lPhw9SwTuwWo+vptWeeTOYT4aiOT5xaloPuyzqpr68WU+maTpODoucT62lUJtb1xqPl8cXi4aUnU+hOAQt65ujT6gOi7vZj2WPgCXJfWuwJQ+/6aW1XO5jj6Gk7T6mBCGPvzmWCcSPXo+QU/50FsVcT7OeGMC5llnPrj10noxDWE+QVIKYC2KXD5jqmLYr59SPlaumdee/EQ+G5pkNE8nMj7UpW7ZZUkyPv7/m86oRC8+CmYrGOnSMj4hKvMAdu8nPvWY+TzW3Co+1oV/10maUT72OrKZIDCEPv5LJJukp5E+AJu7qLQKlz5AUMeQSVOePiut4ncvTKM+5kMlFqxQoz5ctzakhH2ePofXYvRO85o+XGklcdielD4cnne6SZeMPt4bfF2/yYA+MMZZY9J3cT7XFJzHtlFdPhiDIrJXU1o+SQuy9W13Xz7Q8G5cyhZjPuv1mbPsvGU+5ssgZ9a7YD6EoRr9tlhwPnrGijXUZ4E+gkJAEvqsjD7z3tlw6ceMPt9pkVs4wIo+TI9Tj30ciD5NgUvBLPyEPlwFvPT7QIE+w6syUd9Kez7U9KfoPlp2PgHfXTOBdHI+sDgcJD7XbD5NoxcKYztmPtU6mmghi2A+lzYUQZNSVz64UiqDmU5UPrbHcFrOK1M+08eMdq3vRT6R1pM09UhQPjz/+Vp0jk0+UzRs+1zYRj79p7c6LO86Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"2043\"},\"selection_policy\":{\"id\":\"2044\"}},\"id\":\"2027\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2009\"}},\"id\":\"2013\",\"type\":\"CDSView\"}],\"root_ids\":[\"1953\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"df09824b-da51-406f-8656-e7da41848fe1\",\"root_ids\":[\"1953\"],\"roots\":{\"1953\":\"99e1be87-05cb-40b4-a5e4-8adfb12ab883\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1953"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49761b48-0852-4376-bb1f-e7598c249a0b",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.2.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e945e753-4c02-41a7-80b8-86ac168553dc",
   "metadata": {},
   "source": [
    "What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a988b139-ed86-4690-b3ba-315dd08a636b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.81 R_Jup:  𝛘2 = 129.84, p-value = 3.80e-02\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(129.84, '3.80e-02')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84e1ea29-d6bf-4832-a3fa-6aebb95ca91e",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05c2e685-296b-40bd-a787-c99446b5e5e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info = Ross458C_BD_literature_info\n",
    "        predict = ObserveParameterPredictor(object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model=trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                           )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "49017667-f00f-4c2a-8159-d3a85a8cc412",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "HD3651B: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 818,\n",
      "    'bd_distance_pc': 11.134,\n",
      "    'bd_logg': 3.94,\n",
      "    'bd_met': -0.22,\n",
      "    'bd_name': 'HD3651B',\n",
      "    'bd_radius_Rjup': 0.81,\n",
      "    'bd_radius_Rjup_tuned': 0.81}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'HD3651B: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b5119eb2-56f3-48ea-8bea-bf472dd0e55e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b812bc0e-df54-4fba-bf14-ed56b58ee82b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>112.242857</td>\n",
       "      <td>0.651443</td>\n",
       "      <td>5.024109</td>\n",
       "      <td>812.984387</td>\n",
       "      <td>1.384581</td>\n",
       "      <td>-0.342556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.144016</td>\n",
       "      <td>115.346837</td>\n",
       "      <td>0.450426</td>\n",
       "      <td>0.094447</td>\n",
       "      <td>30.860484</td>\n",
       "      <td>0.205658</td>\n",
       "      <td>0.086630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>27.590000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.894848</td>\n",
       "      <td>782.723531</td>\n",
       "      <td>1.107338</td>\n",
       "      <td>-0.442222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.710000</td>\n",
       "      <td>43.750000</td>\n",
       "      <td>0.322050</td>\n",
       "      <td>4.956122</td>\n",
       "      <td>792.296183</td>\n",
       "      <td>1.285556</td>\n",
       "      <td>-0.383250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>83.890000</td>\n",
       "      <td>0.916000</td>\n",
       "      <td>5.067571</td>\n",
       "      <td>803.798279</td>\n",
       "      <td>1.363105</td>\n",
       "      <td>-0.358463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.910000</td>\n",
       "      <td>112.965000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.077743</td>\n",
       "      <td>825.733826</td>\n",
       "      <td>1.438822</td>\n",
       "      <td>-0.330120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>360.790000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.138616</td>\n",
       "      <td>868.308879</td>\n",
       "      <td>1.772872</td>\n",
       "      <td>-0.170468</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  7.000000    7.000000  7.000000  7.000000     7.000000   7.000000   \n",
       "mean   0.810000  112.242857  0.651443  5.024109   812.984387   1.384581   \n",
       "std    0.144016  115.346837  0.450426  0.094447    30.860484   0.205658   \n",
       "min    0.610000   27.590000  0.000000  4.894848   782.723531   1.107338   \n",
       "25%    0.710000   43.750000  0.322050  4.956122   792.296183   1.285556   \n",
       "50%    0.810000   83.890000  0.916000  5.067571   803.798279   1.363105   \n",
       "75%    0.910000  112.965000  1.000000  5.077743   825.733826   1.438822   \n",
       "max    1.010000  360.790000  1.000000  5.138616   868.308879   1.772872   \n",
       "\n",
       "       metallicity  \n",
       "count     7.000000  \n",
       "mean     -0.342556  \n",
       "std       0.086630  \n",
       "min      -0.442222  \n",
       "25%      -0.383250  \n",
       "50%      -0.358463  \n",
       "75%      -0.330120  \n",
       "max      -0.170468  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a33494e8-2bb3-460a-b9a3-3c6998422bd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.610000</td>\n",
       "      <td>99.18</td>\n",
       "      <td>0.5880</td>\n",
       "      <td>5.083906</td>\n",
       "      <td>810.761617</td>\n",
       "      <td>1.292334</td>\n",
       "      <td>-0.352557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.676667</td>\n",
       "      <td>360.79</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5.067571</td>\n",
       "      <td>868.308879</td>\n",
       "      <td>1.363105</td>\n",
       "      <td>-0.307682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.743333</td>\n",
       "      <td>126.75</td>\n",
       "      <td>0.0561</td>\n",
       "      <td>4.894848</td>\n",
       "      <td>803.798279</td>\n",
       "      <td>1.107338</td>\n",
       "      <td>-0.365927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.810000</td>\n",
       "      <td>56.40</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>5.014167</td>\n",
       "      <td>788.840800</td>\n",
       "      <td>1.432161</td>\n",
       "      <td>-0.400574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.876667</td>\n",
       "      <td>31.10</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>4.898078</td>\n",
       "      <td>782.723531</td>\n",
       "      <td>1.445483</td>\n",
       "      <td>-0.442222</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square  p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.610000       99.18   0.5880  5.083906   810.761617   1.292334   \n",
       "1  0.676667      360.79   0.0000  5.067571   868.308879   1.363105   \n",
       "2  0.743333      126.75   0.0561  4.894848   803.798279   1.107338   \n",
       "3  0.810000       56.40   1.0000  5.014167   788.840800   1.432161   \n",
       "4  0.876667       31.10   1.0000  4.898078   782.723531   1.445483   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.352557  \n",
       "1    -0.307682  \n",
       "2    -0.365927  \n",
       "3    -0.400574  \n",
       "4    -0.442222  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1309de64-2af3-4545-b53f-85ad09fc75fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"2f1053b1-7fca-4a8c-8b56-47b5e09fbe99\" data-root-id=\"2257\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"026a5001-b00b-4ac6-a1eb-2d7e6701f91f\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2268\"}],\"center\":[{\"id\":\"2271\"},{\"id\":\"2275\"},{\"id\":\"2301\"}],\"height\":300,\"left\":[{\"id\":\"2272\"}],\"renderers\":[{\"id\":\"2289\"}],\"title\":{\"id\":\"2258\"},\"toolbar\":{\"id\":\"2281\"},\"width\":800,\"x_range\":{\"id\":\"2260\"},\"x_scale\":{\"id\":\"2264\"},\"y_range\":{\"id\":\"2262\"},\"y_scale\":{\"id\":\"2266\"}},\"id\":\"2257\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"2269\",\"type\":\"BasicTicker\"},{\"attributes\":{\"items\":[{\"id\":\"2302\"}],\"label_text_font_size\":\"12px\"},\"id\":\"2301\",\"type\":\"Legend\"},{\"attributes\":{\"overlay\":{\"id\":\"2280\"}},\"id\":\"2277\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2280\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"2289\"}]},\"id\":\"2302\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"2296\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2276\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2262\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"2266\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2294\"},\"major_label_policy\":{\"id\":\"2293\"},\"ticker\":{\"id\":\"2273\"}},\"id\":\"2272\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2264\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"2297\"},\"major_label_policy\":{\"id\":\"2296\"},\"ticker\":{\"id\":\"2269\"}},\"id\":\"2268\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"hutRuB6F4z/KL5b8YsnnP+xRuB6F6+k/DnTaQKcN7D8wlvxiyS/uPylcj8L1KPA/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[6]},\"y\":{\"__ndarray__\":\"7FG4HoXLWEAAAAAAALBfQDMzMzMzM0xAmpmZmZkZP0ApXI/C9fhUQNejcD0KlztA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[6]}},\"selected\":{\"id\":\"2298\"},\"selection_policy\":{\"id\":\"2299\"}},\"id\":\"2286\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2297\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"2279\",\"type\":\"SaveTool\"},{\"attributes\":{\"axis\":{\"id\":\"2268\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2271\",\"type\":\"Grid\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"2258\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2298\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"2273\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2287\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2294\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"2272\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"2275\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2260\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2286\"},\"glyph\":{\"id\":\"2287\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2288\"},\"view\":{\"id\":\"2290\"}},\"id\":\"2289\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2278\",\"type\":\"ResetTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2276\"},{\"id\":\"2277\"},{\"id\":\"2278\"},{\"id\":\"2279\"}]},\"id\":\"2281\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"2286\"}},\"id\":\"2290\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2293\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2288\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"2299\",\"type\":\"UnionRenderers\"}],\"root_ids\":[\"2257\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"026a5001-b00b-4ac6-a1eb-2d7e6701f91f\",\"root_ids\":[\"2257\"],\"roots\":{\"2257\":\"2f1053b1-7fca-4a8c-8b56-47b5e09fbe99\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2257"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "994d449f-b685-458f-b237-3aabe796ba34",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d52f4cf-681e-4b3e-a9a1-53b909cdfe52",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.3 Predict Brown Dwarf Atmosphric Parameters of Ross 458C \n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2295c06-b03f-47b7-99d8-a613f2cd129c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.3.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "22323161-2847-4cd6-9b2f-f418ae88df28",
   "metadata": {},
   "outputs": [],
   "source": [
    "Ross458C_BD_literature_info = {'bd_name':'Ross458C',\n",
    "          'bd_Teff':804,\n",
    "          'bd_logg':4.09,\n",
    "          'bd_met': 0.23, \n",
    "          'bd_distance_pc' : 11.509, \n",
    "          'bd_radius_Rjup' :  0.68,\n",
    "          'bd_radius_Rjup_tuned': None } #1.0 * 0.68 \n",
    "\n",
    "brown_dwarf_literature_info = Ross458C_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f0a6260-4237-4a5c-b560-e98d41feeb9d",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5ffa756c-a180-42c0-92d6-341dc3281e5b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e430a6b3-b24d-4490-ae70-ead890e6590f",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "075c64c5-3119-4f32-935b-4ff550dc1b84",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18\n",
      "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18\n",
      "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18\n",
      "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18\n",
      "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2522\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"2522\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"2522\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"2522\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8238e3a5-5af2-4bac-a45e-f1ebdaf54eef\" data-root-id=\"2471\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"8b14dca2-e687-495c-8bda-f215870eff7d\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"2482\"}],\"center\":[{\"id\":\"2485\"},{\"id\":\"2489\"},{\"id\":\"2515\"}],\"height\":300,\"left\":[{\"id\":\"2486\"}],\"renderers\":[{\"id\":\"2503\"},{\"id\":\"2520\"}],\"title\":{\"id\":\"2472\"},\"toolbar\":{\"id\":\"2495\"},\"width\":800,\"x_range\":{\"id\":\"2474\"},\"x_scale\":{\"id\":\"2478\"},\"y_range\":{\"id\":\"2476\"},\"y_scale\":{\"id\":\"2480\"}},\"id\":\"2471\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2511\"},\"major_label_policy\":{\"id\":\"2510\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2483\"}},\"id\":\"2482\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"2491\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y0\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y1\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2650\"},\"selection_policy\":{\"id\":\"2651\"}},\"id\":\"2517\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"2508\"},\"major_label_policy\":{\"id\":\"2507\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2487\"}},\"id\":\"2486\",\"type\":\"LogAxis\"},{\"attributes\":{\"overlay\":{\"id\":\"2494\"}},\"id\":\"2492\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"2493\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"2650\",\"type\":\"Selection\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"2472\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"2651\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2511\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2490\"},{\"id\":\"2491\"},{\"id\":\"2492\"},{\"id\":\"2493\"}]},\"id\":\"2495\",\"type\":\"Toolbar\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2494\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"2474\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2517\"},\"glyph\":{\"id\":\"2518\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2519\"},\"view\":{\"id\":\"2521\"}},\"id\":\"2520\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2480\",\"type\":\"LogScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"2512\"},\"selection_policy\":{\"id\":\"2513\"}},\"id\":\"2500\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2517\"}},\"id\":\"2521\",\"type\":\"CDSView\"},{\"attributes\":{\"ticker\":null},\"id\":\"2508\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"2507\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2519\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"2478\",\"type\":\"LinearScale\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"2503\"}]},\"id\":\"2516\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis\":{\"id\":\"2482\"},\"ticker\":null},\"id\":\"2485\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"2518\",\"type\":\"Segment\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2487\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"2476\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"2500\"}},\"id\":\"2504\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2501\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"2510\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2512\",\"type\":\"Selection\"},{\"attributes\":{\"items\":[{\"id\":\"2516\"}]},\"id\":\"2515\",\"type\":\"Legend\"},{\"attributes\":{\"axis\":{\"id\":\"2486\"},\"dimension\":1,\"ticker\":null},\"id\":\"2489\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"2513\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2500\"},\"glyph\":{\"id\":\"2501\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2502\"},\"view\":{\"id\":\"2504\"}},\"id\":\"2503\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"2490\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"2483\",\"type\":\"BasicTicker\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2502\",\"type\":\"Scatter\"}],\"root_ids\":[\"2471\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"8b14dca2-e687-495c-8bda-f215870eff7d\",\"root_ids\":[\"2471\"],\"roots\":{\"2471\":\"8238e3a5-5af2-4bac-a45e-f1ebdaf54eef\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2471"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dddd0f88-81a2-4e65-8d85-4ef13d5c7726",
   "metadata": {},
   "source": [
    "### 2.3.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7454c366-f618-4280-aa23-69f40d6261c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.431980e-09  6.772274e-09  7.564100e-09  9.779585e-09  6.589324e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.186165e-08  1.168911e-08  1.217457e-08  1.491817e-08  1.867662e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  1.675178e-08  2.010950e-08  7.911809e-09  1.281873e-08  1.298326e-08   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  2.857164e-08  4.066384e-08  4.169449e-08  1.412377e-07  1.428379e-07  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  2.687596e-09  2.890186e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 6.724862374473837e-08,\n",
      "    'BD_std': 7.044146438046857e-08,\n",
      "    'bd_radius_Rjup': 0.68}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.5,\n",
      "    'gravity': 4.76,\n",
      "    'metallicity': 0.62,\n",
      "    'temperature': 939.66}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbf61d-58d4-4b8a-a056-29a5eb88e2ad",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a1fabed-9a09-45b4-93bb-ec3bf3e91154",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.692196</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>1.896532e-18</td>\n",
       "      <td>3.679267e-18</td>\n",
       "      <td>3.031078e-29</td>\n",
       "      <td>5.880282e-29</td>\n",
       "      <td>1.617486e-09</td>\n",
       "      <td>3.137919e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.693680</td>\n",
       "      <td>-8.169787e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.025778e-18</td>\n",
       "      <td>3.527262e-18</td>\n",
       "      <td>1.646459e-29</td>\n",
       "      <td>5.661549e-29</td>\n",
       "      <td>8.786066e-10</td>\n",
       "      <td>3.021195e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.695165</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>1.550241e-19</td>\n",
       "      <td>3.538419e-18</td>\n",
       "      <td>2.498932e-30</td>\n",
       "      <td>5.703804e-29</td>\n",
       "      <td>1.333515e-10</td>\n",
       "      <td>3.043744e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.696652</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>2.584982e-18</td>\n",
       "      <td>3.294942e-18</td>\n",
       "      <td>4.184739e-29</td>\n",
       "      <td>5.334067e-29</td>\n",
       "      <td>2.233119e-09</td>\n",
       "      <td>2.846440e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.698140</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>2.829340e-18</td>\n",
       "      <td>3.251767e-18</td>\n",
       "      <td>4.599908e-29</td>\n",
       "      <td>5.286686e-29</td>\n",
       "      <td>2.454668e-09</td>\n",
       "      <td>2.821156e-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.692196  1.896532e-18    3.679267e-18  1.896532e-18      3.679267e-18   \n",
       "1  0.693680 -8.169787e-18    3.527262e-18  1.025778e-18      3.527262e-18   \n",
       "2  0.695165  1.550241e-19    3.538419e-18  1.550241e-19      3.538419e-18   \n",
       "3  0.696652  2.584982e-18    3.294942e-18  2.584982e-18      3.294942e-18   \n",
       "4  0.698140  2.829340e-18    3.251767e-18  2.829340e-18      3.251767e-18   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  3.031078e-29  5.880282e-29      1.617486e-09          3.137919e-09  \n",
       "1  1.646459e-29  5.661549e-29      8.786066e-10          3.021195e-09  \n",
       "2  2.498932e-30  5.703804e-29      1.333515e-10          3.043744e-09  \n",
       "3  4.184739e-29  5.334067e-29      2.233119e-09          2.846440e-09  \n",
       "4  4.599908e-29  5.286686e-29      2.454668e-09          2.821156e-09  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39bb0ba1-edaf-413f-a671-704a12b9422b",
   "metadata": {},
   "source": [
    "### 2.3.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6508c998-87ba-40f6-ba1b-bc070fb9d054",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.1496422131856283,\n",
      "    'gravity': 4.681191873550415,\n",
      "    'metallicity': 0.8277987043062845,\n",
      "    'temperature': 957.4576334635417}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met            T\n",
      "count  30.000000  30.000000  30.000000    30.000000\n",
      "mean    4.681192   1.149642   0.827799   957.457633\n",
      "std     0.194343   0.141802   0.120453    34.737512\n",
      "min     4.182507   0.993255   0.552561   892.190918\n",
      "25%     4.552088   1.049328   0.748766   937.544815\n",
      "50%     4.671366   1.075613   0.834444   956.038788\n",
      "75%     4.824691   1.206840   0.892083   981.938232\n",
      "max     5.001695   1.500935   1.071169  1021.063477\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"3b6d26f2-34e0-4579-9990-41db4d4582ff\" data-root-id=\"2713\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"19a89d1a-1084-4ab7-b6eb-9a3cff20a439\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"2724\"}],\"center\":[{\"id\":\"2727\"},{\"id\":\"2731\"}],\"height\":300,\"left\":[{\"id\":\"2728\"}],\"renderers\":[{\"id\":\"2749\"},{\"id\":\"2754\"},{\"id\":\"2759\"},{\"id\":\"2764\"},{\"id\":\"2769\"},{\"id\":\"2774\"},{\"id\":\"2779\"},{\"id\":\"2784\"},{\"id\":\"2789\"},{\"id\":\"2794\"},{\"id\":\"2799\"},{\"id\":\"2804\"},{\"id\":\"2809\"},{\"id\":\"2814\"},{\"id\":\"2819\"},{\"id\":\"2824\"},{\"id\":\"2829\"},{\"id\":\"2834\"},{\"id\":\"2839\"},{\"id\":\"2844\"},{\"id\":\"2849\"},{\"id\":\"2854\"},{\"id\":\"2859\"},{\"id\":\"2864\"},{\"id\":\"2869\"},{\"id\":\"2874\"},{\"id\":\"2879\"},{\"id\":\"2884\"},{\"id\":\"2889\"},{\"id\":\"2894\"}],\"title\":{\"id\":\"2714\"},\"toolbar\":{\"id\":\"2739\"},\"width\":800,\"x_range\":{\"id\":\"2716\"},\"x_scale\":{\"id\":\"2720\"},\"y_range\":{\"id\":\"2718\"},\"y_scale\":{\"id\":\"2722\"}},\"id\":\"2713\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Mf+9z93TPT5zZNmNby1APtRMGqtcQ0A+0hsCRgQTRD7zkuwwgRBBPri31/4/l0k+0FMmVjLlSj4FeSGi5ExKPvyarfrk7U8+mJofQTqCUz4pVv+SY5taPnWeFWXH02E+Ov47pxELZj70+gmKA1VvPig2ms+2bnM+Gf8kVG3Pdz58ps8xQDF8PvcAbitRXoA+bDKRukAggj4NE8ymxoCBPu0/iMhqF3Q+f5d65rdbYz6KKtxBFbhSPo9kZTZyPlM+1YI7qPs6TD78gRGda9FGPjtAZCsQuUE+96FCalmMSj4mb1ccqSVaPja3TEJoFGk+vruqv9fTdD40FsswJZCAPmyAtdU0qoY+IJiaodP/jT6IQvMfgzaSPh5qWQJTZZM+tg+pLvggkD4E9KCLyveIPmYfwBP9hoA+IRJOHRG8cz5hHec9jt5RPlxTcNWWSjQ+4J/mSmJ7YD6UhoWuZ4BXPmMb8tnljVI+W3ZGuOoYUT4cb47B/1NFPryF7Gvhi0I+V/qgLZGJUz5A6CciPZhWPq5s4kp9y1k+I8TX6LNEZT49znmV54psPjRqtlNaM3Y+/y6f83dqgT594cLZqfqHPnRJGpAado8+hnRIxBSykT5NbLs2gpWGPuer9LSNE3A+PbRLF6ILWz7v5DI/21VjPsadr1fQNl8+rX/1wj3/Xz7f8Xrj4GJaPrxoTKg1PWI+z6Z1uqskYz4PAEweJCZdPqzxWcVbh2A+BOnv2VtJVD6ZZrrXBoZZPqfwFSoTJGA+mxINizCndj67mv1S8OV0Pr5rMomky4I+sJkesUA3cT5N9ZrIQ8NwPoE5YlxM3GI+r0dZnaziYT7OqtEe5CJvPrnW3NL8K3M+8eGXBQ5zfD5KFtU8NFyFPoOmQRt3kYk+EUIva/LJiz4ZMuOIWhWMPmW++ko+YYU+SzRgT1PFgT71ZelWNMB4PgGIQbsgunE+SnqgxQd1WD5FKf/5fydiPiH3/Sb9K1Q+i2p6qaezTT4S2bF9bYlZPg96+E7ANFU+9JqTDvGqTT6+5BjMeGBiPqQyVIC/Xlw+/CVHHjNHYT4kEGaNYKVqPlHl6TnJKW0+OxGiNfNsij6JnrIDVs+YPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3055\"},\"selection_policy\":{\"id\":\"3056\"}},\"id\":\"2801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2813\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2856\"}},\"id\":\"2860\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2841\"},\"glyph\":{\"id\":\"2842\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2843\"},\"view\":{\"id\":\"2845\"}},\"id\":\"2844\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ELv8pS07Qj4zkKRfmdM6Prc+UXzKYT4+F/xoYjPwRD6/vSRxMjsyPoHdoBZP90g+4fq8xm7jRz7xHh9+he5IPp9Jvq5UdE8+dJnPC8HzUz7U7/fBRGpbPmeU2gep0WE+Umu2OHGCZj5mBd7qvwZvPkof7DPVu3M+mYT0E8I5eD5ScSPy0k98Pj6IaMpVWIA+z9X8j6AVgj5eeHBbsQOBPuO3Z1GuQnQ+GhH+M/c7Yz5cZGG8wLVSPhKRutWsMlM+mvhsvinGSz4eRPODsMhCPoNeq07TrEQ+j3iO1ToURz6II9ipPPtYPlfZYp5wiWg+VRWpabGjdT6OGdyIWQ+APsEpErwIqoY+AXTOTqsMjj4TP8VQcaGSPnZuifY7b5M+MH+hxu0pkD5442l1bVaJPqUdYTWvpYA+juuoG3IBdD47cYSHMMpPPj2JDb7LvzU+cytQccfaUj7+HH9rJ2pHPtvjC/nyDFU+eU+INr5IVz7MO/KWd+JNPsM+HPDpK0M+RErTDf4mSz6u45YCTWFfPok5Pl3boGA++rJEIrHdYz4K+i+sn+luPknTF9QINHY+qaQ+dAYhgT4Eo9+8VbeIPgKiCqAvl48+P3qN96ygkT61f3yC4+SGPoiRfC8n1HA+WiHr6Y8xWj7wL4xK2SdjPgvQfV5peVg+ff5DJ7mDXj7PfW7LNx1XPqKgJxnJdWM+DjXarR2SYj5sB7G6k6FZPuBelpTmTWA+HrxbykpDXz7VZvLfp/ZiPlOZjIGj7V0+xGCEtzZOjj7gRemgjVuDPnyKo8pC6Ik+CR21FxnzcT4PtH4r7Bp1Pi012zoiDlk+3+NmjZNiZD4u7emNc4xwPi0JgqMfu3Q+GiYR9NMzeT5f8xNpTNiDPqs5QwzsJok+Uk1gqgYViz5qh4RSJxKLPp2BP1kOSIY+xhHf0deKgD7c6gBrDSB3PmT5ib0o0HM+WwmBRf1JWT4Aw2A1VqVfPm8L0CX39lE+gkluYGCJRj6SL54geMlbPjlXBBjySlk+9oSuUEPYUD4VkaFiPuhfPi0Gz5CgwV0+Rl+UCacmZj5xPvnRFyduPpdDj/ou7m8+Jv2mO9UxiT5FpbPn3SyYPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3061\"},\"selection_policy\":{\"id\":\"3062\"}},\"id\":\"2816\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3083\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"g8VZ5FMhQj6kp/ox3CY+PgPM2SHH0j8+Ni9M3c4YRD51H5Amj1ZBPshKfwMyf04+vPML2DZ3Rz5HsqUlrtRJPgGrJWTUJk4+0E6H7E0nUz7M5hrHP65aPqhN5X5RnGA+Uh/sfAuzZj6hpWn2YY9vPn/1x1WJZnM+BVN/00QteD5xklJWeh98PqjyJgywUoA+c4H8ib3ngT6v8P64Q++APjRFSvF4DnQ+nLUUEoU9Yz7wywxnaKlRPiiz26L1xVE+4OkWwe8GUD7loNpNMy5IPgJaV1SVzDo+lg5vsAQ5Sz4qSZMNbohaPui5cqLFeGg+U4SqtviadT7sVe40D1qAPgLuRIi0hIY+OAiWG2LejT4XfupxQxuSPuJXtF1zBpM+f5wDkvj2jz7lqNaxJYeJPp0ozcd1b4A+pX7ed7+Dcz4PBBPNYfpNPuJcKnWXnDI+2hsxx5FSQz7kFIBhuz1HPmnGGCDqDU4+y4aOTvBUUT4o8qSNyrxCPg4TxA8eEUU+o2vg7oGRSj4Fw/2HQeFWPh8svTKUy10+eMKzKApWZT6JaObBbVptPtIwsS8PcHY+kb04lZ7ggT4twSVKTYiIPgZHw8YRW48+QsxzVKjXkT4YZciBtDmHPrpFlQflqW8+XyxXoR83WT4ZfG7cwWZiPu2/oaI+DGE+ozBTFOXjXD4+WPG1uN9RPkDa6vbT1GA+SNgjwFh/YD6tEtdqgDFYPl8A4WjJjmA+6rnaQdQVYj6mPsVA5TVePgJBI78z6l0+GJVJuITshz65za5MNSmEPiDFSulSkHg+EDcJXc/AeD4rx0ey+6NtPlcIUyjTnFI+S9tARBdKZT5AWxuIUfptPgXOU+XLYHI+SjS6FBNpej4XZGANjvCDPgFWubHpPIk+0LmxynYMjD7rMdWeeiiLPrFl6nIsp4U+o1VmE630gD44TIpm5JF4Pjt60IL3TnQ+zF4WbIBMVj70FdjgkFxgPmkFAda8zFY+9ERtj6HLTT43v//gJy9VPjjbmtwtg1E+fdW/DOYeVD6aUbBsvzpQPrGXx59gmFM+4JeBT7gHaj78y2FcpzRvPqw0kkJmeHU+e+aHBRB+hz7YES3ZClqLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3063\"},\"selection_policy\":{\"id\":\"3064\"}},\"id\":\"2821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3084\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2863\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Zos3BCD5Pz5NJrteyYo8PsWpq3FzKUA+mbnjEFfzRD6V4lovDw1APqmh4Q+47Uc+Yem5xYbkRz4xssQf3LJJPnJLy4TONFA+ZoOXm0dFUz52BbmFmcxaPtHjzVVUOGE+MatyuneAZj71WsL9bCZvPqzs+03wJXM+qswxvG3Kdz4diIpQRXN8PmAFE1mqLoA+naDh4M/xgT6W+DoMu1WBPsgBiDFX2XQ+9qrvTNIeYj611lWZ7XZTPlbr4R//uFA+PmZXOOytUD5/X+AOFIc+PhDGq8H7vUU+0M3oIm+BSz6UFNyU+6xZPm65f7B7qWg+30E3D86sdT5cOhtXiZWAPrIWsFlZeoY+5AdY+pchjj7+PlZ/HZaSPi5dPGHLTZM+7AtyDsPkjz7PrRJmiTCIPgQgJUTIvoA+Ke8Ii3T0cz4HYyRxLYdOPticyeE2UTQ+zzp9DVuPVj77mRvVdHA3PiAeKVKtmEo+oGqQosb/UT6F6VVuFR9LPhTHU7XDOEo+iF9H4l9fSj7SMFr0xuZePq7YKqAm8l4+zBLGL7G1ZD6SVjrnjuVtPhEe3Y98dnU+iaL6Z4MzgT7ZS0bQPLSIPvvmCda+348+Et5+/cg3kT6rFzF1/ASHPnj2QhRYZHA+sKyRZRJDWD6eluU98HJjPnJcDb+Pe14+MhhyHgcZXj59Fo2qux5SPkuvs7dtPWM+yt/H1zQFXT6KKKIi7tRbPkOqNlZ+TGU+I2/ofPT+Vz5Vg9xzYolhPlKzpoSu/VQ+Q+1Jd1/FiD51Z3GDftR/PprcLtoHf5M+FDrnmRmGeD4BVRK08KtyPg5GNQBBCmA+GmTkUCpRYD5bdSNm3K9xPlS0HD68hnM+9MPBzlX+fD6johsnloiDPrbf+r1dTok+CMgnjjfnij5tYTBL/aOMPuEtFlADJoY+oGy163N5gT42FrJ5sQZ3Pu9OcgvAjnM+eo+8apaWXT6dnjYvF+ZePjnjvOkWwFg+IP/MTMzART4/T3VViwVSPhzfRoIadVc+xHrpsi/qVz6QzsIkrFtVPpdXvenWt10+RfqqnpPRXD7hP5aiPXRvPnRpsa9c4m0+4hu+IkKshz4ft4QLzaKPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3073\"},\"selection_policy\":{\"id\":\"3074\"}},\"id\":\"2846\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2883\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"E47eKN6fPj5Uk3fby9M8PgfqYSpLF0I+dOQwlGzCRT5jdxWOHAg7PvtNj4U7H0k+gtP54PL6ST7wuISuca9HPlMkw4lnvk8+DqItXtQvUz6bnHyOI/paPrRbubauzGE+c+hrdFw0Zj6iLftyjbpvPtZIRasSfXM+ZvzK0y8YeD4oYGG/GzV8PsIyhKHOU4A+ulSs4B87gj5xrB6kSx+BPgk3E6cCGXQ+LBI1/JVbYj633wG6Z2VSPmEZguC+JlQ+kURSeEwDUD7tzhzTuls4Pry6ZVMlzUE+tTtTQ/cOST69kSjfhwtZPrzWtwV7sGg+stZsrHw8dT54rMtuzZCAPrDB/hBnloY+d3VtMz+2jT6w8EXG3DKSPuCGMruCapM+NzlGIsEFkD5TWWPN+PCIPqb1KCRNg4A+TDEReJBTcz44c2l3cihRPvL1a5tMLjA+T81URDBbWz7An/LEI/tBPldAfRTEsVc+Ok34XNYrUD4aPWr+gLtDPpZQRkrAlzs+uGhj868MTD7hPV8NFcZXPmzlkR3sLV8+W7M6N5e1ZT573ky5QoptPjc5pxfSlnY+RT6o8EwWgT7RhPRk+NiHPt6WLJkybI8+PwDlW4jLkT7Wlb1qPVOHPhEciA+5QnA+UeJKrxlJWD7Oup7m3CxkPmrbDvhh2mA+iLv0h0f+Xj7g2bMx/ERQPmTsOQpeT18+YEvzJ+euYj7xncQQPUlaPgVm1jtMsWQ+uyVaHWX9Xj5nTPVkOPRZPi05wXKK5lg+NmOkOh0/gz4tqBF+62N7PkbWhOUD850+9ya9z3Traz5OwjVU9IVvPnr9XRO58Vg+H6OgO3ZEaj7n6LCACxZvPmo1221piXM+XtMsbDNWez5TMaKHPUiDPj50fjg0wYg+JfdqfOuhiz5vqhjXDieLPqvH2uTs7IY+HamAj3C2gT7bCXL+eGd3Ps11Qnah3XM+nx2ngNWQWT7OBl3ny55gPnqjSmnFFFg+geMo2+vMTj4mMM/nSalTPs4oRht24Fk+qTbBX8g1UD7ZOMUT2YRKPomzVVlFL2Y+7aGlX63DYz5abOhoWt1xPkU6kXAfWWc+Zi46KE9ohz77P96Rvv+VPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3081\"},\"selection_policy\":{\"id\":\"3082\"}},\"id\":\"2866\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3039\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0CPho3VEPz5hykeZmnw6PnNiqP4YtD8+RzSShLqIRT5EpACd4ng+PtqQVeP/WUc+PZw6/eBrRz6W5AlltORIPv9r7uXB104+oWVkNMPTVD4Kqk78q01bPo8ocxLhoWI+9C/zUDMvZz5isFTlhxlvPgWEN1Wy6nM+/MTSF2Cndz6UwQptsDB8PjnceGthgIA+f65q9Bk3gj7JxAEH2UyBPi9a1JJB1HM+wOLo8IpaYj50ChD8DVNTPs6xYtwGTlA+H7PnazdfTT6if7iJ0I1BPv+rlkYj3EI+hzYEz2B7TD6T1QMdjwxaPrX1sydrqWg+OLZTHMANdT70cAJRq4WAPm0c9889sYY+Medku8lAjj7svZws3omSPgzq5naYWJM+j/n7bE0dkD60H5reLbiIPnvJ2qupUIE+SkTImh84dD7ub8noWGxQPg5tvrF0yDg+5JUcW+ZURz5IZzAw2pIyPtFGaAjKwFU+OuhydWOgWD4uTAOP9nlEPoHo/BUqgUQ+8kiIyioaUT6LTJ8Qcw9VPuKtXGKK4Fw+qvEll0OFZD5fJS9iphVwPgpF3szb1XY+ujL28uNRgT5vNyNIvX+HPu40gSLwqY8+SgErBc5XkT5PeCFRBLaHPqC+rvYu03E+cWYvQ7PGXT5BQX264cxnPkXK527hPl4+lUJYAuJyXz6C+gb7moVVPmNA8KPNV18+jYs1DNMjYj4cT1gk/n9aPnbBmpKQNGI+K1GpNW4fYD5AuNZL4chZPqBOJHXoU1c+iMHRmiNAkD5Y7LB7n+CaPuqksUtEV4E+UIbrXvRdcD4w4NKV3YNrPj6u1bmM71w+dg+Izi1aYz5dAYG+9bFwPgrmtzGybXc+SB2tLMCzfD550xY7lZSEPg2v2Xy0sIk+55w0hvAljD68txzHiFqLPpRZLCDCN4Y+y/hacI5xgj756KKpq5Z6PvhB53Zrl3M+H3KE7L0SXz4lxfnIHD1gPlfagjCwHVE+u4XWrZxMSz66kNDLU/BTPjCc3eGN6lo+ET+SY/JiTT4F7WleirFePq439o34IFU+q7b8agP9YT50lIFxu9drPoNBCzc3L24+qbFlvVZXij5eY8eYp1ScPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3071\"},\"selection_policy\":{\"id\":\"3072\"}},\"id\":\"2841\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3040\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"Ross458C: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"2714\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"2856\"},\"glyph\":{\"id\":\"2857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2858\"},\"view\":{\"id\":\"2860\"}},\"id\":\"2859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2826\"}},\"id\":\"2830\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2857\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2861\"},\"glyph\":{\"id\":\"2862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2863\"},\"view\":{\"id\":\"2865\"}},\"id\":\"2864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2843\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2797\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"1FrOT8WqPT55nFDFySg7PnhWgWOrykE+Ex9eJaTCRj555BJlg7FAPrtJq0EUrUs+/j9//GcqSz7T6EgQ2PVKPmTtOlI3D08+fpBIKhReVD4Y0nKQu61aPmfMgW5wgmE+YMtw7zhPZj6N9RFpzqVuPgCb1OSJBHM+bYhdpA48eD7eFryUIHF8Pq8gsQQwboA+ubPdpv7rgT7pPUWIIRqBPivrzHJmQXQ+XeBxm8t3Yj74OqNjthxQPgs13G4lCU8+ht4/yNnrTT58GbNthKxDPkJm36tcBko+KyiG+tkuSj5upZGp9gxbPn/ySZKghGg+P+IZB/+ddD4SnlDF8aGAPlXsVgWCsYY+vFtFMN78jT4MiJeUxTySPndSy97Fh5M+msIXIMUJkD5yeYCp1fiIPmfv5PxNPoE+yPH9cqHUcz5yO3ikZthRPqBoIa+bay4+dLpoq4jrUj7es+aOc1BGPtrcwsgV21E+TwjEaIPsTz6yxpioaihJPsxBXAhpD0c+ueimHCa3TD6YMCuDFepWPrHGYAt9OFo+b4a5y5EIZj6KxOHSKbtvPoZDLjmAbnU+LbEc/OwIgT4FUpX1T6KHPhy/9X011o4+Ivrc2QTukD53uSemUJqGPp35fcm3yXA+01xm/wilWD45Mw+z+WliPi2bT3W2OFk+pWwjwd37Wz7/1D4QoXVEPkjdamoViGA+463uVy8UYD5/knC5Xg1ePuo14LEJRGM+lsT8yzkIXT7Q+Hq04y1hPsNN/4gRZlk+MHrKGtiFgD7t4pNNiHlvPs8EBqJREYQ+FqjMXGUEaT5kvlX8MslyPi5wmsYVWVo+S1NzxvKwaj4il3+i1KlwPn6aANwTcXQ+GwJQVtrUez51gngboZKDPpiHjTgmS4k+wgb0YWDCiz5ERkQodm2MPmgk33Ke64Y+5eVgudIGgj7JNqXUEIt5PvDFKAbS03Q+sFC6TDLyYD6zO5ZpLHtfPluObnayGFM+fD4ZP8wRSj7FHbG6K45TPswwxMLiu1U+N2+3uplMST5G7Ut/PlZUPnc66aa39F0+h8ESKgHcYj7NGYv9ZRFsPvroMr4Fc2k+wMVWhyPbiz5x/SwDkJqUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3077\"},\"selection_policy\":{\"id\":\"3078\"}},\"id\":\"2856\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"YlOptDjrQD4cU3Dv1h1APscua89zIkA+TdWBbnubQz7qqaTbqLw4Phl4B3AHXEo+PlhG/AgURj5R0XlMeC1MPj7GWq0q1kw+T//hJOlWVT6uhWnuyR9cPrU5qbFkgGE+oX9GdzgHZj5F0eJKkQlvPkGWQcCdoXM+/0jMqjX1dz7KMRjIP998PhjRrH67fYA+Jv912TX5gT4gvbrCfjuBPlOEdWkdVXQ+uyWwwdOXYz6Hal9CUulSPq9tmPsbrVI+hCxZRzvHTT7rCme89YFFPmYgQwp6uUM+TZePuwR8TD67RB1I/y1bPnuj8TIwRmk+FphD2YaRdD6rAu3TTHaAPvVveii0q4Y+8/3HM3XIjT6UxiWS7UqSPuxqszynSpM+ZqdgaDUbkD44i1l2ZWCJPnnl7hfs2IA+YnEOJLlOcz4lbsu7qaZPPvQHH2JXXTQ+/ebOZoF8Vj6D66iDje9SPgJ6+6QsAFM+g98XKYyHVj6WZRJCHLtGPjmETjUPCkE+44GaB6a9VD4eYnyZ355bPnLp6E4UDlg+Erp09qM2Zz6c+V1ylz9sPl/SrA66rHY+XhWApFhOgT6oFOX2MRaIPpHqexbcPY8+Dc1lSXvckT6PHU4rRn+GPhRBMVlXJnI+bVPgCn8fWz5rVLmNOmBkPgeXBUX5L1k+UkL5bFQeXD5JEye2GbNRPrfFFg67GmI+JJW9KMurYz432/eBJEtYPkKVsHwoimQ+1cDIPRVAXj5RDvzPxJJWPiJlLwgatl4+fgZzHrzhhj66GV0PqTGCPgmksoG5Q3I+KunkgsyKdT4BKdTRwTlkPm0TbwxiMVs+eJh3xAJobT7GHXYWvjhsPmpdAlwekHQ+68FG6mlxez7xF4EV76OEPhIS0yFk1Yo++eOC9t3Mij6i3nvUCuiKPiDr/uoj24U+etEkQiZBgj4lRNeNS2x3PuBW3eSgSXM+zNR0NieAVT7xuCvXsnVdPkavIGFhqVQ+aL3Ks4oESj5ywvZLe6VUPtLCKzcF2Vw+kofhxHNoTD7pMm1fHW1OPpdgDgqJMVE+hUGCaDi6aj6Pd6mvCiZwPsmri22cxnE+RHIPpNtRgz7aYX/jZ7iIPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3087\"},\"selection_policy\":{\"id\":\"3088\"}},\"id\":\"2881\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2808\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3085\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3086\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2881\"},\"glyph\":{\"id\":\"2882\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2883\"},\"view\":{\"id\":\"2885\"}},\"id\":\"2884\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"7O52IHxpPT4v10IRozE8PtJG90+xQD4+DohLOFAIRT4MEMiddU46Pn2T253fUkg+UEQfRLecSj4VxtfAGz9KPiLTkfDaeU8+BeWys+4RVT4Nxfq2G/tZPh/FO3GfGmI+sJnn1sVFZj4REKstR6JvPnQrg/IcPXM+rfuYLb5SeD737pw6a4d8Pj9RtWo8JYA+gGJ+OF79gT7nRUM+q9SAPuLe5WsToHM+OVyz41iCYj5TQly0kIJSPu6qsn53X1M+HFfBSHRrSz4gFr074RtDPrOOqqu560U+X8tLS965TD5rykTVrNtZPmAMkdbIvWg+icTKUmrjcz5zUUOfuUOAPkH0UcO294Y+BKL1nHlijj5myndrrI+SPomZZhDlgJM+ekEkVFPmjz62dWLbNFOJPqac4KDKIYE+nyDWCUmdcz5y16p/dq9QPn6tOkHnijA+metes9QWSz7e6VyR2cJQPlY9zSK/V1U+btCDCn3zVj6NRRIBt1RUPrlMLCo7NEQ+d3/wJzrqRj7BKvykaWNXPthyPrdpClo+cVwZIiytZD7I2aWNM/BsPnNR7GykxXU+Tcn8HsZvgT4bmmI9fj+IPpq9LtcbAZA+SiqRbGaPkT7DpIhP6niHPrdH1rCGRm8+3j0EO10xXT5MdLSJlsBkPkre8SJreV4+7eRVsrMhVj72b/U1/lBbPhXvPpSNj2A+3Tyyni4uYT5v7ggCp2lcPhMw8MNeyWY+W9V5rLelVz5of53yRJBgPqF2xJzw3Fc+o41+O/WEhD69S+ZIlEl/PpYbusYwSH4+NZ2Svm+gcT5kTKtOJYd2PptyzWUDCVU+h5xtF0azZz7q86Z594twPjNNRt6aL3U+CJPwBSLtfj7QI58fcOCDPvEcr7Gia4g+CUOa99Ooij788mBy3O+LPgr9JZGqboU+mz3awmIagj4kOrpY/7J2PvuwKDMJC3U+mBwRiyYvYD79i3tlwVthPi4HN76AZlw+M+HQHr3MQz7iHLbJIbBVPlIdkR3vMlc+n7bEIuJIUj4TDWwQos9cPjGVS0WPlF4+8+UoNIb2cD4eZCEFi0BwPpYcz/XabGo+HtEDuYzUhD6G8Q/9unyPPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3067\"},\"selection_policy\":{\"id\":\"3068\"}},\"id\":\"2831\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2866\"}},\"id\":\"2870\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471466\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2812\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2833\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2872\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2891\"},\"glyph\":{\"id\":\"2892\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2893\"},\"view\":{\"id\":\"2895\"}},\"id\":\"2894\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3041\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2886\"}},\"id\":\"2890\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3042\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2816\"}},\"id\":\"2820\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"0BKPM23PQT6shsabum89Pji+9uWlBD4+y0ls1G8ORz5rKwZ+wBQ7Ps93kQjYtko+JpfWY81gSD7hXj4R4ClLPkfoILiPT1A+tnIvDiIbVT6Tpsqjx2dbPty882IiB2E+rcHP/xT7ZT6D+RgIB4ZvPjpTWB7i23M+PzTZXAMPeD7wep8sqDJ8PsfY9TpNP4A+KPHE9xLtgT5oOe5mNiKBPuXtbt5bVHQ+altZz8nyYT51jmZoEQRTPnbompDTclU+QjvYczuJSj4PNmVsCZFFPlll36jEcD8+iVHaLq0uTD51dBYVaOFaPtcUsvS22Gc+BtJnALuJdD7tMSM1dk6APjKLvFZBk4Y+YSjWK1kfjj6yygTG246SPiejMEalXZM+xkFnSKgYkD5LMtfC1niIPhyfblVRqoA+tEHwU1tDcz7C4cFg359OPhIf32A+Ujc+MSOpWkVlTz5z+Ehue8VJPvuiKQTs51Q+5nxGMbWpSz6Itk0E/ENPPrPOT5ih3kU+2DeTsFjATT6zLnrEkX5XPlQZkTNwTlo+izOb7i2xYj4v/YvcXAlwPrs0bhjNcXY+P+XNrQx9gT77eqUtPsiHPljg2JUQp48+1usYjRRTkT6d+7AyZqmHPuqDlWguZ20+fUJ6cmlAVz7VgxylaBlkPpmFtXXWMF0+PC0goTQeXj5uLnQILHxUPhJ9DSyB6mA+fDDLzswjYT4YrFOYfYdbPoRYlP0SA2Q+bf0ZkhWEWz6Yzpwct5ZYPiYvALM7HVw+MY+c9khcdT4bvB9+4IVuPjadDTg3uXE+oVcKMOWMcj6exUwvET9rPrL0cTwTvFI+aG2yiS0fZT7B5fbKYrFuPl2cVPjbOnU+G7Al04iMfT6VuRa6EPuEPm43rqIVCIk+ByIRl7mYij4RVRJ+Jr2LPubJS+1EMoY+4aOUvV5qgT74vISMtuN2Pt9VAZw8L3M+P97viX0TWj692t/s4IdhPkdvFSeLCFM+5OOIQrbLSj7wz4VkX/RUPs5rt9cxf1U+JtswCPLCSD4McAJNp2hZPnmxqICH6WA+7I9EJjyKaD5chr/6b/xqPgyP0QcoaGo+p2XTRromjT5BDcMyalKOPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3083\"},\"selection_policy\":{\"id\":\"3084\"}},\"id\":\"2871\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472676\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2882\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2866\"},\"glyph\":{\"id\":\"2867\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2868\"},\"view\":{\"id\":\"2870\"}},\"id\":\"2869\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RozReOgKPz5TzhUBgrw8PkyzinKRsDw+NtuTgM1IRD4hv6H4EsQ+Pk7b1ibEZkQ+b4Q1ZFamRz5Ce0iXPxNKPpAZGL/falA+ZiG5EqnSUz5oi+luISVcPoWYa6GBhmI+IXYhSm7RZT6gMJC8WE9vPpr7sOF5tnM+Hcdt8Gl3eD7UJWQ04rF8PuXkprJvSYA+tkii2Pkugj7ktuBaIdKAPvCrhBiWfHQ+H7zBzADoYj6NLlCt21tSPkHDa4aje1I+FJhwxPcgTj5I5n7fItJFPoFQAvO3k0Q+llkHrKxqTj7aefe5WdlZPoq7Wkq5CWg+Oulp3xwbdT5/lk+0UlOAPgzzg1UUm4Y+Gkwas1bZjT4EDM1kxlySPj8A4JvpepM+fBCd2qAAkD6ekEpILt2IPs6In/9CjYA+a3n3Bsd9cz4JypKhdKdPPtbP/vgdlzI+bJpVOtTpWD6QluREYptSPvWv+tz7m0s+sluX9l05Vj7bsc9/RVhCPgiH+iP6TEE+1nqr3LbjQz6pfe6eN/ZVPk8s8PPD1Fs+knjJemF6ZD5kY0N1mLNtPgkjdOwHXXU+ApJ5BC4vgT5ZS+DVW6GHPo7tsR312I4+Ehhp2pzRkT5Cyq1HA3mHPtjoI6067HE+yTMrf+HAWT5svv2btRFkPkMEi5MrNWA+1Flgu2F1Wj4Nqkyop3FXPjGG8Q0RHmI+qb+GMbT6YD4bnMwkVTddPgnu31zYDmE+RaCWmeebWT6BQSy5Ci9kPo7jVtbL2lk+l6pKpKA7hj5/DtMXXzmDPmWbgOFZrXo+AJ5RyWIMcD72eYHImbFwPuVmiN5JYlQ+XeMCnFIOZT5tyvqdjGRxPnjcNkVJt3M+Q2gL1jKefT4e0d5atuGEPoK+OohxeYk+jTr9GhTOiz4KjWVE1EuMPvVnDc3bKYY+AJ3uA2pugj7+O0+hxoV4Pn1OAYMVz3U+pZDEmUiRYT6fNo5iFgFhPo9xo5j63VM+K7ZfAueHRD7OLMiAQXlXPvIp12/+hlg+GkyY2hXOUj4EcAVZZ5dYPmUPhYh922I+WYC3dAZFZT53K8Z7rIlvPqKcsChgSHE+51rQmDvRiz7A/EfJZFyNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3065\"},\"selection_policy\":{\"id\":\"3066\"}},\"id\":\"2826\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471265\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2807\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2806\"},\"glyph\":{\"id\":\"2807\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2808\"},\"view\":{\"id\":\"2810\"}},\"id\":\"2809\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2817\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2806\"}},\"id\":\"2810\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2831\"}},\"id\":\"2835\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3087\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3088\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2811\"}},\"id\":\"2815\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2823\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"8NRdme2eQD40raTrKN49Pgi/anShw0E+GmaEi9/YRT4LSh482q08PlWgmVReiUo+B5yj7PEdST7gOZ0CQpBJPn3aO3a20E4+WTK6sPVPVD7Xp1qi+IZbPsey/IABY2E+dxJ2R+EmZz6WXK7odD9vPr9dOJggjHM+0PZnb32ddz7B79cjylx8PkGmw2IqGIA+DYLHfgcWgj7WKLnJ9QaBPt4yCw6Y+HM+woQXzACZYz4gQ3GRYuJTPuXjs+s9W1I+rQIg+nS6TT7/bnuzK3M8PrU8c7IiRkc+YqARUkkrSj4/yEtDr7lZPlYgC4T0BWg++lbN6rTCdD7D1dKgmV+APsQRtcg3m4Y+BUlp104Gjj6GsHXIBW+SPkc6HNrYOpM+fRzK9YAykD49csbGLjSJPpe/AOeXWIA+VY/0p/mwcz5rqXwB4LBPPpitLrXwLTA+vCTg28meUD4YiYr1SNhQPvP9kU1m+VQ+21eDr2kYUj4kWGV9sUxIPpqgNGWZ0kI+KIH1HlLxSj5YrmPB7cxVPn6v8ff1Y1w+Irt+JR8PZD70mYbQh2htPvFADAusqnY+/5d9bNuHgT78yidrWOmIPtaSNtVboo8+fLXbDntokT6XXJRBQkqHPrx8LddJ+nA+UD9Pt8KnWz7S1wEvO/tiPthq0wtke2A+42jzBNalWz5pxCVzLqVUPn6v2tpFbmM+jO8QP8FlXj4T0O0cEz9XPmMkVqKa6mU+uJQWFkSqWD4lcGsz7ZNgPvAN4pkthF8+kI9mB3Jyhz6iOKwbmz14PkimuixOo3s+wnP75STkcT4IGNGldtJxPq+IYaHVb2A+TMBIsjqyZj7JB11t8I9tPir8HKdn1nU+F2R81Dzqej4uzZeW6h2EPmK3AlXdc4k+23fHCDTNiz6GpEphcz2LPnl+dvx2YYY+8tLoYGVCgj49j9dL/8d3PpHymPEUDXU+RPmScGEiWT7fxJKf5EpgPqHMCnqsblY+i7d4pPz3Tj47d4iAC5lWPkWgkgjx0mA+uMaoY3JbSz6jKRgQIJlWPjJ/fJ4xEFA+37pRp/bfZD4Sc4+VE/ltPoQRDwX393I+vzv3jKdXkz7dhOOOxtWSPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3085\"},\"selection_policy\":{\"id\":\"3086\"}},\"id\":\"2876\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2876\"}},\"id\":\"2880\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3043\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2892\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3044\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2851\"},\"glyph\":{\"id\":\"2852\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2853\"},\"view\":{\"id\":\"2855\"}},\"id\":\"2854\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"wvpCHeNmQT7l8EJfFK0+PqisWLDtxz4+rPWxuojMRT5zSzpZoBJBPkFAPVKPaks+NYxCLuCsST78wgi9gpVKPvm3ZSJgDFE+N2Ej8vKSVD7RRsaudb5aPvigcbRuW2E+snXtm2wzZj7xDev47AlvPnGS1Ko4PnQ+IjCF0sAQeD71h1ad7zt8PsPXuy71gYA+WBPGWooPgj4yAlN6VDSBPs35PkT4zXM+9WUa+kIDYj7DZUNGKltRPtIJhuuEYFI+JeeULQJzTT6LhcvVLhFHPiWIg7wy0EI+RHJBKtJCTD6AMGclm7paPgRHvKJvS2g+V78/bmHndD52glzko5eAPm9U3O2ZR4Y+K79GOQo3jj7vdhFDXRaSPuDzlDUcO5M+lPW7gW0FkD6Lq66wRgWJPnL+I+MGz4A+amRh9EV6cz4h9COWVzZNPvYHHEI3Ezs+BFhK9GrsWz4D2aOqS6hKPsCLOjGF/lU+YLpLp9bZNj4556Qos8BWPuoRv4PC4zk+oa8EIxX1RD6yFhEAXq5XPgzbUapaVF8+fWhvnG+cYj4epcF+bh1uPlK2UUW43XY+MOxx3MFzgT5YYAu7I3OIPjCAiJ/TTo8++emL/nMLkT6VeLDae1GHPhD3VvhiYG8+glB5N1HeWj52JRbWK0xhPogBCOxkkF0+l0m44WK4Wz4mRrFNKXlTPkIkg7Q4kmE+Ob9Yj3SLYz6U7jdSvh1fPlqnScLVCmI+2HeRr3pfVz4tuc3qVEZbPsMcaqwEJ2I+p1Gr7t7PiT63F1EBgll0PmjWhwGqJIE+zHaLAbA5ZT5wIYXeD1R0Pvb4Co1Vm1w+phtJP/02Zz6Angxnxl5wPvdKqyBWhXE+3JGO00sLfD6quFnn/1eEPuxTjkfkpYg+A7DBTNrjiz6bfrliQyyLPm9U5hHrbYc+1BXry3zrgT4TRej+6EN4Psjrn1NwAnM+oRiIamrRWz6e2PIh5PFiPiNrttjKMFU+MrqTVgCFRz4um61ENvpRPo/pzH+0jFo+lrPBA6AFTz5+EISw9i9ZPuAG4iqOIl4+8QnBGA5SaD4lX7mVeaZoPsF66dYCbnI+iGIaqSZBkD7nMjoudOmRPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3057\"},\"selection_policy\":{\"id\":\"3058\"}},\"id\":\"2806\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2853\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2847\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2821\"}},\"id\":\"2825\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482071\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2858\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472878\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2893\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3089\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3090\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2811\"},\"glyph\":{\"id\":\"2812\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2813\"},\"view\":{\"id\":\"2815\"}},\"id\":\"2814\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2871\"}},\"id\":\"2875\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2816\"},\"glyph\":{\"id\":\"2817\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2818\"},\"view\":{\"id\":\"2820\"}},\"id\":\"2819\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482374\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2873\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471669\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2822\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Rk/cLmybPj7QjvIQnd85Pj9gJLJGF0A+s0qYUG2lRj7hmnr8XcFAPgZ5YnL3Zkc+3z4nLFWDSz48JMqM9axLPlr3q//eiU8+rywgKBHGVD77yy1m/G1aPo30bYhKBGI+OwCNWjAeZz5Bgmv/8AxvPoBvYJEN7nM+PNX4BDMTeD7007iW44F8Pj4PxtStYoA+VTtYTSUzgj7nRRQmzkmBPr7YzgjI4HM+aXaZnRuBYz7iXkWhp8tSPhL42AexjFA+oJ6dHcYWSz5LIi+oQzBGPqSp6qlQ9D8+KQAnO5gKTD6x1gIJFsZYPqz5mxInZWk+xzdxWSyPdT7bF5tHBjyAPsruwiTHd4Y+WDZ1XVgojj6nJMRWTpCSPskMzqOzb5M+aFDP1vAtkD7kAvmhZhyJPvmBbNJkf4A+h188s5VIcz5HxyKk8oVOPgsnAGpkFDI+GkKicqjwWz7p+z1X871KPnxRLmTwxlM+gcINmiItTD5rJ07AeS1QPrg5xzbyI0A+J6SH/Z9pUD42AILkzTFWPqrKplSDbVw+AntKx/uWZT4yIPR+/OJvPlEzbhuIvHY+81aJLvtqgT5OPtPVBRGIPmmq4z9BeY8+u4mtMAK/kT4TTWJT8MSGPo/TqwWGLm4+LjWmu3vzXj4krJ8A+3NmPgQ+yzcQbmE+MByEryq5Xj7JhwNF06ZRPtFBEfs63GE+g/LnUap0ZD42LKNcqyhbPnSmS14fdmA+RV2nsmQAXT7u1Mx0TQ1gPsrFXnW0YFU+/fJWzdHbdT5FuFJgS8F7Pk40MMW2i3w+RXuFKfskcj65wUxz52hxPosF5fnBJ1s+EFww5wpXYD4LySAxuH5xPovPila3AHU+G+wILkuhfT5JcE1hZJ2DPstWZpPr4Ik+dZfrO+Y3ij5z5QXBA2yLPv1qCF9LB4Y+JmDoNBzEgT5n6xkNQZh2PvTUvysEZnI+aDE52falWz6pnYnX5UhbPh7mySKNZVQ+67CYMredRz6efyM5RwJVPmsDf1N2xlk+Mb3xgHIqVz6qghzH3VtcPhvUUbF4L2I+JZunc4YnaD7WtP647NFvPuWKTA2t5mw+MSME6g71hD7ezJ7xze+UPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3059\"},\"selection_policy\":{\"id\":\"3060\"}},\"id\":\"2811\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3045\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2851\"}},\"id\":\"2855\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3046\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2821\"},\"glyph\":{\"id\":\"2822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2823\"},\"view\":{\"id\":\"2825\"}},\"id\":\"2824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2891\"}},\"id\":\"2895\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2826\"},\"glyph\":{\"id\":\"2827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2828\"},\"view\":{\"id\":\"2830\"}},\"id\":\"2829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2876\"},\"glyph\":{\"id\":\"2877\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2878\"},\"view\":{\"id\":\"2880\"}},\"id\":\"2879\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2861\"}},\"id\":\"2865\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2867\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#48196B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2832\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Cf4hVE4cPj5jBT53xJg/Plm+ru6E1T0+pyVdPqYmRT4avyP6aU85PiswpRPntUg+Qz/QtZ/SSj7m/fQNLARJPoCcBUQHf00+siL6Uv0HVD7D/BlJVapbPg+rix5tnWE+dpiEtlGgZT5YMhFoVFNwPke4vkR+zHM+kNCqN5lOeD5KPqQCFX58PtytcZ2SfIA+SCpna4z8gT42NkbJbSSBPj1/zN2en3M+KYkV+b8NYj6kp61cyUVRPoZhJoIChlI+DkwtKVh3Tj61h+2cQ9dAPpusB9vv1UU+6f3Dj2nlRz7mvlvIM/lYPhcVjUaAy2g+SqSoPGYFdT4uOJkxwiGAPmXc79X9qoY+E8FVlxy/jT4pdTGCTVGSPkMoPUyteZM+l4hDYvp6jz7cEvCdeY6IPuqe0aN+moA+39l3gSU3dD5zn1QkfeVLPoFPoGo+zD8+oRZf+6fvWz5ikcX5/F9SPv2DV78ALlI+U4QXI7c4UT6so5QxQmNFPlcra4fwa0s+/Q60DdAKTT4qI14ZV0lXPjaSWv0zUVk++3d5ZzSFZD7IK6oimMBvPtbkmUE1/XU+vB6yk18bgT4fnZnneT2IPp/7Gc2OL48+/fLatM9xkT5Opyga5LOGPq2LKNyrT3A+xalLXgd1Wj4abXd6+pthPoJzhc54EmI+dzhiaNaMXz7z8se9+y9VPu7JlJoWs18+AzfQNXZCYT5J1eMQB4FXPkywvMc0RmQ+qOdv+EyrWz6yUbMsiwhXPuN4LY/3Q1s+SEd4S9Zddj7CqwbvTTqCPo/3WC+IbKM+WRRBV7J5cT5tpWQr4EhxPiXvF8T2d14+Zrp/futgZj4DDNYr6BZxPkX2G8B4LHQ+ZwGTYtQcfT4C1a6RmGqFPrvXS66ky4k+qRe2Kf0Oiz6EJY98HsiLPqfiPqxxboY+0u0lpz3qgT7zi4/J5mN4PnG2mkIHP3U+RyawGYViVz5EAvbXBTpbPpjTuJIWP1c+vrHULeAvUj5KtZg0EwZYPldE6ClAtFU+OcQhKnDdTT6cim4a8BNYPu1PRWEaC1o+kFTUko9IaD7/S2OaPBdzPsC6CofK520+kOIjEy4/gj5n9jFShqGNPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3091\"},\"selection_policy\":{\"id\":\"3092\"}},\"id\":\"2891\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2887\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2831\"},\"glyph\":{\"id\":\"2832\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2833\"},\"view\":{\"id\":\"2835\"}},\"id\":\"2834\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2877\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481D6F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2848\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3091\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481C6E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2842\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3092\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2846\"},\"glyph\":{\"id\":\"2847\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2848\"},\"view\":{\"id\":\"2850\"}},\"id\":\"2849\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471567\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2818\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2836\"},\"glyph\":{\"id\":\"2837\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2838\"},\"view\":{\"id\":\"2840\"}},\"id\":\"2839\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2787\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2837\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"A0GQ35WUPj5AGg8/uShBPgxGS3u22T4+yn5zjUZfRD6uaBngul08PkP3vAAZ7Eo+kt5aFmNSSz4upe6H1qxHPpsUf8+i2E0+dIiArqoxUz7yZtIeWnBbPlaYHhM5+mA+ddXSbLjvZT7MG5IX5cNuPtOz0xvqWHM+HSGlqDzTdz5+oSbZKZp8Pl0k+goWUoA+Lez3oN0Jgj4bq34rgkWBPhVJFjHzBHQ+tU4bbb49Yj4vyAaefz9PPktA9SKxbVI+aStbCQjBSD7AORJPqmlHPq37uUZAR0U+Rakh4fg2Tz4tIFkvKydaPkhB6wFxu2g+xR9kUTX2dT6+sjf9BlSAPosxtGgkgoY+w0RQE/qQjT6geeUNoz6SPhmt4rhhZZM+3soOmbFZkD7m7/nfESeJPkJmKJi4B4E+ldFQ0ltodD5CPcoKFYtRPiTvSU1tJT0+X1v4ofFVVz6+AqKkA6xOPlpfyLX8tk4+SsQFYaVeUD6HkOsOFL5UPslQH8TpnjU+77eg2ThMTD5ffLfSorFcPjGZac1ETl0+d2Ca7/o7ZD7n/dfx2ctsPuDBm5dmZHY++WaUW3H2gD44Sshc1EWIPlq3COMDgo8+ckasFDF3kT4cJhoLsrGGPp9WYnQiTHE+DtF6PzRbXT6OipRPJyVkPpS44M+OsmA+8W93MACFYD7axVWqnkJSPq1Zm1qJ7mI+ejBXyVxiYD4gsQ4wYxlbPlTiZbanvWM+3y9i7nOOWT6wUOBLF6VVPl8eWF7dj1Y+jxla3okKhz4yyjKiAtN4Pl2Kkhxm/Ik+p6/kLrCIZD5D67A58G9uPuv7v53KeGU+2rCYSayTaD6NvsamKd9wPn5idXzRzHI+KArkOs5zfD6sN74rQFiDPn2k7hlcnIo++R/DrKxbij6zKOyMM02LPqTa60zqh4Y++Y6BWOxFgT4O2kdy2PN2PszpIy8v9HM+iBaFUJ/OWz58eeNzpedgPhXYnTlriFY+oNRdOMaAST5q8T3gOyFSPjrQ2trqz1E+a5h6UYkBTj49xWMtmEFhPsQFvfgUeGE+c2yzNjpTYj7G32F7z/ZlPlAz2IG0IGo+voGCt6Jsij63xFyJUzyQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3075\"},\"selection_policy\":{\"id\":\"3076\"}},\"id\":\"2851\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3047\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"2846\"}},\"id\":\"2850\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3048\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2828\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2841\"}},\"id\":\"2845\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#482273\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2868\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#481E70\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2852\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#481A6C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2838\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472575\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2878\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"TOx5hke0Pz4e67PD1pM7PszsezJKc0A+balKbIrsRD77kkb9qAA4PjXKJxuLTUs+s4IiBK5MSj7UYgM6E9pNPhYgovtBb1A+qXGTtVSCUz71cWzA/+tbPthCv/KAeGE+jmWQoGETZj6uGC80QcpuPvLi3PyvN3M+JZqyDTEoeD4SAZJT6Rd8PhXOjQeyPIA+njkXLfVmgj4NET3IYhaBPuo/4d+OpnQ+KObSz3mDYj5NX6YlLRJRPuXI6OjawFM+7pmDqs7mUT5vwNVJehxBPnqJ9PzLykM+QKSfrEI6Sz6TyCohkGVaPg+LcqQ1NGg+YJvSAUwGdT5KvAdI2J+APicnmmFsw4Y+fjePJfbSjT7cXxK4NyCSPq12jqV6HZM+Qq+VIeYukD4AG9qPrOyIPg+gRYjeWIA+n/o64Ow+cz5WwdRGo5hRPkzSWba1Hik+vSEgIN8wTj5v9qK2fP9HPojcWplN3ks+CHf9L9LLQD5A40V9nL1GPntn9EV23D0+2FO2jzF8Rj5Q1uNWjLFWPojBVNxzu10+zQ2RN+/MZD66+vAv43RsPsGwJNJqxnY+nIf6FepBgT5MnF/tB7mIPsT9S0SxZY8+xn49hcPZkT7t7xvTl3SGPu88SLz7EXA+KIevWe9FWD6+bbLaAkhhPiVaCxzIV1w+qiVbWpGZWz6d53q/KSJRPuXbTDLEwmM+sKovN1U6YT6Hm9xb2YxXPnWhDICb+2E+rsPZFc/LWD6dTirXG6FWPkrH9/W2BGE+jNJQxI3wgT4M4ZKqsu94PmUrshk4zYI+1vH+u6avdT6JRKyistxyPlsl2c1e6k4+DPejmjYoaD475EIbZ7duPv+vmVnQwXM+LXl+DgFBfT7BmcruqveEPlK5+muIUYg+BWqoofjYjD7QfDXcpzuLPgr0u7ukhoY+qee1ZvlPgT4j3ol7Ki13PjiKzbr3EHU++QOq65tyWT5lCmOGqcBjPh4i67zukFI+iQno/KbnRD6LNgr3FG1ZPnnVlAd1imA+AAwaAlxMWD6Y1r6nCORWPtQ8quIcNFo+gm6UONfXaj5LlJFRQzNyPoPaUGkNwmI+sTu4wOPtiT5PJ5KiLMeLPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3069\"},\"selection_policy\":{\"id\":\"3070\"}},\"id\":\"2836\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"H94f82wBPT6CNPcWq807PrjYlEivRT4+xkcxNlP9RD6lPOBgIos/PtXdD7mrqUs+RE1dUjXVRj7qrfEdORJLPoDu3DPnLVA+LmslV5NvUz5OSJ+1PdBbPiTp0Cpj12A+c6y0bnJZZj7U9xIUiP5uPum0QDYGF3M+n3yZlbWSdz76fvR95VZ8PmzNyUatVoA+pUGEb7L6gT6bgbNxt0OBPt/NRdaJcHQ+NBPFFgT4YT789R7QuXhSPmjklvn4pFE+0c7b1pNDUD4oToP4ZEJCPtX5YSelr0M++NCA26fmSz7FciRRB/lYPrYu3BwXYmg+YjVEWyyPdD6xv+VuT4eAPj1a88RasoY+hXLr7fa4jT5WqnBVvYWSPkTATmMFoJM+8cCG9yYUkD54JggJeWWIPtJgYa4vLYE+9ryWGrlOdD64JtultyVOPunieJ5gQTg+NWpGzwxIUj6v6sdgx9tNPpkJwX09t1s+sU3tTWItVz4zUGq7G4tPPhf7byiQ6kE+uTpZ33Z0RD6QnDpH+LNZPnXCNNULeVk+VacymDiqYz61aNuCw1xwPpvS80eX93U+P4OuMQ7lgD5f2DIgVKyHPuGyDnZ5x44+xOiLk+VLkT7+9qvGgWCGPnjmk0pkkm8+k6PL9Hf+Vj4kRppk+I9jPgd9ykZtblk+sDqkqm6JWj5RQZq2i71TPqNMJPTsMWE+4mCGnDUtYD5FgtKgP5lVPlx7320Y32M+2yXORnUXYj43k+cpRahbPhpwAaAzHWI+anTP+5UMiD7e2OQb4eNpPpq0t5oZ93I+CeumhFRLdD518xCfdBdwPtL+1vNH+VA+ll5VuBBgYj4dSuD48ExwPmQw1kBeO3I+UZAH6qFaej4ulAdZ2q2DPuYYqmFiG4o+/IDQ80P9iz7bA+IvspWLPn8YI2WC7oY+fwrb3G6ggT4jH/Oh9L93Pi8sZhlZ0nQ+mr0YWP2wWz79lP7VmgNdPkZxEwSg/VM+FghHSwTGTD6g2DzJJUlaPmWzHSEwWVk++1y43/5KTz6TLUupefdUPmADCjY/qmA+7rXOSXttZD4WHpGvhtRrPkxVVgP5lGo+cTlaZhphhz705kCMIcmTPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3079\"},\"selection_policy\":{\"id\":\"3080\"}},\"id\":\"2861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"2836\"}},\"id\":\"2840\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2718\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"2781\"},\"glyph\":{\"id\":\"2782\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2783\"},\"view\":{\"id\":\"2785\"}},\"id\":\"2784\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3072\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3049\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3050\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2737\",\"type\":\"HelpTool\"},{\"attributes\":{\"source\":{\"id\":\"2776\"}},\"id\":\"2780\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2783\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2796\"}},\"id\":\"2800\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2752\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3061\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3062\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2781\"}},\"id\":\"2785\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2792\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"2738\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"source\":{\"id\":\"2751\"}},\"id\":\"2755\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3073\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"us1hi7PtOj6Fxk+rxF8+PoKZSc8QoEE+HoKOtBSbRj60Gy/urJw6PmnS6f2gb0k+jaNW0hK2TT4Nq88laV5KPiNAVJ7KAFA+U1Qt6/ghUz7P5NTzw8ZZPlJfMXrUvmE+YfdKwMm1Zj7sP/cFgwBvPtA2xNtG4HM+4FRWUOIheD47qa6Vq4Z8PpyNB7i3YYA+B55E4HPsgT7ZT3wgXESBPiUEyU1tKHQ+66LUO88dYj7kWcXIf5lTPm4MII0hW1Q+p0f7BOhGSD4xf0JX2ARHPuqHMZp4CUI+9ZZKZqJ5ST4O3+YPKm9aPl5awUVnZ2g+HK3LzIJRdT7o4Z3dxSyAPkcl1dRKX4Y+972AFPHMjT70xp82+5CSPsQGc+T3FZM+lcG3DfwLkD4V0e/FI8GIPtWIJ5pydIA+tIkBiJjNcz43aY6ATetQPpGc96f0dTE+Ss4cuqkHWD7CQYAFuAZaPky6b6EO5Ec+WB9yBm6vVT4gUP21asxPPueyubfNCT0+ghVdGf9hQz7bhPsKQ0xVPkEuVHvlsFY+oj20C809ZT5Pg47MwmtuPhhcsSN7SXY+48cLd/CKgT7rVZld/w6IPv96Ys3JuI8+Kh6ZFeCmkT6N4Ous/umFPkH8wE5xEnA+Oa7qzultWz4wxjQ3muViPjXTH0COpVw+jTO8okkZXD5xUc1xtC5QPsj02gwPb2A+70mRhhvFYT5y+/C+c+hYPkqTfC/ww2U+BSJgJUWPWj63qaFNEklTPkj7J+ChZ2Y+kxp+van4cj4EVhHBtyV5PujhAR+H74M+ykmuo1WfbT5xm2ul0M5xPr5E7QWwzV0+nRPTkSnPaD7jtUqLzEBvPsxWgfnXvHM+f31ILil/ez7ACmqhcD+DPgMzo0tEj4k+luwMtpjRiz7Zl3DFX8SKPpgFAVpd3IY+yL6Rl9ZkgT4KGyMKNGV4Prc2UeDTZHI+wBO2B/rsXD7AngHg1cJePjfTTPztH1U+8dWRniIGTD4GBJIBkEZXPpiF4P+8M1k+0DCXNv/ORT72Ob2/IZhTPnecwjMBzFU+QDG2/BTZZz602VYyvLplPn3yRUO9X2o+44yPMK2oiT4ZOHBMvnaUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3035\"},\"selection_policy\":{\"id\":\"3036\"}},\"id\":\"2751\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#470F62\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2798\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3074\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"H+BfQP08PT6thnSYhdE8PncPMb4s1UA+gcgppLnxRT6YoAtrWP5APjNrBEHjuUs+amHshioeTT6yq6L8ujBKPuRcn+W/alA+yOTiJ/fdUz4BEZXk/1haPoxOtg0jDGE+3JBmor9zZj4XGMRLGzlvPoKUAPKQt3M+TTVE+zLhdz6Pt6WMloZ8Ph71TbpLIoA+0mu/VPkZgj6LHyJIkheBPistfQVMeXQ+3DXgTQKJYj4f/FPc1vBTPhYB2f23glE+UjFjsWX+TD6RWEYdqY9FPnIqcr1RGkc+JgCWU+geTD5bYTZZxcVaPnf+dgM4o2c+5KyGygqQdD6FbEzkeF+APnW3BvGElYY+zcA/JT3ojT53AZFnG3qSPv7TZUQ3KZM+KGNsgfXBjz7lNcwolv+IPsXoQR4tUoA+N/Xmcoqycz6/hEnZorpQPp2cQzrrkTE+RN6U9hFCWj57LNW0sxVNPlO7EoM26VA+x4vBopEQWT5Yubuyqs9PPjurfIxFGjU+x+ZpTyONTD73PxvR9vJXPlS4PoD7cF0+ww7esRPfZD6K3gcQSmduPvQWmIC0TXY+YR4GuZtYgT5djPMlrWWIPkwUKCro2o8+jeINjrZKkT7bYmIDvROHPlOLQfmAaHA+oErjc8QnWD4kliVkxXBiPv2V5fBtYl4+6XXO98F4Wz5aPQvGH71RPqhyBjidomI+b+udHaXYYT6OpaIIUN9ePojjugg03WY+hUpXC5B6YD7OZ4bWTIBaPheFhBf73l4++XTnALOufj4Ko+eoLH5yPqhPOeAg3Wo+Wtux4p1LaT484L0LxJtyPo1/c2mZnl4+B0qZtqk+cD5DHVx/di9vPsMKkCP72XY+qOnwOwb0ej6Skern+bKDPjjro4rgB4o++xSqsZtAiz4Fqa7p/vOKPj9wWa2Ti4U+KLKDHHdJgj62DkE6n5Z3PhmYA6vEGXQ+tWr01WBmWz4bNbPp1DtgPvvuE9JEj1U+kpVgtKBiTT4Y1LNMv4pOPjT0lYr3elM+W6wxqSRnVD56hjS9gKNXPptStcHEVVo+4JKwI3pQZT4zc6zZ1FNwPlrBQ1VuC2o+QnJmWW2wij5js/6e6paQPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3039\"},\"selection_policy\":{\"id\":\"3040\"}},\"id\":\"2761\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"2738\"}},\"id\":\"2734\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"3051\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2791\"},\"glyph\":{\"id\":\"2792\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2793\"},\"view\":{\"id\":\"2795\"}},\"id\":\"2794\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3052\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2761\"}},\"id\":\"2765\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3028\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"2746\"},\"glyph\":{\"id\":\"2747\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2748\"},\"view\":{\"id\":\"2750\"}},\"id\":\"2749\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2777\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"2728\"},\"dimension\":1,\"ticker\":null},\"id\":\"2731\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3063\",\"type\":\"Selection\"},{\"attributes\":{\"ticker\":null},\"id\":\"3029\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3064\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2778\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2758\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"2801\"},\"glyph\":{\"id\":\"2802\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2803\"},\"view\":{\"id\":\"2805\"}},\"id\":\"2804\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3031\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"2732\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"3075\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"2724\"},\"ticker\":null},\"id\":\"2727\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2773\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3076\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2762\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2768\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2R0mo5R0QD6xhSKNnZE+PlTkNFflC0E+5Gfve60ARj4tJniLEx89PjoPY/VFrUk+Az2vQZblST7fjpzX5fRJPpAqek3b/U4+tPGZbc3jUz5UwkX9TtJbPotnJo18j2A+XZnR4hjAZj6z7LBPc4tvPqL3aJy5d3M+1coWPpFWeD5uKDg9PHR8PpDs3Vnia4A+IcA9nYs3gj5qo6E18dGAPnw3cOBto3M+fiImJbTeYT5bFIwymSlTPtxekzXrOlA+KunfrgL0RT6t/9pQhHBFPlBfrBBxlUo+VNVGWTxOSj5qy3znettZPiXjXvylW2g+kCRY10mEdT7uOHc3PDmAPsEjtfH0foY+zVgaBTYNjj7653XK7kqSPlOWy9EPk5M+ZmFLFPFBkD7NST+0ne+IPjypH9m2O4E+NhKYsq2Zcz53DHxcgvtQPs/l9taBqzI+3L3UQSTGUD6tZzrS73FJPohqg4eXB1M+Jf6fs4tsWD5wL/Y25SRLPiBSjepPNkQ+Ngv7umsLVj7sCyD0ID9dPm/HiG/0kls+DSH4a1F2Yz7vea3bWM1tPlP7/YRUgnY+5pa+uNnVgT7Hn+mTdj2IPlx2cONvDZA+C4oxknSWkT7MgX0I34SGPhb2G5+yPm4+Y1firfZ2Wj7rP2SAFt9kPpZI4k4iGl4+wE9sFj4GXj62bOCevL1QPqOifamEpmM+2w+UH1cbYD4Ltwr8j/ZYPgeybYHPHmM+6oeCO+uqXz7Y/U525fNXPjNxMaByh2I+idUILIbveT7EhplDSJhyPsJg/MxX3YI+Y3xybL0OdT40TdZcAnBwPiSJ9dUFd1w+okJwsHAsaT6HVod6AhNwPhJulW2p7HI+qI7fO4nWeT5KZcBD/iaDPuh2dSPF14g+vSLksua9iz7m//0KGbeLPjtFjnle64U+hPH5Kg/egT7tL+Zefs94Pj2TdfESC3E++iKwJF5XWD5yYcjnLrNZPrJmTcbWelg+HEPssvQwTz5yILkDpPtXPo2tufspiFM+XV9f6EteUj5661tQsU1bPuDFMORgrVw+9y2LTlozZj4mWS8tkpBpPp8SgFFhT2U+8BAiH08shj5lj0r9ed+MPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3045\"},\"selection_policy\":{\"id\":\"3046\"}},\"id\":\"2776\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3032\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"3053\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3054\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2736\",\"type\":\"ResetTool\"},{\"attributes\":{\"source\":{\"id\":\"2766\"}},\"id\":\"2770\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2746\"}},\"id\":\"2750\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"2735\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2757\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3065\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2776\"},\"glyph\":{\"id\":\"2777\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2778\"},\"view\":{\"id\":\"2780\"}},\"id\":\"2779\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3066\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2802\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"2733\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2767\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2fAItoCGQT7GEpAuHyM/PgH9cfoHgT4+5H/zFCw3Rj6yS+dsvnA/PlW4lJO7F0w+A1d7DIaTSj4aNH1KW+5IPlNnh5IUB1A+QnTefZ4IVD5c5m0TnpJaPneHeI3Id2E+tJ6Q1zAYZj774QBoabxuPqb8o2YWzHM+7aN0GWHBdz5tY6TZqlp8Pkizh2sTFIA+Z2iLq5XSgT53FsxeT0yBPg8uAQe+CHQ+OaBRDV6UYj5I++sQjvBSPm4TeCHVplI+vRu/h5o/UD5n3yn0JWRAPidIWapWQ0Y+tYhO3mYzTD4Vvvq4TxtaPkZcZ2d/gWg+Hxsw7ttpdT4UuQ98vSeAPtEjeGqXVoY+CY03p4/fjT7xT97DuZKSPvhZSXEmnJM+aJDXBTcykD543gUMsdGIPsXO8FK2w4A+vqmX1Xascz7JZfM5n9FPPrpulK8MDzY+COnJtQV5WD7H0Oe2V1dCPmJiCqYPckE+fFI8mbwDRj59mc1qsMZMPtQrhWqa8Uk+R0md7MrqUT6Qp4rW7k9YPhqc8QcDQ10+0iMgyu+dZD5uk84le8RtPkPkcagKFHU+fB1tF62ngT5UKJs04HSIPlCVMQyFrI8+8fzssKh/kT4D/1PAtMiGPpX+KzIrtHA+IRTq1A1TWz4xWjPJkxxjPo174IYB6l4+xOFJfDzPXT58YJhQom1UPjmIeuajPmA+WNFjwbDgYj5SLeUBaPVePp3DwvBb4GQ+SgdVhWrDXT6NF4BC3ORWPgc5gW/t0lE+Ekyw3XJ9fT7j1FpixyZ7PrQqPog51pc+JdzA+5KAbT46CVR4/mNwPqdni5v/Zlk+3OetNKILbz4Q80U/uXZvPqBWOAPYxnE+tQ3gPrwEfD5iyUKUmHqEPtU1gPdd54o+/N2OxTpRjD5neIdt7U6KPleqZP9XK4c+BdD8VQOggT4vVtb/2aF4PgWWhAyriXQ+zVYdo+Y/Wj7A8s3jWMRfPq5GvwtpL1c+a8OAJzU1Qj7ykhNG4GlUPj3gfaUZU1Y+AZl/RxoZUz5/l8x1ti1VPrBUmYPopFk+wMb9c9I3Xz4JhJSRzP1qPlIneuOI9XA+8tUxxvaThz7n0lVs5KqJPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3053\"},\"selection_policy\":{\"id\":\"3054\"}},\"id\":\"2796\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3077\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2796\"},\"glyph\":{\"id\":\"2797\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2798\"},\"view\":{\"id\":\"2800\"}},\"id\":\"2799\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2748\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3078\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2716\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"2732\"},{\"id\":\"2733\"},{\"id\":\"2734\"},{\"id\":\"2735\"},{\"id\":\"2736\"},{\"id\":\"2737\"}]},\"id\":\"2739\",\"type\":\"Toolbar\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2788\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2753\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3055\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2761\"},\"glyph\":{\"id\":\"2762\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2763\"},\"view\":{\"id\":\"2765\"}},\"id\":\"2764\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2747\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"snyfRzQ4QT4tQMr/GZs/Pi8RMFVbZj8+HXyOW1nnRD6YXN2K8TU7PkKkLfz8kkc+XV8LcSYHRj71s2Wv0GhKPjIUoFUCD00+XE9z2d77VD6sq2OuuypbPq9c9sR7CWE+a3rMt7PWZj7pcxt9jcRvPt2BFTvJq3M+xqqVqPdpeD6Akz1Xz5V8PiC2ce9aPoA+9sddg79agj5mBeJ44ryAPrWjmaV8jnQ+N9C2Jt72Yj4aq1QgOcZRPkCsAv+Yb1I+pCf3sve4TT6/DfSP3qlCPsYNZclbcUI+SkyxOd/1TT4MuFnKPftZPrEqEpntQWg+/K1SQ4uTdT6+IopyaxOAPrZ+PmuOoYY+zJsgQMJGjj4zSBDjnKiSPkdAFHyRspM+Zipk8+URkD7SOYwg9haJPi6ILPNvX4A+isz9YuOYcz64ObYQkQhRPtjozDLGhj4+mIRa5qsxVj5HwnkSgtVOPqByIGFg+lg+VX4k4vHETj6dYvO18llDPp59XIGhiUc+s/GI7Y6QVD447EITVE9bPm8vaF0RXFg+z5Ge4ZcaZj7Ex33TS7VvPo9cD19z+3Y+pxT29QoHgT6FveMletSIPgUyDVqJCo8+r906GnSVkT7ZUI4QM2KHPlOSjbevxW8+h6P8c885Wj5MzS9HsZNlPpxPd9MTwGA+hyc1tBlDXj4U+e3SBd9TPho8LxERtl8+XKN/2z2xYT42GMpjYp5ZPsZLsjgM7mQ+Xr+feJA8Wz5IFQrMP4ldPlZ9x0i56Vw+/fKNvblVcz4PyNjnn3p7Pu8GazXsu3g+V/SXbS7sdD4V2Bky7hFwPmusqlqb8Vo+OI4Ea+RMZT7iapLLkSRuPnGPxxmSGnQ+Fmtbm5s3fT5dUWCHILKDPjqWzksV7Yg+W408aJQwiz4Kpo191XGLPjjkc9CjxYU+uRQ34i0sgj7/5lTqowd4Pq5asKCizXM+4TlcMwPBVz5HqL+aAQldPlx84a0tUlI+4tOO/tviST52QzJIoFxZPq0e0Ug171g+ZxxTT6RwVT5RNqLZYnlkPvWqKyePlF4+5tycazEIYD7JcOuNrr9qPlz6HWNpVXA+5RQYpkBuhT75yVs2iNCUPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3089\"},\"selection_policy\":{\"id\":\"3090\"}},\"id\":\"2886\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"2766\"},\"glyph\":{\"id\":\"2767\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2768\"},\"view\":{\"id\":\"2770\"}},\"id\":\"2769\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3056\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2772\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3033\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3034\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2756\"},\"glyph\":{\"id\":\"2757\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2758\"},\"view\":{\"id\":\"2760\"}},\"id\":\"2759\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#482172\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2862\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"RR+zDMnCQj6wWytxwdI/PtOLoFtFxEI+KTIe4GqaQz5OTF7aIXxBPu5WAIxv0Ek+cFeAklnVST6XX5F1UPpIPg0qEkQ5wlA+mhhepGohVT4+4Taye4FcPo/7FQ2FmGE+qlWC9j8xZj79x9TXk8ZvPmlNVDJ1bnM+GPpqWcG2dz5Xg3QEomZ8Pp9mwSieV4A+HrcjsQ0Fgj5yCHo1IjCBPtkQgxZXK3Q+0VAPcc2QYj6q4ACg1a9SPsABwHff7FM+tKRPqQsLST4box1xiTVHPoQOENAjtkI+Iv7JYp//SD77ekOZCShbPvT4WZJFTWg+RMOiZYWqdD4y+GhqGBeAPhFTzQdW54Y+S+LvT7/FjT71B67eLKaSPmQVodcSG5M+kqrUwOsHkD6QOH1cMySJPtC8T24+E4E+GLg4Clx4cz6jGUo6mq9OPkwIJzL2kCo+tvl7QERPWD5pB8lSvDtIPnqgX1KNclM+U6YagYbiTD7jLwC10/tHPtys08DY5EA+LognT4ChVD6AME3lQStcPp4Vtnxn7Vg+0jLKjsqpYj5ufzXS4+9sPn3fLe8Qw3U+4npxvJoVgT7M/uDyfq2HPkhtUE2Rio8+yfI6U+uEkT6qVX/cI9WGPnR6OPoo2m4+JCsmpNIiWD61BaWRsl5jPlv5Mp4+ZmE+D735bDtGWj5ScsDnxM5RPtMJOqZx718+mx3msusnYD4bwgrAKK5YPkLot5lQUGM+hRdCsIXxXz4PfT0Y3NdZPjzqqjkCSGA+0aZDCv8BkD5G5qN/Z1eCPjtX4iKCH4M+uvToGqTHdD6ul4XC3VVxPmoofhTszlw+7jFu4v/uZT7UxbvGKhlsPiOt6JYGA3U+4xsrkWQrfD40duTDi22EPvrgxDGnyYg+DwsCQP4xjD7OijydD5WLPocukKOrOoY+33+EchN+gT4owB5W1zh3PriUWHg+z3M+3JKucBBUXD6+h8u8wzhePlSXp/RzBVU+9LeiWbq9TT4Z9dCdRU5TPt+y7slFlFU+pcE4AicHUz7buwWgQSZdPsy1bxz1mVc+PSJtrxVCcD4JI8EaeH1wPlnSY0tetWM+33QnNJHahD6/gzAJ9DqhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3041\"},\"selection_policy\":{\"id\":\"3042\"}},\"id\":\"2766\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3067\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3032\"},\"major_label_policy\":{\"id\":\"3031\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2725\"}},\"id\":\"2724\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3068\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2881\"}},\"id\":\"2885\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"2791\"}},\"id\":\"2795\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"s4pH2mTUPj5AblBRkhE5Piq2dCGGjUA+rF/E3n+rRD6JjrXmR5c5PkGJ48ArrUk+t2Az48rDST5U605ro2hMPkTJb7kdM00+AFwlPnc0Uz4ZS3ero6pZPgKYds+sNWE+I1Tf0TUCZj4gYGrDCP5uPoW5ic19InM+Y2p1TmDxdz6grhz8oUF8PjNFVtXEW4A+/3z66h3UgT5KcYFfQ/aAPn65xIVQLXQ+6DJ7f9w4Yj4o6Jnagv5SPnQwKA3hhVU+iigdg05BSj7HK63fZ4dDPk2UqFOGskc+2W9MhHP7TT7NrUHrwA1aPuhJVHqt7Wg+gfIb/Ru3dD5t+hANQtSAPv8rfazb4YY+0rRK3Vctjj4fuxF9iK+SPj3o/2ytk5M+P/PoLcp9jz4zyuKf/N6IPuilRyzio4A+E17ZEaYJdD4s3d4fVkhPPt/obiDljDg+gTFd9AfRSz4i3cFLyKtBPmME4Nt/vFs+h407O65FSD4F+gZzPVxGPnMLRL+r/0A+F/OPQBdWTD6F/YFjgutYPnAeu/FvLVw+HnReBLz2ZT6kgvMZnjVuPmGA3WAQW3Y+IUixCHPCgD4jpYLxOP6HPqdodG0ByI8+H8GPSvUrkT4NLvCVWs+GPpmTctnsUnA+frT17s8PWz4bpucD5HBiPvj2/9Qis18+tOZmARBBXD7Xp8p2BbFSPgqn4nC24mI+uFuaBdckXz4ZZ65OpXlYPg+W80MwcFo+BtvantA8Xj65zFATIpFXPoqSC0kTm1s+QBcX7sjjej6OtSK74YhuPrs0P6hbg4Y+Mi8Kehm4bj5kknZaIDxvPj50099JrV8+I1/sDxftZj4pmtc7C5twPoD+/QuJT3Q+LcA4qg8Bez4tOMXkMviEPgJxafLwc4o+oj47RvfWij7eN8Jaep6MPt3CNYw+G4c+y47DtkrkgT488UNbrMx2PnZ31u9TdHY+dKGOyk52YD6eQvbCXR9hPt2brbUgb1M+NjTQycECST6GDf8vP+tYPpbDv54EXVU+9iPTfFkbTz6pPIvsV3hUPnKGb9I6olo+K7XWm91Aaj6AZtUG4WpwPgK8PdbBCHY+qvWK1IksjT6nMzvZqnKVPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3033\"},\"selection_policy\":{\"id\":\"3034\"}},\"id\":\"2746\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2793\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3079\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2871\"},\"glyph\":{\"id\":\"2872\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2873\"},\"view\":{\"id\":\"2875\"}},\"id\":\"2874\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2756\"}},\"id\":\"2760\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3080\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"EzrIB289QD4VO4eQGpU/PtBVUpdiTz0+Tg0q7r9ZRD5uI+2gqTw5Pj+Sty+4RUY+0DWSnoCJRz57FG2Go6JIPu4FtN9CGVA+lQDZcsP4Uz7KYzR1NyRaPgqPDiZ0OWE+kD3b2cZiZz7DB/XlK9JvPhHzwxUqf3M+bfqZPWc9eD4udBzd2uh8PmVBsT/HU4A+vJVytwL4gT7XxVGfhAuBPj3Sj78B4nM+mj9hR6RfYj6R6YD4P7tTPtjaBGoN7FA+EWeArkfuSD4ceaxGF3xCPohZaPYCfUQ+PrwOjMfbRD4AtTRu3JNZPo6aLOj1UWg+x4m5gIu4dD63iIAkZoWAPnpWc5xGxoY+X4stoKXljT7HX8M1TIKSPuF2wn3Ap5M+fVjcukYBkD4fe48gxTWJPo6uq+g/1IA+PO8MZXTJcz5D7TQjoi1PPqrjDl7l4TQ+Ku4+D7oiZD7amTvhUflGPjIgMawXa1I+UUf9361KRz7xZaAOg2xMPjgtG+J6rEQ+RVfl95z9Tz5jRiuLLlJXPsidlAm4nVI+6KMFswF5Yz6aDdyxnQpsPkEK2O70xHU+g+8SwelWgT7GcYFgYHaIPh90aWp+IJA+tVUO8tlIkT4LGZX1i8SGPlMX0zOjwHA+pJTdWobDWD7Q1ed9vgZjPo1uePpBo10+y1Jb6w7TXT4qM3z8jRBWPobZnOphZGE+MgXR7zI2YT4EKnhR6x1ZPkLc5wjuQmI+xLQ08vURWz5jMmNG9vxdPpZSPisY/VM+T8t92GDXfj4rwKpiMmZ9PnoqSl5P/4k+2DMKl/KgbT6zQsMGq4JsPkGmRhTqsl4+Kgx5npGCZT7aEt7uPBdsPgYwSvBsS3M+7w7DcgPafD56uK5JLwaEPq0tShHhuYc++2PLpZMHiz698cjcPPWKPrN8Y09NZYY+pNVTO03LgT7WakE3TWh3Pn6NEKpkWHQ+PoXRiwojXD4YnNtvKw1cPkLPUXsGelI+meRlQe9BTz5Um0emnYJUPjnt6EeO0Fg+Z9VpLg4+UT60jTEmo91XPr5Xxn9ZvWE+kLny0ODSYz4/KE+qP31rPqt3HwQi7m8+IVs45yYrhT6Dabfl6m6OPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3049\"},\"selection_policy\":{\"id\":\"3050\"}},\"id\":\"2786\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3057\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3058\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"2720\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"IVliVSiZQD49CHfA86Y8Pt7nthc3QT4+qx1FgsvzRT72Pwl1wOc6PoB/17JGz0s+/gfmVWDQSD5RvbMm52FJPmxjkG7fR1A+cyMYOTPlUz4BYX/Pv8tbPhqdpEQnm2E+3JN1V6eHZT5T4yIIzzZvPqrgdLFCtHM+3dvyfaPXdz4xuFDPkRd8PhZKFVlGSIA+Olme5pwhgj7bio7dZUOBPmgHuu7mdXQ+3KukWjjoYT5GhF1wKi1UPr0A5StDs1M+qTvTteajST57xscESpFEPsWSX606ZkM+eY9/qpx8Sj513bW2by9aPp0cmMf0qGg+yyODPYGtdD5Q1m6DdoiAPpF+xKkbT4Y+Tqn9gJcSjj7j1WRsK3+SPh5ha+ugS5M+o88wV0MgkD6ndRIYMp2IPizOHhm844A+qmhv+Iebcz4LzmrhZLdQPqszIi+MbEE+JJtHfvZ9VT5xEVImqmBGPl3FaAVVs1c+jrNIkKnqWz799K5hLtxDPst3VHn4Wy4+arwk6TMtTz43ENOglENZPqwKqN7jd18+wvLeO3g2Yz4iBOrEJeJqPtvFv/Yp53U+YnCKXY0PgT7PDgkRN+yHPrk+VFSKfI8+8n4+z2g+kT64n5lJ/WWGPoq5NJodtnE+VUct9xu0VT6OyJxXy4tiPjsqLXkVAF0+mztwP5BvXD6cPRUR+E9UPpoaQYkohF4+bCNuR1AhYD5HtRu8N/taPlWOJCZfUWE+fH3Bf3xPWT6brJFes+VVPvu53EQV6ls+LiPhWe8Phz4pTPGxW3xyPsFTRcGRkYc+CmiPbNlfcT7WNzN1LWtmPlikJJYAiV0+RDv7KIUKZj7ys7QfakVwPq+SW4oH2HI+ygrUZQKJej6Ba333QU2DPpKlj7k0kos+ASHA0N4mjT5E+jShJLGLPssKnPfZ6oU+SpxSUl6JgT6IARXZLmN2PvO4yY5bZHU+RS4AwPK8Wz5gEMheEfNfPn1Ci8BpQVE+LPJ4EIa0TT7ZxlJQVqVRPrVypTdFO1M+LaZ0F73WUz5b12flJ95ZPiBeQzhMaWA+ZXb1qUzbaT5MJVCdScFwPmjblzQxeXA+OBGnq3JNhz6N6GHbsfePPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3051\"},\"selection_policy\":{\"id\":\"3052\"}},\"id\":\"2791\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2722\",\"type\":\"LogScale\"},{\"attributes\":{},\"id\":\"3035\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"2771\"},\"glyph\":{\"id\":\"2772\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2773\"},\"view\":{\"id\":\"2775\"}},\"id\":\"2774\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#47186A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2827\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3036\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"2786\"},\"glyph\":{\"id\":\"2787\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2788\"},\"view\":{\"id\":\"2790\"}},\"id\":\"2789\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"2886\"},\"glyph\":{\"id\":\"2887\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2888\"},\"view\":{\"id\":\"2890\"}},\"id\":\"2889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3069\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3070\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2763\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"2786\"}},\"id\":\"2790\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"2751\"},\"glyph\":{\"id\":\"2752\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"2753\"},\"view\":{\"id\":\"2755\"}},\"id\":\"2754\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"2801\"}},\"id\":\"2805\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#472777\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2888\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"SBVvIv/IQT59DTzbXBs8PgdOcuQMMD8+h+Wt++A+RT4BuayLC11APpA0IESa00g+8H+/GsNdST6OaFZ4zzFMPowTV5ez904+ErgFeQs1Uz6XcI+li35aPi91OsJT22A+dEiufJVPZj4EeIXlsRJwPusJvAK/gHM+Y1chmIfkdz4m7ljTU3J8PghIcsUPL4A+dhEhAhoMgj6Tp+3EJCmBPq+/i8OYPHQ+00P4CUbJYj7HfRx2fdJRPmGTZ/FaXlI+ZXSGTEiyUD4m+ZVCgjU+PpR+9ZGI1EM+iayq0YS/Tz5ofUpZyw1bPhCHBbeXnGg+zhZ+LQOmdD6FkThPD7CAPuCZc4MOgYY+/V5d4O0Ajj42Qh30hbSSPrTatYM/epM+OI3qUJnRjz56ersCsuyIPkIQbSpJo4A+Tnnnx7vAcz4XAFICN0tMPtqKIkK8EjE+oUKjONf0VT4EdH9yZx1PPv3mJh99hUY+Vss4tGDgQD5NJLz9BIdHPjYUzFfDKD4+aWOXpLuOTz4moIDmUg9VPmbTrIHBgFs+CkH2UdzWYj7hYv/F+wpuPgk5m7yqN3Y+aIdknTQ8gT6YhSXiFuqHPn7IE8A0To8+jUHv/BlmkT4EVfRO6eyGPlR6qN58dG0+IA1Xhcv1Vz5Ib9YdAclkPjV5vS6tNF0+qlILYFd4XD6a20jVNWxRPuNVxEaHI2A+VtuOMft+Yj518dvjdlJZPu4ZHeEe7GU+9sYerqQDYT5v5a2Lt9NcPiNDFdf0L2U+xcck5Yvqgz5HtBWO+417PoLuE2uWhIM+cAtPV61taz6wyrIv4HN0PjVo0Gl6wFY+TQJO5E6wZT7UC3lA55NxPg80DIVVNXI+m5N3wd7Bez6ty9gNnlGEPtHUh86i/Ig+TDZxAtc1ij60C6vrg4GKPkZTT5ZtSYY+Qt21/X1Fgj7LWyzL4Qx4Pm/8sG0M0XQ+vbKYCuu6Wz7K0ZlfXRVhPmTX7GsRA0s+zpqnNpAyOz5s5fGREjVZPrVvEoAbOFQ+RdglMTPIUj59V5AmpzBYPqBtazO8NF0+K6C2CkNqaD6kQ+pANDhxPp1tJGtpaGk+yVY/S9qPiD4Y4Qz5ObSGPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3047\"},\"selection_policy\":{\"id\":\"3048\"}},\"id\":\"2781\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"2725\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3081\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ProbOfItPD5T9hRdfJlAPgowrA0R+D4+YtY58MK3RD7haTx4sh9EPmoTetk/Y0k+RiO5AwzaRT6hBIcuHGlKPmUJ2LDw71A+Cl2Bnd7GUz6Sen5KrT5aPnRQpXRAu2I+Br3S8pnyZj7hrypKbghvPrOQNkgswnM+fu42dshBeD4RFvU27K18PuJekRrHW4A+yRCQ5GzkgT5E2bo3sSmBPlkYkeINQHQ+5Ze0uZnQYj4jS2WDchhTPvKMaDq6B1E+v3noZXFuUD4Pj6NS7zhHPkGVVg4otEM+s8YOz2AWSz5l3/YuvL1YPubO+sCjbWc+LKbz00fLdD5blnB5emOAPnfZ77AEJYc+Asg+RFYHjj7CDdfuv16SPqGw7bClrJM+O9vhiPdHkD4zAjSI1t6IPnd39PRub4A+u4JQ66FPcz4+mKK3xgpQPnflK/XkQDg+vpqpm1DxVz6CZa9a8FxGPmyZQSIO2FU+J0jgygERUz4YsAyRg6tHPjLzAG0D5Tg+C6yWxEagTT5r3N2oH9BbPiJXqA3JjFM+H1SKz7EhYz5CcKVyvW1uPn7fIfy2u3Y+GboY57s+gT5/Cf6D+V+HPjUQ302u4I8+YG5Ts2HTkT5Xt9QYiraHPut94CGxhW0+xBa1k2EtWD7VnTLP6odlPkPU1GK4IVs+9U3RtQXBYD6Eb4UlBA5aPhr+IZBUvmI+iUjV3q2lYT4+9KEgJY5dPnXcpFf4T2M+7tFjxVHLYD7V9MKlCndcPp+D9W0A5lg+XFucQvtrdT76eD4BJqeEPkkMFanr6nU+Ayo2EYSwgD4Zacba/gp3PjSAC2PPI2E+hYCzR/UkbD5nf8eU6V1xPiZhXMrTZ3Y+eOxpeUCofD7ETWJORW+EPpa5uMPaHIo+uGzx1/sNij6remaZ0jaMPgdQyprF5YU+I6Nq8CfhgT5yrNCHiAV4PsUvuFwEVXM+Z4+umdyIUj7hJSsteXRePkXV9d9vslY+l0AEQ2WUTz4agPv0W8xTPuDIHoUsCFo+4ZUzOyMaSD5YeGw+Y4BcPglgrL9mJGE+K+OjX/pJaT7vxOjk1d1sPtM3q61WcXM+faG81xRaij5/Axjh/GaCPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3037\"},\"selection_policy\":{\"id\":\"3038\"}},\"id\":\"2756\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"2729\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3082\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3029\"},\"major_label_policy\":{\"id\":\"3028\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"2729\"}},\"id\":\"2728\",\"type\":\"LogAxis\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#471163\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2803\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3059\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3060\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"1l240hMFQj4L058iJoM7PjHzXoa/Zz8+XAJ1MAdaRD5Ku2qbfl08Pj6FO6CPdEk+kc6QGu5kST5DQqFxlU5KPn9xvCxdZlA+xgUB8HdQVD678Tni2zNbPs+9+6Qvl2A+KKuFEP1nZj46iAnSMPtuPn7pjx3xcnM+q0WTQ/Q9eD5Q2psuD2h8PsqyDAPhaoA+mS3ipq40gj5AP7CaJEqBPpcLXq9TI3Q+3ggKdV31YT44N2klBqxSPhDX039ZzlE+LC/010EFTD6HwXBeAzJIPpxEZPlr0kI+mQAfbWpISD6fyv9flopZPvk6Ac8eimg+iK+CNP+9dD6PspkqAlqAPhzR0k6lyoY+/8FIcnAWjj45cl7E/neSPmTPtOwPUZM+ZcxmBtdBkD4ybGx16uyIPrvmguCg2YA+LYS0/Xbdcz6RF0CKk2VQPnZgUNDcNTo+97ZJD/eEUT4D18DL5F1CPhcYqMMhjVE+itJPLXojSD4wJmbvVERRPrMkDGR0jEM+aSfV3a7qUD59ZaJUJh1aPkLHPyhGy10+RMtMKd0xZT6sltj2JHNvPop/PWRwu3Y+UQVSslOOgT6CedOVQc2HPkzjXkvV2I8+XDi0CLlGkT6aZ2W/EtWGPik57syqKnA+YevH88iOVz50qX7xSEZjPiNL8VOV1l8+n7eqSPkSWz5zvjbb+bNQPm8fVXhuQmA+KzimdcP1YD6J9qCu9NJXPv6ApWMS22I+6BlIz6i7Wj6SUeLANy5jPnmCE+WZkV8+MsNDuhuefj5f2KabtJx6Pi9VXUGULZk+JNud5gAudD5AQ9UpFv5wPn1BAi15MGE+p5Q4n24wZz7lr1ijG1RuPqrDUrz8QXY+YFKH/KE1ez4YvqiWZKeDPmSdFJkxuIk+csXdFDBGjD7avcNyuYGLPi758meu8YY+90CJ7jrXgT6VGeG9y2J3PkR5wOgInXQ+Vs4Fr4BWXT6TnL1ay25gPmlg9PjXB1U++qpDFRicTT4g3GygDRxTPtDpe3DO1lI+VMZbg+lcUz7lPLF77IBcPqOYuepLFFw+2s7NEPcrZj6ZYLJ9SdJnPtDJDMmhMHM+avdieBbAij7TegLUno2VPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3043\"},\"selection_policy\":{\"id\":\"3044\"}},\"id\":\"2771\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2782\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3037\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3038\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"2771\"}},\"id\":\"2775\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3071\",\"type\":\"Selection\"}],\"root_ids\":[\"2713\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"19a89d1a-1084-4ab7-b6eb-9a3cff20a439\",\"root_ids\":[\"2713\"],\"roots\":{\"2713\":\"3b6d26f2-34e0-4579-9990-41db4d4582ff\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "2713"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"748edbb3-36b7-44a6-82c5-8fbaa149df8e\" data-root-id=\"3435\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"3c3e1264-4527-4f36-9380-060b9d80fc63\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3446\"}],\"center\":[{\"id\":\"3449\"},{\"id\":\"3453\"},{\"id\":\"3479\"}],\"height\":300,\"left\":[{\"id\":\"3450\"}],\"renderers\":[{\"id\":\"3467\"},{\"id\":\"3484\"},{\"id\":\"3489\"}],\"title\":{\"id\":\"3436\"},\"toolbar\":{\"id\":\"3459\"},\"width\":800,\"x_range\":{\"id\":\"3438\"},\"x_scale\":{\"id\":\"3442\"},\"y_range\":{\"id\":\"3440\"},\"y_scale\":{\"id\":\"3444\"}},\"id\":\"3435\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"overlay\":{\"id\":\"3458\"}},\"id\":\"3456\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"3450\"},\"dimension\":1,\"ticker\":null},\"id\":\"3453\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"3442\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3475\"},\"major_label_policy\":{\"id\":\"3474\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3447\"}},\"id\":\"3446\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"3454\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"3501\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3440\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"3500\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3476\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3482\",\"type\":\"Segment\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3465\",\"type\":\"Scatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3451\",\"type\":\"LogTicker\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3485\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"3446\"},\"ticker\":null},\"id\":\"3449\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3458\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3482\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3483\"},\"view\":{\"id\":\"3485\"}},\"id\":\"3484\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3487\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3472\"},\"major_label_policy\":{\"id\":\"3471\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3451\"}},\"id\":\"3450\",\"type\":\"LogAxis\"},{\"attributes\":{\"text\":\"Ross458C: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"3436\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"3474\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"3472\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3444\",\"type\":\"LogScale\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"3480\"},{\"id\":\"3503\"}],\"location\":\"bottom_left\"},\"id\":\"3479\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3483\",\"type\":\"Segment\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3488\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"3486\"},\"glyph\":{\"id\":\"3487\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3488\"},\"view\":{\"id\":\"3490\"}},\"id\":\"3489\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"3434\"}},\"id\":\"3468\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3454\"},{\"id\":\"3455\"},{\"id\":\"3456\"},{\"id\":\"3457\"}]},\"id\":\"3459\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3466\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"3477\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"3486\"}},\"id\":\"3490\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3455\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"3434\"},\"glyph\":{\"id\":\"3465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3466\"},\"view\":{\"id\":\"3468\"}},\"id\":\"3467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3438\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"NUhOZmsESj66bTg0OwpMPjO3e+B6jEY+w/sPw1FsPz4HV4LJ5985PiEG+FHRFi8+oKRZAENrKD7E0bLZo3QdPioAdoCh3yo+WkT8d89DHz7c/wTJ3owiPl7/JsUD+iY+NL2L5jHAMz5IbO5DQ44xPohp/FyYwVQ+feJ5mbzrXj75GHmajTNuPoozhvLpMnY+U9ZbCBeKfz6EHlxrfvl/PnkxCIpu43o+ZEjX0M6WcT7mGFea8OJqPj8b2V6LO2E+4zDxF3JBVj6iyIoDX3xMPijm+9Vk7kI+g6vVoCjPTT4GpdKlxy5SPpX9D9HI9kY+ATWGt686OT70IUmDfHU7PkD/GKdmGj4+yDv8e1pFPj7/Tg5kDJ08PlgrJR/3Vj8+hTyCL6R0RT7hsbMNzHI9PoA4iNK6XkM+OprYE+qGNj5o3HcLZ1dBPqHQFvrSST8+HoHGB1ATSz4+NKjkxadEPmkKou8RM1M+1upZMQvncz7WnmdsKFCCPo5lyCivs4E+FnZqzTPIeT7bklWHEd1yPmIQgzstbGU+zPdRdBfxWz4txHrpQstRPthIFrOvMUc+Mda/fqFNQT7VYyGHwMczPsNXmeH/jSU+mnx1F9m8ED6OTLhblZkQPpUjHSoHIQo+co4TCHb8Cz6SuoXfCqAHPvC7Irr0QQ8+hvXrJ42/MT5c547Bqb9nPmUslKlEXHg+iy98wghIgz623OhlQpCMPgwhzG07j5M++VCyN/ZXlD5gCmXHTyOMPvzTP8Uq0Yg+rOsGTRY1gT7mFij6KpBzPlSJWyZEn2E+CXBVDvKqTD7MV3SGV5MzPl/KUoDhzDM+/V0LfMrWOD54xrJqeVVBPucj/Ujry0U+wN1V8c9KQz55Zl2RzCRXPl/3ybTBg2g+1BMEuLQfej78bdFb+oF7Pl5mMQkHhXk+CVxBbBSedj5P2IJ9sNVyPqWKpEY0wGw+brbZYDK7ZT4KT5MjNDZgPq6AjQQjClk+AI4BVJ20Uj4aNXIqPnxNPkpsEKQ6+kU+5cfc55D4PT7staxx0uE8PvPvd2y7ojo+2JgJExVlLj7DxZIhQwU7PhK1X7nvujg+EqJAOEzEMj5ExOK/u6EkPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3500\"},\"selection_policy\":{\"id\":\"3501\"}},\"id\":\"3486\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3467\"}]},\"id\":\"3480\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.68, C/O= 1.15, [M/H]= 0.83, T= 957.46\"},\"renderers\":[{\"id\":\"3489\"}]},\"id\":\"3503\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3476\"},\"selection_policy\":{\"id\":\"3477\"}},\"id\":\"3434\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3447\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3457\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"3471\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"3475\",\"type\":\"BasicTickFormatter\"}],\"root_ids\":[\"3435\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"3c3e1264-4527-4f36-9380-060b9d80fc63\",\"root_ids\":[\"3435\"],\"roots\":{\"3435\":\"748edbb3-36b7-44a6-82c5-8fbaa149df8e\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3435"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 111.46, p-value = 2.68e-01\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"040c820e-e632-4f7b-bb5c-4f8579ee5a24\" data-root-id=\"3774\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"950d2056-fafa-4e49-9862-243970cabcda\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"3785\"}],\"center\":[{\"id\":\"3788\"},{\"id\":\"3792\"},{\"id\":\"3823\"}],\"height\":400,\"left\":[{\"id\":\"3789\"}],\"renderers\":[{\"id\":\"3811\"},{\"id\":\"3828\"},{\"id\":\"3833\"},{\"id\":\"3851\"},{\"id\":\"3871\"}],\"title\":{\"id\":\"3775\"},\"toolbar\":{\"id\":\"3800\"},\"width\":1000,\"x_range\":{\"id\":\"3777\"},\"x_scale\":{\"id\":\"3781\"},\"y_range\":{\"id\":\"3779\"},\"y_scale\":{\"id\":\"3783\"}},\"id\":\"3774\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"3844\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3826\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3826\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3827\"},\"view\":{\"id\":\"3829\"}},\"id\":\"3828\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3796\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"3865\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"3793\"},{\"id\":\"3794\"},{\"id\":\"3795\"},{\"id\":\"3796\"},{\"id\":\"3797\"},{\"id\":\"3798\"}]},\"id\":\"3800\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"3886\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"3868\"},\"glyph\":{\"id\":\"3869\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3870\"},\"view\":{\"id\":\"3872\"}},\"id\":\"3871\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3820\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"3848\"}},\"id\":\"3852\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"3848\"},\"glyph\":{\"id\":\"3849\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3850\"},\"view\":{\"id\":\"3852\"}},\"id\":\"3851\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"3819\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3831\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"upper\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"x\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]},\"y\":{\"__ndarray__\":\"\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[809]}},\"selected\":{\"id\":\"3820\"},\"selection_policy\":{\"id\":\"3821\"}},\"id\":\"3807\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3815\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"3827\",\"type\":\"Segment\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3819\"},\"major_label_policy\":{\"id\":\"3818\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3786\"}},\"id\":\"3785\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"sge2HwqYWz5CVjMGjK1dPpI/9hPIy1c+TGKr3feOUD4pEVSEtU5LPvRdNLlwckA+Gt9TCf/nOT6XXb2IRWcvPsQADZRMUDw+beZmzeibMD5OW1a9V6kzPlRcpf/STTg+cmQFtTnJRD7E6+zGinpCPn+kLy1C1mU+yZOw1kJHcD4EEywMiQiAPm/M2nMPs4c+qPJsdw3xkD5DhK2GmzuRPuY8Zbe2BY0+yfkLgeUCgz5whzp4/Rt9PnzLB0RRl3I+J+c79WcwaD5bu5uuxBhfPuaPclvwmVQ+E7CSBXEoYD48r9U0k4FjPsCwPB8/ilg+P9nLeh3kSj7iS3x27yhNPkJ6BgNx+U8+ZTQ3bh7iTz5ncsqHmvBNPgX8fFXoWlA+T+743h1gVj5c0O2lOoZOPj93z3vbJlQ+ZDfDhtRbRz6xyqL+aQRSPuF8GfRiTFA+SbsIzb9dXD599MKTpJtVPklGT/n1PmQ+5+yIBGhPhT65pSwFLZ6TPhPXryI2AZM+WQ0J+Giziz6fQI8IolSEPqXMDFZULnc+zZpawfBJbj7CkzZ3Hk5jPqYxkH6BDFk+ll6G4AeIUj7KMBA4ZBFFPuYVTRCX2zY+6tJ+THSoIT5TNbUQrYwhPud8LCbCjRs+ClOPiON2HT6vApEOKSIZPolhWkIx+iA+jZGCKXQSQz77EBEyqqN5PuAkyl/SVoo+Wsbfwi3glD5TRlmdkt6ePgzfPC3VE6U+C0u/sOPipT4BoDbgsxiePsPv/6agrZo+kEU1ZTeHkj436PwTmwiFPvpijOT+33I+biRK162UXj4SGNkCKMVEPk6wu9VaVEU+MH5LHGS9Sj6vee3NkZhSPqK+ySDxj1c+EHlr4tD1VD6rmH222xxpPmAnRf8WTXo+hNvK/igCjD7iCmyTG3ONPgoRqVv0RYs+o1CxM28tiD61mEkpTi+EPtkOIUifzn4+LaCeeuFNdz78skMKo19xPvUg6GAq3Wo+EbKAzJERZD6pxfQQ+7lfPoCe12luslc+e6eI6g0uUD78oQAAizpPPovGLulFvkw+EuDDQfd2QD471YomxilNPjddHuytrEo+fLT7zUI3RD68cXfByjQ2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3844\"},\"selection_policy\":{\"id\":\"3845\"}},\"id\":\"3830\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"4lwyI7SLWD6ACf/XKVlaPnvPu/B0CVU++5mmpPb1TD6redY7aMhHPlor5BcKbTw+sf5Y8VUpNj6RE6kmrswqPtNzRQnBRjg+AejTvf48LD5JbAuLK6gwPp/1DiIDpDQ+XF/aA2HDQT4yGqa7c4k/PhI8QGUx9WI+nikqrK4KbD4mDaNKjxJ8PuvsYNrXEoU+wNUuiOSgjj5wPMqlqzuPPtssC0PVNIo+NdfFvh7lgD4+U3QijX95Pua1e9wWQnA+IwusckiwZD7cV3LgbhVaPoo93nb+HVE+BlMUm43VWj6tMrrY24VgPjoLhN3px1Q+61wWKoesRj6IFwGYrW1IPoTWBcsUrko+jMVKRNqnSj4k7zazVOlIPuespS6Z50o+l8r0JyttUj6MCFot5qBIPmgNNn1cLlA+HF9K5QCDQj7QSdm0/hdNPg5UBK6wM0o+EvFa2guvVj7+dsL8dW5RPhIGUWbrsWA+E7fklkSPgj74Li1Sl6KRPqW/5bO3GpE+muoSTTyYiD4RMdGvp9yBPgcQDQYC43M+IkW8H4OVaT4UBU4EtBpgPjiLjgowtlQ+kLYsVHvOTj4sdsP0L1pBPuIfnrITdTI+f6Ye7PQUHD7/C+Nx/ncbPsgY5D2eXhU+SX9bFK+yFj7CrwpGc5ATPmhRYkBfYRo+ngnPLC6kPj6J6b3Ap3Z1Pla8TprAc4Y+iCDlwyEZkj5jH+cDQ0mbPjlKCnLl96I+8PsK2Lj8oz5IozXOY8SbPn6Eu5Qr05c+5uCHr3JAkD5Ge3BJQQiCPiWtCFalIm8+Y7CJ2uRyWD5/rGudCypAPgH5EKkzakA+TtrJfeHcRD4grAJ+gPhNPgn7xlJ2yVI+j/CGdx24UD6aZ6uAFARlPgr65ws6wHY+++lbwfzQiD4hrWgWsEeKPhAmDJGka4g+qdoYnO+ahT41ycMgKOSBPjNVEh1bB3s+7PapY+hXdD63QTSyGSJuPn5/PlbZJGc+oTKxKsY3YT7Yt9g/mBhbPk2vYQ6HKVQ+yEwhOtITSz7MvXmZbSxKPpwNvs78MEg+iZkyJDYbOz52BXO21jFJPuSDlwkR7kY+MM/TvIM6QT6Q0MD0jZkyPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"grI5HGCkXj6C0TMa94BgPqmvMDcbjlo+m3cDafSiUj6nqNHMAtVOPjumdmZcrkI+g79OIaimPT7O02h17gAyPttGag/sLEA+2djjO1IZMz5TSqHvg6o2PgnDO92i9zs+iGkwZhLPRz5vygawWzBFPuwMH/VSt2g+wxJMVy6Jcj51nwZzygeCPvOrVA1HU4o+cHrCqqiRkj5O6nU6YdmSPvFMvyuY1o8+XRxSQ6wghT7RXQDnNlyAPhLhk6uL7HQ+K8PLd4ewaz5tj2I+DQ5iPkLiBkDiFVg+ozabPRvmYj7LK/GQSn1mPkZW9WCUTFw+k1WBy7MbTz4ewHuqGPJQPgCPg51molI+n9ERTDGOUj7V+i4u8HtRPpchpxMEQlM+BxL9lRBTWj4WzECPxzVSPhbhaHpaH1g+rA88KKg0TD568Nii1HxVPrvPMJHtflM+wELb3zkGYT78ccMq08hZPoCGTYwAzGc+uyItcosPiD56HCy4wpmVPoHueZG055Q+GDD/opXOjj4tUE1hnMyGPkOJDKameXo+PHh8MS9/cT5wIh/qiIFmPhTYkfLSYl0+5GH2FtKoVT5o61x7mMhIPuoL/G0aQjs+lFLuIm5GJT6m5HjoWl0lPoNwOgdz3iA+ZZNh/osdIj6cVRfX3rMePl6ag+SywyQ+S56dPNHSRj5tOGSjrNB9PmqNRSXkOY4+LGzawTmnlz6htmUb8TmhPt9zb+jEL6c+JppziQ7Jpz5dzhv5gTagPghbRLkViJ0+OqriGvzNlD4oVYne9AiIPmJvFB6rLnY+PEwFajtbYj6lg0ZoRGBJPptnZgKCPko+CZFmXfNOUD5Ondlc4zRWPjuCzO5rVlw+kQFQTYQzWT68yU/sojVtPrZUovLz2X0+Dc05PFUzjz5StDeIQ0+QPgT8RSZEII4+ncZJy+6/ij41aM8xdHqGPkDkl7nxSoE+bkmTkdpDej4cRW07Oa5zPmzCkWt7lW4+gTFQbl3rZj69aQjxri1iPrONTcVVO1s+kqgAuDLSUj4Ww0MzVCRSPr2/z4HHpVA+YHNucVNgQz6AUlHL2pBQPoo2pc5Ka04+yJkj3wE0Rz7oEi6OB9A5Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3864\"},\"selection_policy\":{\"id\":\"3865\"}},\"id\":\"3848\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3829\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"3871\"}]},\"id\":\"3889\",\"type\":\"LegendItem\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"3799\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"axis\":{\"id\":\"3785\"},\"ticker\":null},\"id\":\"3788\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"3830\"},\"glyph\":{\"id\":\"3831\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3832\"},\"view\":{\"id\":\"3834\"}},\"id\":\"3833\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"3799\"}},\"id\":\"3795\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"text\":\"Ross458C: Observational vs. ML Predicted Spectra [\\ud835\\uded82=111.46, p-value=2.68e-01]\",\"text_font_size\":\"12pt\"},\"id\":\"3775\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3849\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3794\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"3789\"},\"dimension\":1,\"ticker\":null},\"id\":\"3792\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3869\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"3807\"}},\"id\":\"3812\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3887\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"3807\"},\"glyph\":{\"id\":\"3809\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"3810\"},\"view\":{\"id\":\"3812\"}},\"id\":\"3811\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"foip/EJuUz4Av6dt0sJUPkZnsog1aFA+9hHjfZD8RT5YFQPbTN5BPle/iRqe7TQ+f2hP+k/BLz4x7a0v8hIjPhSMgSBqgDE+91XBOsfhIz5orjHP6zonPgvr7p6i/Cw+BQc7MqdhOT4cGsPo73A2Pp+vT664QFw+4xMXTSB3ZD5sxrtuvF51PsSBo2XUqoA+lmiinLgqiT6dYyySAs+JPmJDmOkoe4U+KzKCPPyvej4WriAqTHBzPsqQRXzSr2g+rzzKuRahXT50EiD+7qtRPo7ysH+IikY+PAl5WLKiUT6YsGVWnAhXPs8SDIsk8kw+DHSt8NoxPz7E5133IH1APrGTJ1i4y0E+QFW3DS3iQT6PsuRMOXlAPoD55VCnKUE+zQ1c8X6ZRz5G2RSjVng9PuwewAJDCUM+jHzoq6vBND6OWGCtYXJBPopCWEMr8T4+CZBwbPdLSj6ce4BPpNhEPhdj58sBeVU+VNE8zmDjez4P42mErZ2MPjBq/r+21Is+Kh25xuRhgz7WPr96VHB7PrPu8eu+t2w+FSYaIGywYT7yt7rFXXdVPtrmIc4J3ko+QSzCvPNORD4NM3Q6Cjw2Plj46AZ3JSY+uKKkspTiDz7OWvZkU1QNPkg7udIP/AU+8t5Z8+qvBj5oB5XHE3AEPlpmnQE6Vws+p7+BEhsNMj4logEBnOlsPgNIuC/0238+lLmAq+vfij7nQJkK+EWVPheUtXO2254+W3wux+jMoD48NURpv9uXPsrAQ0xtCZM+/w3aYhHdiD5W7gFw2f15Pr1R/PggCWQ+0mtnR29RTD4ffjTl4N4wPgHXdhTrVTA+FWqPMXoANj4dBo/XZdpBPjikeokpjEU+J2Vu6II0Qz6AdVOEW0hcPjWpiBocy3A+WH7pLLt1gz6YmHvbFfaEPpAKTdckooM+uZGMefFJgT5C2Zj/yBV8PijX0ko8sHQ+jtBJy/u/bj6qUAqKCGRmPsZmR5/Q5mA+3rYabEjeWD76LOdtdVNTPrBDGfIbdkw+JFcrwZ02Qj6nbKD61rBBPrb5d7+UjUA+7lmvrLVVMT4NPMWfDIlCPqdFEJJ3pUA+mQCXF3duOD64VlMXohgpPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"c0NhoejgYT7Cdl/PIkxjPt4XOp9aL18+nTtlfKcfVj59htIWj19SPjzcI2USbkY++gTACqv3QT7+ZuZwzN01Pro6zIMXkEM+3iFt/e1GNz5o3xOTObU7PpGh6VeqDkE+YkXt0J/hTD56SniZnbxJPi5xNwMojG0+oJ3VhvVSdj7SQvrgs2GFPhoXEoJKu44+BbGIoL5MlT641kTEtY+VPjUbmUIiSJI+fNrW48ytiD5lMCpj12ODPpPO7Em51ng++1fJRiLIcD4hsosvzUJmPoWmDHec7l0+iNvo3oh/Zz4shng+2H5rPgysefy1TWE+PHygvqYXUz4AWM36XupUPmqw8taUE1c+xYlb5wfxVj4gGVjh/bNVPkr7hgL9IFg+3OqhIr55YD4Kmij9JChXPgjfPnYVyV4+QRjJm2krUj4baZUmo09bPiDpXBd73Fg+R5fs8cHKZT6W1eJ/e2VgPgbbqgxrwW0+JHHzoR+tjD7qWSRIg+2YPg55YOUQGJg+xH6slHYCkj7T4b7TGfGKPvhQEJtkAIA+wodNsbpxdT6Ly48LjuBrPvC3Bwv/VGI+DKer4pXoWj4OSOZSwwRPPtDXkk45UkE+Jn1UbENYKz7y0yxIRcQrPhUufjG+DiY+Ttu4y+jKJz7VwKscJAYkPnxpTQSUHis+RkPEyVoeTT5yqNAxQ2mCPt8S3FPVX5I+6i//r2VQnD7gpQyYljukPgz0niDPuao+uxlQmt74qj5jhZQr1CqiPl4P3gDqKKE+IIT9GOafmD5D2fhvSRKNPhadmkxtu3s+eklwBVKAZz6K+IvJb41QPo76nRDgPlE+q6Pnj0U9VT5QcBOw8ENcPpQVa77mLGI+xt9PKLAoYD5Lu2jVxApyPsbSAPKI54E+WBxWaEtHkj6WPq6lEPiSPsKLAvDhdJE+jQ/W7ewQjz7JxMbSt1OKPkWjtyKBdoQ+E1iYD8U7fz6jPYLPQY13PpJtRBHCaXI+swj0Yv+zaz4sLwFaQBBmPpRNUW3nlGA+ZKN79MxAVz6oa7CCH2JWPrDJcol7d1Q+LRMwrRNDSD40N6jWP+VTPmQ6FiPyWVI+rOgrEEo3TD4cOEV3RN0/Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"3886\"},\"selection_policy\":{\"id\":\"3887\"}},\"id\":\"3868\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"3779\",\"type\":\"DataRange1d\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3850\",\"type\":\"VArea\"},{\"attributes\":{\"source\":{\"id\":\"3830\"}},\"id\":\"3834\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"3864\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"3783\",\"type\":\"LogScale\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"3824\"},{\"id\":\"3847\"},{\"id\":\"3867\"},{\"id\":\"3889\"}],\"location\":\"bottom_left\"},\"id\":\"3823\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"3845\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"3870\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"3781\",\"type\":\"LinearScale\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 4.68, C/O= 1.15, [M/H]= 0.83, T= 957.46, R=0.68 Rjup\"},\"renderers\":[{\"id\":\"3833\"}]},\"id\":\"3847\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"3851\"}]},\"id\":\"3867\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3832\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"3793\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"3797\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3809\",\"type\":\"Scatter\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"3816\"},\"major_label_policy\":{\"id\":\"3815\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"3790\"}},\"id\":\"3789\",\"type\":\"LogAxis\"},{\"attributes\":{\"ticker\":null},\"id\":\"3816\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"3821\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"3786\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"3798\",\"type\":\"HelpTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"3810\",\"type\":\"Scatter\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"3790\",\"type\":\"LogTicker\"},{\"attributes\":{},\"id\":\"3818\",\"type\":\"AllLabels\"},{\"attributes\":{\"label\":{\"value\":\"Ross458C: Observational data\"},\"renderers\":[{\"id\":\"3811\"}]},\"id\":\"3824\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"3777\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"3868\"}},\"id\":\"3872\",\"type\":\"CDSView\"}],\"root_ids\":[\"3774\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"950d2056-fafa-4e49-9862-243970cabcda\",\"root_ids\":[\"3774\"],\"roots\":{\"3774\":\"040c820e-e632-4f7b-bb5c-4f8579ee5a24\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "3774"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 30,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "541aba8f-99f3-4718-90f1-0bf88d8f23b0",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea82de65-bbc6-403c-8134-b005a4bffc77",
   "metadata": {
    "tags": []
   },
   "source": [
    "### 2.3.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925179e1-a276-4959-8d5f-89820d4318be",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b7e6eeb-4448-4d5f-9b38-81421c009256",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.68 R_Jup:  𝛘2 = 111.46, p-value = 2.68e-01\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(111.46, '2.68e-01')"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "061979fc-8ea6-458a-9202-f68348a6ace9",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c5480456-14fc-4cdd-b94b-da43b88f25d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7401b0a1-ba7f-4af6-a59f-a9850657994d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Ross458C: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 804,\n",
      "    'bd_distance_pc': 11.509,\n",
      "    'bd_logg': 4.09,\n",
      "    'bd_met': 0.23,\n",
      "    'bd_name': 'Ross458C',\n",
      "    'bd_radius_Rjup': 0.68,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'Ross458C: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7bbeac2e-2466-47b0-bf19-1c8e0cfa447c",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.05,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "010c5f3a-65e3-4a12-91d6-7f171d6fa547",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.00000</td>\n",
       "      <td>8.000000e+00</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>254.46750</td>\n",
       "      <td>1.251249e-01</td>\n",
       "      <td>4.673707</td>\n",
       "      <td>950.919182</td>\n",
       "      <td>1.216456</td>\n",
       "      <td>0.846574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.139971</td>\n",
       "      <td>130.47336</td>\n",
       "      <td>3.535031e-01</td>\n",
       "      <td>0.044642</td>\n",
       "      <td>38.047978</td>\n",
       "      <td>0.124326</td>\n",
       "      <td>0.084063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>50.89000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.600689</td>\n",
       "      <td>867.973897</td>\n",
       "      <td>1.067335</td>\n",
       "      <td>0.744075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.580000</td>\n",
       "      <td>178.44500</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.646139</td>\n",
       "      <td>942.691391</td>\n",
       "      <td>1.123655</td>\n",
       "      <td>0.768902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.680000</td>\n",
       "      <td>242.95000</td>\n",
       "      <td>3.688885e-12</td>\n",
       "      <td>4.676609</td>\n",
       "      <td>957.006775</td>\n",
       "      <td>1.219646</td>\n",
       "      <td>0.860539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.780000</td>\n",
       "      <td>334.77000</td>\n",
       "      <td>2.501262e-04</td>\n",
       "      <td>4.701523</td>\n",
       "      <td>969.569992</td>\n",
       "      <td>1.263721</td>\n",
       "      <td>0.896914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.880000</td>\n",
       "      <td>427.65000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>4.730863</td>\n",
       "      <td>998.103434</td>\n",
       "      <td>1.452028</td>\n",
       "      <td>0.957842</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "count  8.000000     8.00000  8.000000e+00  8.000000     8.000000   8.000000   \n",
       "mean   0.680000   254.46750  1.251249e-01  4.673707   950.919182   1.216456   \n",
       "std    0.139971   130.47336  3.535031e-01  0.044642    38.047978   0.124326   \n",
       "min    0.480000    50.89000  0.000000e+00  4.600689   867.973897   1.067335   \n",
       "25%    0.580000   178.44500  0.000000e+00  4.646139   942.691391   1.123655   \n",
       "50%    0.680000   242.95000  3.688885e-12  4.676609   957.006775   1.219646   \n",
       "75%    0.780000   334.77000  2.501262e-04  4.701523   969.569992   1.263721   \n",
       "max    0.880000   427.65000  1.000000e+00  4.730863   998.103434   1.452028   \n",
       "\n",
       "       metallicity  \n",
       "count     8.000000  \n",
       "mean      0.846574  \n",
       "std       0.084063  \n",
       "min       0.744075  \n",
       "25%       0.768902  \n",
       "50%       0.860539  \n",
       "75%       0.896914  \n",
       "max       0.957842  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e30ba3d8-41e3-48ac-8f57-60a16c870a46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>427.41</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.693886</td>\n",
       "      <td>867.973897</td>\n",
       "      <td>1.090445</td>\n",
       "      <td>0.747975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537143</td>\n",
       "      <td>186.89</td>\n",
       "      <td>8.350000e-07</td>\n",
       "      <td>4.637568</td>\n",
       "      <td>956.853800</td>\n",
       "      <td>1.253529</td>\n",
       "      <td>0.744075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.594286</td>\n",
       "      <td>231.33</td>\n",
       "      <td>7.370000e-12</td>\n",
       "      <td>4.730863</td>\n",
       "      <td>973.702759</td>\n",
       "      <td>1.294297</td>\n",
       "      <td>0.944794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.651429</td>\n",
       "      <td>303.89</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.600689</td>\n",
       "      <td>942.668335</td>\n",
       "      <td>1.067335</td>\n",
       "      <td>0.775878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.708571</td>\n",
       "      <td>50.89</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>4.691401</td>\n",
       "      <td>998.103434</td>\n",
       "      <td>1.134726</td>\n",
       "      <td>0.880954</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square       p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.480000      427.41  0.000000e+00  4.693886   867.973897   1.090445   \n",
       "1  0.537143      186.89  8.350000e-07  4.637568   956.853800   1.253529   \n",
       "2  0.594286      231.33  7.370000e-12  4.730863   973.702759   1.294297   \n",
       "3  0.651429      303.89  0.000000e+00  4.600689   942.668335   1.067335   \n",
       "4  0.708571       50.89  1.000000e+00  4.691401   998.103434   1.134726   \n",
       "\n",
       "   metallicity  \n",
       "0     0.747975  \n",
       "1     0.744075  \n",
       "2     0.944794  \n",
       "3     0.775878  \n",
       "4     0.880954  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cfbd800-e2f1-4983-af7a-c3fb1dc84580",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"f4f4046d-54a1-4092-9bb9-f03d1dad7313\" data-root-id=\"4196\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"bc3cb497-f602-4a3a-95d4-f38dafeeeeed\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4207\"}],\"center\":[{\"id\":\"4210\"},{\"id\":\"4214\"},{\"id\":\"4240\"}],\"height\":300,\"left\":[{\"id\":\"4211\"}],\"renderers\":[{\"id\":\"4228\"}],\"title\":{\"id\":\"4197\"},\"toolbar\":{\"id\":\"4220\"},\"width\":800,\"x_range\":{\"id\":\"4199\"},\"x_scale\":{\"id\":\"4203\"},\"y_range\":{\"id\":\"4201\"},\"y_scale\":{\"id\":\"4205\"}},\"id\":\"4196\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"4225\"}},\"id\":\"4229\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4233\"},\"major_label_policy\":{\"id\":\"4232\"},\"ticker\":{\"id\":\"4212\"}},\"id\":\"4211\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4201\",\"type\":\"DataRange1d\"},{\"attributes\":{\"overlay\":{\"id\":\"4219\"}},\"id\":\"4216\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"4203\",\"type\":\"LinearScale\"},{\"attributes\":{\"items\":[{\"id\":\"4241\"}],\"label_text_font_size\":\"12px\"},\"id\":\"4240\",\"type\":\"Legend\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4215\"},{\"id\":\"4216\"},{\"id\":\"4217\"},{\"id\":\"4218\"}]},\"id\":\"4220\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4218\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"4233\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"4232\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"4237\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4236\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4226\",\"type\":\"Circle\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"ZAQT/Z2s5j8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[1]},\"y\":{\"__ndarray__\":\"UrgehetxSUA=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[1]}},\"selected\":{\"id\":\"4237\"},\"selection_policy\":{\"id\":\"4238\"}},\"id\":\"4225\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4199\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"4225\"},\"glyph\":{\"id\":\"4226\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4227\"},\"view\":{\"id\":\"4229\"}},\"id\":\"4228\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4217\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4238\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"4207\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4210\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4235\",\"type\":\"AllLabels\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"4228\"}]},\"id\":\"4241\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4227\",\"type\":\"Circle\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4219\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"4212\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"4236\"},\"major_label_policy\":{\"id\":\"4235\"},\"ticker\":{\"id\":\"4208\"}},\"id\":\"4207\",\"type\":\"LinearAxis\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"4197\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"4215\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4205\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"4211\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"4214\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4208\",\"type\":\"BasicTicker\"}],\"root_ids\":[\"4196\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"bc3cb497-f602-4a3a-95d4-f38dafeeeeed\",\"root_ids\":[\"4196\"],\"roots\":{\"4196\":\"f4f4046d-54a1-4092-9bb9-f03d1dad7313\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4196"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.04, 1.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c44287ab-e348-447e-9e83-f1bb0538eb44",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4cb690-6379-4daa-b0db-3eb217f72eb4",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 2.4 Predict Brown Dwarf Atmosphric Parameters of GJ 570D\n",
    "\n",
    "In the following, we will deploy the trained CNN models to predict atmospheric parameters. Major steps are: \n",
    "\n",
    "1. Define the literature reported data for the object \n",
    "\n",
    "2. Instintiate *ObsParameterPredictor* class from *Predictor* module\n",
    "\n",
    "3. Load the observational Telescope data\n",
    "    - Replace negative Flam with zero\n",
    "    - Take the average of neibougrs for Flam_error <= 0\n",
    "    - Plot_observational_spectra_errorbar_\n",
    "    \n",
    "    \n",
    "4. Process the observational Telescope data\n",
    "    - Instintiate ProcessObservationalDataset class\n",
    "    - Define feature_names_synthetic and feature_names_obs\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6c1db5-6573-4cf0-a212-c21a3b7b3e3c",
   "metadata": {},
   "source": [
    "\n",
    "### 2.4.1 Load the data and process\n",
    "\n",
    "Define the literature data reported for this object\n",
    "\n",
    "This data will be used later to: \n",
    "- Compare the Literature vs ML predicted results\n",
    "- Convert the unit of the real observational dataset or fluxes from $F_\\lambda$ to $F_\\nu$ and $F_\\nu^{absolute}$\n",
    "- Revised the object radius"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dadf8679-a0ac-45c4-8920-8f3925fa6a0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "GJ570D_BD_literature_info = {'bd_name':'GJ570D',\n",
    "          'bd_Teff':828,\n",
    "          'bd_logg':3.90,\n",
    "          'bd_met': -0.33, \n",
    "          'bd_distance_pc' : 5.884, \n",
    "          'bd_radius_Rjup' : 0.79,\n",
    "          'bd_radius_Rjup_tuned': None } # 0.79\n",
    "\n",
    "brown_dwarf_literature_info = GJ570D_BD_literature_info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9088e2fb-fba8-4d98-a8fd-83e4370566d9",
   "metadata": {},
   "source": [
    "<font size=\"4\"> Instintiate the *ObserveParameterPredictor* class from *Predictor* module </font>\n",
    "\n",
    "*ObserveParameterPredictor* class performs the following tasks:\n",
    "- Load the observational datasets\n",
    "- Process the data including converting their units\n",
    "- Visualize the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2702febf-4ae7-4d2a-b6db-53c47eed4b46",
   "metadata": {},
   "outputs": [],
   "source": [
    "# brown_dwarf_literature_info \n",
    "predict = ObserveParameterPredictor(\n",
    "                                object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                training_dataset_df = train_BD,\n",
    "                                wl_synthetic = wl_synthetic, \n",
    "                                bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                trained_ML_model = trained_CNN_model,\n",
    "                                trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                trained_X_RowWise=None,\n",
    "                                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594a9427-c19d-4657-bc5c-1f6383c3604c",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Load the observational Telescope data </font>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0db1a138-b322-4235-8628-19e9672922b7",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------- Observational DataFrame Example ---------\n",
      "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err\n",
      "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17\n",
      "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17\n",
      "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17\n",
      "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17\n",
      "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"4579\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"4579\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"4579\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"4579\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"fd827665-94e6-449d-a354-94b39ed3b21b\" data-root-id=\"4528\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"107f24a1-036c-4ad6-9418-ce2d0fedc816\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"4539\"}],\"center\":[{\"id\":\"4542\"},{\"id\":\"4546\"},{\"id\":\"4572\"}],\"height\":300,\"left\":[{\"id\":\"4543\"}],\"renderers\":[{\"id\":\"4560\"},{\"id\":\"4577\"}],\"title\":{\"id\":\"4529\"},\"toolbar\":{\"id\":\"4552\"},\"width\":800,\"x_range\":{\"id\":\"4531\"},\"x_scale\":{\"id\":\"4535\"},\"y_range\":{\"id\":\"4533\"},\"y_scale\":{\"id\":\"4537\"}},\"id\":\"4528\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"4548\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"4570\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"4529\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"4533\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4576\",\"type\":\"Segment\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4558\",\"type\":\"Scatter\"},{\"attributes\":{\"source\":{\"id\":\"4557\"}},\"id\":\"4561\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"4540\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4825\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"4560\"}]},\"id\":\"4573\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"4531\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"4573\"}]},\"id\":\"4572\",\"type\":\"Legend\"},{\"attributes\":{\"axis\":{\"id\":\"4543\"},\"dimension\":1,\"ticker\":null},\"id\":\"4546\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4569\"},\"selection_policy\":{\"id\":\"4570\"}},\"id\":\"4557\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4547\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"4550\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"4574\"},\"glyph\":{\"id\":\"4575\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4576\"},\"view\":{\"id\":\"4578\"}},\"id\":\"4577\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4826\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"4539\"},\"ticker\":null},\"id\":\"4542\",\"type\":\"Grid\"},{\"attributes\":{\"source\":{\"id\":\"4574\"}},\"id\":\"4578\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4568\"},\"major_label_policy\":{\"id\":\"4567\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4540\"}},\"id\":\"4539\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4559\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"4537\",\"type\":\"LogScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4547\"},{\"id\":\"4548\"},{\"id\":\"4549\"},{\"id\":\"4550\"}]},\"id\":\"4552\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"4569\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"x0\":{\"__ndarray__\":\"4ezWMhkO5T/kTulg/R/lP0cE4+DSMeU/9BjlmZdD5T8vaYzWUVXlP/n02JYBZ+U/aLCp86h45T+Tj90FSorlP3mSdM3km+U/Mq1NY3ut5T/rxyb5Eb/lP6Ti/46o0OU/c/G3PUHi5T9a9E4F3PPlP27fo/56BeY/xqaVQiAX5j95PgPqzSjmP4em7PSDOuY/B9MwfERM5j8PuK6YEV7mP59VZkrrb+Y/uatXkdGB5j+HokCfyJPmP/ZFQlvOpeY/R3L5D+m35j9PP6iLFMrmPyOhLedS3OY/8X9HVKju5j+j5xa6EgHnP0/MejGUE+c/9S1zuiwm5z+sAN9t3jjnP4s4nWSrS+c/euHOhZFe5z+R71LqknHnP+dWCKuxhOc/ZCMQr+uX5z82PSgoRavnP0ewcf27vuc/rHDLR1LS5z9nfjUHCObnP47NjlTf+ec/Cmr4FtYN6D8IPDCA8CHoP3JPV3csNug/SKRt/IlK6D+hLlIoC1/oP3zuBPuvc+g/8ddkjXqI6D/o9pLGaJ3oP3k/br98sug/jL0XX7TH6D9PWU3XE93oP6weMA+Z8ug/og3ABkQI6T9IGtzWFh7pP55EhH8RNOk/jZjZ5zFK6T8tCrsoemDpP3yZKELqduk/kzoBTYSN6T9CBYcXRKTpP9DVVuwvu+k/9s/TgEHS6T/k27sGfenpP4EFMGXgAOo/5kAPtW0Y6j8Rjln2JDDqP+z4LxAESOo/jnVxGw1g6j/gDz//PXjqPxCwVu2akOo/8G36sx+p6j+ASSpTzMHqP+0qpPyk2uo/CyqqfqXz6j/vOhvyzwzrP4NpGD4iJus/36mAe54/6z8B/FOqRFnrP9Nrs7ESc+s/VfmekQiN6z+emPViKKfrP65JtyVywes/VyQmqOHb6z/HEAAce/brP+caZmg8Eew/t0JYjSUs7D83iNaKNkfsP1H3AUhtYuw/MXiY9s197D+rItxkVJnsP772zJIAtew/gehJmdTQ7D/191J40OzsP+o8Kv7vCO0/kJ+NXDcl7T+5N79hokHtP3v5nSYzXu0/1uQpq+l67T+0BYTWw5ftPytQi8HDtO0/JNBgU+fR7T+hhQSMLu/tP6BwdmuZDO4/Cp3X2CUq7j/4/gbt1UfuP2iWBKipZe4/LXsS2JyD7j90le6us6HuPyjxuRPsv+4/R450Bkbe7j+8eD9uv/zuP4WwGktYG+8/uynltRI67z8v/OB86ljvPw4QzNHjd+8/LH3ogvqW7z+JQzaQLrbvPzpXlBKC1e8/KsQj8fL07z8K16NwPQrwP+7O2m0XGvA/RIts5/sp8D8LDFnd6jnwP0RRoE/kSfA/YB+duvJZ8D/usfShC2rwP2DNAYI5evA/0egOYmeK8D8mjdE6qprwP+317o/3qvA/JSNnYU+78D/PFDqvscvwP+rKZ3ke3PA/6glLPKDs8D/pSC7/If3wP8sQx7q4DfE/H5268lke8T90Ka4q+y7xP6s+V1uxP/E/VRhbCHJQ8T/+8V61MmHxP4tUGFsIcvE/F7fRAN6C8T+HokCfyJPxP/iNrz2zpPE/2T15WKi18T8tsp3vp8bxP4Emwoan1/E/uCOcFrzo8T/vIHam0PnxP5fiqrLvCvI/smg6Oxkc8j/M7snDQi3yP1g5tMh2PvI/Vkj5SbVP8j9UVz7L82DyP8Mq3sg8cvI/pMLYQpCD8j+GWtO845TyP9i2KLNBpvI/KxN+qZ+38j/wMy4cCMnyP7VU3o5w2vI/6znpfePr8j+T407pYP3yP8nIWdjTDvM/cXK/Q1Eg8z+L4H8r2THzP6VOQBNhQ/M/vrwA++hU8z9K7xtfe2bzP9UhN8MNePM/YVRSJ6CJ8z9eS8gHPZvzP+l942vPrPM/5nRZTGy+8z9VMCqpE9DzP1InoImw4fM/weJw5lfz8z8wnkFD/wT0P59ZEqCmFvQ/DhXj/E0o9D/ulA7W/zn0P11Q3zKnS/Q/PtAKDFld9D+si9toAG/0P40LB0KygPQ/bosyG2SS9D9OC170FaT0P73GLlG9tfQ/nUZaKm/H9D9+xoUDIdn0P19GsdzS6vQ/P8bctYT89D+uga0SLA71P44B2evdH/U//bypSIUx9T/ePNUhN0P1P034pX7eVPU/vLN224Vm9T8qb0c4LXj1P5kqGJXUifU/liGOdXGb9T8F3V7SGK31PwLU1LK1vvU//8pKk1LQ9T/9wcBz7+H1P4j029eB8/U/hetRuB4F9j8RHm0csRb2P5xQiIBDKPY/tr5IaMs59j/PLAlQU0v2P+mayTfbXPY/AwmKH2Nu9j+rsu+K4H/2P1NcVfZdkfY/iUFg5dCi9j/AJmvUQ7T2P/YLdsO2xfY/uiwmNh/X9j9/Tdaoh+j2P0Ruhhvw+fY/l8rbEU4L9z/pJjEIrBz3P8u+K4L/Lfc/rFYm/FI/9z8bKsb5m1D3P4v9ZffkYfc/+tAF9S1z9z/430p2bIT3P4QqNXuglfc/EHUfgNSm9z+cvwmFCLj3P7dFmQ0yyfc/XwfOGVHa9z8IyQImcOv3P7GKNzKP/Pc/6IcRwqMN+D+twJDVrR74P3L5D+m3L/g/xm00gLdA+D8Z4lgXt1H4P/uRIjKsYvg/3UHsTKFz+D9NLVvri4T4P0xUbw1slfg/SnuDL0ym+D/X3TzVIbf4P2RA9nr3x/g/f95UpMLY+D+afLPNjen4P0NWt3pO+vg/e2tgqwQL+T9BvK5fsBv5P3jRV5BmLPk/zF1LyAc9+T8h6j4AqU35PwOy17s/Xvk/dLUV+8tu+T/luFM6WH/5P1a8kXnkj/k/4zYawFug+T9wsaIG07D5P/4rK01Kwfk/qB3+mqzR+T/D0ytlGeL5P/wApDZx8vk/NC4cCMkC+j/7ljldFhP6P087/DVZI/o/pN++Dpwz+j+HvyZr1EP6P2ufjscMVPo/3Lqbpzpk+j/cEU4LXnT6P9xoAG+BhPo/+Db92Y+U+j+GyVTBqKT6PzHT9q+stPo/29yYnrDE+j8UIuAQqtT6P01nJ4Oj5Po/FOgTeZL0+j9qpKXydgT7P79gN2xbFPs/o1huaTUk+z8VjErqBDT7P4e/JmvUQ/s/iC6ob5lT+z8X2c73U2P7P6WD9X8Oc/s/wmnBi76C+z/fT42XbpL7P4tx/iYUovs/xM4UOq+x+z+MZ9DQP8H7P1QAjGfQ0Ps/qtTsgVbg+z8AqU2c3O/7P+W4UzpY//s/VwT/W8kO/D/KT6p9Oh78P8vW+iKhLfw/W5nwS/08/D/qW+Z0WUz8PwhagSGrW/w/JVgczvxq/D/RkVz+Q3r8PwwHQrKAifw/RnwnZr2Y/D8OLbKd76f8P2UZ4lgXt/w/vAUSFD/G/D+hLedSXNX8P4ZVvJF55Pw/+rg2VIzz/D9tHLEWnwL9P/32deCcEf0//5WVJqUg/T8drP9zmC/9PzvCacGLPv0/WtjTDn9N/T8GKuPfZ1z9P0G3lzRGa/0/fERMiSR6/T9FDaZh+Ij9Pw/W/znMl/0/Ztr+lZWm/T9MGqN1VLX9PzJaR1UTxP0/F5rrNNLS/T8aUdobfOH9P47MI38w8P0/H7+36c/+/T8hdqbQeQ3+P0Ck374OHP4/X9IYraMq/j9+AFKbODn+PytqMA3DR/4/Zw+0AkNW/j+itDf4wmT+P95Zu+1Cc/4/qDrkZriB/j8AV7JjI5D+P1hzgGCOnv4/Psvz4O6s/j8lI2dhT7v+P5q2f2Wlyf4/DkqYafvX/j8RGVbxRub+PxToE3mS9P4/pvJ2hNMC/z83/dmPFBH/P1dD4h5LH/8/donqrYEt/z8kC5jArTv/P9KMRdPZSf8/DkqYaftX/z9KB+v/HGb/PxUA4xk0dP8/3/jaM0uC/z+q8dJNYpD/PwMmcOtunv8/6pWyDHGs/z/RBfUtc7r/P0ax3NJqyP8/vFzEd2LW/z8xCKwcWuT/PzXvOEVH8v8/44i1+BQAAEAsms5OBgcAQHWr56T3DQBAhlrTvOMUAECWCb/UzxsAQG1Wfa62IgBARKM7iJ0pAEDjjcwjfzAAQIF4Xb9gNwBA5wDBHD0+AEBMiSR6GUUAQLIRiNf1SwBA3ze+9sxSAEALXvQVpFkAQP8h/fZ1YABAuoPYmUJnAECuR+F6FG4AQDBHj9/bdABA66hqgqh7AEA1RuuoaoIAQLdFmQ0yiQBAAOMZNPSPAEARHm0csZYAQCFZwARunQBAMZQT7SqkAEAJbTmX4qoAQOFFX0GasQBAf7xXrUy4AEAeM1AZ/74AQIRHG0esxQBA6lvmdFnMAEBQcLGiBtMAQH0iT5Ku2QBAcXK/Q1HgAEBlwi/18+YAQFoSoKaW7QBAFQDjGTT0AEDQ7SWN0foAQFN5O8JpAQFA1QRR9wEIAUAfLjnulA4BQGlXIeUnFQFAeR7cnbUbAUCK5ZZWQyIBQJusUQ/RKAFAcxHfiVkvAUASFD/G3DUBQLEWnwJgPAFAUBn/PuNCAUC2uTE9YUkBQB1aZDvfTwFASphp+1dWAUA/dEF9y1wBQGyyRj1EYwFAKCzxgLJpAUAcCMkCJnABQJ8fRgiPdgFAW5nwS/18AUClTkATYYMBQCdmvRjKiQFAcRsN4C2QAUCDbi9pjJYBQJTBUfLqnAFAbLJGPUSjAUBEozuInakBQOQxA5XxrwFAg8DKoUW2AUAiT5KumbwBQIl7LH3owgFAt0WZDTLJAUDkDwaee88BQNl3RfC/1QFAzt+EQgTcAUCK5ZZWQ+IBQEbrqGqC6AFAAvG6fsHuAUBNMnIW9vQBQNDVVuwv+wFAGhcOhGQBAkAr9pfdkwcCQD3VITfDDQJAFVJ+Uu0TAkDuztptFxoCQI7pCUs8IAJALgQ5KGEmAkCUvDrHgCwCQMISDyibMgJAKcsQx7o4AkAfv7fpzz4CQBSzXgzlRAJACacFL/pKAkDFOH8TClECQEloy7kUVwJAzJcXYB9dAkBQx2MGKmMCQJqUgm4vaQJArP9zmC9vAkC+amXCL3UCQNDVVuwvewJAqd4a2CqBAkBJhbGFIIcCQOkrSDMWjQJAUHCxogaTAkC3tBoS95gCQB75g4HnngJATdu/stKkAkBCW86luKoCQDjb3JiesAJA9Pi9TX+2AkCxFp8CYLwCQG40gLdAwgJA8u8zLhzIAkA9Sbpm8s0CQIeiQJ/I0wJA0vvG157ZAkDl8h/Sb98CQPfpeMxA5QJA0H6kiAzrAkCpE9BE2PACQEpGzsKe9gJA6njMQGX8AkBSSZ2AJgIDQLkZbsDnBwNAIeo+AKkNA0BPWOIBZRMDQH7GhQMhGQNAdNL7xtceA0CjQJ/IkyQDQGDq501FKgNAVfZdEfwvA0ASoKaWrTUDQM9J7xtfOwNAU5EKYwtBA0DY2CWqt0YDQFwgQfFjTANApwUv+gpSA0ArTUpBt1cDQHYyOEpeXQNAwhcmUwVjA0DUmuYdp2gDQB+A1CZObgNAMgOV8e9zA0BEhlW8kXkDQFcJFoczfwNAMCqpE9CEA0BDrWnecYoDQFUwKqkTkANAL1G9NbCVA0AIclDCTJsDQBv1EI3uoANA9BWkGYumA0AHmWTkLKwDQOC593DJsQNAutqK/WW3A0DMXUvIB70DQN/gC5OpwgNAuAGfH0bIA0DLhF/q580DQBZqTfOO0wNAKe0NvjDZA0B00vvG194DQIZVvJF55ANACp3X2CXqA0BWgsXhzO8DQNrJ4Ch59QNAl3Mprir7A0Abu0T11gAEQBHHuriNBgRAznADPj8MBED83qY/+xEEQCtNSkG3FwRAWrvtQnMdBEDBi76CNCMEQGK+vAD7KARAO1PovMYuBEBNSkG3lzQEQF9BmrFoOgRAqpog6j5ABEAuVtRgGkYEQOtztRX7SwRAGVbxRuZRBEBHOC140VcEQK98lufBXQRAiIVa07xjBECZ8Ev9vGkEQOS9amXCbwRAZ+22C811BEBd4V0u4nsEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y0\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y1\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"4825\"},\"selection_policy\":{\"id\":\"4826\"}},\"id\":\"4574\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"4567\",\"type\":\"AllLabels\"},{\"attributes\":{\"data_source\":{\"id\":\"4557\"},\"glyph\":{\"id\":\"4558\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4559\"},\"view\":{\"id\":\"4561\"}},\"id\":\"4560\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4564\",\"type\":\"AllLabels\"},{\"attributes\":{\"ticker\":null},\"id\":\"4565\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"4535\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x0\"},\"x1\":{\"field\":\"x1\"},\"y0\":{\"field\":\"y0\"},\"y1\":{\"field\":\"y1\"}},\"id\":\"4575\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"4568\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4551\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"overlay\":{\"id\":\"4551\"}},\"id\":\"4549\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udecc) [erg/s/A/cm2]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"4565\"},\"major_label_policy\":{\"id\":\"4564\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4544\"}},\"id\":\"4543\",\"type\":\"LogAxis\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4544\",\"type\":\"LogTicker\"}],\"root_ids\":[\"4528\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"107f24a1-036c-4ad6-9418-ce2d0fedc816\",\"root_ids\":[\"4528\"],\"roots\":{\"4528\":\"fd827665-94e6-449d-a354-94b39ed3b21b\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4528"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.load_observational_spectra(\n",
    "    __plot_observational_spectra_errorbar__=True,\n",
    "    __replace_zeros_negatives_with_mean__=True,\n",
    "    __print_results__=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e97b1e8f-d9bd-4dcb-891e-78c9cb5a5c08",
   "metadata": {},
   "source": [
    "### 2.4.2 Process the observational Telescope data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f585c83-0a22-473c-b2f0-c5c95970af36",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------  Interpolated Observational Spectra: Absolute F𝜈 ------------\n",
      "          0.897         0.906         0.915         0.924         0.933  \\\n",
      "0  7.280711e-09  8.611113e-09  1.062637e-08  1.170489e-08  7.329417e-09   \n",
      "\n",
      "          0.943         0.952         0.962         0.971         0.981  ...  \\\n",
      "0  1.371097e-08  1.299396e-08  1.443783e-08  1.943760e-08  2.911763e-08  ...   \n",
      "\n",
      "          2.296         2.319         2.342         2.366         2.389  \\\n",
      "0  7.612835e-09  6.693866e-09  8.187037e-09  8.760881e-09  8.572828e-09   \n",
      "\n",
      "          2.413         2.438         2.462         2.487         2.512  \n",
      "0  1.231363e-08  1.863393e-08  1.684466e-08  2.206102e-08  1.915624e-08  \n",
      "\n",
      "[1 rows x 104 columns]\n",
      "------------ df_MinMax Single Observational Spectrum ------------\n",
      "              0             1\n",
      "0  1.670937e-09  3.343356e-07\n",
      "******************************\n",
      "\n",
      "Radius, BD_mean, BD_std:\n",
      "\n",
      "{   'BD_mean': 5.960877683707767e-08,\n",
      "    'BD_std': 7.325304103971966e-08,\n",
      "    'bd_radius_Rjup': 0.79}\n",
      "******************************\n",
      "\n",
      "******************************\n",
      "\n",
      "Predicted Targets from the Signle Observational Spectrum:\n",
      "\n",
      "{   'c_o_ratio': 1.58,\n",
      "    'gravity': 5.2,\n",
      "    'metallicity': -0.42,\n",
      "    'temperature': 887.63}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predict.Process_Observational_Dataset(\n",
    "    __print_results__=True,\n",
    "    F_lambda_obs=None,\n",
    "    F_lambda_obs_err=None    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb161e-7517-43c5-ab9d-ebfecb8a98d9",
   "metadata": {},
   "source": [
    "<font size=\"4\">  Check the processed Telescope dataset </font>\n",
    "\n",
    "This dataframe includes the following columns:\n",
    "\n",
    "- **wl (wavelengths in $\\mu m$)**: Wavelengths from the observational dataset.\n",
    "\n",
    "- **F_lambda ($F_\\lambda$)**: Original observational spectral density flux along the wavelength axis.\n",
    "- **F_lambda_error ($F_\\lambda^{error}$)**: Original observational spectral density flux uncertainty along the wavelength axis.\n",
    "- **F_lambda_obs ($F_\\lambda^{obs}$)**: Same as the original F_lambda but with a more descriptive label.\n",
    "- **F_lambda_obs_err ($F_\\lambda^{error, obs}$)**: Same as the original F_lambda_error but with a more descriptive label.\n",
    "- **Fnu_obs ($F_\\nu^{obs}$)**: Observational spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_err ($F_\\nu^{error}$)**: Observational spectral density flux uncertainty along the frequency axis (converted from the  F_lambda column).\n",
    "- **Fnu_obs_absolute ($F_\\nu^{obs, abs}$)**: Observational absolute spectral density flux along the frequency axis (converted from the F_lambda column).\n",
    "- **Fnu_obs_absolute_err ($F_\\nu^{obs, abs, error}$)**: Observational absolute spectral density flux uncertainty along the frequency axis (converted from the F_lambda column).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "53fff9b9-c0e0-4bf9-82b2-fd4a789458ca",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wl</th>\n",
       "      <th>F_lambda</th>\n",
       "      <th>F_lambda_error</th>\n",
       "      <th>F_lambda_obs</th>\n",
       "      <th>F_lambda_obs_err</th>\n",
       "      <th>Fnu_obs</th>\n",
       "      <th>Fnu_obs_err</th>\n",
       "      <th>Fnu_obs_absolute</th>\n",
       "      <th>Fnu_obs_absolute_err</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.657971</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>4.569383e-17</td>\n",
       "      <td>7.119990e-17</td>\n",
       "      <td>6.598578e-28</td>\n",
       "      <td>1.028187e-27</td>\n",
       "      <td>6.819110e-09</td>\n",
       "      <td>1.062550e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.660155</td>\n",
       "      <td>-2.299240e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.581152e-17</td>\n",
       "      <td>7.541037e-17</td>\n",
       "      <td>6.659565e-28</td>\n",
       "      <td>1.096231e-27</td>\n",
       "      <td>6.882135e-09</td>\n",
       "      <td>1.132869e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.662332</td>\n",
       "      <td>-4.419588e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.592921e-17</td>\n",
       "      <td>7.962084e-17</td>\n",
       "      <td>6.720781e-28</td>\n",
       "      <td>1.165085e-27</td>\n",
       "      <td>6.945398e-09</td>\n",
       "      <td>1.204023e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.664501</td>\n",
       "      <td>-9.488424e-18</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.604690e-17</td>\n",
       "      <td>8.383131e-17</td>\n",
       "      <td>6.782206e-28</td>\n",
       "      <td>1.234744e-27</td>\n",
       "      <td>7.008875e-09</td>\n",
       "      <td>1.276010e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666665</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>4.616459e-17</td>\n",
       "      <td>8.804178e-17</td>\n",
       "      <td>6.843899e-28</td>\n",
       "      <td>1.305219e-27</td>\n",
       "      <td>7.072630e-09</td>\n",
       "      <td>1.348841e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.668824</td>\n",
       "      <td>-4.426288e-17</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.311795e-17</td>\n",
       "      <td>6.684875e-17</td>\n",
       "      <td>6.433704e-28</td>\n",
       "      <td>9.974619e-28</td>\n",
       "      <td>6.648725e-09</td>\n",
       "      <td>1.030798e-08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         wl      F_lambda  F_lambda_error  F_lambda_obs  F_lambda_obs_err  \\\n",
       "0  0.657971  4.569383e-17    7.119990e-17  4.569383e-17      7.119990e-17   \n",
       "1  0.660155 -2.299240e-17    0.000000e+00  4.581152e-17      7.541037e-17   \n",
       "2  0.662332 -4.419588e-17    0.000000e+00  4.592921e-17      7.962084e-17   \n",
       "3  0.664501 -9.488424e-18    0.000000e+00  4.604690e-17      8.383131e-17   \n",
       "4  0.666665  4.616459e-17    8.804178e-17  4.616459e-17      8.804178e-17   \n",
       "5  0.668824 -4.426288e-17    0.000000e+00  4.311795e-17      6.684875e-17   \n",
       "\n",
       "        Fnu_obs   Fnu_obs_err  Fnu_obs_absolute  Fnu_obs_absolute_err  \n",
       "0  6.598578e-28  1.028187e-27      6.819110e-09          1.062550e-08  \n",
       "1  6.659565e-28  1.096231e-27      6.882135e-09          1.132869e-08  \n",
       "2  6.720781e-28  1.165085e-27      6.945398e-09          1.204023e-08  \n",
       "3  6.782206e-28  1.234744e-27      7.008875e-09          1.276010e-08  \n",
       "4  6.843899e-28  1.305219e-27      7.072630e-09          1.348841e-08  \n",
       "5  6.433704e-28  9.974619e-28      6.648725e-09          1.030798e-08  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict.obs_data_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d932707-726b-4083-a0b6-cfc893eb3cf5",
   "metadata": {},
   "source": [
    "### 2.4.3 Deploy the Trained ML Models for Prediction: \n",
    "\n",
    "<font size=\"4\"> *predict_from_random_spectra* function from *Predictor* class to perform the following tasks: </font>\n",
    "    \n",
    "- Generate random spectra based on the observational data\n",
    "\n",
    "- Deploy the trained ML models to predict the target outputs: \n",
    "    - gravity ( log$g$ )\n",
    "    - temperature ( T$_{eff}$ )\n",
    "    - carbon-to-oxygen ratio ( C/O )\n",
    "    - metallicity ( [M/H] )\n",
    "\n",
    "- Print the results, including:\n",
    "    - Predicted Targets from Randomly Generated Spectra.\n",
    "    - Print a summary of descriptive statistics, including the mean, standard deviation, and the shape of a dataset's distribution (percentiles).\n",
    "\n",
    "- Visualize the results to gain insights about:\n",
    "    - *Histograms* representing the distribution of the predicted target outputs by the trained ML models.\n",
    "    - *Boxplots* displaying the first quartile, median, third quartile, and maximum. In a box plot, the box is drawn from the first quartile to the third quartile. A vertical black line goes through the box at the median, and a vertical white line goes through the box to indicate the mean.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8232ce0-9065-4a71-8299-c12f95de63e3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "Predicted Targets from Randomly Generated Spectra:\n",
      "\n",
      "{   'c_o_ratio': 1.7161861062049866,\n",
      "    'gravity': 5.1802490234375,\n",
      "    'metallicity': -0.40390784740448,\n",
      "    'temperature': 850.9240905761719}\n",
      "******************************\n",
      "\n",
      "            logg        c_o        met           T\n",
      "count  10.000000  10.000000  10.000000   10.000000\n",
      "mean    5.180249   1.716186  -0.403908  850.924091\n",
      "std     0.146108   0.332290   0.046973   43.706562\n",
      "min     4.896504   1.280386  -0.450358  757.838135\n",
      "25%     5.098578   1.537687  -0.437412  828.334579\n",
      "50%     5.188268   1.662692  -0.425172  853.492523\n",
      "75%     5.252544   1.717120  -0.372400  887.180191\n",
      "max     5.427529   2.471197  -0.310059  898.275757\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"b7628b07-50fb-4ace-bd54-f6f34d2300f2\" data-root-id=\"4888\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"19ec06d3-7ea2-499a-93f5-2644d70a0661\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"4899\"}],\"center\":[{\"id\":\"4902\"},{\"id\":\"4906\"}],\"height\":300,\"left\":[{\"id\":\"4903\"}],\"renderers\":[{\"id\":\"4924\"},{\"id\":\"4929\"},{\"id\":\"4934\"},{\"id\":\"4939\"},{\"id\":\"4944\"},{\"id\":\"4949\"},{\"id\":\"4954\"},{\"id\":\"4959\"},{\"id\":\"4964\"},{\"id\":\"4969\"}],\"title\":{\"id\":\"4889\"},\"toolbar\":{\"id\":\"4914\"},\"width\":800,\"x_range\":{\"id\":\"4891\"},\"x_scale\":{\"id\":\"4895\"},\"y_range\":{\"id\":\"4893\"},\"y_scale\":{\"id\":\"4897\"}},\"id\":\"4888\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"source\":{\"id\":\"4941\"}},\"id\":\"4945\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5227\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"4946\"},\"glyph\":{\"id\":\"4947\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4948\"},\"view\":{\"id\":\"4950\"}},\"id\":\"4949\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"4931\"},\"glyph\":{\"id\":\"4932\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4933\"},\"view\":{\"id\":\"4935\"}},\"id\":\"4934\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5236\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5241\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"2+dZX+nePT6vBzN1QIlBPknKe8VMqEQ+HnBOcAKVSz7ilSVkPvk+PkjJFIVeTlY+aE20MWdnTj64jjB/wkxNPjZ3yP7KL1U+pvyt2SiHXz5Bc5fMd2FkPpRzQYUmBWg+m2q79fY6bj6THy986pN0PiMGeMqmqng+3stxsWzZfD5aPrvk+LOAPouYYzP6wII+iO8Jb5YBhD7wGQbOe8mEPo3zvFTqIXs+502hlKVraD6Kb0LOUCBWPlIjN5QcLVc+4TVAYl4bWD53XKv4q55SPmF+3aWss1A+2TOzg+4CWD7C5IEGXY9mPv/JwBnBaHM+eKZBl88Tfz6WLuZT6WyEPtbw2F/NO4s+lqVdmW9IkT7gzO9Mg/SUPl/wBOi/05Y+hFiJhwBBkz5krP9DWsqPPqYloD34nYY+N6gBe0e7fD6QB1LT8mtYPkwbRRJA5jA+8djMSaDOMz5vetHuUIlJPqZgQrWZgT8+tCMLBXDVKD4OLJNA/VIePlM/cA5rfC0+hgQx/+T7UD6D/L3P7NVYPkBpKQmdsVg+ci2SpPpTXT5rTzhgWqJqPhkfz8cVCXQ+x+GAmIR4fz7pmU3Nip6EPrDB1bygVow+N6EcRwcDkD6Tr79Sp/CHPkJVzw2u+XE+ijnub0TVYj6cNnHei0dkPsII/w4Ot2A+r2MT4oJZYz4PmSXaj5ddPm4ONfFgJGI+qSxTCfNPWj6MDuCaSJVdPlyEg+3v5lc+K1/OHURqSj5bZ2JekeRUPhVwj0VYBFM+gTTK0ZShVT7/IYGHt+pNPsEm9vVlAVA+vERKDSdiUT7VIwJD1pZcPnQomexLqVM+/DvYgVW3Uz7hx+P+srJdPlpu6RvKsGI+1LP1yjrvaj5cChdYoDZyPiHF7H3SwnY+yJ2cmigGej4PefCVHX95PidOo2e7A3U+jiCGGMnbcj4rbTiBlQJrPuuD2Hk63mE+o7EohpmVTD7jdLNlm5JSPnotIDEY+EM+b0owp+H6RD6pslupHRZIPofJMmHacE8+nNia93IZQz4pB3oAQhhCPv+jR3nVtUk+IcxbhCx5UT7g/WV9wt1dPqRUIOb6n0w+f2u0bbz4cT4Rj1st4XJhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5230\"},\"selection_policy\":{\"id\":\"5231\"}},\"id\":\"4931\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5225\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4942\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4951\"}},\"id\":\"4955\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"pJyOYvDLQD5iIkfazNpFPvN80n2An04+/HBWwoXqRD7pkiaTF4FCPviIfrGAGFE+4/yJv0bQSj4xlcdNojxPPqXkkMzQvlY+/jhC+OqaXj4Kkp73wG5lPqx2IYN69mg+ASbF08M2bj5I+xDAJJx0PmYUelisZXk+emZvB5IofT6yTJWIhieBPvksabtlCIM+OQNwyDWThD7QLk1r3XSEPqDlny8qYns+Q6BZFm6/Zz7FgCi5MXlXPgIxkktbSVc+0RYP+Q6UVz6IqEhABOxLPummreut3E4+oeF6znO7WD565S4t/hZmPpbobmCQxHI+XMA1gvMOfj6Up/xpNZGEPiyrb5jKk4s+w/SFLlCukT5s98SYL6iVPuwBeiobMZY+Ph3wxlIQkz6Cb3+yk+uOPoL3uS94Zoc+SOoAqt6iez57XPxL30xWPsxcog0afTE+m4CUweMsOj5tArvdfHo8PknkcNpytTs+XOrAX8eRLz7LGSkyYW45PvojWoaxCjI+0M8XKRYdUD5Z/j+Jih5VPs6DUOYESlY+RtQeE3gKXz7CSQUdbaprPkFGVmuP9nM+Gfvt6EnJfz7a/6TXQ2aFPpXzGYncpow+01W6cnQYkD4d8tLkfOiGPvaAAz/ZOXA+7GVHc6i0Yj5ODnsoqeZkPrgDRAykY2E+rCaUUdl7YT6Bb1kKa6diPjhehLFKvGI+RvMKRbIaXD4p+vEyEQdbPkw/DgZOZ1M+gjrffUKbST562aTzBVpPPucMbo2xPVM+Xbre92IcRT4ttMSU8UtOPpws6IZlDEw+N0OP15ZrVj5FwRlzIFFjPs8q9MQTm1Y+2V6DcLbOSj655ySms6hXPl4n3rENMmI+JRlOV4mLaz64+HEiBNBxPh4qq+NTg3Y+Xsamj3ieej5D2K4qp/Z5Pp1Hd30AcHU+fpvHxeU8cj5msmVgRDlsPtIlKoZqc2I+pqdU66BrWD5pMCe3pMRHPoTMQ+REvi8+yNVjYRGZQT6hlHsIfLVKPiVyhhH54UM+FJ59CX3GRj4BrZBDaQlNPu6E/ywPlEo+RVDjrD+KTj5R0K0iiyRUPkoggk9Gj10+mV7/cH26Yz49/mqYPzhrPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5232\"},\"selection_policy\":{\"id\":\"5233\"}},\"id\":\"4936\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4926\"}},\"id\":\"4930\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5240\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"4936\"},\"glyph\":{\"id\":\"4937\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4938\"},\"view\":{\"id\":\"4940\"}},\"id\":\"4939\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4921\"}},\"id\":\"4925\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4957\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5239\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"4936\"}},\"id\":\"4940\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4963\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4951\"},\"glyph\":{\"id\":\"4952\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4953\"},\"view\":{\"id\":\"4955\"}},\"id\":\"4954\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4952\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"4913\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"4926\"},\"glyph\":{\"id\":\"4927\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4928\"},\"view\":{\"id\":\"4930\"}},\"id\":\"4929\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5226\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4946\"}},\"id\":\"4950\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4948\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Uob13AIsQT6BX8ED0VVAPkjFAdjTvUY+3hvVR9k0Rj4GejHNmHk9PiPtJubBtVA+k3/6FEmESz6kHz/M6xBOPsJm5Je0dVY+yEcoRBIcYD55Uz3xa/hiPm/NZJ+iA2o+vZxLhCUHbj4IQJVuk2F0Pm4JKak+BXk+ibF/brCOfT6jps7o/cSAPng+oAqVnoI+PDRFFZfthD5wzQ9SB1CFPpVVPK0tcXw+Z9WuzQX9aD4DoVUoOnBVPs6KYv5FOVo+MQnT4G8RVj7tfsWQAkZQPtm1GoxAOFA+48/08ZQHWj6rU7EULjRmPtyPLGVNK3M+BrzCWTtLfj5nxPSEfUeEPlnkDHTKO4s+F7rC1VeHkT7mzGINaQGVPk3FYt6i3pU+wnn8ZSfAkz6nVi3Tb4COPl/itvEr7IY+LinCgrSKez4Fw1Inh/lVPtj3KA6LTjA+W8LYkm7iMz4WqqzXuJlAPk8xWsM5sTU+a1CmeIGEJT5mS7rp7MonPskgxe52NDk+rPhP1SVBST7+rKAjvZVUPohK6q6T21I+9t+OUqI4YT4Nlgjlc9hvPmWbc8cooHE+e7Ov0hAVgD6SKm7e1YmFPpnXAaEtIIw+u5RDGUtUkD58iGOREgWHPnDnzTjFM28+aujr28GeXD4jMIISGWRlPs/QVtJzv2A+3YtSWA+BZD7+1STSsk5gPqPWqmh4bGI+8//S8AgYYT4IDcc7XRhgPgN+KqBfR1Q+dAiBrwKJSz4enNzcct1OPlivWn43llU+njjNE1+bWT6P6kcqLohUPtooBGkNol8+HyJ9tN/8VD4yahNu34pgPvIcOMXH+VY+RP2BTBWYQj4udraEXCxZPrGQMoIsD2A+2AaRzQ45az78i1U6x6FyPrmWrvJj4HY+UF3x30Ceej4B7qb8N/N5Ph3eYBoWgXQ+Ycncs2Vfcj7mhRm41NNqPmbjwBMkBmA+Bs8ohsulSz596D6fdYxJPnHkyxK8kTY+pgrPjhXDMj7KqDyYrQ0+Pv7jrQlp0Uo+rEkFi4arPT6v55zlAY4/Ps0aYDsdUlc+A0uIWkgaTT5HC896FY1bPrOhJdS8S0M+0f9pCbi7VD7QV5u03f9bPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5240\"},\"selection_policy\":{\"id\":\"5241\"}},\"id\":\"4956\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4932\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"Xas90D+4OT7gAcJfAGlCPku8dqyCcUc+55fB/34FSj7leNnNxoVCPsDTbNeC1FM+8I/N84dKSz4iZe+C4SRRPv3ovoBmOFY+J8QsTeJzYD4TM877o0VnPlUa2bMkuGo+7W9A2//kbT5PIhcfH1B0PmichQLjB3k+VTDxXYtpfD5l4nXCVpWBPnkfInRB/II+smVyyehuhD41KtK+ToOEPnOs0ket0Xs+rg/UOdkpaT7BgcHo0OtWPsswAGsK61g+aegrNhbhWD7gN0lD25ROPl5IthvBRlE+MJviCS/nWT6qD5S/X1pmPmen0AusynM+8PQMejn6fj71je0D4a6EPokEbKFaJ4w+NK+p5vJNkT4BmdV/QUaVPqy88eOBaZY+lrC5W2fwkj6LEAm5iUGPPvAMRrAksYY+1Cfjh9rIfD5wKyBttfNYPoY9fi5MZjI+sA6+Hd4PBj6kIVzGjqE1PiiaQowpLCo+vZGI5dn7Pz6+yhsXh/w5Pus9ne/nvzI+sN0Z/OyLTj57XbNQ04VXPuuoWj5Uf1U+Gz7PIZf6XT4Pm4Z09ytqPpVJqMDzUHU+qqSUoZK4fj5+DbPqpGuFPmm9qqHHcYs+TWEMzD4kkD40PSfhcNKGPsRDuMjRrXE+B4kYpNhHYj7qa39dBXFlPn7jBFdgo2M+WMXQPOTCYj5+tDm3eTRjPvxhaxbCvmA+/3f8rJqtWj6GgedRODphPvl53NaFw1c+NCpQsesgTD7lJPRAHmxSPvmvKEw7HVY+cA4wrzNfUT7HNtZR28JTPp4iO/YNGGg+pBL4JuF9WT4V9fi2KE5cPluRPI+PqlI+s6AbjZrHUj5Gqxk8lUpYPt6i28swFGU+qGArG1r6aD7u1WtPrdxwPtam8WfvrnY+3VpDM3pseT7H+UIzmaF6PgvU+fWptHU+p61uEuQhcz7c/y7x7lprPr1BVfG8HVw+NUiFoHTIUT74yfXnyD1OPgIPCnQe20g+TynLYZHAQz4RiOxvcIBHPixed04f50w+1n7u8PwURT5zNPN5kYxEPpBJNfQ34UY+fY8hV9esUD6nz6SyUB9WPvYkBa2XI10+LuiuuSK7aT4rleQr92htPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5228\"},\"selection_policy\":{\"id\":\"5229\"}},\"id\":\"4926\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5224\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4937\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4928\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#45085B\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4947\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5221\",\"type\":\"AllLabels\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"awQiaiTZOD4elMB1wmNAPupDgjdwX0g+NsOxAGt5SD48kdiKVtpAPuDU3O12R1M+0hclL3KLTT4arVZPIwRQPsQuPJnlOVQ+bMVz/ohEXj5ipHfWIcVjPg6WWqp0n2g+VP35VdONbT40ZURVDEh0PsWhJijWrXg+/9jqstxofj5OCKFrue2APv2ApIpspII+joZlAgOohD6V1L7jo/yEPsaiWJkIwns+fukpm06YaD5rd9+yBhxWPpYeKrxtIFc+9/gspl4kWD4DHh2eXt1GPtMFw2XrKFE+TkgmSUQSXT6j1GiMS2FnPn2WvR3h3XI+CZ531xghfz4BvmBfQPiEPikonRvXB4w+y0T+Ty8dkj4nYjUtIk+VPnVgE7WPwpY+PKzaQmH4kj6L1mAvJwyPPoX3J31ZtoY+9NgcQHnvez6/LO4xCIJXPjrm0IWyuDA+TwUd+ZbQMz58fy3Rww9CPhsR3kas1DQ+RK15dD/RBD6d2S5ocw8xPoeFjfDQ/TQ+SFAbY/KYUD7+1AeMwSVTPvLCeuzeyFM+J/M5H1AqYD4ED+5JVAJpPhYQHoMKhHI+O+O+JMg4gD6//AAwFSaEPmS1+O/bYY0+z0daGItNkD5eAIUPGJ+GPsXYk/oaCW8+CmDkae9DZT7RIaicMP5lPvqK2GIq6mE+U0pJNbOUZD7VRBxgB+hjPv2wBzUoTF8+mhA2emkbXz64M7xz9+NePg7FVFfrOFc+YCh0hqIuUj6p5HjXN5hHPlbf88fj4k8++DDYLQlgWD66h/61K/hPPlfT0dkXBFc+qG04K/n8VD6t68/JjtddPpfXccFNjVE+poiefKgzTz5MTjGUph9ZPikjxOR5TV8+rfeZ+rCFbT6iNQasOmdyPsi1pXXP+XY+FCPOQ3wkez7GyqMgc5J5PsG6n7Rd0XU+IzEWM3Mtcz6wwHAtdetpPj8LfQV22mI+qbS4R4p/Qj6BXmbi/kRFPrnxft1550A+23CVd8vcRT5P6D/NnMlCPu3kjS/b30E+q0+7jMFCPT4ZcejvEoVCPoIBUx8QMlA+srWfCfAuTD7BcBhG0E5jPuqkI7SYJVw+iSwxCdZvXT6/FPPN28liPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5234\"},\"selection_policy\":{\"id\":\"5235\"}},\"id\":\"4941\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"ticker\":null},\"id\":\"5222\",\"type\":\"LogTickFormatter\"},{\"attributes\":{},\"id\":\"5242\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#46095C\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4953\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440357\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4933\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#450558\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4938\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440255\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4927\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5238\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5243\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"/je1bF2MPD5vybMjEqxAPq7FTZMas0Y+PSOFqPwART4bGIE31rQ/Pjyz0a6DPVU+FIRqcMq7ST4u8t/nVAVPPo2npUwg6FY+HJD1RnkOXj4jMxEfp/JkPgNlPHdrT2k+HM09ZYmMbj7Ly8YE3kJ0Pl3f0IZFCXg+LpUsfL2mfD5mugGXsPWAPhXrinxp74I+joOWpEyhhD7qbcJW0TmEPljMLiyJWns+PEwFeC/IaD5q3Zl2tmFVPmnsT9iuyVg+p2nRQnz7WD6hOtgicQpRPiYP7eC8aE0+P053ZceXWT4byjgJ2uxkPhxvxgcqKXM++NlYEg3Ufj4JPkPn5/yEPsOtCd1fD4w+Sqwh1wJikT6A4dZJhnCVPoxNmNxCYZY+AVKcT560kj6e6uGgs4+PPr1pkyr8G4c+GB1A/wqkfD6BXgJQSilXPqW++OZrGjI+1C8EKS7VOT7CMqHZT3czPkkdSzKrhTY+/g1L9N+YNj7WDDoQNncsPjv/ueEDqEM+V7+tsUB/UD4882939R1PPh+KXV3/GVY+PNZzc+MJWz5yKz3ZuM1sPu2fRBmxy3I+Ydpzy3fofz6WpKJZURSGPkKZeHwt9Yw+fLwugYuLjz7afOoIXA2HPtkln9WnyXE+eaAxberyYT5FlqGXC8tjPhQSV2Eu31s+vd+z2fcUYz5eEomTuZVgPicr3oB5OGI+LexmriLYWz69Ymkc3qhfPi+UsoGx5Vc+xT2mI/+NUD6tdBlJTxpRPs19x+D2aVA+Nm1OZ4xNTD6XLYinKwJFPpLXiyXWq04+hC2UvsHYUj5iwB9SZXtfPjjqhLRzKFQ+QR66WIy7TT4jalgBLjFePj3Nl6vVLGI+Hg2Cxp7jbD42Qa3zVWpyPjRcriRv8nU+rFYruCOUeT7P6YYalFp4PnOsgiIE4HQ+ji6pGRFCcz4p2X6tOwJrPpDAUUfRgGE+ZvSNq6DzTz5DInQPSJVQPuODoLgFdkk+9fKvPGA5PT7WXrYc9d9GPvKqnj/ePkA+KDFImGH+Qz7W2q8gi7tGPmMtgNew+0s+Ia/ZkxSVUj5LDpqvT6xUPvGagBX+X10+hFaKhZ9oWD5qjNXp7jVhPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5236\"},\"selection_policy\":{\"id\":\"5237\"}},\"id\":\"4946\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"JQJEGqrkPT7hhAIECntCPvh4gyhpSUY+xBBgYCZnSD5eHsy8c3k1PisBLNnnh1E+j0+MGjDdRz7RxyGXKoVTPnpT15WbwVI+fGwqTQ2AXj6WdS/3KpBjPpjSO8g85Gk+NIBe9cRxbj52aKgXI190Pm+G6sA4tHg+1NBBFRuSez5Eeygh0d6APk6P5Nj+kYI+nDWkrRowhD6wS5qVI6uEPjwUkcFvxHs+QDhKNWfeaT4cG94ncSpWPj/F/TbNKFc+R9xI18tcWD6PbrvHDAFRPnkKyH9pBE0+oFq5mH4YWj5MSj/ItAdmPjXM36HXOHI+hNVD8pU7fj5IRVOzoLiEPiSNVppa1Is+H1iYrrIykT5fRqALI1KVPqisoV3KYpY+0S7MCigikz772/j4qUiPPsCs/W1JcYc+w3KZaDV0fD5OYxT36PZVPnHUz0rRZTA+IPdbbrCsIT4WHMgXD6o1PliCk2VAozs+SVN2G7dSNj7w/0B0FswnPopL5K2vljI+H+QWZgcZUD6OOpOSqudYPhoJ3cOwNVY+srDTGebKWz6mznK5x5FpPp6LSBtnnHM+91kRfyKmfz6IgjyL7yOFPoQYdcF+go0+43F4Q0HIjz4arwFC1zeGPphIC+/P43A+Ci7N0EGXYD4TPndRojhnPuke7TSEQ2A+b+w51taEYj5qa4WcpKpgPqtmxh03B2M+KjwDRUW9WT5AvIAnZ3ljPhLwgJnNolg+97ocQHwXRz4qLvdOpCpNPkpj4TjCekg+6eL4i4vMVT55dtgU5sVRPpazQ1HC6FM+li0AlEXvVT4L2odUEvVgPsc29XzbtVQ+efhiyha3ST4PcecvmBxZPrzMd8xtFGI+cpNEgEh8aD5k8SUg5P9wPm+qSXyWinY+sznZ8IjOeT4ibaal3Ad5Pgl4PcB2bnU+rEmKq3lwcj5ESa9IuytpPo9TBk/Gh2A++uuXJJ6NSj72iyZzDJxNPqcD8xRpOUE+QkRpKnrdPT6ssj0wdYRDPp91cKOv40Q+YnwPqwVvTj6WEvvpQGJLPtl1McTrCE8+ks85KXfMUj4ia4j12V9aPkeQqITOe1Q+t7tz/qAQZD6sphGJaUZZPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5238\"},\"selection_policy\":{\"id\":\"5239\"}},\"id\":\"4951\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5237\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#45065A\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4943\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4941\"},\"glyph\":{\"id\":\"4942\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4943\"},\"view\":{\"id\":\"4945\"}},\"id\":\"4944\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5229\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4897\",\"type\":\"LogScale\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"4904\",\"type\":\"LogTicker\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4922\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4961\"},\"glyph\":{\"id\":\"4962\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4963\"},\"view\":{\"id\":\"4965\"}},\"id\":\"4964\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"4961\"}},\"id\":\"4965\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"viexdP/0Nj6Zfk/dvc1DPsNtHDc160o+8yASqFAuSD6gMiZ0aXs+Pqq4ftMNyEw+MkFGlSzLSD5nXXm9hY9JPhEaDofkd1Q+lZdcEbB3Xz4AHiPT3zdjPuUrmO3q22c+RorFFBECbj54OqP6FRJ0Pl+fQlmvyHg+lbLvyA65fD4KO8xyflCAPnRujeV1+oI+gFa76z2nhD5c0Bff702EPhoPF9E4z3s+qPSe5qdpaT5Cq8UmeRFWPrvyHxHuC1k+Y1n7qPBJVz6uJ9e1ubpNPqo+4xfkpU4+xiXdkFkfVj4JJ2Y+ZBVmPkGemJiQeHM+aiCZUncHfj7fVrb4K1iEPopES3N9IIs+LopIOnpekT40w+dqUzWVPmbxtEI5W5Y+OS5bKlI2kz6QlQyBaeuNPk75UZA7MYc+HpzkGD/KfD6jlu9R9oFYPvK6aUBD4TE+ADvMW1xgJD7crPlyycxKPq7Cu55PIjQ+2GxE0nEDKj7+LVE+VZ4yPhe+IzhLBjU+3YkWjLdUTT7lVj0L8gZZPrCR2fJFTV4+Jc0wDTMYXz6N4oh1M/FrPu8q7uv+qHI+V9sLdP2Tfz6EGZM+QNGEPr6z1hTGyY0+70Xo7JlEkD751tr87J+HPpZ69pO7A3E+J4ihHW0uYT7sKUJn8dVlPioCK7Nc+2E+OjS1YFoFZT4ylF0aFsxePoduZu1vhmE+LDUtiYQNXD5jbwWHXCBePoYnhlJCgVY+9fmWAhl0UD5KKWKpyGlHPnbMIbgZS1M+z7SVN1GXUj6yWsw3l71JPo1GZOzu508+AXQBjt8sVT4ddjS95r9fPv5mMj2HfFU+8jj6TohIVD7KbJJ3PodaPrnSKch4JGU+imfZpHlHaj6dnx3BN2FyPm9hvDA6s3U+rPhA1+ZYej7i0ixl+3N5PrPAJ+jwvHQ+76+xQMnzcj5t1+ik1FJrPnT9HuNEn2Q+1YtliK53UT6kxBoz/r9SPhIQwPSu4Uc+kWmzXVEhOj54C59EX3dCPhSbTDKKF0I+5akXn7ytNT7it4AW6Lo9PmWc+Fkwd04+HrIroV9PUT4Cg2buUr9SPnE+boI2y1c+fknYNB94ZD7ETI587HVuPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5244\"},\"selection_policy\":{\"id\":\"5245\"}},\"id\":\"4966\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5235\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4967\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4907\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"ZzSbWgFBQT4qNrM/pLlBPkI7+yw8y0o+/XJWTxJQRj7sVxAQ+UNCPpDcIlppvFA+JRa96LTTTT7Hv825J2xOPrkyz+MNg04+mWBO+fhxYD7l0UP0tNRlPkkqLv4AbGk+vhlWlMIWbj7ebLB8sF10PoMXPnI3F3g+5aUJgPQHfT4FqbGTVw6APug1bTWLtoI+BNqqISUxhT4vU81if+qEPr49eObwk3s+YZmh//mcaT457Hf7I1RUPiPmAVy7MVg+y3P5ju6ZWD4CHMCOsehNPnpOGuur1FI+v390ebGIWz7cnStHPuVmPmqfiUYGQHI+mTBUg0oafT4bu+q//O6EPtGS/FqcGIw+1s/GfkhxkT75XUReRg+VPg4UxvTN2pY+wxlAIdjKkj4FuNKL1QaPPiioi3TN84U+IGi07q7bez7zsARDQYRYPikOII6vwDA+Jv8QcmLkKz7AcZxVSbVDPnTW5o8nszM+rqwXzlb1Lz6MjhBRmMQoPlO5+YkgbTk+Cad78UAGSz6wgzsiFchUPreYIdGb7Fg+neT7WH97Xz6P0fE65HFrPl1nno3ay3I+qWeNR6Qzfz5LsEjNWTeEPiIqUej3d40+0nOms2rCjz7KZTw+7VGGPtLYe+gT2nA+yHjcRTubYz5vSrLhB+tiPqcNV2cp1mE+SInGZu/yYT5eJTiPlY9kPs4cvxkp62I+xj7X1JnlYD41XcbAdRpePki4EU++iVY+i6mSLiofTD6M5tMuTs9QPgLhTiU9q1Q+/5byObdhVD5DzDvzs0tMPj44YRxo90k+IwjgHrHGWT6pQbzbb79bPp1YGS1rDVc+5Wn61zFVSD5tgTVQIZFZPjil6lcwfF0+uDAk86iUbT4SY+QUytxxPglee+VwuXU+dM8tf4YYez4aHDDP0bl5Pt73/pgpXnU+I0L7F9R7cz6XoP5WpG5rPq/fLebhfGM+E9aNVnIdUD6evTWs3rFPPrOeji5GS0Y+0vhOwAWuRj4siLPr+B1HPolCkC3fP0I+nECn/Dz0RD6Wx0MwVfVCPvV6x20Qtkw+w3KqpDBZUT5bp6n84X1dPsn6dQ3O9lA+1vEVA4CIcD7WN+Me33tdPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5226\"},\"selection_policy\":{\"id\":\"5227\"}},\"id\":\"4921\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"NhYCFmuy7D9dmGtsQPzsPzbRaLnTRu0/JaG55SaS7T8EZQffO97tP32Z8ZcUK+4/5J4aCLN47j/qnTQsGcfuP4CNDgZJFu8/LVqhnERm7z9YLx38DbfvP1Jx+5pTBPA/7sB6MIkt8D/oAaDMKFfwPyWONYAzgfA/3pnDXqqr8D9dQZd+jtbwP/GoyfjgAfE/Iy9H6aIt8T+JsdZu1VnxPzXkIKt5hvE/Dry3wpCz8T9C7B3dG+HxP/52ziQcD/I/m1FEx5I98j9kHAL1gGzyP17umeHnm/I/8jS1w8jL8j/5pxzVJPzyPy5SwFL9LPM/Wa6/fFNe8z9E2XGWKJDzP+DYbeZ9wvM/pviStlT18z94OxFUrij0P03jcQ+MXPQ/wg6gPO+Q9D/QbPEy2cX0P/8GL01L+/Q/FSKe6UYx9T+5NQlqzWf1Pxf7yDPgnvU/1pLNr4DW9T+iwqdKsA72P2FKknRwR/Y/j1F7ocKA9j+/7A1JqLr2P6u7u+Yi9fY/+J/G+TMw9z8AjUoF3Wv3P9RwR5AfqPc/yTarJf3k9z+441tUdyL4P0jMQa+PYPg/feVRzUef+D/XL5hJod74PzA9QsOdHvk/vtGp3T5f+T9koF9AhqD5P6YiNpd14vk/fIxMkg4l+j9f3BnmUmj6P8AHeEtErPo/S0Svf+Tw+j8mboFENTb7P46LNWA4fPs/Fm6jne/C+z/DcT/MXAr8P3haJsCBUvw/z08pUmCb/D/Z99lf+uT8PwKxlstRL/0/Y+uWfGh6/T/ZofdeQMb9Pz7zx2PbEv4/+NsVgTtg/j9YEPuxYq7+PxD4qfZS/f4/98p6VA5N/z+Uz/jVlp3/P82774ru7v8/8ps8xIsgAEAtQoX0CUoAQGYhQebycwBALDEbrEeeAEDwF4FbCckAQDRFqgw59ABABh6f2tcfAUDpO0Dj5ksBQHK+TUdneAFApa9uKlqlAUBgezizwNIBQAt6NgucAAJAk47xXu0uAkAM2PfdtV0CQCt35Lr2jAJApGdnK7G8AkDSbU1o5uwCQL8YiK2XHQNArdg1OsZOA0CcKqpQc4ADQLXYdTagsgNA809vNE7lA0BJC7uWfhgEQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"urfk5qjKQj7fjm2XJO9FPuSss1u6tEc+qiWsbFp+ST6cznaOlKZAPonC3zWT8E4+tIRHZkB+Sz4JGZrEVcNRPkpkhEYVqVM+EKXeiC6vXj5pp/oUPtRlPle6TbEcZ2k+ZXWhmDR1bz5F6tx0QX50PlQ+yLBVeHg+Tf+0zv7kez6dT5xPNDWAPjDjeU65YoM+EsfTidNIhT7z/XYkD1SEPlVx6f8Sono+i9/3tllvaT4+TGlpD/pSPvOjEea/eFk+T+q6+0TFWD4AHDzIZElQPoi9e/ZqF1E+BSSbVWjoWD6rG54WcQJmPqWSfZ1C43M+NQ6DX2yVfT7xRIYjfGWEPloF5YrK94s+BLr9Hp5vkT5rEWomKOKUPs4h3qA+QpY+8XtbxahFkz7q4yavQISPPoJj16AgA4c+6Xg/Cxe8fD5MdVyyZEtYPj++En9Q2TY+vTpivDVLOT5i7xuKkIEuPph/eVyRTTw+EPvFoFZqKT7tlL7j6ZggPgZ+bBFoUjk+Rmg72El8Tj6O1E4mzkdUPmOB36qbYVk+tT8ByWQJXj42PHpLL9prPg9ZoGJp3XI+gYfQsxYTgT6NGNPrWAiGPg4e4tE0vYw+SAqNmsi9jz53XzVYk3+FPkU3bvg3onA+PD5QALTzYT4uoIjJxyVlPk5VXTxV92A+4Aa8b+wbZD4jLKYWseliPqz4S0zcqGM+inXyQ/kNYD4RPJsfHVxcPv7LYYux/VI+WingtSs1ST5wREAx67lSPlrdRTXHHks+I3Aa/qSDUD5TKp9sQUJMPl7fhRbAuU8+VpAAkYpqVT6rQimZMypfPhlgpZqQ/FI+LENE24WXSz7znIzEa29aPhvL75baoGI+cSUxMRUlbD4Kwl4noIJxPsPBPmqFhHY+1w+AblCqej64RrOSKPx5PgZXj0KeXHU+xl9xOSPucT6RQui9c7ppPnqhBMGSqmE+yRVLHvM4Uj51uQ6L3+9QPnojPWMuIEQ+xm8aIyB/QT6u4jNnOXA/PnhaIKv7O1I+6bfq3ZR/Qz6fZMsoPXdAPrqt/jt910M+zgSJ7jGZQz74h1XISpBbPmE0bHvyFVQ+QJ0/KxcMYT6UeTptNK5vPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5242\"},\"selection_policy\":{\"id\":\"5243\"}},\"id\":\"4961\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"4956\"}},\"id\":\"4960\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5244\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"4966\"}},\"id\":\"4970\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5233\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"4903\"},\"dimension\":1,\"ticker\":null},\"id\":\"4906\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"4899\"},\"ticker\":null},\"id\":\"4902\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"4891\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460E61\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4968\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"4931\"}},\"id\":\"4935\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"4907\"},{\"id\":\"4908\"},{\"id\":\"4909\"},{\"id\":\"4910\"},{\"id\":\"4911\"},{\"id\":\"4912\"}]},\"id\":\"4914\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"5230\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"4913\"}},\"id\":\"4909\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5232\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5245\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"4893\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5222\"},\"major_label_policy\":{\"id\":\"5221\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4904\"}},\"id\":\"4903\",\"type\":\"LogAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"4956\"},\"glyph\":{\"id\":\"4957\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4958\"},\"view\":{\"id\":\"4960\"}},\"id\":\"4959\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5231\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#460B5E\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4958\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"4895\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"5228\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#440154\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4923\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5234\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"4900\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"4912\",\"type\":\"HelpTool\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5225\"},\"major_label_policy\":{\"id\":\"5224\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"4900\"}},\"id\":\"4899\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"4908\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_alpha\":0.6,\"line_color\":\"#460C5F\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"4962\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"4966\"},\"glyph\":{\"id\":\"4967\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4968\"},\"view\":{\"id\":\"4970\"}},\"id\":\"4969\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"4911\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"4910\",\"type\":\"SaveTool\"},{\"attributes\":{\"text\":\"GJ570D: Randomly generated spectra within 1\\u03c3\",\"text_font_size\":\"12pt\"},\"id\":\"4889\",\"type\":\"Title\"},{\"attributes\":{\"data_source\":{\"id\":\"4921\"},\"glyph\":{\"id\":\"4922\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"4923\"},\"view\":{\"id\":\"4925\"}},\"id\":\"4924\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"4888\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"19ec06d3-7ea2-499a-93f5-2644d70a0661\",\"root_ids\":[\"4888\"],\"roots\":{\"4888\":\"b7628b07-50fb-4ace-bd54-f6f34d2300f2\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "4888"
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"40fb9d76-1123-49f8-af92-62167b7376a8\" data-root-id=\"5388\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"d9188b7f-847c-4a95-a7b9-9b55248ab559\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5399\"}],\"center\":[{\"id\":\"5402\"},{\"id\":\"5406\"},{\"id\":\"5432\"}],\"height\":300,\"left\":[{\"id\":\"5403\"}],\"renderers\":[{\"id\":\"5420\"},{\"id\":\"5437\"},{\"id\":\"5442\"}],\"title\":{\"id\":\"5389\"},\"toolbar\":{\"id\":\"5412\"},\"width\":800,\"x_range\":{\"id\":\"5391\"},\"x_scale\":{\"id\":\"5395\"},\"y_range\":{\"id\":\"5393\"},\"y_scale\":{\"id\":\"5397\"}},\"id\":\"5388\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5407\"},{\"id\":\"5408\"},{\"id\":\"5409\"},{\"id\":\"5410\"}]},\"id\":\"5412\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5438\",\"type\":\"CDSView\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5404\",\"type\":\"LogTicker\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.18, C/O= 1.72, [M/H]= -0.4, T= 850.92\"},\"renderers\":[{\"id\":\"5442\"}]},\"id\":\"5456\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5428\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"overlay\":{\"id\":\"5411\"}},\"id\":\"5409\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"5399\"},\"ticker\":null},\"id\":\"5402\",\"type\":\"Grid\"},{\"attributes\":{\"ticker\":null},\"id\":\"5425\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"AAAAAAAA+H8AAAAAAAD4f3vdgdg7B1Y+Z8bEYs/BKz5rmfHKtFxSPhLg6qpKuWA+Es5YFRmGJT4aive8ZjFNPsjNUiT0aFE+LUSCZThkUT5+K8nNWTVWPno8B9SauzU+4uwytHk4Pj50Cw5Yyq9EPnCpY5oRVUo+qaYEJBoGUD4n+PvqTL1UPijK9rbE+1A+hSKzuRBh/D251USo/4QkPj6qs3kL2jI+dHeLagh/Pj435o7VYgdIPlWXxDQQf1E+vvGipU/JNz5qhdSryOgkPgGTbO6tUfk9dNFCkynpOj70Hn8qrMhJPonvPxvgbkE+JjHaX61YQD496VXksH0+PvPS6GCvQjw+k7BYsuViTT50MP0xLYctPi5T4dJ0GTE+83h/b+B2Mz697BaJyFBNPplV7Hr9zRg+g7mAUWs1ST4cThnW5h4ZPt95jVSsfCE+0OYrXdaeGz5FbY52dtg+Pi6/sp8hADo+IhSI30sXNT7LkoCbnn44PoVG7WNAS0M+AhswHpRtFj6aAW0h68BFPlQTPLG7PkE+SdrVB/EEBj5BesS5kZUwPm34S2h5mj4+dbcx3u55Mj5XAFSjTJQ3PmS1a6YyXBo+v8oDuNX5FT6Ui4NP14cRPk84XyPvCwo+4/KayOx7FT5Dvbpx+Q8ePm1YTbZRYSM+FyZJGRS5LD5IxEem4cAkPnQo++BMsDI+LT0ZejnwQD7WWJO4f1g/PpzdTM/zNjI+KLlnE0GUEz5Rw9zm8NFLPgU5LxGp+iY+L6MbJsvXHz6jbwBiN58CPmfcf808pBs+aPrImlaqQz5Xwtxr0TQjPsJYCohJBSY+WOQyQgc7ID4xQJ2eebUUPhBuJUP6aCA+4BblZzlpPD4ZfVfoHhk3Pr1B8hCMADg+dvn0IFxWOz5+b3olkO81PrimDwiPkDg+TH+Pc78aQD5pag4gJ9BHPpZQczOVuk8+Ud0fSiVTTj754drRKc02PmSEmUVG7Dk+547abCcfMz79m09lja9APl0SLX2/4kg++kOaArjLRT5uAYg1SFBRPoTa/0VlcEY+XW9x8iFXTT74+qvwnKFGPqKygHiHZ0I+8V6uM2TaOj6l/A5J6A8/PkQSNXpmm0A+pjr2RfChVz78TqFRweZBPoHnSxTa5Eg+/XTKU/DTST7ESyjJd8BIPve8MXyex1Q+zFgKUkv6Mj6a/ikomV5UPj+WOspiKVA+vstlx3ldWz6uohPqSMNePk3oneesXmA+Z+HNm4axYT5EtS84WwBjPrIMrK+X4WQ+XF76YuphaD56sgM87lxnPqWS2k6j+2g+KSKEuOfcbD6iCo5l1eFwPtxk8WhalXM+wGysSVpkcj5TEs8tQHd3PpU37G5VQnk+589YYfbPdz7Ac/LA9t18PgbpOLY8eHs+DVytfiEPfj6IOx4nTLh+Pi0uhzfCyIA+RBqPNkG3gT4FxAwc4luDPmmy0XPDHoM+eIOb0AFOhD4sMZUS7lOEPgYMKryRgoU+iidDnxD4hD5oewlpIrqDPuiKV+kbSYM+9xxPV9IyfT7uHBRQnlh0Pur/A3tcjXE+DNnwNcQoZj4cwN5RNRdhPh/6bk7gV1M+857UAXvMUz4oBg0wnv5ZPnzOrt4OtFg+9EZsrJIrWT5PdStjXHRVPnHgednPO1k+xYfOebPtVj48a2bce7tKPoXEFv10iE4+x8U9fRQXTD4OSeQWKPJQPpFU41udgEs+sIl+faA/UT7uG03Ue6xRPmQT64NBgF0+0ryiYpUdYT7FyDovHh5oPsuwZjs5Wmk+CmjeNhAAcD7w1zzwEN1zPs3ozocqM3o+20ZbAlS2fT5I5fwsysl9PoChnEOvL4E+Ej4kCDW2gz4yMsFti8eFPsLoZwpCZoc+dzKOtuE5iz6F/JxzUMiMPkM339L4BJA+mwtopLfIkT7LQypm0OmRPljzqwPdt5M+YEey7iPhlD7npZyBXfKWPnVXYwvdA5c+h6owxD5AlT76K65WRtOWPuWYXQF0qJM+UszMLGztkz4BZ/bRQ7GRPgVUlZFIsZA+JC5nuAgcjz7dxJ3pTVuIPlyjQ6rPkIk+YpLpkcUPhz76mUfXyMCEPhjZ83Z69YI+MjITuFnEfD5wRL3ddZ5zPgyN+dDExGg+kPsrC+ooUj5eruzlnKJBPht8B8ki5zw+5HeLchlJMj7R9GGQLxklPkT3l+5/UiA+cOzVLvr3Fj434TBZtH4oPk3AbWuH1TI+Ug4sKi/QUz4UFtlz2BdNPjkgUFgpbUI+nFGLgYOALj5RKuzNSwczPronjxVVdjQ++mUWZ+OS/z1x0PrY6tE6PhpGj/6vdxc+7YpltPj4Pj7tiDziY+Q5Pt8ZKcbMBR0+eTdxOUYwID5sSUz90l0tPt5mGmOiWTU+GJO6XjP4QD5SAVddYyZIPnNTo4IknlA+LpPbF3f1ST7e5DgCeKZWPvOLzcHXkGE+AV/zmnZbUD54ES7wbyVZPqspG7GYP2M+pB/sn2m/Uz56OxJ1YV1gPjN5zkANX2A+EpnFEnxgYD4tQ9+nAwZYPtY3AaXr52E+N9cnAwKcaz5UmSJjoeVsPiIXEKSHIWs+clZwJurEbT5v64aU555lPgnY30Mxi3Q+mO2ezLnDeT4u7hNsqUp1Ps0Xe80vEXs+3WgNpwfbgj7mn1zAVBaDPn+Fz4yeCIE+pn5NiXUzhD4+EhxVA+eFPgzh06LVSok+n3gzC8wVij4iDmAWvlOOPn2Z5+FGKZA+g8d008xMkD6AwLNtUduOPg2ZiqaI5JE+i7C5JN+zkD4aX3XM3OmLPpn/x551no0+X6FaztOXiT7+KbF0fvuDPvSyCjdUdXY+XmFEC6eteD79fFLhUr1sPhVveUgoKGg+BQqRePQjaD5xHEvW+yFfPrNN4Hk4CmA+2kZW2yQ7XD6EnTPIU0FlPiMmSHz9UGA+E4jzJ56pZT7c8nKs4JFqPtKOSu1CMmc+NDZmWFviaD69hF5RiURjPqPY4Z5XkmA+naZIGtOmVj7FyUYUUf9UPlneXCZd1Gs+6+l9jfCDXz4V8mgOtTBsPtSbKAtNUWY+aHe6OLS1WD6/ewprKy5iPmxeX4G/SFk+enRIrMbqXD5c0zLj1vRaPjSZU6L3+Vk+DZPcXD6QaT5tkQX3A81gPhb6LTISnGY+znhCm//SaD7JlWhiQcVcPmAGY3u1GFI+p26ZHRVaHD7dM4WtdLdcPo4lV44Sfl4+FMsaSBBtYT5zuzR23gtcPiZzg5FzB2A+KbELEP4AUT7HIjBRVPRkPj0GvqFQW1Y+XROS9oSnNz72qQyThzxRPjlEqh+1dUg+4O0x4L8RVz7/+vLADldGPn8r/bn/dVI+sLaNO3yvUz7Y+DXhX+dSPjjhaeSyvU0+fw9LJq4Pyj0ThGKawPs2PnKmStfKo0k+FVoEkKVbTT7yeQeeMh9hPoJBxB6uw0o+D3jRNvBhVT6NP+dl+QJZPoYQ9m9AaEQ+InUmujWDRD5JhkaboVxcPuRaS2hVs1M+KMQkoOzwRT59qYA4t+tQPqQqCmJaK1c+t5mmRFRyST4HnjGMt3AiPmUdYqpL6zQ+1GXKgI+GSD7/OqXR/ORQPhtvQXUg9SM+ZklRU9mMVz4FfVcOzPBnPrXdHgTxTlA+I76aLCk7RT5pyzEIPCNgPsWviGIO+Uw+syZYa+coUz4LYWsSLohdPlY8r1fBUmI+1kzx0BdeWT46RrVy/rxnPueB14t2Z1M+Jy1mxWBWYj7VUqXhHPpePvS9FaWnwFY+Oeat1fK5QD67r9t7DylLPoiKTDml3lU+VrpHQ4dpUj4WDAHv6NtNPpCW6rQ9nkk++ZC5n0A3ZT7f6n7KWp9XPnZpePTyFhc+/vG3uc5dUj73B0uWVvJfPv6aKLo6MmA+mPadcAgoXD79hwi3lclcPsz4Jd5qhWI+I7/f8KEZXj5HSq6AtDVlPm0IjyIQlWI+q6LStw7QcT4nc8/fMeNgPkuYTQRftGU+xwv7Cs5fZz7n+ebdJH5nPhzsvD5c8W0+q40DHGAiaD5uc8u/f59wPlF7yKP2gW4+hhC/gggYcT6zYzNDZ/FyPucmRHs+PnE+F/AxsekycT4XXVmydMx3Pi6nESLt63I+r6E+9jwMdT7HzuABtJRwPnqXNUrA9Xk+0us+PFu7dD63HQqKuOR4PvGsnFYqXHg+5G5K2rtGeT4suY4AZdF8Pi5Cmjo4GXk+XFUdSeIYfT7Yj/qGTCN5PvRfgTnXg3k++UQpcNoIeD6RH6kjWzZ7PtQNCom8Tns+cjNgJr+meT6FTgiiHgF4PnTeHAhX3Hg+XH+46j/ydz5yu1VFp552PpbWTktlqXQ+RUp1wc/7cz6Q7pWIsiF1Pv+htr0+YnE+i/gbVkETdD6FqoZVWDV3PuVs3hsI5HM++DZRCk99cz4LMmdEwblyPqEbgTZOum8+hYZ44fhGcz6c9Xv9p/ZpPmd0B3VYuGo+RRCnzeBWaz66wHDel05qPh8/Sr+3I20+CAoX1EaJbD4rKnI0D71sPvncpn7+xGQ+zuTrfGcqYD6M8UXokdxkPjoeFn+773E+eKcUcVDqaj78MAk279VcPmk+sZddrls+1yfJe34GRj4M6LmVqmNhPow8wdp0ZzQ+2W/t3tnUMD73hcZeFVpMPmqPsLwgWEU+WfOL2zvvYz7c0uKAFNpSPt2hlALEKFI+2COGTDAiWD4X23nYskNRPr8VXhCDXlg+XP+4AU0cST7aK1VmefpPPvtjvVWUqFI+B9DnH0wKQj4tgD8UBjA9Ptsh/eIEeko+sNlRu+whCj7Orkkt2ylcPlGd/tc0s0U+HlLfuugrSj5ojHDP+9UwPno61IPm0kA+IE+IeZuVNz4V+sXEuEYcPp2GblTZdTw+/qkXy7cTRD4WYDsTyQI0PhF0BWMUS0U+Up3o48RoQD5+CLM2wf82PsmLq4xCQ00+mywVBiKVSj7X6Z4nyNtAPmsO55c8Viw+juTzeKeOJD4XJOKsVyJYPlBEn+e9ciM+Ss5wHQAgJD7aW5ztqohKPo0mONiAElg+cqhMYvNZMz6zAzBnQj81Pj9Xa8ue2TM+3GYWJDP8OT7T/XQOoS09PlwSrltHH0M+h7u8NZOrMD7jdDUTvPpAPr0+j8wR1gk++kNcSQvnGj5o6f4WoVw0PsZHMKzMPzc+b3pas8CQNT4uxf0Sht8zPhVBdr8oLDI+xWGP+Y4gNT4ADSOYBXdEPmaYfwDKw0M+fTPUg+2KTj5pJIxe2Y4yPoIou9BUFyo+4fPe0DDxSD5dHAfJcztQPgZ1eNnOAlQ+IbRukZ7OVz7KnrKL4HswPnyUZRQ59Vk+qfp4bkpTUj7aOtaRXlBFPjTt8OZCGlI+ssdOYhWVWT5Y90tKFHNGPggULrZkmlY+QB0pfVcCNT4P9A53J09DPnfTG9bSp0c+NM+zKThYXD6QSLtV13dmPi2zGvbLdEI+tf9SDz8lRT6kThGm6PlGPlnScwum0Eg+F+l0stu3YD4FmtmKma1PPt51ea7uulI+MGwZ6VGiVT5D9wCItIdHPrHfOcSvoB0+2KlEeuUdXD4i/xOCAVpjPuYWZBU3jFQ+WNq0LyF9Ij7XjAjyBANlPkLufxYsUG8+RmuFfpblKD7mJ9bPLgRdPmOYUhPHT2o+r+6elctoWT4DTK1cSr1gPkHWzHW3TVs+1CjDEP3/ZD6usYh85H1lPo3UfnqWHXA+QbxPv4r8aD6c5kN/jLVhPpE40fuUzFQ+cLS8BRUUdz5sgJ3qKVpdPhLVEQrtdEU+cjyYbrvfbT7xzI8kJj97PplZikLleng+E9/EKXazdT5pj28T0+hyPpHCRYLsCoQ+OIfi4ZYyfj7zqwOZuX+VPr+EMKKRz2A+FMsHjSJCcD5h/mtQdkiQPmyfpeDAuIA+LeKe4eYrij7JfAcjF9WRPqFItkbwf40+2JK24OwLgj6na5dQXilqPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5429\"},\"selection_policy\":{\"id\":\"5430\"}},\"id\":\"5387\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5425\"},\"major_label_policy\":{\"id\":\"5424\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5404\"}},\"id\":\"5403\",\"type\":\"LogAxis\"},{\"attributes\":{\"source\":{\"id\":\"5387\"}},\"id\":\"5421\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5435\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5436\"},\"view\":{\"id\":\"5438\"}},\"id\":\"5437\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"MG0w+px+Uz4wz9hVp2JWPhAOSMlsWFQ+w5GSDrrJTD4ICW2GvxdGPowizxSK7zo+g67BAqicND4LMlQ1R+IoPljB3bQtbTo+B1kt15pjLT77TUgy6EsxPo2KRN7eQDM+WPBkL20gQj6qVAgmyFRAPo8VHWEuA18+bCznUm/TZz5Tp8KLqRRyPvjAPBkT/nY+Rkij7oPuej73KZ0GRnR6Ppc/iJvynnY+osRaFLD/bz6Is4+ngjdpPkYk37tnDmM+BE7lolBYVz7Kuy23vt9PPvolrl25cUc+igMWpGQpUz5QZAqo1dVZPub16t8/GFM+2+dQqArARD40LcpwkMZIPiSiytY+cks+sKpQ99QYTj583QXE/75QPgpfam7iXFQ+c40Ce92LXD4ua/Hm8w5YPngGB+VkkF0+UQRxVU+yUj4r5bR4LnRaPoqWv4dRe1c+aVhTPwwzYj732XKqdZZbPq6KEtY4KWc+BT0tmtqvgT5d7XnXpvuMPh2kd7reVYw+OhgYQ73ChT6cqf4Vsbp/PqIiBUwXTHM+5f8UqYH8aD4dR00zvPdgPq5+3SaFjlg+N8V/JBAMVD5+HKJjuQBKPgzyZtFDiTw+Dp8RoyTeKD7/VHJA86cnPoAykFLm3SM+1vkncKWJKD7CzFjSudQfPvgYp3TR9iE+Nmq+VblDRz4cX/gRpzd6Pukdd4zmC4c+bOWObIrOjj4/LBBAkJCUPlLCPGqS/5k+mnVZ/Ab9mT5INBkafgKVPjhVeuYTOJI+wAoJ4SPliz495HZJzfyCPm753LfktXU+tMUyepQ0Zj6UQ6t9D+lRPquusy5wUlA+vuj2f3lFUz5qxsnusF9ZPk4HN1Q+KV0+TClaA2wIVj52zggpFnZmPtcqmM+pang+0PUMBMhagz5GrInfVIGDPnD1sLE7M4I+Q6175OdngD4uNElfX4h8PoRmtqQ0Z3c+hK42FJFtcj4UXNBmNANuPiSjMWZP6mg+wVzqx1zRYz6ovp2489NePoyX1dNTIVc+QsXdRWB9UD7e2fhQLihMPm+4W7fitEo+h7opW1/QPj5Ez+aMSgZGPi440CNtmkM+5NLUQCTKPT6fPAAJF2cxPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5453\"},\"selection_policy\":{\"id\":\"5454\"}},\"id\":\"5439\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5410\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"5454\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data_source\":{\"id\":\"5387\"},\"glyph\":{\"id\":\"5418\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5419\"},\"view\":{\"id\":\"5421\"}},\"id\":\"5420\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"5439\"},\"glyph\":{\"id\":\"5440\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5441\"},\"view\":{\"id\":\"5443\"}},\"id\":\"5442\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5420\"}]},\"id\":\"5433\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5408\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"items\":[{\"id\":\"5433\"},{\"id\":\"5456\"}],\"location\":\"bottom_left\"},\"id\":\"5432\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5435\",\"type\":\"Segment\"},{\"attributes\":{},\"id\":\"5430\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"5439\"}},\"id\":\"5443\",\"type\":\"CDSView\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5436\",\"type\":\"Segment\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5411\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"5427\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5397\",\"type\":\"LogScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5419\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5393\",\"type\":\"DataRange1d\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5440\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5400\",\"type\":\"BasicTicker\"},{\"attributes\":{\"text\":\"GJ570D: Calibrated Observational VS. Predicted Spectra\",\"text_font_size\":\"12pt\"},\"id\":\"5389\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5391\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\ud835\\udf07m])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5428\"},\"major_label_policy\":{\"id\":\"5427\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5400\"}},\"id\":\"5399\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"5453\",\"type\":\"Selection\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5418\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5407\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"5403\"},\"dimension\":1,\"ticker\":null},\"id\":\"5406\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"5424\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"5429\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5395\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5441\",\"type\":\"Line\"}],\"root_ids\":[\"5388\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"d9188b7f-847c-4a95-a7b9-9b55248ab559\",\"root_ids\":[\"5388\"],\"roots\":{\"5388\":\"40fb9d76-1123-49f8-af92-62167b7376a8\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5388"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 141.08, p-value = 7.60e-03\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"9565e96a-32a5-43da-b195-14715fe326dd\" data-root-id=\"5805\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"34c5d6d6-6263-4830-a786-768ba16ae167\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"5816\"}],\"center\":[{\"id\":\"5819\"},{\"id\":\"5823\"},{\"id\":\"5854\"}],\"height\":400,\"left\":[{\"id\":\"5820\"}],\"renderers\":[{\"id\":\"5842\"},{\"id\":\"5859\"},{\"id\":\"5864\"},{\"id\":\"5882\"},{\"id\":\"5902\"}],\"title\":{\"id\":\"5806\"},\"toolbar\":{\"id\":\"5831\"},\"width\":1000,\"x_range\":{\"id\":\"5808\"},\"x_scale\":{\"id\":\"5812\"},\"y_range\":{\"id\":\"5810\"},\"y_scale\":{\"id\":\"5814\"}},\"id\":\"5805\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"5824\"},{\"id\":\"5825\"},{\"id\":\"5826\"},{\"id\":\"5827\"},{\"id\":\"5828\"},{\"id\":\"5829\"}]},\"id\":\"5831\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5860\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5808\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5851\",\"type\":\"Selection\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5858\",\"type\":\"Segment\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5840\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5841\"},\"view\":{\"id\":\"5843\"}},\"id\":\"5842\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y\":{\"__ndarray__\":\"OhrM0BJNYD5+adw1gsZiPtV+vij/EWE+ygExKe9cWD4PPfFUOdhSPksoTqZmKUc+ojSBqMnoQT7eatntVL01PrxjZnpFw0Y+wCSwZhGnOT7iD1ch9k8+Pkh05+8c9kA+fXsfAvGFTz62CNApsWZMPjrrOTEVrmo+MxWvlRdPdD6lxy/mEap+PhANXagNaoM+954GLHe6hj6R+TcWHViGPrUZWzfqNYM+iN1Jx6Vsez4+jleqY811PqrO9ds5U3A+6gNDKil6ZD54mA+rmTRcPsn/TDLl2FQ+2gSqqYjiYD72lIcwEz9mPgrK/4E+VmA+ViRST6HjUT58eN9qMFtVPtFpnpMbqVc+iGHHTxnpWT7wF2K0G8lcPsZmW37Sh2E+FnWg3ml8aD6W3xnIGdRkPovv6uV2q2k+5gI6S2d1YD4C0+JEtBBnPlHYetiNd2Q+o4P8mKjKbz5+PfQEhCloPmeV9VJy93M+K3RvOKyFjT5tek+sxLyXPmoIB6apHZc+JXsa+L7YkT4jYv/3YDSKPrKf8bwhIoA+ygUPxLsydT5mEueguvBsPmmMjUEKDGU+Bv5Pt8UdYT4C37eDcD1WPqO4jBXX1Ug+GK+4RzTfNT6ad2/QixE1PkKlLUh74DE+K8z9EHXuNT7Nuh6dHLYsPmoU/LZqITA+eMj1M50fVD6vdmi5cRyGPm4uJkrKXJM+8r0QJdzBmT5reAT/KwuhPmakrzm9YaU+yk9LgJw1pT6A3sfC5/SgPsb0WiKLAZ4+ENmh5GQqlz4Ylg/zN8+PPkIjvQxrb4I+kJugOrAQcz6Iq2WlPC5fPtiIOOyy1lw+Q4GR1z/5YD7R+gsEyMFlPpaKa95uMmk+zfh98wQxYz5JP8TqOhBzPjA9I+qmUIQ+e5YQlrAPkD6AUTffpSSQPthUvNNREY4+Ti6hvOAmiz4ptBYISb6HPvQrto/ejIM+y3irQ3fgfj5Y3x/8TC15PvrLs3Sq8XQ+klS3s9epcD7rI5Fz4fppPk7BkSgYiWM+O0E+0sUMXD7rFHWXexRYPqHMUaNGwlY+5V7HL+KXSj7b898SS8hSPmRVJtMly1A+aq4j/YyxST5zfXjukWg+Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5875\"},\"selection_policy\":{\"id\":\"5876\"}},\"id\":\"5861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5817\",\"type\":\"BasicTicker\"},{\"attributes\":{\"text\":\"GJ570D: Observational vs. ML Predicted Spectra [\\ud835\\uded82=141.08, p-value=7.60e-03]\",\"text_font_size\":\"12pt\"},\"id\":\"5806\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"5875\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5895\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"5876\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5862\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5852\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"5861\"}},\"id\":\"5865\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"5896\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"5810\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"5846\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"5838\"}},\"id\":\"5843\",\"type\":\"CDSView\"},{\"attributes\":{\"overlay\":{\"id\":\"5830\"}},\"id\":\"5826\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"5917\",\"type\":\"Selection\"},{\"attributes\":{\"background_fill_alpha\":0.5,\"background_fill_color\":\"white\",\"click_policy\":\"hide\",\"items\":[{\"id\":\"5855\"},{\"id\":\"5878\"},{\"id\":\"5898\"},{\"id\":\"5920\"}],\"location\":\"bottom_left\"},\"id\":\"5854\",\"type\":\"Legend\"},{\"attributes\":{\"data_source\":{\"id\":\"5861\"},\"glyph\":{\"id\":\"5862\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5863\"},\"view\":{\"id\":\"5865\"}},\"id\":\"5864\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"ML Predicted:log\\ud835\\udc54= 5.18, C/O= 1.72, [M/H]= -0.4, T= 850.92, R=0.79 Rjup\"},\"renderers\":[{\"id\":\"5864\"}]},\"id\":\"5878\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"5825\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"5816\"},\"ticker\":null},\"id\":\"5819\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"lower\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"upper\":{\"__ndarray__\":\"4i07EexbSj5kRfjxSZpKPuny+BDk2Eo+cEMqurQXSz7sgA6Zy1ZLPiK369lQs0k+NGVmvOUJSD7s0sBnycNQPkRObSzykVU+FsMoyIVqVD71tXfnwQBfPnJjzxTbgFo+11Xegp5SUz5MMrxpdis8PipbZn1SVlM+LPD8mEJJUT5vgV3lxmpOPkBc60al/FA+KGReupvhTj7704PcRS5KPh3d2d5UcUw+D1pPoJGOTj5pYU5Z8qFHPngEc7mR5EQ+ETwVHvpuNz4YcyAZgmYTPqyB5RiJ+0M+wPI+6Qh0RT4BN2zq6HxAPpax8ifaFlo+BcIbajSaNz7se8rXPhE8PjxJa9FPS0A+KjDULLQaTj41x8Q8ODNBPu6dHKsaP0M+F7M4E5RRRT59ggQLfPtBPuojbnaJND0+FKBn7su/Pj7kWa1bvoYwPnj2J3BfvzU+CEJHd1IJOz4sHs91cDJAPn20pEMk6UI+KOKEmbeDPT64sbim3Bg1PqdnC3Ibxzw+OweJ5Dl4SD7UB9dv/lhHPm7FAaDiZDw+xIa0owtjFD7qK10JkoIrPtQDsQ9CPkU+pEtRi1HuTj4XUUsctppDPvMD6mhJo0E+kKnSp0ngOz4KAy5ENtYyPkRLX63jVyM+7Xm+Qp4+2D2wQalbCY8dPhxTtbhM/yw+NK8OeRTTMz6dueBBx4o8Ph4yYbL/pD4+3sPH3lRjQD7DO09CmaxCPmge1oeY/jo+psIvr8imDj4UKja+GIdDPsfUJdCSQkU+I2BLS7e5LT7OwKkbl9EwPjVdcDV+zTI+eJz81AHIRT4bOVHrl8g2PgILflqQtEI+yqeYo/7dLT5MGxdxUCYyPi7ZKHewZQs+cvzCxviHRj6sacZncSQ1PgcVx8WQdkc+7bspr9UpQj48kuZHyI49PhhDL30BYEg+BLy8CNXDST6CGulhDeZMPmY9JoxzXVA+ErpvDyQESz5unb2OtvhHPvkMlSMFL0o+e7F1j7fqQD4QJWkd62ZCPspBLnpBWUo+RNVKal0MRj7ewYPjIcROPrzttuL1E0o+kAdD5hLnTz4NfHl/ETVIPntPioQTqFA+waT8z4wmQj42w2JQibdBPtY+yFfB7Uo+mfg3AUKnWD6ODa0jpGdUPkREqAwAEk0+Hh3kSEguTj6d9pQvSDNRPgoLvRgjbFM+KKdybF6XUj64YusY+k1WPgo9jA5bslk+7O9+ZRufXD5/UyzpM6pePi2l1xR1ZmE+r3PkSW+/Yj7AUgpnsotnPsLZlbWk72c+ER7mwAtfaj6GmRwbKetqPic+k9AeXms+BMvlO6RObT4HkSYx5vtwPlmZt5YYrnM+5KJNd2aMdD4k2JpEJNR3PvFaK4hcn3k+50k2w94meT7cvsxImph8PtKAHDfsg34+P04fjOcRfz6N48lC5b+APpIk9M2QuYE+wnMr+YNJgj7guBZwvmuDPqMzMKrOIoM+yIWdVrbGhD4+8Do9cbyFPkfeLDfDKYY+TmOQ0mAlhj6xZS3YgjyFPvcbGZGbbIM+KHS/BSyGfT5YrimFdDh2Pg7Vx65nSXE+FqYY2YPeZj6KmiZqXP1hPuBUwZdS3lg+z6VWOvjTUz5fcXOvsS9ZPvfhAIJDdFk+bbP3I4JVWz4m3Ytseb1ZPhgaWmqj7lk+UOpzzpqNVz5mlyWXTb9VPhTsnrPE3E8+ty6wbjmRUD6DnvERutBSPvtkFm8esVA+cuuSZynlWD7LSrFZcl5ZPn8Jh6pwaF8+zOI/NYT/YT66/Pynj1tnPnyabeW++Ww+vz+GLn6ocD5vY9Mti4V0Pt6a9imbQno+cjT0il/pfj56NB7w2vx/PmQ6zftrIoI+toOkrMMkhD5oGRbM6OWGPgP8X27PcYo+CUWBn3WajD7/mbL+ekGNPgGyz5nbQpA+aiIrwWwrkj6ODaraj4eSPsgRWtMpMJQ+l4RCH+idlT74sVRHB9WWPuI0MlN4x5Y+h0u+jI8jlz5vzW9Q+QKXPuCdwBJz7ZM+v7+dZ+ADlD6RtHmSqaCSPpFbn1lcRZE+dM1yMHhhkD7ACrWVb7qMPmgLuojbvok+ZoxqoD8Fhz7Nl+3X2lOFPsEJtmaHKIM+cem3TRSofD4DNc3e0/J0PqpyY1/8kGk+21FTIYCvUj6/E0PoK6tEPn7jQMnguD8+dAZqJ4WRNj5ESsCnpJcqPhEG9yz2PTI+tOFiMN/oMD4KmROFaNwpPmDFkvxLekg+62WuAsagQz7Rsv5Okm49PvJlkV+zezM+hJ0S6dKBOz5m/z4QgtBBPhLzHAQayR8+IPf4qnzJJD48H5mXbL0pPsUCuS59wC4+qau8plUuLz6MTMcGE50vPjnmVhZbBjA++UjPEJE+MD4Hi2GI1/ghPuVePWiRh0M+w03YiHaXSD7QzesGYbZNPp0w6YfT5VI+5mepFAJSUT45UgGAHwFaPgPlL3uujF0+lj2tjBI6WD45ZdcaEVVcPjzS7B9Jzlk+b1Sy7DlgVT4a+KV4GxxgPumK+xoe2F8+8VKxDU2fYD5uVp0ufr1gPrTdfPxRUmc+8DBVQfN9bD6v7dAzrZlsPlekxT3T/nA+D2a6samgcT5rUA8faoJxPmRGPWZUTHU+H7iwIZILej7PO6wSJDF7PjgxKTi7230+mm7D8c6Agj5IG3jJVhCEPoLofqN8goQ+wnKx4YNhhj4CXEl/Gc6GPu5FNlMsw4k+WEMGQJeMij4f38IW+GuOPsIObfTufo8+5SoZDFZrkD6ZzPCyCq6QPseINehkSpE+um04l/WQkD735DMJIh+QPp/SwXm1O4w+iQv5kWbXiD5Khd6yFTWEPqmLNEwKWXw+oJikYsmKeT4hbB6PA85tPjuzt9mNKmw+57OA8fgSbD7aW+koGZRtPpR6BW5NXWA+uodAYkm6Xz7z+m0s8klnPpkNuyQGG2E+Z/VA6IxgZD7XNKxASSFuPt65cP50nWg+ftI/PXSFbD7mE+jPcqVlPpnmM84O618+QiOkebmSUz6Oi++RojNfPvoboql1y2Y+OwKDOz4wZD6UEPTMS7JoPhPTskdjG2o+OtLEwyI1bD6X1ANjMZdjPp63JZAauGA+GtyEqGvtYD4+61+NJ+ddPu8vC95/cmY+UKPLxYi8aj5XTlCao/hlPnM5qPs/U2c+V/uC4Y82Zj4an6md9oxjPkc2Qufj8F4+zDZZMVSdUj62RGYEWVtfPn2UP24FEGY+shh5d2AMZj5/5PpdL8hgPtRjLq/xQ2I+jwJKQZL2Xj5JSC82bFdkPkibhAHT31Y+6QW51xEmUj6hnmbKrKtWPs6UbO5VUlE+JufBom/6Xz7XvOBcW+BPPoIJPFXeVVM+tSvg/hDIVj42+hgVcVZWPqXlxj6vZl0+8cSuBXGEST4giR4s/Ss/PjiWNnUEn1E+8IXwy34rWj6+18d5N+phPmruSFcy0U0+y2XqX10wWz4WfLN5Mo5hPuokDJhj9VM+J1VmUYIjWT7eZjXaXlNnPnJ5dQnQaFM+1LqFekv5WD5u38/DG8RdPkIAtGJry18+vxHje0K4Uj5GOa45KKQ0PryduBSQ2Gk+tjqX93/IGz5IcQIPMus2PhZYcBmcgUM+6bLPi7nuUz78pkIfnJtjPtzkxz4kSlw+Dvwyg4zDVD6gjxD9GFZlPpAnsA72PlM+OY6eFRdeXD5PBpiDEuliPm+w+zjiXGM+9CiqjYIvYT4k2SCUoKZmPhgQv55CJWc+am7YQ3QGYj5ZHKJiVq5IPgb6x0bkZVY+POcqL3qvWD6J2qtSq6RLPjpJtzEGAVc+qq0duKSWSD4aUADj5A9WPrSoHVqY4kY+xloqHmlGXj6cw90KDVZcPpp461N44Ds+HvM5dOQdVD7s1QHXpqVhPgdYqskhAF8+zQQScBhjYj4VflKSbqlgPr11fuQwm2M+hhF1+TfRXz5JoGeVfLhlPpcQmTbHMWQ+x37dbPh9cz6dWPUBNv1ZPhaWig/zO2M+zzxtGbCfbj45xvGcp1xvPmbgQQuK324+N/nFfgyucD6664rZa1B0Pohmf0vk324+Y1zHxZsbcj4V49XnvapzPkb1FGr1AHM+Q/UMGBs6cz431QGNAiV5PoyVjZ6ysXQ+sbnQiO4reD6R9ReapNV0Pm543yT/fno++y2wD2+YdD4hd2+KyHV7PqI7vVTX13s+qT6vdekXez788U/ma09+PsYCYfql6Xo+WhE6Iu7yfD7/Y6v+tn16PsGCG97ttno+XcObuyP6ez5nSxhLZ3h6PiO8AHHhV3w+iCReWnLOeD6AsvJ3Ok56PuiLq0dOXnw+CMVrvQr4ej79Mt8PFQt6PsjPNCVm33c+4ipFPoL0dT5BC+IEc8p1PtogwtS5XnY+u7G4jQ21dT5EIkAcc6V2PnxTfeoR13Q+m3ZKmqkjdT5SgqGh/BJ0Pg8+4GkDGnM+EtJ1yZtvcj4nNppRbTZxPpJAJK+pimw+x12Chfl3bD4lFYzP3h5rPm3l7UwFmG0+NQXp6HKraz78bT/bGAhuPtTyjrXcCWg+2PODGaOXYT78mwjHKExnPtADKF1tOGs+hWjm1ZzdZz5R1cUopjlmPjQsuP26NF0+E3qIy/ThVj6iooURqW9bPoGn8DwB2kI+FrqtHq0nST6WQrlVX35PPs22eCUD71I+R/ZY72jKYD6GoJ+NSZFVPiIaOJJDhls+ylVnbjO/Uz7KWq8wMPdUPibw3rvaC1I+ED3h8lJoUz7IZ6Q206VQPu+YUD25PFI+Iri7xNZ0Pz40mT4Wx4g8PsDU8wrwHFE+VzB7ts0FUT7ymF+oYbJRPvSsVbwvr08+4XFZHmhRSz4i6FNHpaYiPiyCcFabbTw+MpFYO+TQRz7XUOVzKetRPgAihLinKE0+UKQuiMcTSj71LtP9k/pGPm7BBKKu6VM+vuDWR7/fQz6QbWds/Z9NPlkyC6lEV1A+2ugiuQEURj7aAwO9Qa01PjlB6LNYDjU+erHRo+qcRz5EYUlUfEFTPtzUt+wOCjU+BxUxS/IhNT7arftU2zk1PkO50z9FeEc+5DsfDh7/Xj6aViG8LVZDPgfJEgZXwUk+AA7KB0oaUD6640kgs0BQPlVodn+OIlA+bgUaHHQ/Tj56NYFWRtBLPrtqTSz4XUk+uVgVX+BTYD4PVTeVB1c6PgRofNVn1SY+wEIUQh2TTT7OMPEJwYNUPtGmewCEqUs+FUZLSqHxUj7GM6xWOq9OPu3twA2Ww0Y+yCMXcxY8UT5r7wnB+SZVPg+Lj0rivEo+OPF/I1X+RT5fjifuwSY2PpwEHoQUPss935otEm2+Rz5WeIvD/b5XPpakvf3z41s+2CoqxXs8Xz4DCPNVZXxHPkMgQc+hdU8+yIJfsDibWj5ToKPBgwJXPpvHYn6EZVM+PKji4mCITz6oc9mbMT1IPoE1W8WhzF0+URxc/M8sXT6+0WE4nqpjPrF+avYVs1E+Hied+MpTZD4+BDrcBqZlPpyBugHA+WY+8hvl/elOaD6+5Vm5aScOPs6ntTADYVg+jI5gNMGCZj6QqT8P32hgPlagcnz0j1Q+bFpBKP7bXj4smM4pSFVkPrxAtXwaQmk+sCLcuzxITz4gw/Kw/IxiPkUYCvM9+V4+Mn34y2XRWD7+rNzED29xPpgN0/X412o+knzwkY/IYj4ctN9qZCFaPoI9NTlDLWw+0PpjR75LYT7gpmZSKSVnPlJuDj6vpls+pq5fBYzbQT6mrZSpJ8NWPoKxcbjmiV0+fVsGFjoAeT4OoFNakp1hPog9PX6A7mE+c58ycsI/Yj5cJIkyBK9dPgRsyCyy1lY+CrOegrWlMT5dUHq7wORxPh5sctc+YYE+nttz/BpIcj7g88cPIOSAPiTCsPEwrYg+8f21BFaIgT6OB00AJhGLPszV7SDTVZA+4HMPnl2wkj5ADub3zL6UPl4Tm3a5V48+WAZiz9YlhT7KOo3qxM91Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"x\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]},\"y\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[560]}},\"selected\":{\"id\":\"5851\"},\"selection_policy\":{\"id\":\"5852\"}},\"id\":\"5838\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5918\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"GJ570D: Observational data\"},\"renderers\":[{\"id\":\"5842\"}]},\"id\":\"5855\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"blue\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5863\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"5814\",\"type\":\"LogScale\"},{\"attributes\":{\"ticker\":null},\"id\":\"5847\",\"type\":\"LogTickFormatter\"},{\"attributes\":{\"axis_label\":\"Features (Wavelength [\\u03bcm])\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5850\"},\"major_label_policy\":{\"id\":\"5849\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5817\"}},\"id\":\"5816\",\"type\":\"LinearAxis\"},{\"attributes\":{\"axis_label\":\"Absolute Flux (F\\ud835\\udf08) [erg/s/cm2/Hz]\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"5847\"},\"major_label_policy\":{\"id\":\"5846\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"5821\"}},\"id\":\"5820\",\"type\":\"LogAxis\"},{\"attributes\":{\"axis\":{\"id\":\"5820\"},\"dimension\":1,\"ticker\":null},\"id\":\"5823\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"5838\"},\"glyph\":{\"id\":\"5857\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5858\"},\"view\":{\"id\":\"5860\"}},\"id\":\"5859\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"5829\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"5827\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"5849\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":0.8,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5880\",\"type\":\"VArea\"},{\"attributes\":{\"num_minor_ticks\":10},\"id\":\"5821\",\"type\":\"LogTicker\"},{\"attributes\":{\"fill_alpha\":0.4,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5900\",\"type\":\"VArea\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"C9LEVWt7Wj5fZuJIKr1ePvk3+K/xBVw+0xuHgXV7Uz6wJKejf4ZNPuWIOP0A2EE+ARFDcZYKOz4XSnXsNywwPq+SA5XVhEE+/o4tTrc8Mz7lqm02h6U2PmZ9Md1KDjk+0rHQeVPxRz570F0mvLxFPgmjyuYWs2Q+FX4kqHbNbz7OpFESrP93PgvwWMekYn4+MC3K2uClgT6qn+RBDUWBPtAVYErlW30+L9tiEZqsdD70wqRNZjlwPkuuHipj0Wg+j7a6efcOXj4FUZI/CmhUPtz4K0zfsE0+GgupKHpJWD5eo1akrLxgPs3hyoCkJVk+9KL7lLYpSz5XUYC0wDNQPs7Nm1XC7lE+1PWXJYLRUz6Zys+cHF5WPlrmYoIgVls+Tg7tC+xTYz7vdBp4zx1gPiRXIkRWy2M+kDbvdvrgWD7oA3Zz6tdhPhaqxk1HuV8+8Ly5v2dXaD4CpejLw35iPiiBJBPHg28+OABxoNNpiD7yzNcx7OWTPgA/LgbCQJM+Tc0TsHEBjT7dDMGRFN+EPoahOqFZPnk+qrq2yXExcD57Xccrah5mPsXcfZ4h5l8+wOW2sR3IWj4noNc2T3NRPpCt9a23tUI++gl7TUssMD5HfTksnI0uPrrnHlLKYik+CMJ10k6FLz5tsYbw2BokPjDi3iEE3iY+dIB+8cz3Tj5wzZzlr7WBPntKGe+wE48+I8vGA6K9lD4vP/uis7SbPpxgYe1vmKE+zzGMMjOpoT7vD5IbiNqcPpelg+RSe5g+6WZ32S6gkj7KqMvyBliJPgRCrkS813w+GHxXmP9wbT575oerfr5XPo0PkbD5a1U+fif1fQlhWT5EnvQAe9pgPli86EauGGM+EmHhw42EXD4ErY5Rec9tPt5AZLYAmoA+cmWCW8Jgij4Xwk667LSKPt08gfG8Cok+BlGuN2yYhj4+UVsQj5iDPkxrxdklCoA+NW6/Rns7eT5v2x8NLZl0Piw3W3q/LXE+LaHdcg1Jaz4waTzAShZlPuxEb8Rne18+WTqEgfklVj6iOBqDfatSPhmdrAfvz1E+1pLSHksnRD4KXq866mpNPmAinA1nCEo+hGhNEiSqQz4QXStpHdw2Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"bsu19m9cYz7Nn0dHby5mPq7hgHkFIWQ+wefa0Gg+XT7G5w7YMu1WPrHHY0/Mekw+xOBgGEhMRj6liz3vcU47Psk0yV+1AUw+QV2Zv7UIQD5wOiCGMv1CPt0pNnEUZUU+lCI3RUeNUz55IKEWU4hRPraZ1L2JVHA+XOtL13O3eD4+9QbdO6qCPhqiDe3Iooc+vhBDfQ3Piz54U4vqLGuLPoIohsnhvYc+8G+YvlgWgT6IWQoHYWF7Pi5G3CLCPXQ+jKyol9bsaT71b0aLlABiPiQDhL5a2Vo+J4T/PlSgZT6Ohri8ecFrPi4jmsOqGWQ+MncmVGcyVj6hnz4hoIJaPtQFodF0Y10+nmb7PFgAYD6jMvplDZphPl9ahbuUZGU+3ttTseekbT49ShkYZIppPvKHs4eXi28+hGr8WlF6ZD4cok8WfklsPpdbEgp4Emk+K6UfufSecz761f89RNRtPjrqWBwBLXg+D/Q2aMJQkT7oJ8cmnZObPtTR30WR+po+ow8rGMUwlT5ptz1erYmPPqHuRakWpYM+6lBnvgU0ej6pYwOLheFxPnAq3LMDJWo+LInElXzXZD7dHZjQkQdbPrbDI3329U4+NlT2QR2SOz6QMMKKSdw6PqfWS2eRDzc+UrfAuEIaPD4WYtsksKgyPry3CF3T0zQ+tlAs71PDWD7uHzSNM4OKPp63vxy8L5c+wbBaRhbGnj4+UYss/jukPjDo/YUKK6k+xW0KzgXCqD4ItcZ3i3yjPvohGbDhw6E+N0vM75q0mz6zwal5NCOTPoIlI/f3coY+FHkVqeBodz5KuKFP/U5jPhIB8BO2IGI+x24o8PpBZT5eVyMHFalqPtRY7nUvTG8+EUELBcMfaD4QKMEsuTh3PoI54h1NB4g+Pfpf/v/ukj71QUdh1e6SPmm2+1rzi5E+lguUQVW1jz4UF9L/AuSLPpzspkWXD4c+sMFLoLlCgj5B4x/rbMF9PshgDG+VtXg+jdj/rSivcz6m3uUmeN9uPibg6258VGc+DyR8Ecn5YD408c+reX1dPin89j6etFs+ehVeoDyEUD6xOGgIIdtWPpiZfh8YklQ+UPT55/W4Tz7rzuI5g/pCPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5895\"},\"selection_policy\":{\"id\":\"5896\"}},\"id\":\"5879\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5812\",\"type\":\"LinearScale\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"SQu7ln4YBEDzT280TuUDQLXYdTagsgNAnCqqUHOAA0Ct2DU6xk4DQL8YiK2XHQNA0m1NaObsAkCkZ2crsbwCQCt35Lr2jAJADNj33bVdAkCTjvFe7S4CQAt6NgucAAJAYHs4s8DSAUClr24qWqUBQHK+TUdneAFA6TtA4+ZLAUAGHp/a1x8BQDRFqgw59ABA8BeBWwnJAEAsMRusR54AQGYhQebycwBALUKF9AlKAEDymzzEiyAAQM2774ru7v8/lM/41Zad/z/3ynpUDk3/PxD4qfZS/f4/WBD7sWKu/j/42xWBO2D+Pz7zx2PbEv4/2aH3XkDG/T9j65Z8aHr9PwKxlstRL/0/2ffZX/rk/D/PTylSYJv8P3haJsCBUvw/w3E/zFwK/D8WbqOd78L7P46LNWA4fPs/Jm6BRDU2+z9LRK9/5PD6P8AHeEtErPo/X9wZ5lJo+j98jEySDiX6P6YiNpd14vk/ZKBfQIag+T++0andPl/5PzA9QsOdHvk/1y+YSaHe+D995VHNR5/4P0jMQa+PYPg/uONbVHci+D/JNqsl/eT3P9RwR5AfqPc/AI1KBd1r9z/4n8b5MzD3P6u7u+Yi9fY/v+wNSai69j+PUXuhwoD2P2FKknRwR/Y/osKnSrAO9j/Wks2vgNb1Pxf7yDPgnvU/uTUJas1n9T8VIp7pRjH1P/8GL01L+/Q/0GzxMtnF9D/CDqA875D0P03jcQ+MXPQ/eDsRVK4o9D+m+JK2VPXzP+DYbeZ9wvM/RNlxliiQ8z9Zrr98U17zPy5SwFL9LPM/+acc1ST88j/yNLXDyMvyP17umeHnm/I/ZBwC9YBs8j+bUUTHkj3yP/52ziQcD/I/Quwd3Rvh8T8OvLfCkLPxPzXkIKt5hvE/ibHWbtVZ8T8jL0fpoi3xP/GoyfjgAfE/XUGXfo7W8D/emcNeqqvwPyWONYAzgfA/6AGgzChX8D/uwHowiS3wP1Jx+5pTBPA/WC8d/A237z8tWqGcRGbvP4CNDgZJFu8/6p00LBnH7j/knhoIs3juP32Z8ZcUK+4/BGUH3zve7T8lobnlJpLtPzbRaLnTRu0/XZhrbED87D82FgIWa7LsPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y1\":{\"__ndarray__\":\"Kr3/PQMMWD5Ard+2RwdcPv4PUrLOllk+DtTGzkmKUT6oVK505kZKPqo86BuZdD8+QXRDzICMNz7XxMJKUuorPsTLpvRY3T4+YT3h4DevMD6gkKo8q5gzPmxRKOEThzU+8mrz8SXtRD6yKfOw7RVDPhqtQtXmUWI+5GiOlIFLbD5qQ0e5sFh1PhYBU/iWBns+nPSscb1Afz7P7a0ATYB+PjnQYBbJwHk+Wpy6lQH9cT6Q/KcNZQJsPkySF52Qs2U+kpWogxK5WT6E6qb8mU1RPvN1Lp8l6kg+IUfxuIeDVD5oFFga8RZdPpqdLJfxJlY+ABpPOx68Rz7AV4oPfU1MPpOeVGKWTk8+mXeAE/FkUT7oSXCIW9BTPnb/QwFEQ1g+dUfTZH5GYT40jI52pXtcPrF8ydfWdGE+P/QCNCmuVT6PsSl+AYhfPtUeq/AWD1w+/CNMloBgZT40SrF9gT1gPoITSNg/Kmw+knpHFG5hhj7pNvZF2F6SPj44aeVEt5E+IcyXzTZYij6Ia5+70r+CPkCZVTD0cnY+un9P3jpnbD7I1yHLjGdjPsacPo+f11s+7Ku3qyTRVz62d+AO2xZPPp6N733BRUA+kOiKv5PPKz6ubmVLovEpPs5yhnSvQiU+lheryBacKj5qZxAcKa4gPnocB2whISM+6Od0/ptGSz40GvVWsep/PtzxHtSjCIw+y62AYKK+kj5y1WpuqyqZPgaqApy/FqA+XyIYZr0/oD7ThgawIteaPpFsMcaZSJY+DE/GKbzRkD5SRGama8WGPh4AF9wApnk+NYFjBen7aT5hxkEs/chUPtqGfGV3eFI+wJKuMUD4VT5kBzjH+81dPmnz5f5Aq2A+Lr9qeqeXWD7tiluwV4BqPo9WVNh4P34+N9YdFJgXiD4BWyEYknyIPpjevHfNCoc+5TX2N0nIhD5NZ4kUGPKBPomThy0WSX0+EXm4XoT8dj5VPIaHyMZyPnFVhDJnXG8+wPfATqThaD5R/8Xn4SNjPmwjrWRddlw+eIndltLMUz6QO62SZYRQPmlGv2casE8+1FvNQFCXQT5Yy9zKBC1KPijbAUrmBkc+cstNNwNEQT7RCvwaL9szPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]},\"y2\":{\"__ndarray__\":\"31WYAiSUZD5c/EiQYIlnPqv1U/iWWGU+hi+bg5QvXz7KT4tv/4xYPkEyqL6AmE4+JK/g6lILSD5Qc1G2gIU9PpZheXreF04+EIY/dnVPQT6SxwGDoINEPtq/Ou+vKEc+BMYlCV4PVT7dc1ZRuttSPq2UmMYhhXE+9PUWYW54ej7wJYyJuf2DPpWZkNTPUIk+oMM2n4/UjT46/BisE3CNPk7LheNvi4k+W49s/CRugj40HtvNlJl9Pi7UX2mrzHU+C72xEskXbD42I7yszI1jPpjEApW3PF0+JGbbdk2DZz64H+PTrfJtPkdFaTgEmWU+rLv8gDPpVz4YxflNoo9cPliEEvbrql8+vCUHxqA2YT788inw7eBiPtHNFPwC7mY+t6JtWFWybz4SeezUYGprPjIxBnoL8XA+rIty/LkTZj48zbDKZ11uPjghoDiQ52o+pXHWTWgadT5kmBtGwwpwPg0hx7nE2Xk+4rZLLvVUkj7xvagSsRqdPpbYpGYOhJw+OhBpiWKFlj5frC+ad9SQPsRyuGHJCoU+t0v2GNoxfD6CJlY79DxzPm/Ke7tELGw+FibEGPlSZj4pgv9/c+9cPtTxlFb2slA+6Omrr57WPT7dNyx7Rio9Ph0RGNaeHzk+iwymvd6OPj4YhxYPCF80Ppea9LdEsjY+/ByxaOybWj5EYFbHikOMPu7jPKpCtZg+DGfQ9IpioD4dhtNGAoGlPsaeXNe6rKo+NX1+mnsrqj6XeYwtPn6kPn0+Qj8+3aI+FGN9nw2DnT7vc9wfgmyUPnXGbqvVC4g+hnaP8msjeT5YyEQPvslkPmtFejl3mmM+JrlLll/2Zj7w8XskkpxsPuKQ+F7O3HA+A5LGKTYWaj4cuVr9SeB4PhhPHGiRgYk+2kESIpUTlD6A9V2yAguUPozl3Rfri5I+XBOmILzCkD4FAaT7eYqNPiSOqAgydYg+QjxPFDVigz5bgrlw0ZN/PjxtJVAhNXo+RC0OQN3idD5CJK5/8GhwPubwzJ4B12g+f3zPhlwmYj5G7jyckaRfPg72wxKArF0++7BgDzrMUT4KglHAE3pYPjS9S4HYElY+sch8YYsPUT4KePpg+npEPg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[104]}},\"selected\":{\"id\":\"5917\"},\"selection_policy\":{\"id\":\"5918\"}},\"id\":\"5899\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"5850\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"5830\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"Confidence Level: 0.95%\"},\"renderers\":[{\"id\":\"5882\"}]},\"id\":\"5898\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"1\\u03c3\"},\"renderers\":[{\"id\":\"5902\"}]},\"id\":\"5920\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"5879\"}},\"id\":\"5883\",\"type\":\"CDSView\"},{\"attributes\":{\"source\":{\"id\":\"5899\"}},\"id\":\"5903\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"red\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5881\",\"type\":\"VArea\"},{\"attributes\":{\"fill_alpha\":0.1,\"fill_color\":\"green\",\"x\":{\"field\":\"x\"},\"y1\":{\"field\":\"y1\"},\"y2\":{\"field\":\"y2\"}},\"id\":\"5901\",\"type\":\"VArea\"},{\"attributes\":{},\"id\":\"5828\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"5879\"},\"glyph\":{\"id\":\"5880\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5881\"},\"view\":{\"id\":\"5883\"}},\"id\":\"5882\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"5899\"},\"glyph\":{\"id\":\"5900\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5901\"},\"view\":{\"id\":\"5903\"}},\"id\":\"5902\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5841\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"5824\",\"type\":\"PanTool\"},{\"attributes\":{\"line_alpha\":{\"value\":0.7},\"line_color\":{\"value\":\"gray\"},\"x0\":{\"field\":\"x\"},\"x1\":{\"field\":\"x\"},\"y0\":{\"field\":\"lower\"},\"y1\":{\"field\":\"upper\"}},\"id\":\"5857\",\"type\":\"Segment\"},{\"attributes\":{\"fill_color\":{\"value\":\"green\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":null},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"5840\",\"type\":\"Scatter\"}],\"root_ids\":[\"5805\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"34c5d6d6-6263-4830-a786-768ba16ae167\",\"root_ids\":[\"5805\"],\"roots\":{\"5805\":\"9565e96a-32a5-43da-b195-14715fe326dd\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "5805"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict.predict_from_random_spectra(random_spectra_num= 10,\n",
    "                                     __print_results__= True,\n",
    "                                     __plot_randomly_generated_spectra__= True,\n",
    "                                     __plot_histogram__= True,\n",
    "                                     __plot_boxplot_hist__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar__= True,\n",
    "                                     __plot_pred_vs_obs_errorbar_stat__ = True,\n",
    "                                     __calculate_confidence_intervals_std_df__ = True,\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2ceb36-a932-475c-9ad7-e126be3e0497",
   "metadata": {},
   "source": [
    "Comennet from natasha: >2.2 mincron - Is not missing any thing!\n",
    "> 1 sigma error \n",
    "> training set\n",
    "> trusing the posterior space "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae1e1c5-86e2-42c8-8e7d-a4a0b67302a9",
   "metadata": {},
   "source": [
    "### 2.4.4 Tune the Radius"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee14018-45b2-4823-8816-646d1c59dd43",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value for the predicted ML vs. the observational spectra?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "93fc8831-a0c8-4aa5-9ff4-1f60ac03adb7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Radius = 0.79 R_Jup:  𝛘2 = 141.08, p-value = 7.60e-03\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(141.08, '7.60e-03')"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "                \n",
    "                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                __plot_results__ = False,\n",
    "                __print_results__ = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8148e86d-313c-4ebd-83a1-929b280e039a",
   "metadata": {},
   "source": [
    " What is the 𝛘2 value (and p-value) for a range of $R_{Jup}$ radius?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c5a95970-fc44-4d09-9b2e-bb976fdc44c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']-0.1, \n",
    "                Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+0.1, \n",
    "                dR=0.01,\n",
    "                brown_dwarf_literature_info = None,\n",
    "                __plot_results__ = False,\n",
    "               __print_results__ = False,\n",
    "               __plot_stat_results__ = False):\n",
    "    \n",
    "    R_list = []\n",
    "    chi_square_list = []\n",
    "    p_value_list = []\n",
    "    random_pred_mean_list = []\n",
    " \n",
    "\n",
    "    for radius in list( np.linspace(Rmin, Rmax, num=int((Rmax-Rmin)/dR) )):\n",
    "        \n",
    "        brown_dwarf_literature_info['bd_radius_Rjup_tuned'] = radius\n",
    "        \n",
    "        # brown_dwarf_literature_info \n",
    "        predict = ObserveParameterPredictor(\n",
    "                                        object_name = brown_dwarf_literature_info['bd_name'], #Ross458C, HD3651B, GJ570D\n",
    "                                        training_dataset_df = train_BD,\n",
    "                                        wl_synthetic = wl_synthetic, \n",
    "                                        bd_literature_dic = brown_dwarf_literature_info,\n",
    "                                        trained_ML_model = trained_CNN_model,\n",
    "                                        trained_X_ColWise_MinMax=trained_StandardScaler_X_ColWise_MinMax,\n",
    "                                        trained_y_ColWise=trained_StandardScaler_y_ColWise,\n",
    "                                        trained_X_RowWise=None,\n",
    "                                        )\n",
    "\n",
    "        predict.load_observational_spectra(\n",
    "            __plot_observational_spectra_errorbar__=False,\n",
    "            __replace_zeros_negatives_with_mean__=True,\n",
    "            __print_results__=False,\n",
    "            )\n",
    "        \n",
    "        predict.Process_Observational_Dataset(\n",
    "            __print_results__=False,\n",
    "            F_lambda_obs=None,\n",
    "            F_lambda_obs_err=None    \n",
    "                )\n",
    "\n",
    "        predict.predict_from_random_spectra(random_spectra_num= 3,\n",
    "                                             __print_results__= False,\n",
    "                                             __plot_randomly_generated_spectra__= False,\n",
    "                                             __plot_histogram__= False,\n",
    "                                             __plot_boxplot_hist__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar__= False,\n",
    "                                             __plot_pred_vs_obs_errorbar_stat__ = False,\n",
    "                                             __calculate_confidence_intervals_std_df__ = True,\n",
    "                                            )\n",
    "\n",
    "        chi_square, p_value =  chi_square_test(x_obs = predict.obs_data_df['wl'], \n",
    "                                y_obs = predict.obs_data_df['Fnu_obs_absolute'], \n",
    "                                yerr_obs = predict.obs_data_df['Fnu_obs_absolute_err'],\n",
    "\n",
    "                                x_pre = predict.confidence_intervals_std_df['wl'].values[::-1], \n",
    "                                y_pre = predict.confidence_intervals_std_df['mean'], \n",
    "                                yerr_pre = predict.confidence_intervals_std_df['std_values'],\n",
    "                                radius = brown_dwarf_literature_info['bd_radius_Rjup'],\n",
    "                                __plot_results__ = False,\n",
    "                                __print_results__ = False)\n",
    "        \n",
    "        \n",
    "        if chi_square >= 0.:\n",
    "\n",
    "            R_list.append(radius)\n",
    "            chi_square_list.append(chi_square)\n",
    "            p_value_list.append(np.float64(p_value))\n",
    "            random_pred_mean_list.append(list( predict.dic_random_pred_mean.values() ))\n",
    "        else:\n",
    "            pass\n",
    "\n",
    "        if __print_results__:\n",
    "            print( f\"Radius = {'{:.2f}'.format(radius)} R_Jup:  𝛘2 = {chi_square}, p-value = {p_value}\")\n",
    "            \n",
    "#     if __plot_stat_results__:\n",
    "#         plot_chi_square_p_value(R_list, chi_square_list, p_value_list)\n",
    "    \n",
    "    tuned_ML_R_param_df = pd.DataFrame(columns=['radius','chi_square','p_value','gravity','temperature','c_o_ratio','metallicity'])\n",
    "    tuned_ML_R_param_df['radius'] = R_list\n",
    "    tuned_ML_R_param_df['chi_square'] = chi_square_list\n",
    "    tuned_ML_R_param_df['p_value'] = p_value_list\n",
    "    tuned_ML_R_param_df['gravity'] = np.array(random_pred_mean_list).T[0]\n",
    "    tuned_ML_R_param_df['c_o_ratio'] = np.array(random_pred_mean_list).T[1]\n",
    "    tuned_ML_R_param_df['metallicity'] = np.array(random_pred_mean_list).T[2]\n",
    "    tuned_ML_R_param_df['temperature'] = np.array(random_pred_mean_list).T[3]\n",
    "\n",
    "    return tuned_ML_R_param_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0b8186c-34e6-4ce1-9701-6f9bac6b8ace",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "\n",
      "GJ570D: Literature reported Info\n",
      "\n",
      "{   'bd_Teff': 828,\n",
      "    'bd_distance_pc': 5.884,\n",
      "    'bd_logg': 3.9,\n",
      "    'bd_met': -0.33,\n",
      "    'bd_name': 'GJ570D',\n",
      "    'bd_radius_Rjup': 0.79,\n",
      "    'bd_radius_Rjup_tuned': None}\n",
      "******************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_results_fun(brown_dwarf_literature_info, print_title= 'GJ570D: Literature reported Info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fae3b40d-a0bf-4269-919e-c9a4e4e62e1b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuned_ML_R_param_df = tune_radius(Rmin = brown_dwarf_literature_info['bd_radius_Rjup']- 0.2, \n",
    "                        Rmax = brown_dwarf_literature_info['bd_radius_Rjup']+ 0.2, \n",
    "                        dR = 0.01,\n",
    "                        brown_dwarf_literature_info = brown_dwarf_literature_info,\n",
    "                        __plot_results__=False,\n",
    "                        __print_results__=False,\n",
    "                        __plot_stat_results__=False,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5dd2a985-1907-4946-b6a5-52e5c245cb51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>3.900000e+01</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>1801.142051</td>\n",
       "      <td>5.753397e-02</td>\n",
       "      <td>5.217482</td>\n",
       "      <td>872.818501</td>\n",
       "      <td>1.592836</td>\n",
       "      <td>-0.383413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120018</td>\n",
       "      <td>3225.127150</td>\n",
       "      <td>2.188867e-01</td>\n",
       "      <td>0.097864</td>\n",
       "      <td>16.944122</td>\n",
       "      <td>0.132354</td>\n",
       "      <td>0.023765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>75.210000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.842799</td>\n",
       "      <td>837.562276</td>\n",
       "      <td>1.331965</td>\n",
       "      <td>-0.437101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.690000</td>\n",
       "      <td>254.435000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.168771</td>\n",
       "      <td>858.384674</td>\n",
       "      <td>1.511670</td>\n",
       "      <td>-0.405744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.790000</td>\n",
       "      <td>453.370000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.219221</td>\n",
       "      <td>872.859823</td>\n",
       "      <td>1.567121</td>\n",
       "      <td>-0.379616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.890000</td>\n",
       "      <td>1331.595000</td>\n",
       "      <td>7.050000e-13</td>\n",
       "      <td>5.293533</td>\n",
       "      <td>883.118561</td>\n",
       "      <td>1.689880</td>\n",
       "      <td>-0.364665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>13056.900000</td>\n",
       "      <td>9.820000e-01</td>\n",
       "      <td>5.383836</td>\n",
       "      <td>909.226420</td>\n",
       "      <td>1.892256</td>\n",
       "      <td>-0.340978</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          radius    chi_square       p_value    gravity  temperature  \\\n",
       "count  39.000000     39.000000  3.900000e+01  39.000000    39.000000   \n",
       "mean    0.790000   1801.142051  5.753397e-02   5.217482   872.818501   \n",
       "std     0.120018   3225.127150  2.188867e-01   0.097864    16.944122   \n",
       "min     0.590000     75.210000  0.000000e+00   4.842799   837.562276   \n",
       "25%     0.690000    254.435000  0.000000e+00   5.168771   858.384674   \n",
       "50%     0.790000    453.370000  0.000000e+00   5.219221   872.859823   \n",
       "75%     0.890000   1331.595000  7.050000e-13   5.293533   883.118561   \n",
       "max     0.990000  13056.900000  9.820000e-01   5.383836   909.226420   \n",
       "\n",
       "       c_o_ratio  metallicity  \n",
       "count  39.000000    39.000000  \n",
       "mean    1.592836    -0.383413  \n",
       "std     0.132354     0.023765  \n",
       "min     1.331965    -0.437101  \n",
       "25%     1.511670    -0.405744  \n",
       "50%     1.567121    -0.379616  \n",
       "75%     1.689880    -0.364665  \n",
       "max     1.892256    -0.340978  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a2177776-11ab-4eaa-bb2a-f42ca94719e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>radius</th>\n",
       "      <th>chi_square</th>\n",
       "      <th>p_value</th>\n",
       "      <th>gravity</th>\n",
       "      <th>temperature</th>\n",
       "      <th>c_o_ratio</th>\n",
       "      <th>metallicity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.590000</td>\n",
       "      <td>4796.60</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.129384</td>\n",
       "      <td>883.985942</td>\n",
       "      <td>1.538044</td>\n",
       "      <td>-0.349759</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.600526</td>\n",
       "      <td>1249.53</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.235988</td>\n",
       "      <td>857.824341</td>\n",
       "      <td>1.647329</td>\n",
       "      <td>-0.365739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.611053</td>\n",
       "      <td>488.54</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.289926</td>\n",
       "      <td>882.550598</td>\n",
       "      <td>1.859300</td>\n",
       "      <td>-0.372920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.621579</td>\n",
       "      <td>163.58</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>5.297139</td>\n",
       "      <td>848.565674</td>\n",
       "      <td>1.684456</td>\n",
       "      <td>-0.371004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.632105</td>\n",
       "      <td>708.62</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.301414</td>\n",
       "      <td>873.806885</td>\n",
       "      <td>1.518568</td>\n",
       "      <td>-0.387214</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     radius  chi_square   p_value   gravity  temperature  c_o_ratio  \\\n",
       "0  0.590000     4796.60  0.000000  5.129384   883.985942   1.538044   \n",
       "1  0.600526     1249.53  0.000000  5.235988   857.824341   1.647329   \n",
       "2  0.611053      488.54  0.000000  5.289926   882.550598   1.859300   \n",
       "3  0.621579      163.58  0.000136  5.297139   848.565674   1.684456   \n",
       "4  0.632105      708.62  0.000000  5.301414   873.806885   1.518568   \n",
       "\n",
       "   metallicity  \n",
       "0    -0.349759  \n",
       "1    -0.365739  \n",
       "2    -0.372920  \n",
       "3    -0.371004  \n",
       "4    -0.387214  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuned_ML_R_param_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4f007db9-932a-4c11-b703-c07f49e9162b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"20c68471-cda7-4a8a-9747-70f01c950d3b\" data-root-id=\"6305\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"bb44022d-766a-4aa4-bfb2-818377bed032\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"6316\"}],\"center\":[{\"id\":\"6319\"},{\"id\":\"6323\"},{\"id\":\"6349\"}],\"height\":300,\"left\":[{\"id\":\"6320\"}],\"renderers\":[{\"id\":\"6337\"}],\"title\":{\"id\":\"6306\"},\"toolbar\":{\"id\":\"6329\"},\"width\":800,\"x_range\":{\"id\":\"6308\"},\"x_scale\":{\"id\":\"6312\"},\"y_range\":{\"id\":\"6310\"},\"y_scale\":{\"id\":\"6314\"}},\"id\":\"6305\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"overlay\":{\"id\":\"6328\"}},\"id\":\"6325\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis\":{\"id\":\"6316\"},\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6319\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"KrZqztOV5j+eAQfJEU3rP8kRTaPDT+w/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]},\"y\":{\"__ndarray__\":\"9ihcj8JFW0A9CtejcM1SQFK4HoXrcVRA\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[3]}},\"selected\":{\"id\":\"6346\"},\"selection_policy\":{\"id\":\"6347\"}},\"id\":\"6334\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"6334\"},\"glyph\":{\"id\":\"6335\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6336\"},\"view\":{\"id\":\"6338\"}},\"id\":\"6337\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"Scatter Plot\",\"text_font_size\":\"16px\"},\"id\":\"6306\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"6341\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6310\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6345\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"6324\"},{\"id\":\"6325\"},{\"id\":\"6326\"},{\"id\":\"6327\"}]},\"id\":\"6329\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"6312\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"6344\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"6327\",\"type\":\"SaveTool\"},{\"attributes\":{\"label\":{\"value\":\"Data\"},\"renderers\":[{\"id\":\"6337\"}]},\"id\":\"6350\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"6347\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"6350\"}],\"label_text_font_size\":\"12px\"},\"id\":\"6349\",\"type\":\"Legend\"},{\"attributes\":{\"axis_label\":\"Radius (RJupiter)\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6345\"},\"major_label_policy\":{\"id\":\"6344\"},\"ticker\":{\"id\":\"6317\"}},\"id\":\"6316\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.6},\"fill_color\":{\"value\":\"blue\"},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6335\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"6321\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6317\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"6308\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"6346\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"6320\"},\"dimension\":1,\"grid_line_alpha\":0.5,\"grid_line_color\":\"gray\",\"grid_line_dash\":[2,4],\"ticker\":null},\"id\":\"6323\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"6328\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"6314\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"\\ud835\\uded82 value\",\"axis_label_text_font_size\":\"14px\",\"formatter\":{\"id\":\"6342\"},\"major_label_policy\":{\"id\":\"6341\"},\"ticker\":{\"id\":\"6321\"}},\"id\":\"6320\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"6334\"}},\"id\":\"6338\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"6342\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"blue\"},\"line_alpha\":{\"value\":0.1},\"line_width\":{\"value\":2},\"size\":{\"value\":10},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6336\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"6324\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"6326\",\"type\":\"ResetTool\"}],\"root_ids\":[\"6305\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"bb44022d-766a-4aa4-bfb2-818377bed032\",\"root_ids\":[\"6305\"],\"roots\":{\"6305\":\"20c68471-cda7-4a8a-9747-70f01c950d3b\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "6305"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "datuned_ML_R_param_df_filtered = tuned_ML_R_param_df[tuned_ML_R_param_df['p_value'].between(.01, 10.)]\n",
    "\n",
    "plot_scatter_x_y(   x = datuned_ML_R_param_df_filtered['radius'],\n",
    "                    y = datuned_ML_R_param_df_filtered['chi_square'],\n",
    "                    plot_title='Scatter Plot',\n",
    "                    x_label='Radius (RJupiter)',\n",
    "                    y_label='𝛘2 value',\n",
    "                    plot_width=800,\n",
    "                    plot_height=300,)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f38d1bb-21dd-4a36-8b28-64b16225272e",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
